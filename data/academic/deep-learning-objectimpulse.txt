 1. IntroductionIn recent decades, coal-fired power plants have been widely used as the main energy plants for large-scale industrial procedures. A coal-burning power plant boils water in boiler tubes using the heat generated by burning fossil fuels to provide high-pressure and high-temperature steam inside the tube. Boilers are critical units for transferring heat from the fuel to the water. Due to its extremely high operating pressure and temperature, the boiler tube is the component that most commonly undergoes failure [1,2,3,4,5]. Tubes wear out and can no longer sustain the high temperatures and pressures. Undiscovered failure in a tube may lead to even more destruction in other tubes [6]. The failure of boiler tubes can be caused by fuel ash particles, overheating, waterside and fireside corrosion fatigue cracking, stress corrosion cracking, erosion, etc., resulting in leakage in the tubes. Leakage in a steam boiler not only diminishes the total efficiency of the power plant operation due to unscheduled outages but also induces hazardous conditions for operators. Leakage can lead to catastrophic secondary damage, such as tube explosions and destruction of the whole boiler, if not handled properly. Condition monitoring and leak diagnosis of boiler tubes are indispensable for efficient performance and maintenance; they can help improve the reliability, safety, and availability of the system. In addition, a fault detection system is able to identify a fault at its earliest degradation phase by exploiting complex and non-stationary patterns of variables, enabling operators to take proper actions in advance. In a thermal power plant, measures such as forecasting of tube explosions, timely leak detection, and localization of leak positions are necessary to schedule repair times and minimize financial losses. However, the structure of a boiler is so complicated that the state of the component–tube interaction associated with the turbulence of the two-phase flow (water and steam) is hard to model. Hence, boiler tube maintenance can rely on data-driven fault detection in the tubes. Data, which indicate the health states of the tube, can be acquired by acoustic emissions, the electrical resistance, and vibration and ultrasonic signals [7,8,9], and the leakage detection mechanism is repurposed as a classifier to perform detection. Among these methods, acoustic emission (AE) is widely used to collect data to monitor a degrading system [9,10,11]. When a leak occurs in a tube, turbulence flow created by escaping fluid creates pressure waves throughout the escaping fluid, within the fluid itself, and within the container structure. These waves are related to structure-borne acoustic waves. To detect leaks, the energy associated with turbulence waves is transformed into electrical signals using different types of transducers, which are connected to a computer. AE sensors, which have high sensitivity, can record emission events caused by slight variations in the structure of a tube component [12]. An advantage of using AE sensors for assessment is that this allows the entire machine structure to be monitored simultaneously with a simple in situ set up. This analysis technique does not need to scan individual components but utilizes a set of sensors that are attached outside of the tube component to transmit AE signals. Several dynamic variables can then be simultaneously observed during a leakage process. Previous studies related to data-driven monitoring of boiler tubes mostly used manual processes to analyze collected data [13,14]. These methods are executed by visualizing sudden variations in the recorded data and then manually detecting the leakage source. However, the highly complex and nonlinear signals acquired from the system when a leak occurs in the boiler tube are impossible to identify by simply observing the AE waveforms. Recently, meticulous artificial intelligent (AI) techniques have been investigated for leak detection in boiler tubes. For example, Sun et al. implemented a leakage detection algorithm that utilized a scheme with principal component analysis [15]. Some other techniques focused on flowrate balance signals with Bayesian networks [16], phase transformation and maximum likelihood [6], fuzzy logic [17,18], and artificial neural networks [1,19,20]. Furthermore, these classifying methods did not give a satisfactory result based on the input of raw AE signals. Hence, a preprocessing setup is necessary to extract better information from the recorded AE signals. However, even this application has certain limitations, such as wave attenuation, inference of background noise, and inaccessible sensor locations.One of the processes that has the largest effect on measuring leakage signals is the interaction between the coal fuel stream from the fuel injection inlet and the tube’s wall. The AE signal from the fluid leakage associated with the tube’s wall has a small amplitude and is non-stationary, but it spreads over a long duration; it is usually covered by another signal with a high signal-to-noise ratio (S/N), which can be caused by the excitations generated by the coal powder impacting with the metal tubes. This impact phenomenon randomly generates sharp and transient impulses with high amplitude. To filter the fluid leakage signal, this kind of high S/N impulse waveform needs to be detected and removed from the recorded signal. Previously, the impulse detection problem has usually been solved by setting a threshold (e.g., a soft threshold [21,22], wavelet threshold [23], constant false alarm rate for object detection [24]) and a cut-off range where the amplitude of the signal exceeds the threshold. However, this approach is easily affected by random peaks from noise, and the cut-off range does not cover the whole length of the impulse. Based on the concept of object detection [25,26], we defined the fuel-attacked impulses as salient objects over the remaining background signal, and the object detection and object localization algorithms are employed to identify this kind of impulse. Despite the achievements of AI-based methods, such as the Hidden Markov [27], fuzzy algorithm [28], and convolution neural network [29,30] methods, the design of an impulse detection algorithm still relies on the patterns of signals, which have been preliminarily studied in [31]. However, the leakage signal in the boiler tube contains complex intrinsic information with a different pattern, and the patterns of the impulse signal and leak signal are hardly differentiated. Therefore, this paper proposes a deep learning flexible boundary regression (DLFBR) method to capture the different intrinsic information of the object, which is the attacked impulses, and the background signal, which is mainly caused by the leakage signal. DLFBR frames impulse detection as a regression issue to spatially separate the boundary box surrounding the impulse. It first uses a one-dimensional convolution neural network (1D-CNN) to divide the time signal into grids with different grid sizes. With respect to each grid size, a confidence mask and a feature map are created to mark the position and extract the object-related information. Then, the boundary regression algorithm yields the boundary around the object that needs to be detected based on a different relative scale of the feature map and confidence mask.To purify the leakage signal, this paper proposes an impulse detection methodology using the DLFBR model to detect impulses caused by the impact of the fuel stream on the metal tube. A summary of the main contributions of this paper are presented as follows:This research proposes a preprocessing method for shape extraction (SE) to extract the global shape signal, which contains intrinsic information on the impulse and a low level of random noise in the macro-level that corresponds to the length of the sampled signal.Then, the main proposed method uses DLFBR, which is structured based on a 1D-CNN with the boundary regression layer. This deep learning model learns information related to the shape signal and generates the grid with a confidence value; it helps to regress the boundary of the impulse.In the remainder of this research article, we provide a brief description of the boiler tube leak detection testbed and data acquisition system in Section 2. A detailed description of the SE and DLFBR are given in Section 3, and the experimental evaluation results of the algorithm are presented in Section 4. Finally, Section 5 contains the concluding remarks. 2. Dataset of Simulated Leakage in a Seeded Boiler TubeIn a coal-burning thermal power plant, the steam vaporized from feedwater by heat energy from fuel combustion rotates the turbine to generate electricity. To simulate the leak process in a boiler tube, an elaborate experimental apparatus was built to collect the leakage signal. The general scheme of the system is depicted in Figure 1. The feedwater was circulated by a pump between the tube membrane and the tank. Before flowing into the lower drum, water was preheated by steam from the upper drum. The lower drum fed feedwater that was vaporized into steam, which was temporarily stored in the upper drum. In advance, bituminous pulverized coal was directed through the nozzle into the combustion or furnace. To protect the sensor from heat damage caused by fire and hot gas when the furnace was in a positive pressure situation and ensured the sensitivity of the sensor. Most leak detection testbeds weld waveguides onto the boiler tube membrane and through the case, unused soot blower ports, or penetrations in the inspection doors. Both airborne and structure-borne techniques were used to measure the leakage signal. In airborne applications, microphones were attached by hollow waveguides to the furnace medium space. For the structure-borne measurement, piezoelectric transducers were attached to AE-type waveguides. The waveguide housed the AE sensor assembly with integrated head amplifiers to reduce the loss of the AE energy in the measurement, along with the essential components required for its sustained operation, such as isolation valves, heat-insulated spacers, and heat-insulated couplings.The leakage phenomenon in the boiler tube was simulated by seeding four pinholes, which were located at four different positions in the boiler’s tube. The four pinholes were disposed at random position in the tubes as the occurrence of faults is random. The positions of the seeded pinholes are depicted in Figure 1, where the pinholes are depicted by red stars. The testbed was installed using seeded pinholes with different sizes: 0.6 mm, 1 mm, and 2 mm in diameter. The detailed installation of each pinhole on the boiler membrane is illustrated in Figure 2. The measuring points with waveguides were located near the source of the leakage hole to get a better AE signal. The leakage level was controlled by manipulating the flow passage with a valve. Each pinhole state could be remotely controlled by solenoid valves, which were attached to the pinhole. The valves needed to open and close the pinholes to simulate tubes in different operating conditions: leak and normal. First, the valves were held in the closed state during the process of collecting AE signals for the normal condition. For the normal condition, AE signals were recorded for one minute. These signals were segmented into multiple one-second signals. Furthermore, valves were opened to record the signals related to the leakage phenomenon. Signals were recorded for two minutes in the leak state. The AE signals were recorded using wideband differential AE sensors (WDI-AST) and data acquisition devices with a peripheral component interconnect (PCI-2). To increase the number of impacts between the fuel powder and the tube membrane, the fuel stream was composed of a mixture of steel elements and pulverized coal. A detail of the setup is illustrated in Figure 2, and the data specification is also presented in Table 1 below. 3. Impulse Detection Methodology Using Deep Learning Flexible Boundary RegressionSince the time lengths of the AE impulse signal excited by the fuel stream are variable, the proposed method must adapt to predict boundaries of different sizes. This research introduces the DLFBR impulse detection model, which considers an impulse as an object to be analyzed and recognized. This model improves the 1D-CNN to adapt for hit detection in the AE signal. The research reframes hit detection as a straightforward regression issue, directly from the AE signal vector to the boundary box coordinates. The proposed method takes an AE signal as the input, feeds it through a neural network structure that looks similar to a 1D-CNN to integrate the boundary regression layer, and receives a vector of box coordinates around the impulse position in the output. The basic idea of the detection algorithm includes two steps: preprocessing the signal to extract the shape signal and a flexible boundary detector. 3.1. Preprocessing to Extract the Shape SignalThe preprocessing step works to extract the global shape of the impulse at the macro-level, corresponding to the length of the sampled signal. Normally, the concept of object detection is used in an image processing technique where the object is smooth, continuous, and mostly homogenous inside the point area of the object. With this condition, the convolution neural network considers the boundary of an object to be composed of an edge and blob patterns, which have a sudden change between their different colors. However, the AE signal collected from the leak detection testbed always includes environmental noise and contains many small troughs and peaks. If these troughs and peaks are smaller than the grid size generated by the deep learning detector, the object detection algorithm cannot give a satisfying result. To mitigate the undesired variations and unexpected instantaneous frequency values produced by the remaining amount of small noise, the preprocessing step helps obtain the overall shape of the signal with little random noise. Figure 3 presents the preprocessing step of the algorithm.In the first step, the AE signal sample is segmented into non-overlapping frames and rectified to obtain the positive part. Then, in each window, the root means square (RMS) is calculated to form the lower rate RMS signal. Next, the lower rate signal is expanded to its original size by scaling the time axis using cubic interpolation and antialiasing. The cubic interpolation method performs piecewise cubic Hermite interpolation based on the values at neighboring grid points. It seeks to match only the first-order derivatives at the data points with those in the intervals before and after. For a set of data points

(

x
i

,

y
i

)

,

i
=
1
..
n

, the cubic Hermite interpolant at any point
x
, with


x
i

<
x
<

x

i
+
1



, takes the form:



P
(
x
)
=


3
c

s
2

−
2

s
3




c
3




y

i
+
1


+



c
3

−
3
c

s
2

+
2

s
3




c
3




y
i

+



s
2

(
s
−
c
)



c
2




d

i
+
1


+


s


(
s
−
c
)

2




c
2




d
i

,




(1)


where





c
=

x

i
+
1


−

x
i

 
 
 
 

δ
i

=



y

i
+
1


−

y
i




c
i







d
i

=
P
′
(

x
i

)
 
 
 
 
s
=
x
−

x
i

.






An instance based on piecewise cubic Hermite interpolation is shape-preserving piecewise cubic, which preserves the shape of the data since the resulting interpolated function has a continuous derivative. Shape-preserving piecewise cubic interpolation has a similar formula to that of piecewise cubic Hermite interpolation, but it differs in the component of the first-order derivatives


d
i


. The output vector value is a weighted average of points taken from at least the nearest four neighborhoods; this interpolation ensures that the value of the interpolant is located within a range of local points. 3.2. Impulse Detection with the Deep Learning Flexible Boundary Regression DetectorIn contrast to general CNNs, the proposed method employs a one-dimensional time-domain signal as the input data instead of two-dimensional pixels. The one-dimensional AE signal is fed into the first convolution layer. To detect an object, the detector takes the feature for that object and assesses it at various locations and scales in the sample signal. DLFBR observes the entire signal during the training and testing process to implicitly encode contextual information about the type of object as well as its position. The component object detector is only unified into an end-to-end single neural network, which utilizes features from the entire signal to estimate the position for each boundary box. To reason globally about the full sample signal and all of the objects inside the signal, DLFBR divides the input signal into a grid with a grid size
G
. If the center of an object drops into a cell in the grid, that cell responds to detecting that object. From the generated grid, each grid cell regresses the
B
 encircled box and the confidence score for each box. These confidence scores represent how confident the network is that the box contains an object, as well as how accurate the network thinks the predicted box is. The confidence is specified as




c
o
n
f
(
c
e
l
l
)
=
Pr
[

Impulse
]

×


IOU


p
r
e
d


t
r
u
h


.




(2)

The confidence score should be zero if there is no object existing in that cell. Otherwise, the confidence score should receive a value equal to the intersection over union (IOU) proportion between the regressed boundary box and the ground truth boundary box. This metric is normally used to evaluate how well an object detection output is related to some ground truth box. Every boundary box is composed of three prediction values:

(
x
,
w
,
c
)

. The
x
 coordinate locates the center of the predicted box relative to the margin of the cell; the width
w
 is presented relative to the whole length of sample signal; and the confidence
c
 is the confidence score of whether or not there is an object inside the box, which represents the IOU proportion between the ground truth box and the predicted box. This score encodes both the probability of that impulse appearing in the box and how well the regressed box fits the impulse. If direct location prediction is utilized, the model encounters instability issues during the training phase when predicting the estimate
x
 for the box. To remedy this issue, researchers have used the concept of an anchor, which predicts box coordinates relevant to the position of the grid cell. The logistic regression activation

σ
(
⋅
)

 is used to map and constrain the network’s predictions output such that the values fall between 0 and 1. Thus, DLFBR predicts a vector of three elements

(

τ
x

,

τ
w

,

τ
c

)

 for each boundary box. When the grid cell is offset from the beginning of the sample signal by


c
x


 and the anchor is previously set with the width


q
w


, then the predictions correspond to






b
x

=
σ
(

τ
x

)
+

c
x

,




b
w

=

q
w


e


τ
w



,



Pr
[

Impulse
]

×


IOU


p
r
e
d


t
r
u
h


=

τ
c

.





(3)

The predefined anchors are chosen to be as representative as possible of the ground truth boxes, and the K-means clustering algorithm is used to define them. This prediction constraint helps make parameter optimization easier to learn and makes DLFBR more stable. To adapt to a different length, DLFBR generates predictions across three different scales so that the boundary regression layer is used for detection in the feature map and makes confident masks of three different grid sizes: 10, 40, and 80 cells.The structure of DLFBR includes three steps, as shown in Figure 4. First, the block convolution layers of the model extract the features from the AE signal to yield the feature map and confidence mask with respect to the grid. Splitting the signal into the grid cells was implicitly done by several layers of 1D-CNN. The convolutions enable us to compute predictions at different positions in a signal in an optimized way. The network downsamples the input signal by the factor stride (i.e., the factor by which the output of the layer is smaller than the input signal of the network) until the boundary regression layer; thus, the output from the final convolution layer has the size of the predefined grid. The grid size determination enforces spatial diversity in the boundary predictions. The convolution layers employ the leaky RELU as the activation function with




ψ
(
x
)
=

{





x
,






0.1
x
,








i
f
x
>
0






o
t
h
e
r
w
i
s
e






.




(4)

All of the convolution layers are added by the batch normalization to create improvements in the training convergence while avoiding the regularization requirement found in other methods. The method also helps regularize the model so that the network does not need a dropout step to avoid overfitting.In the second step, the boundary regression layer predicts the output probabilities and coordinates. The boundary regression layer utilizes the anchor boxes to decouple the object prediction from the spatial location for every box. In this way, the impulse location predictor predicts the box coordinate, and the object predictor predicts the conditional probability of whether or not there is an object in the given box. The boundary box width is normalized by the sample signal length so that it falls between 0 and 1. The boundary box coordinate is parameterized to be offset by a particular cell location to ensure that it is also bounded in the range of 0 and 1. Then, the sum-squared error used as the output loss function helps to optimize the parameters of the model. Because most of the cells in the grid do not contain an impulse, but the sum-squared error weights the location error equally with the classification error, misalignment occurs; this affects the precision. To solve this issue, the two parameters, i.e.,


α

l
o
c
a



 and


α

n
o
O
b
j



, are used to increase the value of the loss component from the coordinate estimations and to decrease the value of the loss component from the confidence core for boxes that do not contain objects. This research also predicts the square root of the width to reflect the fact that small deviations in large boxes matter less than they do in small boxes; this is done instead of using the width directly to solve the problem that arises when the sum-squared error weights the error from the large boxes and small boxes equally. During training, DLFBR predicts multiple boxes for each cell, but only one box is chosen to be responsible for each impulse; the prediction box that has the highest current IOU proportion with the ground truth is selected. The loss function used to optimize the parameters of the network is shown below.








L
θ

(

o

p
r
e
d


,

o

t
r
u
t
h


)
=

α

l
o
c
a




∑

i
=
0

G




∑

j
=
0

B



1

i
j


o
b
j



[




(


x
i

t
r
u
t
h


−

x
i

p
r
e
d



)


2


]





+

α

l
o
c
a




∑

i
=
0

G




∑

j
=
0

B



1

i
j


o
b
j



[




(




w
i

t
r
u
t
h




−



w
i

p
r
e
d





)


2


]










+


∑

i
=
0

G




∑

j
=
0

B



1

i
j


o
b
j





(


c
i

t
r
u
t
h


−

c
i

p
r
e
d



)


2





+

α

n
o
O
b
j




∑

i
=
0

G




∑

j
=
0

B



1

i
j


n
o
O
b
j





(


c
i

t
r
u
t
h


−

c
i

p
r
e
d



)


2













(5)

Here,


1

i
j


o
b
j



 denotes that it has the value 1 when the object exists in the predicted boundary box


j

t
h



 of cell


i

t
h



. Additionally,


1

i
j


n
o
O
b
j



 is almost the same, except it has a value of 1 when there are no objects in the


i

t
h



 cell. The first component in the loss function calculates the loss related to the predicted box’s center position. The second part is the loss related to the predicted box’s width. The third and fourth parts are associated with the confidence scores for each box. Usually, it is clear which cell has an object appear inside of it, and the network should only predict one box for each impulse. However, for some large impulses or impulses near the border between cells, which can be well localized by multiple cells, the algorithm will predict multiple boundary boxes. Non-maximal suppression can be employed to remove extra detection boxes that are generated for the same impulse. This non-maximal suppression first discards all boxes with a confidence of prediction less than or equal to 0.6. Then, it picks the box with the largest confidence in its prediction output as the prediction and discards any remaining boxes with IOU values greater than or equal to 0.5. Finally, only one boundary box is chosen for each impulse. 4. Results and Performance EvaluationTo validate the effectiveness of the DLFBR method, this algorithm was employed to detect impulses caused by a coal fuel powder attack by using the dataset described in Section 2. Four datasets were collected, each corresponding to a different pinhole that was opened. Each dataset included more than 100 one-second signals. The normal signal was recorded when all of the pinholes were closed to create a baseline for comparison of the leakage cases. Both the signals in the leakage case and the normal case showed a similar signal with the impulses in the time domain, as shown in Figure 5.The high amplitude impulses that appeared in both the leakage and normal signals do not relate to the intrinsic properties of the leakage phenomenon. Nevertheless, this kind of impulse, which was caused by the interaction between the coal powder flow and the steel tubes, protruded from and overlaps with the real leakage signal. Moreover, these interacting impulses appeared randomly, and the impulse width was variable; this made it more difficult to exactly detect their position and width in the time domain signal.  4.1. Effectiveness of the Shape Extraction AlgorithmDLFBR was designed to be flexible to different kinds of inputs. We used three different inputs for DLFBR: the raw AE signal, the envelope signal, and the extracted shape signal. To illustrate the effectiveness of preprocessing with shape extraction, the results for impulse detection from DLFBR with the same sample but different input types are compared in Figure 6. Figure 6c shows the results of impulse detection with the input that used the proposed preprocessing method. Similarly, Figure 6a,b show the results when the inputs were the raw signal and the preprocessing signal with envelope analysis.As seen in Figure 6a, applying DLFBR to the raw signal sometimes failed to detect the impulse, even if the impulse clearly showed a high amplitude. Furthermore, DLFBR predicted a number of boundary boxes for the same impulse. These boxes may be overlapping or separate because of the small troughs and peaks inside the impulse; this can cause DLFBR to make incorrect predictions. The DLFBR results with the envelope analysis are shown in Figure 6b. This method could detect most of the impulses and led to better predictions, but the overlapping between boundary boxes still occurred. The results of DLFBR with the SE preprocessing are shown in Figure 6c. This technique outperformed the other two methods, detecting all of the impulses and predicting only one boundary box for each impulse. 4.2. Effectiveness of the DLFBR Impulse Detection AlgorithmFor illustration purposes, this paper compared the proposed method with two other impulse detection methods found in the literature. The results of the proposed DLFBR algorithm and the other two methods, i.e., the soft threshold [21,22] and constant fault alarm rate (CFAR) [24] methods, are considered by measuring the prediction performance of these methodologies based on the metric of the average precision, which is based on the intersection over union. To compute the precision, the overlap area between the output box from the algorithm and the ground truth box was first found. Then, the area of the union, which consisted of both the output box from the algorithm and the ground truth box, was also calculated. Dividing the area of overlap by the area of union gave the IOU proportion. Due to the variable AE signal and the fact that the impulses are transient and non-periodical, a complete match between the output boxes and ground truth boxes is unrealistic. This paper defines an evaluation metric that rewards output boxes for heavily overlapping with ground truth boxes. The ground truth box that bounds the impulse was generated by hand for each one-second sample signal, which contained the impulse. Then, the intersection over union was calculated between the output of the algorithm and the ground truth box. If the IOU was larger than a predetermined value, the algorithm detected a true positive impulse. Then, the precision was calculated as




Pre
=


#
t
r
u
e
 
p
o
s
s
i
t
i
v
e
s


#
t
r
u
e
 
p
o
s
i
t
i
v
e
s
+
#
f
a
l
s
e
 
p
o
s
i
t
i
v
e
s


.




(6)

The results of impulse detection for these three methods are shown in Figure 7. These results were obtained from the same sample for illustration purposes. The soft threshold method could not accurately detect the prominent impulse in the presence of background noise, as shown in Figure 7c; in fact, this method missed the second impulse of the sample. In addition, this method did not give good results for the width of the impulse when the predicted box did not cover the whole impulse, i.e., the trailing region of the impulse was cut off because its amplitude value was smaller than the threshold. Therefore, the threshold-based technique is appropriate when the level of the background noise is either unchanged or changes gradually. The CFAR detector’s results showed better detection ability, as shown in Figure 7b. Because the threshold from the CFAR detector was more adaptive to the noise, it detected more true impulses. However, it did not perform well in terms of the box width when the signal consisted of strong temporal bursts of high AE activity. Such bursts were composed of overlapping transients with varying duration, strength, and shape. In this paper, in addition to determining the exact position, the width of the impulse is also important for defining the impulse box, which contains enough information related to the entire impulse to purify the leakage signal from the attack signal of the coal fuel stream. DLFBR was robust to different levels of noise and gave better width values for the boundary box of the impulse; it detected most of the impulses with a larger margin regression box relative to the CFAR detector, as shown in Figure 7a. This box covered the length of the impulse and ensured that there was only one box for each impulse.The calculated precision metrics used to evaluate the three algorithms for impulse detection with a boiler tube dataset are shown in Table 2. DLFBR yielded the best results, showing an average precision of 89.80% for the four datasets and higher IOU proportions of overlap between the predicted boxes and the ground truth boxes. 4.3. Results for Leak Detection in Boiler TubesTo purify the leakage signal from the attack signal of the coal fuel stream, the detected impulses were removed from the AE recorded signals. Then, classification was performed on the impulse-removed signal between the normal and leakage conditions. During the experimental process of leakage detection, the leak stream along with the generated AE signal was continuous but nonstationary. Therefore, the transient impulse that appeared in the recorded AE signal contained less information about the leakage phenomenon. However, most of this was caused by the interaction between the coal fuel and the tube membrane. Removing these impulses helped increase the quality of the leakage signal component, which resulted in higher classification accuracy. This method helped to indirectly evaluate the effectiveness of the proposed DLFBR method. For this reason, the proposed method employs the 1D-CNN classifier to separate the normal and leakage signals in this study. The deep structure of the 1D-CNN architecture and the adaptation of the highly non-linear properties of the network allow this method to obtain salient information from the input data. To demonstrate the efficacy of the DLFBR impulse detection model, we obtained classification results for the leakage and normal signals when the input used the raw AE signal (without removing the impulse) and when the input had the impulse removed.The 1D-CNN used all four channels of each dataset as inputs for the neural network. The results of the classification accuracy are presented in the first column of Table 3. By using the input where the impulse had been removed, the classification accuracy was increased by 14.65%. However, this result shows low classification accuracy because the intrinsic information inside the signal is complex, and constructing an optimized neural network structure requires a huge effort. Alternatively, the frequency spectrum, which presents useful and stable details about the leak signal, can be utilized as an input for the 1D-CNN. In the frequency spectrum, normal noise is shown as low-frequency white noise (rumbling), while leaks display a higher frequency (hissing) signal. The classification results for the normal and leakage signals using the frequency spectrum as the input are shown in the second column of Table 3, and the confusion matrices are depicted in Figure 8. It can be seen that the classification model’s average accuracy with the frequency spectrum input from the impulse-removed signal was 99.8%. This is an increase of 0.2% compared to using the signal without removing the impulse. This means that the employed classifier can accurately classify most of the testing samples. Specifically, the neural network can correctly classify 99.8% of the instances in the normal class; 99.8% of the instances belonging to the leakage state of the boiler tube were correctly predicted. Removing the attack impulses from the signal can yield enhanced classification performance. 5. ConclusionsThe main objective of this paper was to detect and isolate the transient impulses, which are caused by the interaction between the coal fuel powder stream and the boiler tube component. These impulses do not relate to the leakage acoustic emission signal from the tubes but unfavorably affect the measured signal. To address this issue, this paper proposed a deep learning approach with DLFBR impulse–object detection. Before applying DLFBR, the SE algorithm was employed to extract the shape signal, which helps to improve the capabilities of DLFBR. Afterward, the DLFBR learned the intrinsic information from the shape signal to generate the feature map and confidence mask for each signal; it helped to regress the boundary box of impulse. The proposed DLFBR method was applied to an experimental boiler tube leakage detection dataset. The proposed DLFBR-based technique showed superior impulse detection performance compared with two other impulse detection methods found in literature, demonstrating 89.8% classification accuracy. In addition, the proposed DLFBR was indirectly evaluated by removing the impulses from the collected signal. The experimental results yielded 99.8% classification accuracy between the normal and leakage signals. The improved accuracy with using the purified signal by the proposed DLFBR demonstrates the usefulness of impulse detection in a time-domain signal.
