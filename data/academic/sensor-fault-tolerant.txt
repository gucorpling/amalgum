 1. IntroductionThe increasing complexity of modern aircraft engines leads to a challenging task of handling malfunctions. As a result of the increasing demand for higher safety and reliability standards, the study of fault-tolerant control has received significant attention for modern aero-engine applications. The fault-tolerant control system can maintain desirable performance and stability properties in spite of the occurrence of faults. Generally speaking, fault-tolerant control can be classified into two types—passive and active scheme [1]. Passive scheme needs neither fault detection and identification (FDI) scheme nor reconfigurable controller, but is conservative because its application range is limited to the class of faults desired and considered in the design, making a trade-off between performance and robustness [2]. Active scheme maintains the stability and acceptable performance by reconfiguring controller with the fault information obtained by FDI system [3]. Although enormous work in the aerospace field is concerned with fault-tolerant control, most of the considered scenarios correspond to actuator faults. However, so far there has been limited work with respect to sensor fault tolerant control, especially for aero-engine applications. The main reason lies in that aircraft engine sensors are generally equipped with double or triple hardware redundancy, especially for those used in control loops. This allows the faulty sensors to be excluded from being used at the expense of increasing weight, which translates to higher fuel burn, higher carbon emission, and higher operating costs [4]. A feasible solution to this is to replace the extra set of hardware with analytical redundancy; thus, sensor fault-tolerant control (FTC) for aero-engine becomes a significant research field to be explored.Recently FTC based on sliding mode techniques [5,6] has been active in fields of research, due to the robustness properties and fault reconstruction abilities. In particular, sliding mode observer (SMO) has been successfully incorporated within the observer-based fault estimation and FTC approaches, and it has been proven to be an effective way to estimate/reconstruct system faults and an appropriate basis of FTC design [7]. A sliding mode observer concerned with fault detection and isolation problem is proposed in [8], and faults are reconstructed by using the equivalent output error injection term during sliding motion. In most research papers, actuator faults are commonly considered. Tan utilized an appropriate filtering to yield an augmented system, in which sensor faults can be treated as actuator faults [9]. A generic FDI development in terms of reconstruction of faults using sliding mode observers is given by Tan and Edwards [10], and they extended the work in [8] for robust reconstruction of sensor and actuator faults by minimizing the effect of uncertainty on the reconstruction in an

ℒ
2

 sense. Our previous work in [11,12] exploited the application of SMO in robust health estimation and sensor fault diagnosis for aircraft engines. The work in [13] described a sensor FTC scheme based on the SMO in [10]. The novelty lay in the application of the sensor fault reconstruction signal to correct the corrupted measured signals before being used by the controller and, therefore, the controller does not need to be reconfigured to adapt to sensor faults. The work in [14,15,16] implemented the work of [13] with the emphasis on reconstructing actuator/sensor faults and fault-tolerant control in a large civil aircraft using FTLAB747 software for implementation and testing. The scheme proposed in [13] was technically neither passive nor active —the sensor fault estimate information was used to correct the measured output signals, but not strictly in an active sense, as no adjustment or adaptation of the controller gains took place, which was more advanced and structure-simplified than traditional active FTC. However, in scenarios where a fault occurs with rapid shift, no matter how quick the SMO reacts, the convergence of sliding modes give rise to the undesirable system dynamics in corrected sensor signals, which may affect closed loop performance, for instance, causing overshooting in engine temperatures or pressures. Figure 1 summarizes the main existing work related to aircraft engine FDI and FTC based on sliding mode techniques.This paper proposes a new scheme for aero-engine sensor fault FTC based on a sliding mode observer. On the basis of the results of [12], a second order sliding mode observer was constructed on an augmented filtered system. When sliding modes converged to sliding manifold, the estimation of states and faults could be both obtained, and the state estimation results were unaffected by sensor faults due to the reduced order manner. Unlike the work in [13] where fault reconstruction signal was employed to correct faulty sensors, in the proposed method, the related sensors were directly replaced with virtual state estimation signal; thus, undesired dynamic response caused by sensor signal reconfiguring was avoided. Additionally, in the proposed FTC architecture, the only new or additional component to the original control system was the sliding mode observer and it was easy to be retrofitted or combined with the existing controller to provide sensor FTC capability. The proposed FTC scheme was examined by a linear quadratic regulator (LQR), and numerical simulation results on the nonlinear model of a civil aircraft turbofan engine showed robust fault reconstruction and good sensor FTC performance. 2. Aircraft Engine Descriptions and Modeling 2.1. Engine DescriptionsA high bypass twin spool mixing-exhaust turbofan engine was studied in this paper, of which the schematic description is shown in Figure 2. The airflow was supplied by a single inlet. Airflow passed through the fan and separated into two streams—one passed through engine core path, and the other passed through the bypass duct. Fuel was injected in the combustor and burned to produce the hot gas to drive the turbines. The fan and low pressure compressor (LPC) were driven by a low pressure turbine (LPT), whereas the high pressure compressor (HPC) was driven by a high pressure turbine (HPT). The airflow left through the nozzle. The notations used in this paper and their descriptions are shown in Table 1.Mechanical system dynamics due to rotating inertias constituted the most important contribution to engine transient behavior. Thus, rotating dynamics were the most important dynamics to be considered. In light of this, the state vector

x
∈

R
n


 was chosen as




[


N
L

,

N
H


]


T


. Newton’s law for rotating masses was applied to each shaft as










N
˙

L

=

f
1


(


N
L

,

N
H

,
u
,
v

)



,








N
˙

H

=

f
2


(


N
L

,

N
H

,
u
,
v

)

,








(1)


where f1 and f2 are the net torques delivered by LPT and HPT.

u
∈

R
m


 is the control input and v denotes the external parameters (flight condition). Considering air flow mass, power, and momentum conservation laws, a general gas turbine simulation was designed using the concept in [17]. The engine design operation data and characteristic maps of rotating components such as fan, compressor, HPT, and LPT were loaded to the general simulation for obtaining a certain turbofan engine model [18]. The nonlinear model representing a turbofan engine was given by









x
˙

=
f

(

x
,
u
,
v

)



,






y
=
g

(

x
,
u
,
v

)

,








(2)


where

y
∈

R
p


 is the output. In the engine involved in this paper, the available sensors were

y
=



[


N
L

,

N
H

,

P

25


,

T

25


,

P
3

,

T
3

,

T

451



]


T

.

 The function
f
 and
g
 are, respectively, the engine process and measurement expressions. The engine was coded with C language and packaged by Dynamic Link Library (DLL) for simulation in Matlab (2016a, MathWorks, Natick, MA, USA) environment [19]. Taylor approximation was applied to the engine model Equation (2) at the equilibrium point (


x
0


,


u
0


), and retaining constant and first-order terms yielded the following state variable model (SVM):







x
˙


=
f
(

x

,

u

)
≈
f
(


x

0

,


u

0

)
+


∂
f


∂

x




|




(

x
0

,

u
0

)




Δ

x

+


∂
f


∂

u




|




(

x
0

,

u
0

)




Δ

u






y

=
g
(

x

,

u

)
≈
g
(


x

0

,


u

0

)
+


∂
g


∂

x




|




(

x
0

,

u
0

)




Δ

x

+


∂
g


∂

u




|




(

x
0

,

u
0

)




Δ

u







(3)

Equation (3) can be further depicted as






Δ


x
˙


=

A

Δ

x

+

B

Δ

u





Δ

y

=

C

Δ

x

+

D

Δ

u







(4)


where
A
,
B
,
C
, and
D
 are the system matrices with appropriate dimensions, and

Δ
x
=
x
−

x
0


,

Δ
y
=
y
−

y
0


, and

Δ
u
=
u
−

u
0


. For simplicity, the sign “
Δ
” in Equation (4) was omitted in the following deductions. In addition, the quantities of different variables in Equation (4) were far away from each other. For instance, the normal physical quantity of


N
H


 at the design point was about 15,012 r/min, whereas the normal physical value of fuel flow


W
f


 at the design point was around 0.3606 kg/s. The large difference in the magnitudes of various model variables would lead to large difference of matrix singular values in the SVM, and it produced a big condition number of the system matrix. The larger the condition number was, the harder it was to compute a matrix inverse. Hence, physical operating parameters in the in-flight model were performed by parameter normalization, details referred in [18]. 2.2. Hybrid Fitting Method for LinearizationThe system matrices played an important role in the steady and transient performance of the SVM. There are commonly two ways to compute the system matrices, these being partial derivative method and fitting method. In the former method, partial derivative in the element of system matrices is computed by perturbing one state variable, and other state variables remain unchanged. However, in practice it is merely impossible that only one state changes while another remains unchanged by engine nature; thus, models solved by partial derivative method lack accuracy, especially during dynamic process. The fitting method generates the system matrices’ elements with the object function of least square errors between the component-level model (CLM) and model responses to step inputs. Choosing the perturbing amplitude and direction relies on the experiences—they closely affect to the SVM modeling accuracy. In addition, the curve part of step response data mainly depicts the system dynamics, and the remainder of the data shows the system steady behavior. Because the different part is processed in the same way, it is thus hard to address the steady and transient performance of the SVM at the same time.In this paper, a hybrid fitting method was developed from the combination of partial perturbing and fitting methods. The matrices
A
 and
C
 were related to the transient stage, whereas the matrices
B
 and
D
 related to steady stage of step response. The initials of matrices
A
 and
C
 were obtained by the partial perturbing method, and steady-state component was used to compute the initials of matrices
B
 and
D
. The initials of matrices
B
 and
D
 were directly computed from the steady terminal values of one-control-variable step response by algebraic operation. The initials of these system matrices were acquired from the above implementations, and then the fitting method was employed to obtain the optimal system matrices, which follow the least square errors. The detailed procedure of the hybrid fitting approach is given as follows:(1) By applying partial derivative method to calculate initial
A
 and
C
. Specifically, by imposing perturbation to each state variable, meanwhile other state variables and inputs remain unchanged, then corresponding coefficient in
A
 and
C
 can be calculated. Taking


N
L


 as an example, when perturbing


N
L


, let


N
H

=
0

 and


W
f

=
0

, then








N
˙

L

=

a

11



N
L

+

a

12



N
H

+

b

11



W
f





⇒

a

11


=




N
˙

L




N
L









(5)

(2) Using the step response of each input to yield the initial value of
B
 and
D
 A step of each input is injected to the nonlinear model, and using the steady terminal values of the step response data and initial
A
 and
C
, the initial value of
B
 and
D
 can be calculated. For example, injecting a 2% step in


W
f


, the elements of initial
B
 and
D
 is obtained by







(






b

11











b

21






…





b

m
1









)

=
−

(






a

11







a

12









a

21







a

22








…




…







a

m
1







a

m
2







)


(






N
L








N
H






)

/
0.02





(






d

11









d

21








…







d

p
1







)

=

(






y




1
,
t
e
r
m
i
n
a
l











y




2
,
t
e
r
m
i
n
a
l










…







y




p
,
t
e
r
m
i
n
a
l









)

/
0.02
−

(






c

11







c

11









c

21







c

22








…




…







c

p
1







c

p
2







)


(






N
L








N
H






)

/
0.02






(6)

(3) Use the initial
A
,
B
,
C
, and
D
 to create initial SVM. The same step input applied to nonlinear model is now imposed to the SVM, and the step response of SVM is obtained. In order to make the SVM output equal to the engine nonlinear model output in the steady state, the system matrices are tuned according to the output differences of the nonlinear model and SVM at equilibrium points by fitting method. When the demanded accuracy is reached, then
A
,
B
,
C
, and
D
 is the optimized solution.It is noted that the calculation of matrices
B
 and
D
 elements depend on the matrices
A
 and
C
 at equilibrium points. The modeling data for the matrices
A
 and
C
 from perturbing one state variable to the nonlinear model cannot describe the engine dynamics well. Hence, the fitting method was used in this study to search the optimal
A
 and
C
 matrices with the aim of the least square output errors between the nonlinear model and SVM. The system matrices calculated from step (1) to step (2) were considered as the initials. The matrices
B
 and
D
 were calculated using the matrices
A
 and
C
 iterative optimization process from Equation (5) to Equation (6). 3. Sensor Fault DiagnosisIn this paper, the proposed sensor FTC was constructed on the basis of a second order sliding mode observer. This section describes the design of second order sliding mode observer (SOSMO) for sensor fault reconstruction and state estimation. At cruise operating point, the state variable model (SVM) of a commercial aircraft engine affected by sensor faults can be depicted by









x
˙


(
t
)

=
A
x

(
t
)

+
B
u

(
t
)



,






y

(
t
)

=
C
x

(
t
)

+
D
u

(
t
)

+
f

(
t
)

.








(7)

As mentioned in last section, all variables considered in Equation (7) were normalized to [0, 1].

f

(
t
)

=



[


f
1


(
t
)

,

f
2


(
t
)

,
…
,

f
p


(
t
)


]


T


 denotes the unknown vector of sensor faults, where


f
i


(
t
)

∈

[

0
,
−
1

]


.


f
i


(
t
)

=
0

 represents no fault in the
i
th sensor, and


f
i


(
t
)

=
−
1

 implies a total sensor failure, which was not considered in this paper, or otherwise the sensor is partially damaged. Assume

f

(
t
)


 and its first-time derivatives are unknown but bounded





‖
f

(
t
)

‖
<

α
1



,
 
‖

f
˙


(
t
)

‖
<

α
2

,





(8)


where


α
1


,


α
2


 are known real scalars. The notation

‖
·
‖

 represents the Euclidean norm for vectors and the induced spectral norm for matrices.Because fault reconstruction of actuators based on SMO has been widely studied as argued in [9], introducing a filter to the measurement equation is an effective way to make sensor faults be “treated” as actuators. On the basis of this idea, a new state


z


(
t
)

∈

ℝ
p


, which is a filtered version of

y

(
t
)


, given by





z
˙


(
t
)

=
−

A
f

z

(
t
)

+

A
f

y

(
t
)





(9)


where

−

A
f

∈

ℝ

p
×
p



 is Hurwitz.


A
f


 is typically in the form of a diagonal matrix, where the diagonal elements are positive and represent inverse time constants. Substituting

z

(
t
)


 for

y

(
t
)


 in Equation (1), the system is now described by









x
˙


(
t
)

=
A
x

(
t
)

+
B
u

(
t
)

,







z
˙


(
t
)

=
−

A
f

z

(
t
)

+

A
f

C
x

(
t
)

+

A
f

D
u

(
t
)

+

A
f

f

(
t
)

.








(10)

In our previous work [12], the existence of a stable sliding motion toward Equation (10) was discussed, and it was proven that the necessary and sufficient conditions for building SOSMO were satisfied. Defining


e
z


(
t
)

=

z
^


(
t
)

−
z

(
t
)


 as output estimation error, where


z
^


(
t
)


 is the estimate value of

z

(
t
)


, and the proposed SOSMO is constructed as follows










x
^

˙


(
t
)

=
A

x
^


(
t
)

+
B
u

(
t
)

,








z
^

˙


(
t
)

=
−

A
f


z
^


(
t
)

+

A
f

C

x
^


(
t
)

+

A
f

D
u

(
t
)



+
ν

(
t
)



−
G

e
z


(
t
)

,








(11)


where


x
^


(
t
)


 is the estimated value of

x

(
t
)


, and

G
∈

ℝ

p
×
p



 is the linear gain matrix to be designed. Defining


e
z


(
t
)

=



[


e

z
,
1



(
t
)

,

e

z
,
2



(
t
)

,
…
,

e

z
,
p



(
t
)


]


T


, then

ν

(
t
)

=



[


ν
1


(
t
)

,

ν
2


(
t
)

,
…
,

ν
p


(
t
)


]


T


 is defined component-wise as









ν
i


(
t
)

=
−
ψ
s
i
g
n

(


e

z
,
i



(
t
)


)




|


e

z
,
i



(
t
)


|



1
/
2


+

d
i


(
t
)



,








d
˙

i


(
t
)

=
−
ς
s
i
g
n

(


e

z
,
i



(
t
)


)

−
φ

e

z
,
i



(
t
)


 
 
 

i
=
1
,
2
,
…
,
p
,








(12)


where
ψ
,
ς
, and
φ
 are real scalars to be chosen. Define

e

(
t
)

=

x
^


(
t
)

−
x

(
t
)


 as state estimation error. Let

G
=
−

A
f

+
χ

I
p

,

 where
χ
 is a real scalar to be set, and


I
p

∈

ℝ

p
×
p



 denotes identity matrix, then the error system can be written as










e
˙

x


(
t
)

=
A

e
x


(
t
)

,








e
˙

z


(
t
)

=
−
χ

I
p


e
z


(
t
)

+

A
f

C

e
x



+
ν

(
t
)

−

A
f

f

(
t
)

.








(13)

The output error


e
z


(
t
)


 is intended to be zero in finite time so that the state estimation and fault reconstruction can be accurate. Thus the sliding manifold is given by




S
=

{




[






e
x
T


(
t
)






e
z
T


(
t
)






]


T

|

e
z


(
t
)

=
0

}

.




(14)

The objective is to let sliding mode




[






e
x
T


(
t
)






e
z
T


(
t
)






]


T


 be converged to the sliding manifold. Combining Equation (12) and Equation (13), the equation related to



e
˙

z


(
t
)


 can be written component-wise as










e
˙


z
,
i



(
t
)

=
−
ψ
s
i
g
n

(


e

z
,
i



(
t
)


)




|


e

z
,
i



(
t
)


|



1
/
2


−
χ

e

z
,
i



(
t
)

+



(


A
f

C

)


i


e
x


(
t
)

−

A

f
,
i


f

(
t
)

+

d
i


(
t
)

,








d
˙

i


(
t
)

=
−
ς
s
i
g
n

(


e

z
,
i



(
t
)


)

−
φ

e

z
,
i



(
t
)


 
 
 

i
=
1
,
2
,
…
,
p
,








(15)


where




(


A
f

C

)


i


,


A

f
,
i



 represent the ith row of


A
f

C

,


A
f


, respectively. For simplicity, a new variable


d

0
,
i



 (

i
=
1
,
2
,
…
,
p

) is defined by






d

0
,
i



(
t
)

=



(


A
f

C

)


i


e
x


(
t
)

−

A

f
,
i


f

(
t
)

+

d
i


(
t
)


 
 
 

i
=
1
,
2
,
…
,
p
.





(16)

Substituting the related part in Equation (15) with Equation (16), then Equation (15) can be rewritten as










e
˙


z
,
i



(
t
)

=
−
ψ
s
i
g
n

(


e

z
,
i



(
t
)


)




|


e

z
,
i



(
t
)


|



1
/
2


−
χ

e

z
,
i



(
t
)

+

d

0
,
i



(
t
)



,








d
˙


0
,
i



(
t
)

=
−
ς
s
i
g
n

(


e

z
,
i



(
t
)


)

−
φ

e

z
,
i



(
t
)

+

ϕ
i


(
t
)


 
 
 

i
=
1
,
2
,
…
,
p
,








(17)


where


ϕ
i


(
t
)

=



(


A
f

C

)


i



e
˙

x


(
t
)

−

A

f
,
i



f
˙


(
t
)


. Because
A
 is a stable matrix by engine nature, the equation associated with


e
x


(
t
)


 in Equation (13) represents an autonomous error system and thereby is stable. Consequently, both

‖

e
x


(
t
)

‖

 and

‖


e
˙

x


(
t
)

‖

 are bounded. Provided

‖


f
˙

1


(
t
)

‖

 are bounded, it is obvious that




‖

ϕ
i


(
t
)

‖
<
‖



(


A
f

C

)


i

‖
‖


e
˙

x


(
t
)

‖
+
‖

A

f
,
i


‖
‖

f
˙


(
t
)

‖
,




(18)


which means there exists a sufficiently large
ε
 with which


ϕ
i


(
t
)

<
ε

. As discussed in [19], Equation (17) is a special case of the super-twisting structure from [20]. The scalar gains from Equation (17) is set to satisfy the following conditions





ψ
>
2

ε

,


χ
>
0
,


ς
>
ε
,


φ
>



χ
2


(


ψ
3

+
5
/
4

ψ
2

+
5
/
2

(

ς
−
ε

)


)



ψ

(

ς
−
ε

)



;





(19)


consequently, it can be proven that



e
˙


z
,
i



(
t
)

=

e

z
,
i



(
t
)

=
0

 in finite time [20], which means a sliding motion will take place.During the sliding motion,



e
˙


z
,
i



(
t
)

=

e

z
,
i



(
t
)

=
0

, and the nonlinear signal

ν

 must take on an average value to compensate for
f
 to maintain sliding. The average quantity, denoted by


ν

e
q



, is referred to as the equivalent output error injection term, which can be obtained from

ν

(
t
)


 by a low pass filter [21]. Once the sliding surface is reached, the error dynamics in Equation (13) are given by










e
˙

x


(
t
)

=
A

e
x


(
t
)

,






0
=

A
f

C

e
x


(
t
)

+

I
p


ν

e
q



(
t
)

−

A
f

f

(
t
)

.








(20)

As mentioned, the system matrix
A
 is naturally stable, and the reduced-order error system is autonomous. Once converged,


e
x


(
t
)


 is converged to zero, thus the estimated state vector

x
^

 is accurate. Meanwhile, the sensor fault reconstruction can be obtained from





f
^


(
t
)

=

A
f

−
1



ν

e
q



(
t
)

.




(21)

In most state estimator designs, the output error is fed back to the state equation of the error system. However, when sensor fault occurs, the corrupted measurement signal would cause the estimated state to deviate. The uniqueness of the proposed observer lies in that the estimation of the system states is totally not affected by the occurrence of sensor faults. Because


e
z


(
t
)


 and

ν

(
t
)


 are both imposed on the fictitious state

z

(
t
)


 instead of


e
x


(
t
)


, the derivative of


e
x


(
t
)


 is by nature an autonomous system that would not be corrupted by sensor faults, and this feature can be explained by Equation (13) and Equation (20). Equation (13) and Equation (20) separately represent the error dynamics before and after the sliding surface being reached, and it can be seen that the derivatives of


e
x


 remain unchanged. In fact, the error system related to


e
x


 remains autonomous throughout the convergence of sliding motion, which is a critical merit when the observer is applied in the proposed FTC scheme in next section. 4. Fault Tolerant Control Based on State EstimationIn this section, the depicted sliding mode observer is integrated with the existing feedback controller to yield a sensor fault tolerant control scheme. Firstly the control plan of an aircraft engine is introduced. The chief task of an engine control system is to provide the proper amount of fuel to meet demanded thrust, which is not measurable. Fortunately, for a high by-pass ratio turbofan engine, low pressure rotor speed


N
L


 and thrust are highly correlated.


N
L


 is therefore widely used as a controlled variable for large civil aircraft engines. The output in Equation (7) is specified as


N
L


 in the following deductions. To meet the demand of command tracking in engine control loop, a tracking controller is feasible. That is,


N
L


 should catch up the command value reflected by throttle position in real-time. In order to induce the tracking error converged to 0, the derivative of the command deviation should be augmented into the state. Define
r
 as the command value of

y

(
t
)


, then


e
r


(
t
)

=
r

(
t
)

−
y

(
t
)


 is the command error vector. Corresponding to the system in Equation (1), take the derivative of


e
r


(
t
)


:






e
˙

r


(
t
)

=


d

(

r

(
t
)

−
y

(
t
)


)



d
t


=
−
C

x
˙


(
t
)

−
D

u
˙


(
t
)

.




(22)

Obviously, if


e
r


 is augmented into state vector,
x
 should be replaced with


x
˙


(
t
)


 in the considered state equation. The augmented state turns to


x
¯


(
t
)

=



[







x
˙

T


(
t
)






e
r
T


(
t
)






]


T


, then the augmented state equation is obtained:





x
¯

˙


(
t
)

=

A
¯


x
¯


(
t
)

+

B
¯


u
¯


(
t
)





(23)


where


u
¯


(
t
)

=

u
˙


(
t
)


,


A
¯

=

[




A


0





−
C



0




]


, and


B
¯

=

[




B





−
D





]


. For such a tracking problem, some classical state feedback control methods can be effective and applicable. In this paper, an LQR controller is applied to the augmented plant. The quadratic performance index of system Equation (23) is




J
=


∫

0
∞


(


x
T


(
t
)

Q
x

(
t
)

+

u
T


(
t
)

R
u

(
t
)


)

d
t




(24)


where

Q
∈

ℝ

n
×
n



 is a symmetric positive semi-definite matrix, and

R
∈

ℝ

m
×
m



 is a symmetric positive definite matrix. By applying optimal control law






u
¯

*


(
t
)

=
−

R

−
1




B
¯

T

P


x
¯

*


(
t
)

=
−

K
¯


x
¯


(
t
)





(25)


where
P
 is the symmetrically positive solution of an algebraic matrix Riccati equation, then the optimal
J
 is obtained with


J
*

=


min

u

J

(

u

(
t
)


)


. When
Q
 and
R
 are given,

K
¯

 can be calculated by solving
P
. Then





u
¯


(
t
)

=
−

K
¯


x
¯


(
t
)

=
−

[






K

x
˙







K
e






]


[






x
˙


(
t
)








e
r


(
t
)






]





(26)


where


K

x
˙


∈

ℝ

m
×
n



 and


K
e

∈

ℝ

m
×
p



 are blocking controller gain matrices corresponding to


x
˙


(
t
)


 and


e
r


(
t
)


. Using Laplace transforms, the controller for original system is




u

(
t
)

=
−

K

x
˙


x

(
t
)

−



K
e


e
r


(
t
)


s

.




(27)

Because the rotor speeds of two shafts are both measurable, such a state feedback controller is feasible for engine control design. However, when sensor fault occurs, the deviation from corrupted sensor signal would cause the controller to react wrongly on command tracking. Many active sensor FTC schemes have been put forward, the common point of which is that they all reply on FDI results and parameter reconfigurations. Typical ideas include Kalman filters (KF) bank scheme, which is depicted in Figure 3. The KF bank, acting as a FDI part, detects and isolates the faulty sensor; then, a virtual sensor signal solved by KF is utilized to replace the damaged one. However, the efficiency of FTC relies much on the quality of FDI, and the sluggish manner of detection may bring about slow responses of FTC. Some researchers have used sliding mode theory to compensate for sensor faults, as shown in Figure 4. With the application of sliding mode observers, the sensor fault reconstruction signal can be obtained in real-time, and is employed to correct the corrupted measured signals before they are used by the controller. However in an abrupt fault case, the dynamics of reconstruction signal before the convergence of sliding mode may cause large overshooting in rotor speed, being even worse in fuel flow, which may lead to over temperature or over rotating problems.The design observer discussed in the last sections is able to estimate state and sensor fault simultaneously, and sensor faults have no effect on


e
x


(
t
)


. On the basis of this result, in this paper a new fault tolerant controller based on the described SOSMO was proposed, that is, the physical sensor signals for two shaft speeds are replaced with estimated value

x
^

 for state feedback, as shown in Figure 5. Because


y
^

=
C

x
^

+
D
u

, then








e
^

˙


r


(
t
)

=


d

(

r

(
t
)

−

y
^


(
t
)


)



d
t


=
−
C


x
^

˙


(
t
)

−
D

u
˙


(
t
)

.




(28)

Considering the closed loop system






x
¯

˙


(
t
)

=

A
¯


x
¯


(
t
)

−

B
¯


K
¯



x
¯

^


(
t
)

=

(


A
¯

−

B
¯


K
¯


)


x
¯


(
t
)

−

B
¯


K
¯


e

x
¯



(
t
)

,




(29)


where





e

x
¯



(
t
)

=

[







x
^

˙


(
t
)

−

x
˙


(
t
)









e
^

r


(
t
)

−

e
r


(
t
)






]

=

[







e
˙

x







r
−
C

x
^

−
D
u
−

(

r
−
C
x
−
D
u

)






]

=

[





A

e
x







−
C

e
x






]

,




(30)


where time variable
t
 is omitted for convenience. Thus the derivative of

x
¯

 is transformed to






x
¯

˙

=

A
¯


x
¯

−

B
¯


K
¯



x
¯

^

=

(


A
¯

−

B
¯


K
¯


)


x
¯

−

B
¯


K

x
˙


A

e
x

+

B
¯


K
e

C

e
x

.




(31)

Considering the result from Equation (20), the system associated with


e
x


(
t
)


 is autonomous and unaffected by

f

(
t
)


, then




[







x
¯

T






e
x
T






]


T


 is with the form





[







x
¯

˙









e
˙

x






]

=

[






A
¯

−

B
¯


K
¯






B
¯


K
e

C
−

B
¯


K

x
˙


A





0


A




]


[





x
¯







e
x






]





(32)


which is a stable autonomous system. It is clear that the augmented system Equation (32) is not affected by sensor faults. It is essential the proposed observer can estimate

x

(
t
)


 and reconstruct

f

(
t
)


 simultaneously, which ensures the estimation of

x

(
t
)


 is accurate without the corruption of

f

(
t
)


. 5. SimulationsIn this section, simulation results and performance evaluations of the proposed FTC scheme corresponding to sensor fault scenarios are presented. The same estimation tasks were implemented by the method in [13] to provide comparative results. Although the proposed FTC was based on a linear algorithm, tests were conducted via a nonlinear component-level model (CLM), which is a simulation platform representing a twin-spool high-bypass turbofan engine. The developed CLM was described in [18,22], and its fidelity has been proven against testing data extracted from real engines. The simulation environment was set to be at the reference flight condition and at a nominal cruise power setting, with

H
=
10,668

 
m


,


M
a

=
0.785

,


W
f

=
0.3606
 
kg
/
s

, and


θ

VSV


=
0

. White Gaussian measurement noise and process noise were introduced to the experiments with standard deviations (percentage of the nominal value)


σ

n
o
i
s
e
,
m


=
0.0015

 and


σ

n
o
i
s
e
,
p


=
0.0005

, respectively, determined by practical experience and previously published data [22]. The considered sensor fault was imposed on


N
L


, as shown in Figure 6, which included two step faults separately occurring at 5 s (−0.86%) and 20 s (−2.02%) during simulations. Meanwhile, two steps in


N
L


 command, separately 1% at 10 s and −1% at 35 s, were imposed to examine the controller performance. Although in the algorithm design all variables were normalized, in the simulation the result variables were shown by their absolute values.The matrices in SVM calculated by hybrid fitting method were given by








A
=

[





−
1.299




1.2841






−
0.0549




−
1.3196





]

,
 
B
=

[





0.2253






0.1884





]

,






C
=

[








1


0
















0


1

















0.3427




−
0.1544














1.0605




−
0.5218


















0.0534




1.5177














0.5819




3.0115














−
0.3107




−
0.9622





















]

,
 
D
=

[




0




0









0.0077






−
0.0054










0.00379










0.1031






0.5362

















]

.








(33)

Aside from this, the related design parameter in sliding mode observer was given by


A
f

=
0.1

I
7


,

ψ
=
0.11
,



χ
=
0.001
,



ς
=
0.013
,



φ
=
0.1

. 5.1. FTC Switched OffThe designed tracking controller was initially examined without FTC scheme in the circumstance of sensor fault injections. Figure 7 shows the results when the corrupted signals (from faulty sensors) were directly used by the controller. Figure 7a shows the


N
L


 value regulated by LQR controller. Large deviations from the command value of


N
L


 could be observed, as shown by the blue line. By contrast, the corrupted sensor, denoted by the red line, tracked the command well. This indicated that the tracking controller worked normally, as the controller cannot “judge” if the sensor is faulty or not. However, the actual value of


N
L


 deviated from the command twice just at the instances where the step faults occurred. Figure 7b,c show the engine thrust and fuel flow, respectively, and they all diverged from the expected values due to the corrupted signal of the faulty sensor. 5.2. FTC by CompensationNext, the FTC scheme proposed in [13] was applied to the control loop. The novelty of this method lies in its compatibility with any designed feedback control, and the corrupted sensor was mended with a reconstructed signal solved by SMO before being used in controller computations. Using the sliding mode observer depicted in Section 2, Figure 8a shows the sensor fault reconstruction results calculated by Equation (21), and the estimation error is shown in Figure 8b. It can be seen that the raw sensor fault was well reshaped, and the response of SMO was quick enough to catch the fault shifts. With the help of FTC,


N
L


 tracked the command well in sensor fault cases, as shown in Figure 8c. However, the value of


N
L


 fluctuated at the time when faults were imposed. This was because the steady state of the sliding mode was destroyed with the occurrence of faults, and the unexpected dynamics caused by the converging process was inevitable, which was reflected in the reconstructed signal and then the influence


N
L


 value and controller computing for fuel flow. At 5 s and 20 s, overshooting could be found in fuel flow and thrust, as shown in Figure 8d,e, which may cause over-temperature and over-rotating problems, even endangering flight safety. 5.3. FTC by State Estimation FeedbackThe following are the results from the proposed FTC scheme that the measured state directly replaced with the estimated one. The same as the method in Section 5.2, the proposed scheme was compatible with any existing feedback controller without any controller reconfigurations. Figure 9a shows the state estimation results, and using the proper design of reduced-order sliding mode, the effects of sensor faults could be merely observed in estimated states. Figure 9b shows the


N
L


 result, where the blue line is the actual value used by controller computations and the red line is the value from the faulty sensor. Compared to Figure 8c, fluctuations caused by sensor faults were eliminated, and the


N
L


 command was nicely tracked. Meanwhile, overshooting in thrust or fuel flow occurred in last subsection; it was avoided here, which represents a major improvement over the prior method. 6. ConclusionsThis paper proposed a sensor fault-tolerant control scheme for a high bypass turbofan engine based on sliding mode ideas. The proposed scheme was based on a second order sliding mode observer, by which the system state estimation and sensor fault reconstruction can be simultaneously obtained on-line. Meanwhile, due to the manner of reduced-order sliding mode, the state estimation was unaffected by sensor faults. The estimated states were then directly used to replace the physical corrupted sensor in the controller calculations, and therefore the controller does not need to be reconfigured, and unexpected overshooting caused by parameter tuning or FDI readjustment was avoided. The proposed scheme was implemented on the CLM of a commercial turbofan engine, and numerical simulation results showed its feasibility and improvement over traditional FTC.
