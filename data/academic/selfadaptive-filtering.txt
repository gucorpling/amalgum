 1. IntroductionLocalization has gained a growing interest among researchers and industries due to technological advancements in wireless sensor networks (WSNs). WSNs are typically made up of a set of small, low-energy devices called sensor nodes, optionally with a base station for monitoring purposes. Localization in a WSN is defined as the task of determining real-time coordinates of the sensor nodes, given that the exact positions of some of the static nodes, also called anchor nodes, are known [1].The past few decades have witnessed a dramatic increase in the development of indoor localization due to its applicability in various real-time location-based services and smart monitoring systems, particularly in buildings and places where the Global Positioning System (GPS) is denied due to poor satellite reception. Techniques for indoor localization can be generally divided into two broad categories, namely, radio frequency (RF)- and non-RF-based. The latter technique exploits non-RF sensors to estimate the movement of a target node and its distance from other nodes. Examples of these include radar, acoustic, ultrasound, and optical sensors. The RF-based technique, on the other hand, utilizes received signal strength between two sensor nodes to estimate the distance between them, hence it is often termed as the received signal strength indicator (RSSI) method. This method does not require additional hardware for estimation, and is preferable in many cases owing to its penetrability as compared to the non-RF approaches [2].Several RF technologies have been proposed and tested in the literature for RSSI-based indoor localizations, and the most popular ones are WiFi, Bluetooth Low Energy (BLE), Ultrawide Band (UWB), and Zigbee. Each of them has its own advantages and disadvantages, and its efficacy greatly depends on the nature of applications and hardware performance. WiFi, for instance, has become the simplest solution for localization in buildings with high availability of access points with the highest data-rate transfer and throughput, but at the cost of high power consumption. Hence, it may not be suitable for indoor tracking, particularly when sensor nodes are dependent on batteries to operate. BLE, on the other hand, consumes significantly less power, as the maximum data rate is considerably lower than that of WiFi, but it has been demonstrated to be more accurate than WiFi when used for localization due to better estimation on the RSSI-distance model [3]. Both WiFi and BLE signals, however, are easily perturbed by multipath effects, signal reflections, and even small noise perturbation due to the inherent structure of narrowband radio waves, which makes precise distance measurement more difficult to achieve. To address this problem, UWB radio signals have been designed with very short impulse transmissions to preserve the signal’s integrity and strength, as they are not easily overlapped with noise or multipath effects. The downsides of UWB are, nonetheless, the high cost of the equipment and a requirement for dedicated infrastructure [4]. ZigBee is another Bluetooth-like technology that operates at about a quarter of Bluetooth’s 1 Mbps maximum data rate. The low data rate makes it unsuitable for applications with high-speed data transmission, but the solution enables multiyear battery life and connection to a large number of nodes. A detailed comparison between these technologies can be found in [2,5].Localizing a mobile node in an indoor environment is relatively more challenging than localizing a static node as it continuously changes its location with time [6]. Moreover, for RSSI-based localizations, a node at some places may only receive two RSSI values at certain time instances while moving due to occlusions from the environment and limitations on the communication modules, such as sudden transceiver failures, or limited energy and bandwidth. This scenario makes it impossible to localize if one is to use traditional triangulation or multilateration-based methods. In order to circumvent this problem, several studies have begun to exploit compressive sensing theory [7] that allows sparse and noisy signals to be recovered with only a small number of RSSI measurements. Via this theory, not only can the number of anchor nodes be minimized [8], it is also possible to localize multiple target nodes at the same time [9]. The work in [9] shows how the compressive-sensing technique can be adopted along with

ℓ
1

 minimization programs to localize multiple target nodes, where the results are then validated via a number of simulations. In the case where a sufficiently large number of anchor nodes are available, fingerprinting is one of the approaches that has been extensively adopted by many researchers as it is able to construct a radio map from recorded RSSI values during the offline phase [10,11]. Hence, any changes of signal strength during the online localization phase are cross-checked with the stored fingerprints to estimate the best location of the target node, either deterministically [12] or probabilistically [13]. This method is particularly popular for localizing smartphone or mobile-device users in buildings equipped with many WiFi access points. Nonetheless, the major challenges that are always associated with this approach are the inherent noise and large fluctuations of the signal strength due to the time-varying orientation of smartphones or unexpected obstacles between anchors and users. In this regard, several techniques have been proposed such as incorporating artificial-intelligence-based methods and using suitable filters to minimize the influence of multipath effects and interference [14,15,16,17,18,19]. Specific examples include a reliability-augmented particle filter, where the uncertainty of a user’s true step length can be compensated [11], and fusing fingerprints with uncertain mutual distances that are constrained within specific bounds [10].In the field of mobile robotics, non-RF based devices are typically utilized as proprioceptive sensors in the odometry approach, which is a common technique to localize wheeled mobile robots. While these sensors can estimate the path and pose of the robot relatively more accurate than by using the RSSI-based methods, errors due to wheel slippage, sensor drifts, and other environmental disturbances may inevitably accumulate and eventually deteriorate the tracking performance [20]. To prevent the uncertainties in odometry from growing unbounded, a probabilistic state estimation was introduced which fuses odometry with other exteroceptive sensors such as sonar, lidar, laser range finders, and cameras [21]. The most used algorithms reported in the literature are Markov [22] and Kalman filter localizations [23] where both rely on probabilistic motion and measurement models. Markov localization assumes that the map is known and uses fine-grained and metric discretization of the state space. The configuration space is divided into a number of cells where each cell contains the probability of the robot to be in that cell. During the prediction and update stages, all cells are updated; thus, this method entails high computational costs. The Kalman filter, on the other hand, is computationally less intensive, as the probability distributions of both robot and sensor model are assumed to be Gaussian; hence, only the mean and variance of the distribution need to be updated at each time step [24].As an alternative to the probabilistic-based method where the optimal solution heavily relies on map accuracy, sensing, and the computational capabilities of the robot, integrating odometry with WSN-based localizations has also become a new trend in recent years [20,25,26,27]. This particular strategy has recently found a wide variety of applications, such as human tracking [14,28,29,30], navigational assistance [5], warehouse management [2,31], and monitoring underground areas in post-disaster environments [32]. In smart buildings where WSN is installed for electrical usage and environmental monitoring purposes [33], this approach can keep operational costs to a minimum as no additional hardware is required to assist the odometry-based localization. The work in [27] shows an example where the RSSI and phase shift of signals from passive UHF-RFID tags, which are installed in the ceiling of the environment, could be combined with odometry data to improve localization performance. Fusing WiFi- or BLE-based RSSI with inertial measurement units (IMUs), which typically consists of an accelerometer and a gyroscope, is also becoming more popular due to the advanced technology of smartphones and mobile devices [23,29,34]. From the WSN perspective, another notable benefit of introducing mobility to the network is that it can increase its capability on various aspects, including flexible topology adjustment and automatic node deployment [35]. In addition, precise and fast localization of mobile nodes in GPS-denied environments allows several crucial tasks to be executed, such as search-and-rescue missions and map-building during emergency cases.While integrating WSN with odometry localizations can be advantageous for compensating deficiencies from individual methods, suitable fusion techniques must be employed in order to achieve optimal experimental results without sacrificing the desired design requirements. A number of studies suggested adopting the Kalman filter and/or its variants [20,36], while others preferred different approaches due to some disputes over the suitability or effectiveness of the filters particularly for compensating high variability or uncertainties in the signal strength [18,19]. In practice, however, the accuracy, dynamic range of the signals and their variations highly depend on the specific hardware platforms used, the infrastructure impact, as well as spatial or environmental factors, which make any direct comparison between existing methods less conclusive. In other words, while some techniques work tremendously well in a particular environment, this does not mean others are less effective in general. Nonetheless, approaches that have been experimented in the literature often pave the way for future research in and development of WSN technologies.The focus of this study is on localizing a continuously moving target node using Zigbee-based RSSI measurements and odometry when no knowledge of the map or fingerprint database is available. To the best of the authors’ knowledge, little attention has been paid in the literature to date on investigating and optimizing the indoor-localization technique for a continuously moving node within this scope. Plus, many studies on indoor localizations focused on reducing the steady-state position error. Alternatively stated, when target nodes are in a continuous motion, only their final positions or their positions while they are stationary have been of interest for performance evaluations. In this work, we introduce mobility to the target node by using a nonholonomic wheeled mobile robot with a specific velocity profile. The main contributions of this paper can be stated as follows:
a novel approach to compensate for uncertainties in the Zigbee-based RSSI and odometry localizations for a continuously moving target node;a new methodological framework to fuse Zigbee-based RSSI and odometry-based localizations with convex searches on optimal weighting parameters; anda self-adaptive filtering technique that autonomously optimizes the weighting parameter during the target node’s translational and rotational motions which exhibit different but consistent error patterns.The methods proposed in this work are also computationally less onerous as localization is only corrected using weighting parameters that are updated on the basis of the robot’s rotational velocity. Several real-time experiments consisting of four different trajectories with different numbers of straight paths and curves were carried out to validate the proposed techniques. Both temporal and spatial analyses demonstrated that, when odometry data and RSSI values are available, the proposed methods provide significant improvements on localization performance over existing approaches that also include the extended Kalman filter. In addition, we also showed that the new self-adaptive filtering technique which optimizes the error minimizer when the rotational velocity within a specified range is detected considerably outperformed the rest.The remainder of the paper is organized as follows: Section 2 explains the indoor localization framework and strategies, which begins with a brief description on the system architecture and the path-loss propagation model, followed by the RSSI-based localization method, odometry, and the main proposed strategies involving convex optimizations when both the RSSI-based method and odometry are hybridized. Section 3 presents the experimental results, qualitative and quantitative performance evaluations and discussions. Results of the proposed methods are then concluded and further discussed in Section 4 with future works. For notations and abbreviations that are frequently used in this manuscript, readers are referred to the last section before the references. 2. Indoor Localization Framework and Strategies 2.1. System Architecture and Path-Loss Propagation ModelZigbee is a low-cost wireless communication technology based on the IEEE 802.15.4 standard, which is often used to create personal area networks. Due to its low power consumption and secure networking capabilities, it is often preferable for wireless control and monitoring in smart-building technologies.In this study, we use XBee embedded modules with the Zigbee protocol to create four transmitters that are placed at preassigned positions, and one receiver which is the target node to be localized. In order to introduce mobility to the target node and to verify the proposed indoor localization strategies, NSBot2, which is a nonholonomic wheeled mobile robot was built with ATMega microcontrollers connected to the target node as shown in Figure 1.With regard to control mechanism, NSbot2 was preprogrammed with closed-loop cascade control where its motion was constrained to constant translational and rotational velocities. This technique does not just allow the robot to travel along various types of planned path, but it also enables each experiment with a specific path to be repeated with minimal variations.The basic idea for indoor localization with RSSI is that the target node to be localized stays at a fixed coordinate, and the RSSI from different anchor nodes with known positions are measured. RSSI values can be converted into distances using a path-loss model [37], which are then used with the triangulation, multilateration, or trilateration method to estimate the position of the target node [38].One of the most commonly used path-loss propagation models in a WSN is the log-distance function. Via this model, the value of RSSI,
β
 (in dBm) can be theoretically expressed as follows [39]:







β

(
d
)

=

β
0

−
10
γ

log
10


(


d

d
0



)








(1)


where d (in m) is the distance between transmitter (anchor node) and receiver (target node),

d
0

 is the free space reference distance, typically 1 m,
γ
 is the path-loss exponent coefficient, and

β
0

 is the RSSI value when the transmitter and the receiver are 1 m apart, which in this case is found to be

−
38

 dBm. The theoretical value for
γ
 with some calibrations is 1.8. From Equation (1), the distance d can be simply retrieved with:




d

(
β
)

=

d
0

×

10



β
0

−
β


10
γ



.




(2)

In real situations, when the target node is continuously moving, the effects of noise from multipath propagation, signal occlusions, and diffractions can be undesirably amplified. Hence, the theoretical RSSI-distance relation in Equation (1) may no longer be sufficient to predict the actual path-loss model. In order to estimate the real distance for a continuously moving node more accurately, sampled data for
β
 are collected when the transmitter is placed at a fixed coordinate, and the receiver, named Node M, is moved at a speed of approximately 20 cm/s from

d
=
100

 cm until

d
=
500

 cm. This is illustrated in Figure 2.A curve-fitting method is then utilized to generate an improved path-loss propagation model,

β
f

, as follows:







g
=






n

∑

i
=
1

n


(

β
i


log
10


q
i

)

−

∑

i
=
1

n


β
i


∑

i
=
1

n

l
o

g
10


q
i



n

∑

i
=
1

n



(

log
10


q
i

)

2

−


(

∑

i
=
1

n


log
10


q
i

)

2



,









h
=



∑

i
=
1

n


β
i

−
g

∑

i
=
1

n


(

log
10


q
i

)


n

,











β
f


(
q
)

=
h
+
g

log
10


(
q
)

.







(3)


where

q
=
d
/

d
0


; and n is the number of sampled data. 2.2. RSSI-Based LocalizationIn this work, four transmitters were configured as anchor nodes (Anchors A, B, C, and D); hence, four distance values can be obtained at each time instance from the path-loss propagation model. They are also placed at points where any three of them are always noncollinear, which ensures the feasibility of the trilateration method at each time instance.Consider

(
x
,
y
)

 as the unknown coordinate of the mobile node, and

(

x
j

,

y
j

)

 with

j
=
1
,
2
,
3

 be the first three coordinates from three different anchor nodes received by the mobile node. Let

d
j

 be the estimated distance from Node M to

(

x
j

,

y
j

)

, and












α
1




γ
1






α
2




γ
2









x




y




=





δ
1






δ
2












(4)


where







α
1




=
−
2

x
1

+
2

x
2

,


α
2

=
−
2

x
2

+
2

x
3

,






γ
1




=
−
2

y
1

+
2

y
2

,


γ
2

=
−
2

y
2

+
2

y
3

,






δ
1




=

d
1
2

−

d
2
2

+

x
2
2

−

x
1
2

+

y
2
2

−

y
1
2

,






δ
2




=

d
2
2

−

d
3
2

+

x
3
2

−

x
2
2

+

y
3
2

−

y
2
2

.







(5)

The coordinate of the mobile node can then be retrieved via Cramer’s rule as follows:







x
=






δ
1




γ
1






δ
2




γ
2










α
1




γ
1






α
2




γ
2






=



δ
1


γ
2

−

δ
2


γ
1




γ
2


α
1

−

γ
1


α
2



,

y
=






α
1




δ
1






α
2




δ
2










α
1




γ
1






α
2




γ
2






=



α
1


δ
2

−

α
2


δ
1




γ
2


α
1

−

γ
1


α
2



.







(6)

 2.3. OdometryOdometry is a process of estimating the position change of a mobile robot on the basis of data from motion sensors. For this research, the encoders on both wheels of the mobile robot were used to estimate the path taken as well as the heading direction. Figure 3 illustrates the robot’s position with respect to two different frames, namely

[
X
,
Y
]

 and

[

X
R

,

Y
R

]

.

[
X
,
Y
]

 denotes the world coordinate system, whereas

[

X
R

,

Y
R

]

 represents the robot-attached frame. The robot’s translational velocity, v, and rotational velocity,
ω
, can be written as follows [24]:






v



=


(

ω
r

+

ω
l

)
r

2

,







(7)







ω



=


(

ω
r

−

ω
l

)
r

D

,







(8)


where r is the radius of the wheel, D is the azimuth length between wheels, and

ω
r

 and

ω
l

 represent the angular velocities of the right and left wheels respectively. Let

(

x
c

,

y
c

)

 be the center of the robot,

(

x
n

,

y
n

)

 be the current coordinate based on the

[

X
R

,

Y
R

]

 plane,

(
x
,
y
)

 be the current coordinate based on the

[
X
,
Y
]

 plane, and
θ
 be the robot’s heading angle with respect to the X axis. The relation between

(
x
,
y
)

,

(

x
n

,

y
n

)

, and

(

x
c

,

y
c

)

 can be written as:











x




y




=
J

(
θ
)






x
n






y
n





+





x
c






y
c












(9)


where







J

(
θ
)

=





cos
θ




−
sin
θ






sin
θ




cos
θ





.







(10)

The movement of the robot can be decomposed into linear velocities with respect to the X and Y axes, i.e.,

x
˙

 and

y
˙

, which have a relation with linear and angular velocities as follows:












x
˙






y
˙






θ
˙





=





cos
θ



0





sin
θ



0




0


1








v




ω




.







(11)

Let

f

(
x
,
y
,
θ
)

=

(

x
0

,

y
0

,

θ
0

)


 be the previous position of the robot. When the robot is only driving forward in the

X
R

-axis direction, only translational velocity v is non-zero, and

θ
=

θ
0


. Hence, we have


x
˙

=
v
cos

θ
0


 and


y
˙

=
v
sin

θ
0


. The current update on f is then obtained by integrating

x
˙

 and

y
˙

, which leads to






x



=
v

t
s

cos

θ
0

+

x
0

,





y



=
v

t
s

sin

θ
0

+

y
0

,









where

t
s

 is the sampling time. When the robot steers, the trajectory is a circular arc with a radius

ρ
=
v
/
ω

, i.e.,




ρ
=


D
(

ω
r

+

ω
l

)


2
(

ω
r

−

ω
l

)


,




(12)

The current heading angle of the robot can be calculated as

θ
=

∫
0

t
s


ω
d
t
=
ω

t
s

+

θ
0


. The position of the robot can therefore be estimated with











x




y




θ




=





J
(
θ
)



0




0


1









ρ
sin
(
ω

t
s

)






ρ
(
1
−
cos

(
ω

t
s

)

)






ω

t
s






+





x
0






y
0






θ
0





.







(13)

 2.4. Improved Localization TechniquesBoth the RSSI- and odometry-based localization methods have their own advantages and disadvantages. With regard to the RSSI method, a notable stumbling block when operating indoors is signal-strength attenuation that occurs via various mechanisms such as diffraction, reflection, and scattering due to environmental obstacles like walls. Odometry, on the other hand, is susceptible to measurement errors that are typically caused by wheel slip and sensor drift. To compensate for the deficiencies of individual methods, a preliminary set of experiments were conducted to investigate the accuracy of each method and to search for optimal weighting parameters before both localization techniques are fused. Figure 4 illustrates the experimental setup where the four anchor nodes are placed at the vertices of a square with








(

x
A

,

y
A

)

=

(
−
1
,
−
1
)

,


(

x
B

,

y
B

)

=

(
4
,
−
1
)

,


(

x
C

,

y
C

)

=

(
4
,
4
)

,

and


(

x
D

,

y
D

)

=

(
−
1
,
4
)

.








As our focus was on localizing a continuously moving robot, we took into account the transient error defined by







e

(
t
)

=




(
x

(
t
)

−

x
r


(
t
)

)

2

+


(
y

(
t
)

−

y
r


(
t
)

)

2



,







(14)


where

(
x
,
y
)

 represents the observed coordinate of the robot, while


x
r


(
t
)


 and


y
r


(
t
)


 indicate the actual position of the robot in the x and y directions respectively, which were obtained by using a camera. The localization error for the whole trajectory was then defined as








E
T


(
x
,
y
)

=

∫


t
0



t
f


e

(
τ
)

d
τ
,







(15)


where

t
0

 and

t
f

 are the initial and final execution time respectively. To increase the localization accuracy of the RSSI-based method, we propose the following lemma, which is based on the improved path-loss model and a recursive implementation of moving average filter:Lemma 1. Let



β
a

,

β
b

,

β
c



, and


β
d


be the RSSI values based on the path-loss model estimated by Equation (3) for Anchors A, B, C, and D, respectively, and R be the number of points in the average that is selected a priori. Given





β
r


(
0
)

,

β
r


(
1
)

,
…
,

β
r


(
R
−
1
)

,

r
=
a
,
b
,
c
,
d





(16)

and






β
˜

r


(
R
)

=

1
R


∑

k
=
0


R
−
1



β
r


(
k
)

,

r
=
a
,
b
,
c
,
d
,





(17)

the following equations are then equivalent:






β
˜

r


(
i
)

=

1
R


∑

j
=
1

R


β
r


(
i
−
j
)

,

,
i
≥
R
+
1
,

r
=
a
,
b
,
c
,
d





(18)








β
˜

r


(
i
)

=


β
˜

r


(
i
−
1
)

+
Q

β
r


(
i
−
1
)

−
Q

β
r


(
i
−

(
R
+
1
)

)


,
i
≥
R
+
1
,

Q
=
1
/
R
,

r
=
a
,
b
,
c
,
d





(19)

Proof.  From Equation (18), we have






β
˜

r


(
i
)

=
Q

[

β
r


(
i
−
1
)

+

β
r


(
i
−
2
)

+
…
+

β
r


(
i
−

(
R
−
1
)

)

+

β
r


(
i
−
R
)

]

.




(20)


It also follows that






β
˜

r



(
i
−
1
)

=
Q
[


β
r


(
i
−
2
)

+

β
r


(
i
−
3
)

+
…
+

β
r


(
i
−
R
)

+

β
r


(
i
−

(
R
+
1
)

]

.




(21)


Equation (20) can then be restructured into






β
˜

r


(
i
)

=


β
˜

r


(
i
−
1
)

−
Q

β
r


(
i
−

(
R
+
1
)

)

+
Q

β
r


(
i
−
1
)

,




(22)


which is also equivalent to Equation (19). □If the values of

β
r

 are subject to Gaussian noise, the effects from the noise can be suppressed via Equation (19) in Lemma 1, which consequently leads to a smoother localization when

d
(


β
˜

r

)

, which represents the Euclidean distance from Node M to the respective anchor node (calculated using Equation (2)) that is used with the trilateration method in Equations (4)–(6). The recursive filtering method in Equation (19) allows fast computation for real-time implementation which is desirable in our case as the target node considered is continuously moving.Throughout the paper, we write

β
T

 as the localization via the theoretical path-loss model as in Equation (1) with the filtering technique in Equation (19),

β
N

 as the localization based on Lemma 1, and

O
d

 as the localization based on the odometry approach as described in Section 2.3. The localization technique using raw RSSI values with the theoretical path-loss model alone was omitted in this work due to its worse performance.For the preliminary experiment, the robot was initially placed at

(
0
,
0
)

, and moved in a square-like trajectory with three turns until it reached its initial position again. The improved path-loss model for each anchor node via Equation (3) gave


(

h
A

,

h
B

,

h
C

,

h
D

)

=

(
−
38.2
,
−
38.9
,
−
38.4
,
−
37.0
)


 and


(

g
A

,

g
B

,

g
C

,

g
D

)

=

(
−
8.39
,
−
8.91
,
−
9.65
,
−
11.6
)


, where

h
i

 and

g
i

 indicate the values of h and g for Anchor i, respectively. The robot’s trajectories based on

O
d

,

β
T

 and

β
N

 (with R set to 5) as well as the actual trajectory from the preliminary experiment, are outlined in Figure 5.An immediate observation from the figure is that the actual trajectory is slightly skewed compared to the path estimated from

O
d

 after the first turn (approximately at


(

x
r

,

y
r

)

=

(
2
,
0
)


), and the localization error becomes higher after the second turn, which then accumulates until the robot stops. Trajectories based on

β
N

 and

β
T

, on the other hand, were clearly worse than the odometry approach, as can be seen from the scattered plots. Nevertheless, both showed an interesting pattern, whereby plots were less scattered during instances when the robot steered at each turn, and relatively more scattered when the robot moved in a straight line. A possible justification for this is that less noise is captured when Node M stays within a place for more than a threshold of time. In other words, localization errors based on RSSI methods are minimal when the mobile node does not move too fast.In order to investigate the response of

e
(
t
)

 when the robot steers, we introduce an indicator variable,
ϕ
, which takes the value of 1 when the rotational velocity goes beyond a specified threshold, and 0 otherwise. This can be mathematically described by






ϕ



=




0





if

|
ω
|

≤

ϵ
w






1





if

|
ω
|
>


ϵ
w





,








(23)


where the threshold value


ϵ
w

=
0.1

 rad/s was selected to avoid capturing any small temporary steering motion during translational movement. Temporal data for the localization error analysis with respect to
ϕ
 are shown in Figure 6. From the figure, it is clearly seen that localization error from

β
T

 was, in most instances, higher than that from

β
N

 and

O
d

. Another observation is that, although the error from

O
d

 was generally lower than that from

β
T

 and

β
N

, the error from

β
N

 was either almost similar or lower than that of

O
d

 when

ϕ
=
1

. Numerical analysis on

E
T

 for all the three methods is recorded in Table 1 for a set of three tests, and it is shown that

E
T

 from

β
N

 was the lowest when

ϕ
=
1

, even though

O
d

 beats the rest in terms of total

E
T

.Preliminary analysis of the above localization error indicates that performance can be improved by hybridizing

O
d

 and

β
N

, and may be further enhanced by considering the value of
ϕ
. This, however, requires a search on the optimal weighting parameters that can minimize the localization error when both

O
d

 and

β
N

 are hybridized. To this end, the following proposition is introduced:Proposition 1. Define












x
(
t
)






y
(
t
)





=




μ



1
−
μ





μ



1
−
μ











x
1


(
t
)






y
1


(
t
)








x
2


(
t
)






y
2


(
t
)






,








(24)

where


(

x
1

,

y
1

)


and


(

x
2

,

y
2

)


correspond to the estimated coordinates obtained from


β
N


and


O
d


respectively. If there exists








μ
0
*

=
arg

min

μ
∈
[
0
,
1
]



∫


t
0



t
f




[


(
x

(
τ
)

−

x
r


(
τ
)

)

2

+


(
y

(
τ
)

−

y
r


(
τ
)

)

2

]


1
/
2


d
τ








(25)

where


(

x
r

,

y
r

)


denotes the reference coordinate, then the new estimated coordinate


(
x
,
y
)


of the mobile node with


μ
=

μ
0
*



has a smaller localization error than that from


O
d


and/or


β
N


alone.Proof.  The integral term on the right-hand side of Equation (25) corresponds to localization error,

E
T

 from Equations (14) and (15) when

μ
=
0

,

E
T

 reduces to that of

O
d

, whereas when

μ
=
1

,

E
T

 reduces to that of

β
N

. Hence, the existence of

μ
0
*

 is also equivalent to the existence of a minimum

E
T

 in the search space of
μ
. □Figure 7 shows the resulting

E
T

 which is represented by

O

β
N


 when
μ
 from Equation (24) is varied between its minimum and maximum values for the three tests. Due to the convexity of the search, the minimum value of

E
T

 can be attained for each case with weighting parameter

μ
=

μ
0
*


 which has a variance of less than 0.1. It is also worth to note that
μ
 and

1
−
μ

 correspond to the weighting parameters for

β
N

 and

O
d

, respectively, hence

μ
0
*

 acts as the error minimizer when both methods are combined.In order to boost te localization performance, the following corollary is proposed by making the result in Proposition 1 self-adaptive to the value of
ϕ
.Corollary 1. Let

(
x
,
y
)

be defined as in Equation (24),

t
f

be the final execution time, and







μ
1
*

=
arg

min

μ
∈
[
0
,
1
]



∑

k
=
1


k
f



∫


t

k
0




t

k
f





[


(
x

(
τ
)

−

x
r


(
τ
)

)

2

+


(
y

(
τ
)

−

y
r


(
τ
)

)

2

]


1
/
2


d
τ







(26)

where k is the k-th time

ϕ
=
1

during

t
∈
[
0
,

t
f

]

,

k
f

is the total number of times

ϕ
=
1

, and


t

k
f


−

t

k
0



is the duration when

ϕ
=
1

for the k-th time

ϕ
=
1

. If Equation (26) is feasible, the localization performance can then be further improved by setting

μ
=

μ
0
*


when

ϕ
=
0

, and

μ
=

μ
1
*


when

ϕ
=
1

.Proof.  If Equation (26) is feasible, then the total localization error from the estimated new coordinate

(
x
,
y
)

 during

ϕ
=
1

 is smaller than that from

O
d

 and

β
N

 when

μ
=

μ
1
*


. Hence, combining with the error when

μ
=

μ
0
*


 whenever

ϕ
=
0

 results in a smaller total error than that when

μ
=

μ
0
*


 for any value of
ϕ
. □The resulting values of

E
T

 when

ϕ
=
1

 (represented by

O

β
N


) for the three tests are shown in Figure 8. From the figure, it is observed that the minimum values of

E
T

 could be obtained with the minimizer

μ
1
*

 where its variance is also less than 0.1. The values of

μ
0
*

 and

μ
1
*

 for all the three tests, along with the corresponding

E
T

 from Proposition 1 and Corollary 1, are recorded in Table 2. Compared to the minimum values of

E
T

 in Table 1, which were obtained via

O
d

 method alone, the resulting

E
T

 from Proposition 1 and Corollary 1 were significantly reduced for each test. It is also clear that the best performance was achieved via Corollary 1 due to the introduced self-adaptive filtering method, which varies the error minimizer according to the value of
ϕ
.The next section presents a new set of experiments with various trajectories where Proposition 1 and Corollary 1 are applied with the mean values of

μ
0
*

 and

μ
1
*

 from Table 2. 3. Experiment Results, Performance Evaluation, and DiscussionFor the new set of experiments, localization performance was evaluated on four different trajectories (Trajectories 1–4) with different numbers of straight paths and curves. For each trajectory, two objects (chairs) were randomly placed in the experimental area as illustrated in Figure 9, and the value of R was increased to 8 for both

β
T

 and

β
N

 to compensate for the increased multipath effects. Results obtained by Lemma 1, Proposition 1, and Corollary 1 were then compared with those from the theoretical path-loss model, as well as the extended Kalman filter approach, which is an existing method from the literature for sensor fusion. For clarity purposes, we used

O

β
p


 to denote Proposition 1,

O

β
c


 to denote Corollary 1, and

E

K
f


 to represent the extended Kalman filter.For the first trajectory, i.e., Trajectory 1, a similar path as in the preliminary experiment was selected, and the localizations of Node M in the

X
Y

-plane via the aforementioned techniques were plotted with different colors as indicated by the legends in Figure 10. The corresponding temporal analysis on localizations of Node M in x- and y-directions is presented in Figure 11, while the corresponding error along with the

x
,
y

 and
θ
 positions of the robot (based on odometry) are shown in Figure 12. The mobile robot was initially placed at

(
0
,
0
)

, and chairs were placed at locations as indicated by the maroon boxes. As seen in Figure 10, localizations that were only based on the RSSI methods (i.e.,

β
T

 and

β
N

) were relatively more scattered as compared to the other four techniques. The

E

K
f


 method, despite showing a smooth trajectory (grey line), resulted in localization that was relatively too far from the actual position, which can also be clearly seen in Figure 11. It was also observed that

O

β
p


 and

O

β
c


 gave better location estimation for Node M from its initial until final positions. A much closer estimation to the actual position can be seen via

O

β
c


, particularly when the robot steered at each edge of the trajectory.Referring to the bottom plot of Figure 12, errors due to

O
d

 and

O

β
p


 in the first rotational motion (

ϕ
=
1

) were much smaller as compared to errors due to other methods. However, in the second, third, and fourth rotational movements, the error from

O
d

 was considerably larger than those from

β
N

,

O

β
p


, and

O

β
c


, which was a consequence from accumulated errors due to wheel slippage after each turn. In order to provide better evaluation, the experiment for Trajectory 1 was repeated five times, and the numerical results on localization error for each method are compared in Table 3. From the table, the sensor-fusion method via

E

K
f


 recorded the highest error, while

O

β
c


 recorded the lowest. Besides that, a positive impact can be seen from the result of

β
N

 where the error was marginally lower than that from

O
d

 due to the increased value of the filter coefficient R from Lemma 1 for this experiment. We can also conclude that

β
N

 provides a huge improvement over

β
T

 for the comparison between RSSI-based methods, and fusing

β
N

 with

O
d

 as described in Proposition 1 (i.e.,

O

β
p


) significantly reduces the localization error. A further error reduction was accomplished through

O

β
c


, which prioritized

β
N

’s localization at each turn via the self-adaptive filtering approach.For Trajectory 2, which follows a triangle-like path, the corresponding localizations and error plots are depicted in Figure 13, Figure 14 and Figure 15, while the numerical results are presented in Table 4. Although there were only three curves involved, the same trend could be observed whereby

O
d

 and

O

β
p


 showed smaller errors than the rest in the first rotational motion, but the error due

O
d

 ratcheted up afterwards as it was accumulated. In this case, however, the duration during the rotational motion was slightly smaller than that from the first trajectory; hence, competitive performance between

O
d

 and

β
N

 could be seen from the numerical results of Tests 1–5. Comparing the average errors in Table 4, the method with the worst performance appeared to be similar to that from the first trajectory, which was

E

K
f


, followed by

β
T

,

β
N

, and

O
d

. Both

O

β
p


 and

O

β
c


, on the other hand, exhibited the same performance as in the previous experiment.Another random trajectory with six linear motions alternating with six rotational motions was designed for Trajectory 3, and the corresponding localizations and error plots are illustrated in Figure 16, Figure 17 and Figure 18. In this case, the number of curves involved and the duration for rotational movement were relatively higher than those from the previous two trajectories and, as predicted, the approach via

O
d

 worsened as the error piled up after each turn. This is also shown numerically in Table 5, which presents a slightly different trend, where the error due to

O
d

 for each test was constantly higher than that from

β
N

. The proposed optimal sensor-fusion methods nevertheless led to the best performance, with error due to

O

β
c


 being the least.For the last trajectory, Trajectory 4, a continuous rotational motion was assigned to NSBot2 to form a circle-like path. The corresponding localizations and error plots are depicted in Figure 19, Figure 20 and Figure 21, while the numerical results are presented in Table 6. As can be seen in Figure 19, localizations based on

β
N

 and

O

β
c


 were closer to the actual trajectory, whereas those from other methods clearly drifted. In this case, the trajectory via

O
d

 became much worse in comparison with the last three paths due to wheel slippage, and as

ϕ
=
1

 for

t
∈
[
0
,

t
f

]

,

O

β
p


 prioritized

O
d

, which consequently led to a higher localization error. The numerical results for this last experiment are recorded in Table 6, which shows a significantly small error from

β
N

 as compared to those from

O
d

,

O

β
p


,

E

K
f


, and

β
T

. Interestingly, although

O
d

 led to a huge localization error in this scenario, the self-adaptive filtering method introduced in Corollary 1 resulted in a further improvement for each test, as highlighted in the last column of Table 6.A summary of the average localization errors from the four experiments is presented in Table 7, along with total duration for rotational motion

Δ

t
r


 (in seconds and percentage, i.e., with respect to total execution time

t
f

). From the summarized numerical results, the performance via

O

β
c


 was consistently the highest regardless of the value of

Δ

t
r


. On the contrary, the approach via

E

K
f


 was the worst for all trajectories. This signifies that, while the extended Kalman filter usually results in a better performance particularly for sensor fusions, the error is likely to overshoot when localizing a mobile node at a certain speed range. This finding may be explained by the fact that a moving node leads to (possibly highly) nonlinear responses, as exemplified by the previous temporal analyses which could eventually make it unsuitable for localization via this approach. A closer inspection of

O
d

 and

β
N

 shows that the error via

O
d

 was lower than that via

β
N

 when

Δ

t
r


 was sufficiently small as can be observed in Trajectory 2. As

Δ

t
r


 became slightly higher,

β
N

 and

O
d

 became more competitive. Nevertheless,

β
N

 is advantageous when the mobile node is in full rotational movement, as revealed in the last experiment. From the table, it is also apparent that the proposed sensor-fusion techniques via

O

β
p


 and

O

β
c


 led to significant improvements for the first three trajectories, which involved rotational motions with durations of less than 37% of the total execution time. When the duration is sufficiently large, as typified by Trajectory 4, the performance can be further enhanced via

O

β
c


. This desirable outcome is conclusively due to the optimization of
μ
 in Corollary 1, which searches for the best error minimizer during the rotational motion. 4. Discussion and ConclusionsThis study presents a new technique to improve indoor localization of a mobile node by utilizing Zigbee-based RSSI and odometry. In this work, a nonholonomic wheeled mobile robot was designed with capabilities to estimate its own location and movement from odometry data as well as RSSI values of four anchor nodes at once. As both localization methods suffer from their own limitations, this work contributes to a new methodological framework in which coordinates of the mobile node can more accurately be predicted by improving the path-loss propagation model and optimizing the weighting parameters for each localization technique prior to fusion. Simple convex searches are also introduced to find optimal error minimizers during the robot’s translational and rotational motions. In order to validate the proposed methods, several real-time experiments consisting of four different trajectories with different numbers of straight paths and curves, were carried out. Numerical and experiment results demonstrated that when both odometry data and RSSI values are available, Proposition 1 and Corollary 1 provide significant improvements to localization performance over the existing approaches. Corollary 1 in particular emerges as the best approach as it generalizes Proposition 1 and Lemma 1 with the additional self-adaptive filtering method, which autonomously optimizes the error minimizer when the rotational velocity within a specified range is detected.While the proposed localization methods performed well in the considered scenarios, problems might arise when localizing a mobile node in buildings with multiple walls and moving objects. In this case, it is also expected that RSSI signals may be further degraded due to increased multipath effects. For future work, these conditions should be considered, and in order to alleviate effects from multipath interference, the proposed methods in the current work could be combined with other approaches, such as time of arrival (TOA), angle of arrival (AOA), as well as phase-shift measurement from anchor nodes. For localizing multiple mobile nodes, the proposed self-adaptive filtering approach could also be integrated with the compressive-sensing technique that only requires a small number of anchor nodes as demonstrated via simulations in [9]. The aforementioned methods may, however, exhibit different error patterns and behavior while the target node is moving; hence, modifications on the optimization techniques and the positions of the anchor nodes are required to maximize performance.
