<text id="autogum_interview_doc1435" title="part1_OpenSync Interview - syncing on the free desktop" shortTile="partopensync-interview" type="interview" dateCollected="2019-11-05" dateCreated="2006-05-19" dateModified="2014-01-06" sourceURL="https://en.wikinews.org/wiki/OpenSync_Interview_-_syncing_on_the_free_desktop" speakerList="none" speakerCount="0">
<p>Tobias:</p>
<p>Another point to mention is the python wrapper for opensync, so you are not bound to C or C++, but can develop plugins in a high level scripting language.</p>
<p><hi rend="bold">Why should producers of portable devices get involved with your team?</hi></p>
<p>Cornelius:</p>
<p>OpenSync will be the one common syncing solution for the free desktop. That means there is a single point of contact for device manufacturers who want to add support for their devices. That's much more feasible than addressing all the different applications and solutions we had before. With OpenSync it hopefully will become interesting for manufacturers to officially support Linux for their devices.</p>
<p><hi rend="bold">Do you also plan to support applications of OpenSync in proprietary systems like OSX and Windows?</hi></p>
<p>Cornelius:</p>
<p>OpenSync is designed to be cross-platform, so it is able to run on other systems like Windows. How well this works is always a question of people actually using and developing for this system. As far as I know there isn't a real Windows community around OpenSync yet. But the technical foundation is there, so if there is somebody interested in working on a unified syncing solution on Windows, everybody is welcome to join the project.</p>
<p><hi rend="bold">What does your synchronisation framework do for KDE and for KitchenSync in particular?</hi></p>
<p>Cornelius:</p>
<p>OpenSync replaces the KDE-specific synchronization frameworks we had before. Even in KDE we had several separate syncing implementations and with OpenSync we can get replace them with a common framework. We had a more generic syncing solution in KDE under development. This was quite similar from a design point of view to OpenSync, but it never got to the level of maturity we would have needed, because of lack of resources. As OpenSync fills this gap we are happy to be able to remove our old code and now concentrate on our core business.</p>
<head id="Who,_How_and_Why?">Who, How and Why?</head>
<p><hi rend="bold">What was your personal reason for getting involved with OpenSync?</hi></p>
<p>Cornelius:</p>
<p>I wrote a lot of synchronization code in the past, which mainly came from the time where I was maintaining KOrganizer and working on KAddressBook. But this always was driven by necessity and not passion. I wanted to have all my calendar and contact data in one place, but my main objective was to work on the applications and user interfaces handling the data and not on the underlying code synchronizing the data.</p>
<p>So when the OpenSync project was created I was very interested. At GUADEC in Stuttgart I met with Armin, the maintainer of OpenSync, and we talked about integrating OpenSync with KDE. Everything seemed to fit together quite well, so at Linuxtag the same year we had another meeting with some more KDE people. In the end we agreed to go with OpenSync and a couple of weeks later we met again in Nuernberg for three days of hacking and created the KDE frontend for OpenSync. In retrospect it was a very pleasant and straightforward process to get where we are now.</p>
</text>
