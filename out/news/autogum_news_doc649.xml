<text id="autogum_news_doc821" title="Google performs first successful collision attack on SHA-1 security algorithm" shortTile="google-performs-first" type="news" dateCollected="2019-11-05" dateCreated="2017-02-23" dateModified="2017-03-13" sourceURL="https://en.wikinews.org/wiki/Google_performs_first_successful_collision_attack_on_SHA-1_security_algorithm" speakerList="none" speakerCount="0">
<head>Google performs first successful collision attack on SHA-1 security algorithm</head><p><hi rend="bold">Saturday, February 25, 2017</hi></p>
<p>This Thursday, <ref target="https://en.wikinews.org/wiki/Google">Google</ref> announced that it had performed a successful <ref target="https://en.wikipedia.org/wiki/Cryptographic%20hash%20collision">collision attack</ref> on the popular <ref target="https://en.wikipedia.org/wiki/SHA-1">SHA-1</ref> <ref target="https://en.wikipedia.org/wiki/cryptographic%20hash%20function">cryptographic hash function</ref> for the first time â€” that they know of. The collision attack demonstrated an algorithm for making two distinct inputs map to the same hash output, putting at risk the usage of SHA-1 for verifying data integrity. Google published a blog post and made a website about the collision attack.</p>
<figure><caption>An unofficial icon for group SHA1, SHA2, SHA3 family. Image: <ref target="https://en.wikipedia.org/wiki/User:Krauss">Krauss</ref>.</caption></figure>
<p>A successful attacker would be able to add a malicious file to the system to damage a backup relying on SHA-1 for checking data integrity, deliver a malicious update to clients using SHA-1 to verify the update file, attack and decrypt an encrypted connection to a website where the user's browser is using SHA-1 to identify the connection certificate, replace a file revision history using SHA-1 to identify commits, and perform other actions that would substitute for valuable files with something seemingly identical but misleading or malicious in practice. Similar systems not using SHA-1 would not be affected.</p>
<p>To demonstrate the success of the algorithm, Google published two distinct <ref target="https://en.wikipedia.org/wiki/Portable%20Document%20Format">Portable Document Format</ref> (PDF) files with identical SHA-1 hash. Google recommended everyone who uses SHA-1 to switch to <ref target="https://en.wikipedia.org/wiki/SHA-256">SHA-256</ref> or <ref target="https://en.wikipedia.org/wiki/SHA-3">SHA-3</ref>, stronger cryptographic hash functions.</p>
<p>The group started with a paper published by Marc Stevens in 2013 in which the authors proposed a theoretical algorithm for the collision attack. They chose PDF files as the basis for their attack. They wrote a PDF file prefix on both files and PDF contents which hashed to the same SHA-1 digest. Then they used the Google computing infrastructure to perform more than nine quintillion (upwards of 9,223,372,036,854,775,808) SHA1 computations. They described this as 6,500 years of CPU time distributed in the first phase, then 110 years of <ref target="https://en.wikipedia.org/wiki/graphics%20processing%20unit">graphics processing unit</ref> (GPU) time total in the second phase of the attack to reach full collision. They said this new algorithm was 100,000 times faster than the <ref target="https://en.wikipedia.org/wiki/brute-force%20attack">brute-force attack</ref> and 50 times faster than a <ref target="https://en.wikipedia.org/wiki/collision%20attack">collision attack</ref> algorithm proposed in 2005.</p>
<p>The cryptology group at the <ref target="https://en.wikipedia.org/wiki/Centrum%20Wiskunde%20&amp;%20Informatica">Centrum Wiskunde &amp; Informatica</ref> (CWI) institute, <ref target="https://en.wikinews.org/wiki/Netherlands">Netherlands</ref>, collaborated with the Google Research Security, Privacy and Anti-abuse Group to achieve the collision. According to a press release, <ref target="https://en.wikipedia.org/wiki/Marc%20Stevens%20(cryptology)">Marc Stevens</ref> and <ref target="https://en.wikipedia.org/wiki/Elie%20Bursztein">Elie Bursztein</ref> were the initial leaders of the initiative, Ange Albertini developed the PDF attack code, Pierre Karpman developed the cryptoanalysis, Yarik Markov and Pierre Karpman developed the distributed graphical processing unit (GPU) code, and Clement Baisse checked the reliability of the programs.</p>
<p>Google also provided a collision detector online, where users can upload a PDF file to test whether it was tampered with for reaching a collision. Alex Petit Bianco developed the online file collision detector. Following its security policy, Google set a 90-day delay before the release of the source code for the attack.</p>
<p>Operating systems and software rely on SHA-1 for verifying the file integrity when distributing updates to its users and in ISO checksums. Developers use SHA-1 in their <ref target="https://en.wikipedia.org/wiki/version%20control%20system">file revision control systems</ref>, such as <ref target="https://en.wikipedia.org/wiki/git">git</ref>, to verify the files' integrity. Many people install programs that use SHA-1 for detecting duplicate files on storage media and for verifying backups' integrity. People surfing the web see SHA-1 used for verifying the integrity of <ref target="https://en.wikipedia.org/wiki/HTTPS">HTTPS</ref> certificates to verify the users' connection with the website is not subject to a <ref target="https://en.wikipedia.org/wiki/man-in-the-middle%20attack">man-in-the-middle attack</ref>. People also use SHA-1 in email <ref target="https://en.wikipedia.org/wiki/Pretty%20Good%20Privacy">PGP</ref>/<ref target="https://en.wikipedia.org/wiki/GNU%20Privacy%20Guard">GPG</ref> signatures.</p>
<p>Since January, <ref target="https://en.wikipedia.org/wiki/Google%20Chrome">Google Chrome</ref> does not trust SHA-1 certificates. <ref target="https://en.wikinews.org/wiki/Mozilla_Firefox">Mozilla Firefox</ref> stopped trusting them yesterday.</p>
<p>SHA-1 was introduced more than twenty years ago.</p>
</text>
