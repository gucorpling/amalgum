<text id="autogum_academic_doc318" title="SmartX Box: Virtualized Hyper-Converged Resources for Building an Affordable Playground" shortTile="smartx-box-virtualized" author="Aris  Cahyadi Risdianto, Muhammad Usman, JongWon Kim" type="academic" dateCollected="2019-11-03" sourceURL="https://www.mdpi.com/2079-9292/8/11/1242/htm" speakerList="none" speakerCount="0">
<head> 2. An Affordable Playground</head><head> 2.1. An SDN-Enabled Multi-Site Clouds Playground</head>
<p>
A <hi rend="italic">Playground</hi> is defined as a miniaturized and customizable testbed that is easy to build and operate for various research experiments by a tiny-size DevOps-style team of developers and operators. Mainly, we focus on establishing a multi-site playground infrastructure where playground resources are physically distributed across multiple geographical sites but logically inter-connected with each other to offer a unified shared pool of resources. A tiny-size team of people (i.e., operators) should provision and control the multi-site isolated resources, which is openly accessible by a group of people (i.e., developers) from all involved sites. As depicted in <figure>Figure 3</figure>, the proposed multi-site playground has several vital entities, which are discussed below:<list>
<item><b>Playground Sites with Hyper-converged Boxes</b>. When playground developers want to perform their experiments, they can dynamically acquire dedicated resources from the pool of multi-site resources. For the customizable (i.e., software-defined) playground, the resource infrastructure of the multi-site playground should be composable (e.g., programmable) in terms of computing, storage, and networking types of resources. By leveraging the growing popularity toward hyper-converged appliances that integrate computing, storage, and networking resources into a single box-style entity, we can enable the multi-site resource pool that ready to be customized and scaled-out without the manual intervention of playground operators. Thus, in our approach, each playground site is equipped with a box-style of hyper-converged resources, denoted as <hi rend="italic">SmartX Box</hi>, the hyper-converged box-style resource that should be useful in supporting the required composability by comfortably accommodating virtualized and programmable resources. Multiple types of SmartX Box should be designed and deployed for different purposes, such as SD-WAN, SDN-enabled clouds, and access extension support. However, the critical aspects of those boxes design are similar: <hi rend="italic">open, agile</hi>, and <hi rend="italic">economic</hi> resources. </p>

<p>Furthermore, the SmartX Box can be divided into three main abstractions, which are <hi rend="italic">box, function,</hi> and <hi rend="italic">inter-connect</hi>. The <hi rend="italic">box</hi> represents all the server-based hardware that runs Linux as a baseline open-source operating system for other software-based functions. The <hi rend="italic">function</hi> represents virtual functions (e.g., virtual machine, virtual switch, or virtual router), which are implemented by using a set of open-source software. Finally, the <hi rend="italic">inter-connect</hi> is representing the path/link between functions or boxes which include the tunnel-based overlay networking because playground sites are spread over the heterogeneous underlay network infrastructure.</item>
<item><b>Playground Tower with Centers</b>. To satisfy the dynamic requirements of playground developers on diversified functionalities over distributed but miniaturized resource pools, the proposed playground should integrate the emerging technology paradigms such as the SDN, cloud computing, and Internet of Things (IoT). However, the SDN-enabled multi-site clouds combination brings new complexities for the playground operators, since multi-site clouds resources, connected via SDN-based networks, demand various software-based DevOps- automation tools to build, operate, and use automatically. Thus, we propose the concept of <hi rend="italic">Playground Tower</hi>, which provides a logical space-like abstraction in a centralized location, which leads the operation of the multi-site playground by following the concept of “monitor and control” tower. From the tower, the DevOps team can enjoy a panoramic view of playground resources that are distributed over underlay networks, and quickly manage and use those resources for their experiments. </p>

<p>The playground tower systematically covers various functional requirements of operating a multi-site playground by employing several centers, also depicted in <figure>Figure 3</figure>. First, Provisioning Center (P-center) is responsible for remote installation and configuration of multi-site playground resources. Visibility Center (V-center) covers playground visibility and provides panoramic visualization support. Orchestration Center (O-center) handles the management level issues with the assistance of controllers (e.g., SDN/cloud controllers). Thus, several software-based tools are used and developed by leveraging open-source software. For example, to provision SmartX Box, P-Center provides an automation framework such as Chef and MaaS. To continuously operate by re-configuring the playground resources, O-Center provides a set of interfaces (e.g., CLI, API, Web UI) to meet the varying requirements of playground developers. Finally, to monitor the playground resources and traffic flows, V-Center provides playground visibility data in an accessible format for visualization and analysis.</item>
</list>
<head> 2.2. Affordable Playground with SmartX Box</head>
<p>
As mentioned earlier, to specifically address the affordability of multi-site playground, the resources should be open without any configuration/monitoring limitations, agile to adopt new technologies or match experiment requirements, and economics by the deployment of low-cost commodity hardware. Open-source software in converged SDI with SDN, cloud, and Network Function Virtualization (NFV) integration, and the support of open-source hardware are the main drivers of the development of hyper-converged box-style resources. </p>
</text>
