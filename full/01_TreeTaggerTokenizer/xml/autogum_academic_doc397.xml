<?xml version="1.0" ?><text author="MinJun Kim, JuneSeok Hong, Wooju Kim" dateCollected="2019-11-03" id="autogum_academic_doc397" shortTile="efficient-representation" sourceURL="https://www.mdpi.com/2071-1050/11/21/6030/htm" speakerCount="0" speakerList="none" title="An Efficient Representation Using Harmony Search for Solving the Virtual Machine Consolidation" type="academic">
<head>
4
.
Proposed
Grouping
Harmony
Search
for
Virtual
Machine
Consolidation
</head>
<p>
This
section
described
the
detailed
procedures
of
harmony
search
(
HS
)
and
grouping
harmony
search
(
GHS
)
,
one
of
the
metaheuristic
techniques
used
to
solve
VMC
,
and
the
contents
of
the
operators
designed
to
efficiently
solve
VMC
problems
.
</p>
<head>
4.1
.
Overview
of
Harmony
Search
</head>
<p>
HS
is
an
optimization
algorithm
that
was
created
based
on
the
observation
that
better
chords
are
produced
by
repeated
practice
in
improvisation
of
jazz
.
This
refers
to
a
series
of
processes
that
the
most
beautiful
chords
(
global
optimum
)
can
be
made
through
repetitive
practice
(
iteration
)
when
played
by
a
variety
of
instruments
.
</p>
<p>
In
the
case
of
GA
,
inspired
by
population
genetics
inspired
by
population
genetics
,
generates
new
genes
from
two
genes
,
but
HS
generates
new
solution
from
multiple
solution
,
which
has
a
high
probability
of
searching
for
global
optimal
.
Compared
to
SA
and
TS
,
which
are
typical
single
solution
based
metaheuristics
,
population
based
HS
has
a
high
global
search
capability
.
In
the
case
of
SA
and
TS
,
it
is
possible
to
drive
a
good
quality
through
a
mechanism
that
probabilistically
adopts
a
bad
solution
.
When
HS
generates
a
new
solution
,
it
adopts
a
quality
solution
within
the
population
and
searches
for
an
optimal
solution
.
</p>
<p>
HS
consists
of
three
operators
in
total
:
memory
considering
,
pitch
adjusting
,
and
random
playing
.
Each
operator
determines
the
frequency
of
operation
based
on
predefined
parameter
values
.
The
pseudo
code
of
HS
is
shown
in
Table
1
.
</p>
<p>
HS
generates
one
solution
(
HM
,
harmony
memory
)
per
iteration
(
line
5
–
17
)
.
New
Harmony
x
’
is
generated
through
memory
considering
,
pitch
adjusting
,
and
random
playing
operators
by
increasing
the
index
(
line
6
)
.
The
operator
of
HS
generates
the
first
random
number
(
line
7
)
to
determine
whether
to
calculate
the
memory
considering
(
line
8
)
.
If
the
first
random
number
is
smaller
than
the
predefined
harmony
memory
considering
rate
(
HMCR
)
,
memory
considering
is
executed
.
If
the
first
random
number
is
larger
than
HMCR
,
random
playing
is
executed
(
line
13
)
.
Random
playing
is
a
method
of
adopting
the
value
of
one
of
the
feasible
solution
groups
.
Memory
considering
adopts
the
value
of
one
of
several
solutions
of
harmony
memory
size
(
HMS
)
.
When
the
solution
is
generated
through
memory
considering
,
the
operation
for
pitch
adjusting
is
determined
by
generating
a
second
random
number
.
If
the
second
random
number
is
smaller
than
the
predefined
pitch
adjusting
rate
(
PAR
)
,
pitch
adjusting
is
executed
(
line
10
)
.
Pitch
adjusting
means
the
neighboring
value
of
the
solution
generated
by
memory
considering
.
The
target
value
is
calculated
once
x
’
is
generated
,
and
if
it
has
a
better
value
than
the
target
value
of
the
worst
HM
in
the
HMS
,
the
solution
is
replaced
with
new
harmony
(
line
16
–
17
)
.
HS
repeats
the
above
process
until
the
end
condition
is
met
.
</p>
<head>
4.2
.
Grouping
Representation
for
Virtual
Machine
Consolidation
</head>
<p>
Harmony
search
is
population-based
metaheuristics
that
generate
new
HMs
by
combining
multiple
HMs
and
has
the
advantage
of
having
a
high
degree
of
diversification
;
however
,
as
a
result
of
controlling
a
large
number
of
HMs
,
there
is
a
disadvantage
that
computation
times
increase
compared
to
single
solution
metaheuristics
.
As
the
size
of
the
node
grows
,
the
HMS
also
needs
to
grow
to
increase
the
efficiency
of
searching
for
a
solution
,
so
the
problem
occurs
when
handling
a
large-scale
problem
.
To
solve
this
problem
,
we
adopted
grouping
representation
in
this
study
for
the
efficient
design
of
algorithms
.
</p>
<p>
VMC
belongs
to
grouping
problems
,
and
the
ordering
of
objects
within
a
group
is
meaningless
.
In
other
words
,
the
combination
of
VMs
located
in
the
PM
is
important
,
not
the
order
in
the
group
.
Since
it
also
deals
with
virtualization
environments
,
the
number
of
PMs
is
basically
smaller
than
the
number
of
VMs
.
Since
there
are
multiple
VMs
in
one
PM
,
if
the
problem
size
is
adjusted
,
the
increase
in
VM
is
higher
than
the
increase
in
PM
.
If
the
solution
is
encoded
in
the
permutation
form
of
the
VM
,
the
length
of
the
solution
also
increases
as
the
number
of
VMs
increases
.
This
method
is
inefficient
when
searching
for
a
solution
as
the
solution
space
is
increased
with
many
duplicate
solution
representations
.
Therefore
,
PM-oriented
representation
is
more
efficient
than
VM-oriented
solution
representation
.
Falkenauer
proposed
a
one-gene-for-one-group
method
for
one
solution
grouping
problem
.
With
this
in
mind
,
this
study
represented
PM
and
VM
information
based
on
groups
as
shown
in
<figure>
Figure
3
</figure>
.
The
index
of
each
array
indicates
the
index
of
PM
,
and
the
value
of
each
array
indicates
the
index
of
VM
located
in
the
corresponding
PM
,
which
is
controlled
in
the
form
of
a
list
.
</p>
<head>
4.3
.
Pitch
Adjustments
for
Virtual
Machine
Consolidation
</head>
<p>
HS
consists
of
three
operators
—
memory
considering
,
pitch
adjustment
,
and
randomization
.
Among
them
,
the
operator
that
directly
changes
the
new
HM
is
pitch
adjustment
.
VMC
has
to
decide
the
source
PM
selection
,
VM
selection
,
and
destination
PM
selection
as
a
problem
of
migrating
VM
located
in
one
PM
to
another
PM
.
The
pitch
adjustment
operator
changes
the
solution
by
determining
the
above
three
factors
.
The
criteria
for
determining
each
problem
are
as
follows
.
</p>
</text>