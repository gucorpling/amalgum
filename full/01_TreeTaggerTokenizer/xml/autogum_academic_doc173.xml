<?xml version="1.0" ?><text author="Hazizah Mohd Ijam, Zarina  Bibi Ibrahim" dateCollected="2019-11-03" id="autogum_academic_doc173" shortTile="diagonally-implicit" sourceURL="https://www.mdpi.com/2073-8994/11/11/1342/htm" speakerCount="0" speakerList="none" title="Diagonally Implicit Block Backward Differentiation Formula with Optimal Stability Properties for Stiff Ordinary Differential Equations" type="academic">
<head>
5
.
Numerical
Results
</head>
<p>
In
the
interest
of
validating
the
numerical
results
of
our
method
,
the
-DIBBDF
algorithm
was
written
in
C
programming
language
on
the
Microsoft
Visual
C++
platform
to
obtain
the
approximate
values
.
BBDF
in
and
DI2BBDF
in
are
chosen
as
the
methods
of
comparison
because
they
are
of
the
same
order
as
our
derived
method
.
For
our
method
,
we
choose
to
compare
with
.
Due
to
space
limitation
,
only
some
values
will
be
examined
.
A
detailed
description
of
the
selection
of
,
was
discussed
in
.
For
the
four
selected
test
problems
,
the
numerical
results
of
the
maximum
error
and
execution
time
are
given
in
Table
3
,
Table
4
,
Table
5
and
Table
6
,
with
where
<hi rend="italic">
T
</hi>
is
the
total
number
of
steps
,
<hi rend="italic">
N
</hi>
is
the
number
of
equations
,
and
are
the
approximated
and
exact
solutions
,
respectively
.
</p>
<p>
<b>
Test
Problem
1
:
</b>
</p>
<p>
Exact
solution
:
</p>
<p>
Source
:
</p>
<p>
<b>
Test
Problem
2
:
</b>
</p>
<p>
Exact
solution
:
</p>
<p>
Source
:
</p>
<p>
<b>
Test
Problem
3
:
</b>
</p>
<p>
Exact
solution
:
</p>
<p>
Source
:
</p>
<p>
<b>
Test
Problem
4
:
</b>
</p>
<p>
Exact
solution
:
</p>
<p>
Source
:
</p>
<p>
The
notations
used
in
Table
3
,
Table
4
,
Table
5
and
Table
6
are
described
as
follows
:
<table class="html-array_table">
<tbody>
<tr>
<td align="right" class="html-align-right" valign="middle">
H
:
</td>
<td align="left" class="html-align-left" valign="middle">
Step
size
</td>
</tr>
<tr>
<td align="right" class="html-align-right" valign="middle">
MAXE
:
</td>
<td align="left" class="html-align-left" valign="middle">
Maximum
error
</td>
</tr>
<tr>
<td align="right" class="html-align-right" valign="middle">
TIME
:
</td>
<td align="left" class="html-align-left" valign="middle">
Execution
time
(
seconds
)
</td>
</tr>
<tr>
<td align="right" class="html-align-right" valign="middle">
<hi rend="italic">
ρ
</hi>
-DIBBDF(
<hi rend="italic">
ρi
</hi>
)
:
</td>
<td align="left" class="html-align-left" valign="middle">
<hi rend="italic">
ρ
</hi>
-Diagonally
Implicit
Block
Backward
Differentiation
Formula
(
<hi rend="italic">
ρ
</hi>
value
)
</td>
</tr>
<tr>
<td align="right" class="html-align-right" valign="middle">
BBDF
:
</td>
<td align="left" class="html-align-left" valign="middle">
Block
Backward
Differentiation
Formula
of
order
3
in
</td>
</tr>
<tr>
<td align="right" class="html-align-right" valign="middle">
DI2BBDF
:
</td>
<td align="left" class="html-align-left" valign="middle">
Diagonally
Implicit
2-point
BBDF
of
order
3
in
</td>
</tr>
</tbody>
</table>
</p>
<p>
Table
3
,
Table
4
,
Table
5
and
Table
6
display
the
numerical
results
of
-DIBBDF
,
BBDF
and
DI2BBDF
using
different
step
sizes
of
and
.
Based
on
the
results
,
we
observe
that
our
method
with
obtains
a
smaller
MAXE
than
for
all
the
test
problems
.
This
is
due
to
the
stability
properties
discussed
in
Section
3
,
whereby
a
good
choice
of
the
parameter
,
we
can
produce
a
method
that
has
better
accuracy
.
For
MAXE
,
we
observe
that
for
all
the
values
,
the
-DIBBDF
outperforms
the
BBDF
method
.
This
is
due
to
the
nature
of
the
BBDF
method
,
which
has
more
interpolating
points
in
the
fully
implicit
form
,
thus
increasing
the
cumulative
errors
during
the
computation
process
(
refer
to
)
.
Compared
to
DI2BBDF
,
our
method
obtains
comparable
accuracy
for
all
the
tested
problems
.
For
TIME
,
our
method
with
manages
to
solve
the
test
problems
in
less
execution
time
compared
to
BBDF
and
DI2BBDF
.
</p>
<p>
To
illustrate
the
performances
of
the
suggested
method
and
other
compared
methods
,
graphical
presentations
of
the
numerical
results
are
shown
in
<figure>
Figure
4
</figure>
,
<figure>
Figure
5
</figure>
,
<figure>
Figure
6
</figure>
and
<figure>
Figure
7
</figure>
.
For
a
particular
abscissa
,
the
lowest
value
of
the
coordinate
is
considered
to
be
more
efficient
at
the
abscissa
considered
.
It
follows
that
the
graphs
of
against
demonstrate
the
advantage
of
the
-DIBBDF(−0.75
)
method
over
the
other
,
BBDF
and
DI2BBDF
methods
in
terms
of
efficiency
.
Overall
,
we
observe
that
the
-DIBBDF(−0.75
)
method
performs
better
than
the
other
,
BBDF
and
DI2BBDF
methods
.
</p>
</text>