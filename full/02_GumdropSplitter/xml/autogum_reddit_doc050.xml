<?xml version="1.0" ?><text author="Reddit community (see URL)" dateCollected="2019-11-02" dateCreated="2018-05-31" dateModified="2018-05-31" id="autogum_reddit_doc050" shortTile="q-c-support-persistent" sourceURL="http://redd.it/8ni6p4" speakerCount="2" speakerList="#14ned, #OldWolf2" title="Q: How should C++ support persistent memory?" type="reddit">
<head>
<s>
Q
:
How
should
C++
support
persistent
memory
?
</s>
</head>
<sp who="#14ned">
<p>
<s>
Optane
DDR4
</s>
<s>
DIMMs
have
been
announced
(
https://www.anandtech.com/show/12828/intel-launches-optane-dimms-up-to-512gb-apache-pass-is-here
)
.
</s>
<s>
These
fit
into
your
RAM
slots
,
and
on
supporting
motherboards
(
i.
e.
none
of
the
current
ones
)
,
they
can
be
configured
in
the
BIOS
to
appear
either
as
a
hard
drive
,
or
as
RAM
,
to
your
system
.
</s>
<s>
Next
year
's
motherboards
which
support
PRAM
DIMMs
should
have
sufficient
slots
for
fitting
up
to
64Tb
(
yes
,
terabytes
)
of
DIMMs
,
though
these
will
probably
be
server
motherboards
.
</s>
<s>
Despite
some
of
the
misinformation
currently
going
around
,
Optane
DIMMs
have
a
similar
read
latency
to
normal
DDR4
RAM
,
but
about
double
the
write
latency
.
</s>
<s>
Bandwidth
is
similar
to
DDR4
RAM
i.e.
lots
.
</s>
<s>
Unlike
DRAM
,
PRAM
does
not
require
constant
DRAM
refreshes
,
and
thus
is
especially
attractive
to
power
conserving
devices
such
as
laptops
and
mobile
phones
.
</s>
<s>
The
dollars
per
Gb
ratio
is
dropping
faster
than
any
other
type
of
storage
currently
,
as
if
trends
continue
,
they
will
match
the
capacity
per
dollar
of
flash
storage
around
this
time
next
year
(
see
Figure
1
in
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf
)
.
</s>
<s>
Persisting
data
to
these
DIMMs
is
as
straightforward
as
telling
your
CPU
to
flush
modified
cache
lines
to
main
memory
.
</s>
<s>
On
current
Intel
CPUs
,
this
is
inefficient
as
one
must
also
evict
those
lines
from
the
cache
,
but
on
all
recent
ARM
CPUs
and
on
Ice
Lake
Intel
CPUs
onwards
,
one
can
flush
modified
cache
lines
without
eviction
.
</s>
<s>
So
,
given
that
we
're
about
a
year
out
from
these
things
appearing
in
commodity
(
if
likely
premium
)
hardware
,
how
would
/r/cpp
like
to
see
C++
support
persistent
memory
?
</s>
<s>
Some
options
:
1
.
</s>
<s>
Do
nothing
,
see
how
things
are
in
a
few
years
from
now
.
</s>
<s>
2
.
</s>
<s>
Intel
's
persistent
memory
library
(
http://pmem.io/pmdk/
)
will
be
sufficient
.
3
.
</s>
<s>
Intel
's
persistent
memory
library
is
too
alien
,
we
need
something
more
STLish
.
4
.
</s>
<s>
We
need
this
support
immediately
!
</s>
<s>
Refactor
the
C++
23
standard
to
directly
support
persistent
memory
(
understanding
that
this
will
slip
the
release
date
considerably
later
than
2023
)
Disclaimer
:
I
'm
the
guy
presenting
P1026
<hi rend="bold">
A
call
for
a
Data
Persistence
(
iostream
v2
)
study
group
</hi>
to
WG21
LEWG
this
Wednesday
morning
coming
,
and
I
am
absolutely
canvassing
for
what
kind
of
feelings
the
C++
userbase
have
regarding
support
for
persistent
memory
.
</s>
<s>
WG21
will
likely
prefer
option
1
above
,
but
if
the
C++
community
were
feeling
very
strongly
about
option
4
...
:
)
Anyway
,
this
is
your
chance
to
get
feedback
to
the
C++
standards
committee
,
and
maybe
help
guide
a
decision
.
</s>
<s>
Many
thanks
in
advance
for
your
time
and
feedback
.
</s>
<s>
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf
</s>
</p>
</sp>
<sp who="#OldWolf2">
<p>
<s>
Non-volatile
RAM
is
nothing
new
,
one
of
the
first
C
embedded
systems
I
worked
on
had
only
NVRAM
,
which
was
used
for
working
memory
as
well
as
storage
.
</s>
<s>
Incidentally
the
manufacturer
collapsed
because
they
could
n't
compete
on
price
with
other
devices
that
used
a
mix
of
cheap
RAM
and
Flash
.
</s>
</p>
<p>
<s>
I
do
n't
recall
the
exact
details
now
,
but
I
think
the
way
the
OS
set
up
was
that
certain
address
ranges
would
be
marked
as
do
n't
reset
on
startup
,
and
we
could
assign
variables
to
that
address
range
via
a
source
code
extension
.
</s>
<s>
Then
we
could
either
just
work
directly
in
those
variables
,
or
(
to
support
adding
struct
members
in
future
)
.
memcpy
in
and
out
of
it
with
some
primitive
serialization
.
</s>
</p>
<p>
<s>
I
'm
sure
people
can
come
up
with
much
better
idioms
nowdays
though
:
)
</s>
</p>
</sp>
</text>