Refactor the C++ 23 standard to directly support persistent memory ( understanding that this will slip the release date considerably later than 2023 ) Disclaimer : I 'm the guy presenting P1026 A call for a Data Persistence ( iostream v2 ) study group to WG21 LEWG this Wednesday morning coming , and I am absolutely canvassing for what kind of feelings the C++ userbase have regarding support for persistent memory .
1,2 person
2,6 abstract|9,11 abstract|14,15 abstract|17,20 time|23,24 time|27,28 person|29,31 person|33,39 abstract|33,45 abstract|40,45 abstract|46,48 organization|48,51 time|49,51 time|54,55 person|59,63 abstract|63,66 person|68,72 abstract|70,72 abstract

I do n't recall the exact details now , but I think the way the OS set up was that certain address ranges would be marked as do n't reset on startup , and we could assign variables to that address range via a source code extension .
1,2 person
1,2 person|11,12 person|15,17 object|21,24 abstract|35,36 person|38,43 abstract|44,47 object|44,48 abstract|44,48 object

WG21 will likely prefer option 1 above , but if the C++ community were feeling very strongly about option 4 ... : ) Anyway , this is your chance to get feedback to the C++ standards committee , and maybe help guide a decision .
1,2 person
1,2 organization|5,7 abstract|11,14 organization|19,21 abstract|26,27 abstract|26,27 event|28,29 person|28,30 event|32,33 abstract|34,38 organization|43,45 abstract|43,45 event

The dollars per Gb ratio is dropping faster than any other type of storage currently , as if trends continue , they will match the capacity per dollar of flash storage around this time next year ( see Figure 1 in http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf ) .
1,2 person
1,6 abstract|1,6 quantity|10,15 object|22,23 object|25,32 quantity|30,32 object|33,35 time|33,37 time|35,37 time|39,41 object|42,43 place

These fit into your RAM slots , and on supporting motherboards ( i. e. none of the current ones ) , they can be configured in the BIOS to appear either as a hard drive , or as RAM , to your system .
1,2 person
1,2 object|4,5 person|4,7 object|10,12 object|15,20 object|22,23 object|27,29 object|33,36 object|39,40 object|42,43 person|42,44 abstract

On current Intel CPUs , this is inefficient as one must also evict those lines from the cache , but on all recent ARM CPUs and on Ice Lake Intel CPUs onwards , one can flush modified cache lines without eviction .
1,2 person
2,5 abstract|6,7 abstract|10,11 person|14,16 object|17,19 object|22,26 abstract|22,26 object|24,26 object|28,32 object|34,35 person|37,40 object

So , given that we 're about a year out from these things appearing in commodity ( if likely premium ) hardware , how would /r/cpp like to see C++ support persistent memory ?
1,2 person
5,6 person|12,14 object|30,31 abstract|32,34 abstract

Next year 's motherboards which support PRAM DIMMs should have sufficient slots for fitting up to 64Tb ( yes , terabytes ) of DIMMs , though these will probably be server motherboards .
1,2 person
7,9 abstract|7,9 object|27,28 object|31,33 object

Then we could either just work directly in those variables , or ( to support adding struct members in future ) . memcpy in and out of it with some primitive serialization .
1,2 person
2,3 person|9,11 abstract|17,19 abstract|23,24 object|28,29 object|30,33 abstract

Non-volatile RAM is nothing new , one of the first C embedded systems I worked on had only NVRAM , which was used for working memory as well as storage .
1,2 person
1,3 abstract|7,14 object|14,15 person|19,20 object|25,27 abstract|25,31 abstract|30,31 abstract

Despite some of the misinformation currently going around , Optane DIMMs have a similar read latency to normal DDR4 RAM , but about double the write latency .
1,2 person
10,12 object|13,17 abstract|18,21 object|19,21 object|25,28 abstract

Unlike DRAM , PRAM does not require constant DRAM refreshes , and thus is especially attractive to power conserving devices such as laptops and mobile phones .
1,2 person
4,5 object|8,11 event|18,21 object|18,24 object|18,27 object|25,27 object

Incidentally the manufacturer collapsed because they could n't compete on price with other devices that used a mix of cheap RAM and Flash .
1,2 person
2,4 organization|6,7 organization|13,15 object|20,24 abstract

Persisting data to these DIMMs is as straightforward as telling your CPU to flush modified cache lines to main memory .
1,2 person
1,3 abstract|1,6 abstract|4,6 object|11,12 person|11,13 object|15,18 object|19,21 place

Intel 's persistent memory library is too alien , we need something more STLish . 4 .
1,2 person
1,3 organization|1,6 abstract|10,11 person|12,17 abstract

I 'm sure people can come up with much better idioms nowdays though : )
1,2 person
1,2 person|4,5 person|9,12 abstract

Intel 's persistent memory library ( http://pmem.io/pmdk/ ) will be sufficient . 3 .
1,2 person
1,5 abstract|1,6 object

Do nothing , see how things are in a few years from now .
1,2 person
9,14 time|13,14 time

Many thanks in advance for your time and feedback .
1,2 person
1,3 abstract|6,7 person|6,10 abstract

Bandwidth is similar to DDR4 RAM i.e. lots .
1,2 person
1,2 object|5,7 object|8,9 object

Q : How should C++ support persistent memory ?
1,2 person
1,2 abstract|5,6 abstract|7,9 abstract

DIMMs have been announced ( https://www.anandtech.com/show/12828/intel-launches-optane-dimms-up-to-512gb-apache-pass-is-here ) .
1,2 person
6,7 place

We need this support immediately !
1,2 person
1,2 person|3,5 abstract

Some options : 1 .
1,2 person
1,3 abstract

Optane DDR4
1,2 person


2 .
1,2 person


http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf
1,2 person
1,2 place
