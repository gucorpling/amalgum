#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=3 .
1-1	0-1	3	quantity	new	_	_
1-2	2-3	.	_	_	_	_

#Text=Accurate and Approximate Adders
2-1	4-12	Accurate	_	_	_	_
2-2	13-16	and	_	_	_	_
2-3	17-28	Approximate	abstract[2]	new[2]	coref	3-14[7_2]
2-4	29-35	Adders	abstract[2]	new[2]	_	_

#Text=The architecture of an N-bit accurate adder and the generic architectures of N-bit approximate adders are shown in
3-1	36-39	The	abstract[3]	new[3]	_	_
3-2	40-52	architecture	abstract[3]	new[3]	_	_
3-3	53-55	of	abstract[3]	new[3]	_	_
3-4	56-58	an	abstract[3]|abstract[4]	new[3]|new[4]	coref	7-6[0_4]
3-5	59-64	N-bit	abstract[3]|abstract[4]	new[3]|new[4]	_	_
3-6	65-73	accurate	abstract[3]|abstract[4]	new[3]|new[4]	_	_
3-7	74-79	adder	abstract[3]|abstract[4]	new[3]|new[4]	_	_
3-8	80-83	and	abstract[3]	new[3]	_	_
3-9	84-87	the	abstract[3]|abstract[5]	new[3]|new[5]	_	_
3-10	88-95	generic	abstract[3]|abstract[5]	new[3]|new[5]	_	_
3-11	96-109	architectures	abstract[3]|abstract[5]	new[3]|new[5]	_	_
3-12	110-112	of	abstract[3]|abstract[5]	new[3]|new[5]	_	_
3-13	113-118	N-bit	abstract[3]|abstract[5]|object	new[3]|new[5]|new	_	_
3-14	119-130	approximate	abstract[3]|abstract[5]|abstract[7]	new[3]|new[5]|giv[7]	coref	6-2[9_7]
3-15	131-137	adders	abstract[3]|abstract[5]|abstract[7]	new[3]|new[5]|giv[7]	_	_
3-16	138-141	are	_	_	_	_
3-17	142-147	shown	_	_	_	_
3-18	148-150	in	_	_	_	_

#Text=Figure 1
4-1	151-157	Figure	object[8]	new[8]	coref	8-1[19_8]
4-2	158-159	1	object[8]	new[8]	_	_

#Text=.
5-1	160-161	.	_	_	_	_

#Text=For the approximate adders , we define the size of the least significant inaccurate sub-adder to be K-bits , and hence the size of the more significant accurate sub-adder will be ( N – K)-bits .
6-1	162-165	For	_	_	_	_
6-2	166-169	the	abstract[9]	giv[9]	coref	11-31[42_9]
6-3	170-181	approximate	abstract[9]	giv[9]	_	_
6-4	182-188	adders	abstract[9]	giv[9]	_	_
6-5	189-190	,	_	_	_	_
6-6	191-193	we	person	acc	ana	12-1
6-7	194-200	define	_	_	_	_
6-8	201-204	the	quantity[11]	new[11]	_	_
6-9	205-209	size	quantity[11]	new[11]	_	_
6-10	210-212	of	quantity[11]	new[11]	_	_
6-11	213-216	the	quantity[11]|abstract[12]	new[11]|new[12]	coref	11-21[39_12]
6-12	217-222	least	quantity[11]|abstract[12]	new[11]|new[12]	_	_
6-13	223-234	significant	quantity[11]|abstract[12]	new[11]|new[12]	_	_
6-14	235-245	inaccurate	quantity[11]|abstract[12]	new[11]|new[12]	_	_
6-15	246-255	sub-adder	quantity[11]|abstract[12]	new[11]|new[12]	_	_
6-16	256-258	to	_	_	_	_
6-17	259-261	be	_	_	_	_
6-18	262-268	K-bits	quantity	new	_	_
6-19	269-270	,	_	_	_	_
6-20	271-274	and	_	_	_	_
6-21	275-280	hence	quantity[14]	new[14]	_	_
6-22	281-284	the	quantity[14]	new[14]	_	_
6-23	285-289	size	quantity[14]	new[14]	_	_
6-24	290-292	of	quantity[14]	new[14]	_	_
6-25	293-296	the	quantity[14]|object[15]	new[14]|new[15]	coref	11-10[35_15]
6-26	297-301	more	quantity[14]|object[15]	new[14]|new[15]	_	_
6-27	302-313	significant	quantity[14]|object[15]	new[14]|new[15]	_	_
6-28	314-322	accurate	quantity[14]|object[15]	new[14]|new[15]	_	_
6-29	323-332	sub-adder	quantity[14]|object[15]	new[14]|new[15]	_	_
6-30	333-337	will	_	_	_	_
6-31	338-340	be	_	_	_	_
6-32	341-342	(	_	_	_	_
6-33	343-344	N	_	_	_	_
6-34	345-346	–	_	_	_	_
6-35	347-354	K)-bits	_	_	_	_
6-36	355-356	.	_	_	_	_

#Text=A and B represent the adder inputs in
7-1	357-358	A	_	_	_	_
7-2	359-362	and	_	_	_	_
7-3	363-364	B	place	new	_	_
7-4	365-374	represent	_	_	_	_
7-5	375-378	the	abstract[18]	new[18]	coref	10-5[28_18]
7-6	379-384	adder	abstract|abstract[18]	giv|new[18]	coref	10-6
7-7	385-391	inputs	abstract[18]	new[18]	_	_
7-8	392-394	in	_	_	_	_

#Text=Figure 1
8-1	395-401	Figure	object[19]	giv[19]	coref	14-1[57_19]
8-2	402-403	1	object[19]	giv[19]	_	_

#Text=, while SUM denotes the sum output , which includes a carry overflow bit .
9-1	404-405	,	_	_	_	_
9-2	406-411	while	_	_	_	_
9-3	412-415	SUM	quantity	new	coref	26-23
9-4	416-423	denotes	_	_	_	_
9-5	424-427	the	abstract[22]	new[22]	_	_
9-6	428-431	sum	quantity|abstract[22]	new|new[22]	coref	11-18
9-7	432-438	output	abstract[22]	new[22]	_	_
9-8	439-440	,	_	_	_	_
9-9	441-446	which	_	_	_	_
9-10	447-455	includes	_	_	_	_
9-11	456-457	a	abstract[25]	new[25]	coref	10-13[0_25]
9-12	458-463	carry	abstract|abstract[25]	new|new[25]	coref	11-37
9-13	464-472	overflow	event|abstract[25]	new|new[25]	coref	11-36[44_0]
9-14	473-476	bit	abstract[25]	new[25]	_	_
9-15	477-478	.	_	_	_	_

#Text=The subscripts associated with the adder inputs and outputs denote the corresponding bit positions .
10-1	479-482	The	abstract[26]	new[26]	_	_
10-2	483-493	subscripts	abstract[26]	new[26]	_	_
10-3	494-504	associated	_	_	_	_
10-4	505-509	with	_	_	_	_
10-5	510-513	the	abstract[28]	giv[28]	_	_
10-6	514-519	adder	abstract|abstract[28]	giv|giv[28]	coref	13-1[56_0]
10-7	520-526	inputs	abstract[28]	giv[28]	_	_
10-8	527-530	and	abstract[28]	giv[28]	_	_
10-9	531-538	outputs	abstract[28]|abstract	giv[28]|new	_	_
10-10	539-545	denote	_	_	_	_
10-11	546-549	the	abstract[31]	new[31]	_	_
10-12	550-563	corresponding	abstract[31]	new[31]	_	_
10-13	564-567	bit	abstract|abstract[31]	giv|new[31]	coref	26-33
10-14	568-577	positions	abstract[31]	new[31]	_	_
10-15	578-579	.	_	_	_	_

#Text=The ( N – K ) sum bits of the accurate sub-adder are combined with the K sum bits of the inaccurate sub-adder to produce the N sum bits of approximate adders , which includes the carry overflow .
11-1	580-583	The	quantity[32]	new[32]	_	_
11-2	584-585	(	quantity[32]	new[32]	_	_
11-3	586-587	N	quantity[32]	new[32]	_	_
11-4	588-589	–	quantity[32]	new[32]	_	_
11-5	590-591	K	quantity[32]|person	new[32]|new	coref	11-17
11-6	592-593	)	quantity[32]	new[32]	_	_
11-7	594-597	sum	_	_	_	_
11-8	598-602	bits	object[34]	new[34]	_	_
11-9	603-605	of	object[34]	new[34]	_	_
11-10	606-609	the	object[34]|object[35]	new[34]|giv[35]	coref	18-27[82_35]
11-11	610-618	accurate	object[34]|object[35]	new[34]|giv[35]	_	_
11-12	619-628	sub-adder	object[34]|object[35]	new[34]|giv[35]	_	_
11-13	629-632	are	_	_	_	_
11-14	633-641	combined	_	_	_	_
11-15	642-646	with	_	_	_	_
11-16	647-650	the	object[38]	new[38]	_	_
11-17	651-652	K	person|object[38]	giv|new[38]	coref	17-7
11-18	653-656	sum	quantity|object[38]	giv|new[38]	coref	11-28
11-19	657-661	bits	object[38]	new[38]	_	_
11-20	662-664	of	object[38]	new[38]	_	_
11-21	665-668	the	object[38]|abstract[39]	new[38]|giv[39]	coref	17-11[69_39]
11-22	669-679	inaccurate	object[38]|abstract[39]	new[38]|giv[39]	_	_
11-23	680-689	sub-adder	object[38]|abstract[39]	new[38]|giv[39]	_	_
11-24	690-692	to	_	_	_	_
11-25	693-700	produce	_	_	_	_
11-26	701-704	the	object[41]	new[41]	coref	17-19[72_41]
11-27	705-706	N	object[41]	new[41]	_	_
11-28	707-710	sum	quantity|object[41]	giv|new[41]	coref	17-20[71_0]
11-29	711-715	bits	object[41]	new[41]	_	_
11-30	716-718	of	object[41]	new[41]	_	_
11-31	719-730	approximate	object[41]|abstract[42]	new[41]|giv[42]	coref	12-7[47_42]
11-32	731-737	adders	object[41]|abstract[42]	new[41]|giv[42]	_	_
11-33	738-739	,	_	_	_	_
11-34	740-745	which	_	_	_	_
11-35	746-754	includes	_	_	_	_
11-36	755-758	the	event[44]	giv[44]	_	_
11-37	759-764	carry	abstract|event[44]	giv|giv[44]	coref	18-24
11-38	765-773	overflow	event[44]	giv[44]	_	_
11-39	774-775	.	_	_	_	_

#Text=We shall use some legends for the approximate adders for the ease of referencing ; some of the legends are defined by the authors in their respective works while the remaining are defined by us in this work for referencing .
12-1	776-778	We	person	giv	ana	12-35
12-2	779-784	shall	_	_	_	_
12-3	785-788	use	_	_	_	_
12-4	789-793	some	abstract[46]	new[46]	coref	12-18[50_46]
12-5	794-801	legends	abstract[46]	new[46]	_	_
12-6	802-805	for	abstract[46]	new[46]	_	_
12-7	806-809	the	abstract[46]|abstract[47]	new[46]|giv[47]	ana	12-16[49_47]
12-8	810-821	approximate	abstract[46]|abstract[47]	new[46]|giv[47]	_	_
12-9	822-828	adders	abstract[46]|abstract[47]	new[46]|giv[47]	_	_
12-10	829-832	for	abstract[46]|abstract[47]	new[46]|giv[47]	_	_
12-11	833-836	the	abstract[46]|abstract[47]|abstract[48]	new[46]|giv[47]|new[48]	_	_
12-12	837-841	ease	abstract[46]|abstract[47]|abstract[48]	new[46]|giv[47]|new[48]	_	_
12-13	842-844	of	_	_	_	_
12-14	845-856	referencing	_	_	_	_
12-15	857-858	;	_	_	_	_
12-16	859-863	some	abstract[49]	giv[49]	coref	31-25[140_49]
12-17	864-866	of	abstract[49]	giv[49]	_	_
12-18	867-870	the	abstract[49]|abstract[50]	giv[49]|giv[50]	_	_
12-19	871-878	legends	abstract[49]|abstract[50]	giv[49]|giv[50]	_	_
12-20	879-882	are	_	_	_	_
12-21	883-890	defined	_	_	_	_
12-22	891-893	by	_	_	_	_
12-23	894-897	the	person[51]	new[51]	_	_
12-24	898-905	authors	person[51]	new[51]	_	_
12-25	906-908	in	person[51]	new[51]	_	_
12-26	909-914	their	person[51]|abstract[52]	new[51]|new[52]	_	_
12-27	915-925	respective	person[51]|abstract[52]	new[51]|new[52]	_	_
12-28	926-931	works	person[51]|abstract[52]	new[51]|new[52]	_	_
12-29	932-937	while	_	_	_	_
12-30	938-941	the	abstract[53]	new[53]	_	_
12-31	942-951	remaining	abstract[53]	new[53]	_	_
12-32	952-955	are	_	_	_	_
12-33	956-963	defined	_	_	_	_
12-34	964-966	by	_	_	_	_
12-35	967-969	us	person	giv	ana	31-1
12-36	970-972	in	_	_	_	_
12-37	973-977	this	object[55]	new[55]	_	_
12-38	978-982	work	object[55]	new[55]	_	_
12-39	983-986	for	_	_	_	_
12-40	987-998	referencing	_	_	_	_
12-41	999-1000	.	_	_	_	_

#Text=The accurate adder is shown in
13-1	1001-1004	The	abstract[56]	giv[56]	_	_
13-2	1005-1013	accurate	abstract[56]	giv[56]	_	_
13-3	1014-1019	adder	abstract[56]	giv[56]	_	_
13-4	1020-1022	is	_	_	_	_
13-5	1023-1028	shown	_	_	_	_
13-6	1029-1031	in	_	_	_	_

#Text=Figure 1
14-1	1032-1038	Figure	object[57]	giv[57]	coref	16-1[64_57]
14-2	1039-1040	1	object[57]	giv[57]	_	_

#Text=a. The approximate adder of Reference , called the lower-part OR adder ( LOA ) , is shown in
15-1	1041-1043	a.	person	new	_	_
15-2	1044-1047	The	abstract[59]	new[59]	coref	15-12[0_59]
15-3	1048-1059	approximate	abstract[59]	new[59]	_	_
15-4	1060-1065	adder	abstract[59]	new[59]	_	_
15-5	1066-1068	of	abstract[59]	new[59]	_	_
15-6	1069-1078	Reference	abstract[59]|person	new[59]|new	_	_
15-7	1079-1080	,	_	_	_	_
15-8	1081-1087	called	_	_	_	_
15-9	1088-1091	the	abstract[61]	new[61]	_	_
15-10	1092-1102	lower-part	abstract[61]	new[61]	_	_
15-11	1103-1105	OR	_	_	_	_
15-12	1106-1111	adder	abstract	giv	appos	15-14
15-13	1112-1113	(	_	_	_	_
15-14	1114-1117	LOA	abstract	giv	coref	17-3[65_0]
15-15	1118-1119	)	_	_	_	_
15-16	1120-1121	,	_	_	_	_
15-17	1122-1124	is	_	_	_	_
15-18	1125-1130	shown	_	_	_	_
15-19	1131-1133	in	_	_	_	_

#Text=Figure 1
16-1	1134-1140	Figure	object[64]	giv[64]	coref	21-1[91_64]
16-2	1141-1142	1	object[64]	giv[64]	_	_

#Text=b. In the LOA , the K input bit-pairs of the inaccurate sub-adder are respectively OR-ed to produce the K sum bits .
17-1	1143-1145	b.	_	_	_	_
17-2	1146-1148	In	_	_	_	_
17-3	1149-1152	the	abstract[65]	giv[65]	coref	19-16[0_65]
17-4	1153-1156	LOA	abstract[65]	giv[65]	_	_
17-5	1157-1158	,	_	_	_	_
17-6	1159-1162	the	abstract[68]	new[68]	_	_
17-7	1163-1164	K	person|abstract[68]	giv|new[68]	coref	17-20
17-8	1165-1170	input	abstract|abstract[68]	new|new[68]	coref	22-17[97_0]
17-9	1171-1180	bit-pairs	abstract[68]	new[68]	_	_
17-10	1181-1183	of	abstract[68]	new[68]	_	_
17-11	1184-1187	the	abstract[68]|abstract[69]	new[68]|giv[69]	coref	18-6[74_69]
17-12	1188-1198	inaccurate	abstract[68]|abstract[69]	new[68]|giv[69]	_	_
17-13	1199-1208	sub-adder	abstract[68]|abstract[69]	new[68]|giv[69]	_	_
17-14	1209-1212	are	_	_	_	_
17-15	1213-1225	respectively	_	_	_	_
17-16	1226-1231	OR-ed	_	_	_	_
17-17	1232-1234	to	_	_	_	_
17-18	1235-1242	produce	_	_	_	_
17-19	1243-1246	the	object[72]	giv[72]	_	_
17-20	1247-1248	K	person|quantity[71]|object[72]	giv|giv[71]|giv[72]	coref|coref|coref|coref	26-2[0_71]|40-6[186_0]|26-2[0_71]|40-6[186_0]
17-21	1249-1252	sum	quantity[71]|object[72]	giv[71]|giv[72]	_	_
17-22	1253-1257	bits	object[72]	giv[72]	_	_
17-23	1258-1259	.	_	_	_	_

#Text=The most significant bit-pair of the inaccurate sub-adder viz. AK – 1 and BK – 1 is alone AND-ed and given as the carry input for the accurate sub-adder .
18-1	1260-1263	The	abstract[73]	new[73]	_	_
18-2	1264-1268	most	abstract[73]	new[73]	_	_
18-3	1269-1280	significant	abstract[73]	new[73]	_	_
18-4	1281-1289	bit-pair	abstract[73]	new[73]	_	_
18-5	1290-1292	of	abstract[73]	new[73]	_	_
18-6	1293-1296	the	abstract[73]|abstract[74]|abstract[75]	new[73]|giv[74]|new[75]	coref|coref|coref|coref	23-16[103_74]|27-16[124_75]|23-16[103_74]|27-16[124_75]
18-7	1297-1307	inaccurate	abstract[73]|abstract[74]|abstract[75]	new[73]|giv[74]|new[75]	_	_
18-8	1308-1317	sub-adder	abstract[73]|abstract[74]|abstract[75]	new[73]|giv[74]|new[75]	_	_
18-9	1318-1322	viz.	abstract[73]|abstract[75]	new[73]|new[75]	_	_
18-10	1323-1325	AK	abstract[73]|abstract[75]|abstract	new[73]|new[75]|new	_	_
18-11	1326-1327	–	abstract[73]|abstract[75]	new[73]|new[75]	_	_
18-12	1328-1329	1	abstract[73]|abstract[75]|quantity	new[73]|new[75]|new	coref	18-16
18-13	1330-1333	and	abstract[73]|abstract[75]	new[73]|new[75]	_	_
18-14	1334-1336	BK	abstract[73]|abstract[75]|abstract[78]	new[73]|new[75]|new[78]	_	_
18-15	1337-1338	–	abstract[73]|abstract[75]|abstract[78]	new[73]|new[75]|new[78]	_	_
18-16	1339-1340	1	abstract[73]|abstract[75]|abstract[78]|quantity	new[73]|new[75]|new[78]|giv	coref	27-22
18-17	1341-1343	is	_	_	_	_
18-18	1344-1349	alone	_	_	_	_
18-19	1350-1356	AND-ed	abstract	new	_	_
18-20	1357-1360	and	_	_	_	_
18-21	1361-1366	given	_	_	_	_
18-22	1367-1369	as	_	_	_	_
18-23	1370-1373	the	_	_	_	_
18-24	1374-1379	carry	abstract	giv	coref	22-18
18-25	1380-1385	input	_	_	_	_
18-26	1386-1389	for	_	_	_	_
18-27	1390-1393	the	object[82]	giv[82]	coref	22-21[98_82]
18-28	1394-1402	accurate	object[82]	giv[82]	_	_
18-29	1403-1412	sub-adder	object[82]	giv[82]	_	_
18-30	1413-1414	.	_	_	_	_

#Text=The approximate adder of Reference shall be referred to as LOAWA ( i. e. , LOA without the 2-input AND function ) .
19-1	1415-1418	The	object[83]	new[83]	coref	23-1[100_83]
19-2	1419-1430	approximate	object[83]	new[83]	_	_
19-3	1431-1436	adder	object[83]	new[83]	_	_
19-4	1437-1439	of	object[83]	new[83]	_	_
19-5	1440-1449	Reference	object[83]|abstract	new[83]|new	coref	22-10
19-6	1450-1455	shall	_	_	_	_
19-7	1456-1458	be	_	_	_	_
19-8	1459-1467	referred	_	_	_	_
19-9	1468-1470	to	_	_	_	_
19-10	1471-1473	as	_	_	_	_
19-11	1474-1479	LOAWA	abstract	new	coref	20-1
19-12	1480-1481	(	_	_	_	_
19-13	1482-1484	i.	_	_	_	_
19-14	1485-1487	e.	_	_	_	_
19-15	1488-1489	,	_	_	_	_
19-16	1490-1493	LOA	abstract	giv	coref	32-7
19-17	1494-1501	without	_	_	_	_
19-18	1502-1505	the	abstract[87]|abstract[88]	new[87]|new[88]	coref|coref|coref|coref	33-16[150_87]|33-16[151_88]|33-16[150_87]|33-16[151_88]
19-19	1506-1513	2-input	abstract[87]|abstract[88]	new[87]|new[88]	_	_
19-20	1514-1517	AND	abstract[88]	new[88]	_	_
19-21	1518-1526	function	abstract[88]|abstract	new[88]|new	_	_
19-22	1527-1528	)	_	_	_	_
19-23	1529-1530	.	_	_	_	_

#Text=LOAWA is shown in
20-1	1531-1536	LOAWA	abstract	giv	coref	43-20
20-2	1537-1539	is	_	_	_	_
20-3	1540-1545	shown	_	_	_	_
20-4	1546-1548	in	_	_	_	_

#Text=Figure 1
21-1	1549-1555	Figure	object[91]	giv[91]	coref	24-1[104_91]
21-2	1556-1557	1	object[91]	giv[91]	_	_

#Text=c , which is nearly identical to LOA of Reference ; the only exception being that the carry input of the accurate sub-adder is set to a constant 0 .
22-1	1558-1559	c	abstract	new	_	_
22-2	1560-1561	,	_	_	_	_
22-3	1562-1567	which	_	_	_	_
22-4	1568-1570	is	_	_	_	_
22-5	1571-1577	nearly	_	_	_	_
22-6	1578-1587	identical	_	_	_	_
22-7	1588-1590	to	_	_	_	_
22-8	1591-1594	LOA	abstract[93]	new[93]	_	_
22-9	1595-1597	of	abstract[93]	new[93]	_	_
22-10	1598-1607	Reference	abstract[93]|abstract	new[93]|giv	coref	28-7
22-11	1608-1609	;	_	_	_	_
22-12	1610-1613	the	abstract[95]	new[95]	_	_
22-13	1614-1618	only	abstract[95]	new[95]	_	_
22-14	1619-1628	exception	abstract[95]	new[95]	_	_
22-15	1629-1634	being	_	_	_	_
22-16	1635-1639	that	_	_	_	_
22-17	1640-1643	the	abstract[97]	giv[97]	coref	26-17[0_97]
22-18	1644-1649	carry	abstract|abstract[97]	giv|giv[97]	coref	27-2
22-19	1650-1655	input	abstract[97]	giv[97]	_	_
22-20	1656-1658	of	abstract[97]	giv[97]	_	_
22-21	1659-1662	the	abstract[97]|object[98]	giv[97]|giv[98]	coref	27-5[121_98]
22-22	1663-1671	accurate	abstract[97]|object[98]	giv[97]|giv[98]	_	_
22-23	1672-1681	sub-adder	abstract[97]|object[98]	giv[97]|giv[98]	_	_
22-24	1682-1684	is	_	_	_	_
22-25	1685-1688	set	_	_	_	_
22-26	1689-1691	to	_	_	_	_
22-27	1692-1693	a	abstract[99]	new[99]	coref	34-23[159_99]
22-28	1694-1702	constant	abstract[99]	new[99]	_	_
22-29	1703-1704	0	abstract[99]	new[99]	_	_
22-30	1705-1706	.	_	_	_	_

#Text=The approximate adder of , which uses the type 5 approximate full adder for realizing the inaccurate sub-adder is shown in
23-1	1707-1710	The	abstract[100]	giv[100]	coref	23-10[102_100]
23-2	1711-1722	approximate	abstract[100]	giv[100]	_	_
23-3	1723-1728	adder	abstract[100]	giv[100]	_	_
23-4	1729-1731	of	abstract[100]	giv[100]	_	_
23-5	1732-1733	,	_	_	_	_
23-6	1734-1739	which	_	_	_	_
23-7	1740-1744	uses	_	_	_	_
23-8	1745-1748	the	abstract[101]	new[101]	_	_
23-9	1749-1753	type	abstract[101]	new[101]	_	_
23-10	1754-1755	5	abstract[102]	giv[102]	coref	25-2[106_102]
23-11	1756-1767	approximate	abstract[102]	giv[102]	_	_
23-12	1768-1772	full	abstract[102]	giv[102]	_	_
23-13	1773-1778	adder	abstract[102]	giv[102]	_	_
23-14	1779-1782	for	_	_	_	_
23-15	1783-1792	realizing	_	_	_	_
23-16	1793-1796	the	abstract[103]	giv[103]	coref	26-5[110_103]
23-17	1797-1807	inaccurate	abstract[103]	giv[103]	_	_
23-18	1808-1817	sub-adder	abstract[103]	giv[103]	_	_
23-19	1818-1820	is	_	_	_	_
23-20	1821-1826	shown	_	_	_	_
23-21	1827-1829	in	_	_	_	_

#Text=Figure 1
24-1	1830-1836	Figure	object[104]	giv[104]	coref	29-1[130_104]
24-2	1837-1838	1	object[104]	giv[104]	_	_

#Text=d. This approximate adder shall be referred to as APPROX5 .
25-1	1839-1841	d.	person	new	_	_
25-2	1842-1846	This	abstract[106]	giv[106]	coref	28-1[127_106]
25-3	1847-1858	approximate	abstract[106]	giv[106]	_	_
25-4	1859-1864	adder	abstract[106]	giv[106]	_	_
25-5	1865-1870	shall	_	_	_	_
25-6	1871-1873	be	_	_	_	_
25-7	1874-1882	referred	_	_	_	_
25-8	1883-1885	to	_	_	_	_
25-9	1886-1888	as	_	_	_	_
25-10	1889-1896	APPROX5	abstract	new	coref	43-22
25-11	1897-1898	.	_	_	_	_

#Text=The sum bits of the inaccurate sub-adder are the same as one set of the corresponding input bits , i. e. , SUM i = B i , where i denotes a bit position .
26-1	1899-1902	The	object[109]	new[109]	coref	26-15[112_109]
26-2	1903-1906	sum	quantity|object[109]	giv|new[109]	coref	39-6
26-3	1907-1911	bits	object[109]	new[109]	_	_
26-4	1912-1914	of	object[109]	new[109]	_	_
26-5	1915-1918	the	object[109]|abstract[110]	new[109]|giv[110]	ana	26-24[0_110]
26-6	1919-1929	inaccurate	object[109]|abstract[110]	new[109]|giv[110]	_	_
26-7	1930-1939	sub-adder	object[109]|abstract[110]	new[109]|giv[110]	_	_
26-8	1940-1943	are	_	_	_	_
26-9	1944-1947	the	_	_	_	_
26-10	1948-1952	same	_	_	_	_
26-11	1953-1955	as	_	_	_	_
26-12	1956-1959	one	_	_	_	_
26-13	1960-1963	set	_	_	_	_
26-14	1964-1966	of	_	_	_	_
26-15	1967-1970	the	object[112]	giv[112]	coref	39-5[179_112]
26-16	1971-1984	corresponding	object[112]	giv[112]	_	_
26-17	1985-1990	input	abstract|object[112]	giv|giv[112]	coref	27-1[120_0]
26-18	1991-1995	bits	object[112]	giv[112]	_	_
26-19	1996-1997	,	_	_	_	_
26-20	1998-2000	i.	_	_	_	_
26-21	2001-2003	e.	_	_	_	_
26-22	2004-2005	,	_	_	_	_
26-23	2006-2009	SUM	quantity	giv	ana	26-27
26-24	2010-2011	i	abstract	giv	ana	26-30
26-25	2012-2013	=	_	_	_	_
26-26	2014-2015	B	_	_	_	_
26-27	2016-2017	i	quantity	giv	_	_
26-28	2018-2019	,	_	_	_	_
26-29	2020-2025	where	_	_	_	_
26-30	2026-2027	i	abstract	giv	coref	27-16[123_0]
26-31	2028-2035	denotes	_	_	_	_
26-32	2036-2037	a	abstract[118]	new[118]	_	_
26-33	2038-2041	bit	abstract|abstract[118]	giv|new[118]	_	_
26-34	2042-2050	position	abstract[118]	new[118]	_	_
26-35	2051-2052	.	_	_	_	_

#Text=The carry input for the accurate sub-adder is a most significant input bit belonging to the inaccurate sub-adder viz. AK – 1 .
27-1	2053-2056	The	abstract[120]	giv[120]	coref	27-9[122_120]
27-2	2057-2062	carry	abstract|abstract[120]	giv|giv[120]	coref	35-26
27-3	2063-2068	input	abstract[120]	giv[120]	_	_
27-4	2069-2072	for	abstract[120]	giv[120]	_	_
27-5	2073-2076	the	abstract[120]|object[121]	giv[120]|giv[121]	coref	35-29[167_121]
27-6	2077-2085	accurate	abstract[120]|object[121]	giv[120]|giv[121]	_	_
27-7	2086-2095	sub-adder	abstract[120]|object[121]	giv[120]|giv[121]	_	_
27-8	2096-2098	is	_	_	_	_
27-9	2099-2100	a	abstract[122]	giv[122]	coref	34-5[155_122]
27-10	2101-2105	most	abstract[122]	giv[122]	_	_
27-11	2106-2117	significant	abstract[122]	giv[122]	_	_
27-12	2118-2123	input	abstract[122]	giv[122]	_	_
27-13	2124-2127	bit	abstract[122]	giv[122]	_	_
27-14	2128-2137	belonging	_	_	_	_
27-15	2138-2140	to	_	_	_	_
27-16	2141-2144	the	object[123]|abstract[124]	giv[123]|giv[124]	coref|coref	33-10[149_123]|33-10[149_123]
27-17	2145-2155	inaccurate	object[123]|abstract[124]	giv[123]|giv[124]	_	_
27-18	2156-2165	sub-adder	object[123]|abstract[124]	giv[123]|giv[124]	_	_
27-19	2166-2170	viz.	abstract[124]	giv[124]	_	_
27-20	2171-2173	AK	abstract[125]	new[125]	_	_
27-21	2174-2175	–	abstract[125]	new[125]	_	_
27-22	2176-2177	1	abstract[125]|quantity	new[125]|giv	coref	40-24[193_0]
27-23	2178-2179	.	_	_	_	_

#Text=The hardware-efficient approximate adder presented in Reference shall be called HEAA , which is shown in
28-1	2180-2183	The	abstract[127]	giv[127]	coref	31-11[137_127]
28-2	2184-2202	hardware-efficient	abstract[127]	giv[127]	_	_
28-3	2203-2214	approximate	abstract[127]	giv[127]	_	_
28-4	2215-2220	adder	abstract[127]	giv[127]	_	_
28-5	2221-2230	presented	_	_	_	_
28-6	2231-2233	in	_	_	_	_
28-7	2234-2243	Reference	abstract	giv	coref	36-8
28-8	2244-2249	shall	_	_	_	_
28-9	2250-2252	be	_	_	_	_
28-10	2253-2259	called	_	_	_	_
28-11	2260-2264	HEAA	abstract	new	coref	31-4
28-12	2265-2266	,	_	_	_	_
28-13	2267-2272	which	_	_	_	_
28-14	2273-2275	is	_	_	_	_
28-15	2276-2281	shown	_	_	_	_
28-16	2282-2284	in	_	_	_	_

#Text=Figure 1
29-1	2285-2291	Figure	object[130]	giv[130]	coref	37-1[172_130]
29-2	2292-2293	1	object[130]	giv[130]	_	_

#Text=e.
30-1	2294-2296	e.	abstract	new	_	_

#Text=We observe that HEAA consumes less FPGA resources compared to the accurate FPGA adder and consumes either the same FPGA resources as that of some approximate adders or more FPGA resources in comparison with other approximate adders .
31-1	2297-2299	We	person	giv	_	_
31-2	2300-2307	observe	_	_	_	_
31-3	2308-2312	that	_	_	_	_
31-4	2313-2317	HEAA	abstract	giv	coref	32-1
31-5	2318-2326	consumes	_	_	_	_
31-6	2327-2331	less	abstract[135]	new[135]	coref	31-17[139_135]
31-7	2332-2336	FPGA	substance|abstract[135]	new|new[135]	coref	31-13
31-8	2337-2346	resources	abstract[135]	new[135]	_	_
31-9	2347-2355	compared	_	_	_	_
31-10	2356-2358	to	_	_	_	_
31-11	2359-2362	the	abstract[137]	giv[137]	coref	43-13[218_137]
31-12	2363-2371	accurate	abstract[137]	giv[137]	_	_
31-13	2372-2376	FPGA	abstract|abstract[137]	giv|giv[137]	coref	31-20
31-14	2377-2382	adder	abstract[137]	giv[137]	_	_
31-15	2383-2386	and	_	_	_	_
31-16	2387-2395	consumes	_	_	_	_
31-17	2396-2402	either	abstract[139]	giv[139]	coref	43-8[216_139]
31-18	2403-2406	the	abstract[139]	giv[139]	_	_
31-19	2407-2411	same	abstract[139]	giv[139]	_	_
31-20	2412-2416	FPGA	substance|abstract[139]	giv|giv[139]	coref	31-30
31-21	2417-2426	resources	abstract[139]	giv[139]	_	_
31-22	2427-2429	as	_	_	_	_
31-23	2430-2434	that	_	_	_	_
31-24	2435-2437	of	_	_	_	_
31-25	2438-2442	some	abstract[140]	giv[140]	_	_
31-26	2443-2454	approximate	abstract[140]	giv[140]	_	_
31-27	2455-2461	adders	abstract[140]	giv[140]	_	_
31-28	2462-2464	or	abstract[140]	giv[140]	_	_
31-29	2465-2469	more	abstract[140]|abstract[142]	giv[140]|new[142]	_	_
31-30	2470-2474	FPGA	abstract[140]|substance|abstract[142]	giv[140]|giv|new[142]	coref	43-9
31-31	2475-2484	resources	abstract[140]|abstract[142]	giv[140]|new[142]	_	_
31-32	2485-2487	in	abstract[140]|abstract[142]	giv[140]|new[142]	_	_
31-33	2488-2498	comparison	abstract[140]|abstract[142]|abstract[143]	giv[140]|new[142]|new[143]	_	_
31-34	2499-2503	with	abstract[140]|abstract[142]|abstract[143]	giv[140]|new[142]|new[143]	_	_
31-35	2504-2509	other	abstract[140]|abstract[142]|abstract[143]	giv[140]|new[142]|new[143]	_	_
31-36	2510-2521	approximate	abstract[140]|abstract[142]|abstract[143]	giv[140]|new[142]|new[143]	_	_
31-37	2522-2528	adders	abstract[140]|abstract[142]|abstract[143]	giv[140]|new[142]|new[143]	_	_
31-38	2529-2530	.	_	_	_	_

#Text=HEAA is almost structurally similar to LOA ; however , there exists a difference .
32-1	2531-2535	HEAA	substance	giv	coref	43-25
32-2	2536-2538	is	_	_	_	_
32-3	2539-2545	almost	_	_	_	_
32-4	2546-2558	structurally	_	_	_	_
32-5	2559-2566	similar	_	_	_	_
32-6	2567-2569	to	_	_	_	_
32-7	2570-2573	LOA	abstract	giv	coref	36-5
32-8	2574-2575	;	_	_	_	_
32-9	2576-2583	however	_	_	_	_
32-10	2584-2585	,	_	_	_	_
32-11	2586-2591	there	_	_	_	_
32-12	2592-2598	exists	_	_	_	_
32-13	2599-2600	a	abstract[146]	new[146]	_	_
32-14	2601-2611	difference	abstract[146]	new[146]	_	_
32-15	2612-2613	.	_	_	_	_

#Text=A 2-to-1 multiplexer ( MUX21 ) is used in the inaccurate sub-adder in addition to the 2-input OR functions .
33-1	2614-2615	A	abstract[147]	new[147]	_	_
33-2	2616-2622	2-to-1	abstract[147]	new[147]	_	_
33-3	2623-2634	multiplexer	abstract[147]	new[147]	_	_
33-4	2635-2636	(	_	_	_	_
33-5	2637-2642	MUX21	object	new	coref	34-20
33-6	2643-2644	)	_	_	_	_
33-7	2645-2647	is	_	_	_	_
33-8	2648-2652	used	_	_	_	_
33-9	2653-2655	in	_	_	_	_
33-10	2656-2659	the	object[149]	giv[149]	coref	34-11[156_149]
33-11	2660-2670	inaccurate	object[149]	giv[149]	_	_
33-12	2671-2680	sub-adder	object[149]	giv[149]	_	_
33-13	2681-2683	in	_	_	_	_
33-14	2684-2692	addition	_	_	_	_
33-15	2693-2695	to	_	_	_	_
33-16	2696-2699	the	abstract[150]|abstract[151]	giv[150]|giv[151]	_	_
33-17	2700-2707	2-input	abstract[150]|abstract[151]	giv[150]|giv[151]	_	_
33-18	2708-2710	OR	abstract[151]	giv[151]	_	_
33-19	2711-2720	functions	abstract[151]|abstract	giv[151]|new	_	_
33-20	2721-2722	.	_	_	_	_

#Text=The OR-ed output of the most significant input bit-pair in the inaccurate sub-adder is given to the 0-input of MUX21 , and a constant 0 is given to the 1-input of MUX21 .
34-1	2723-2726	The	abstract[154]	new[154]	coref	39-7[0_154]
34-2	2727-2732	OR-ed	abstract|abstract[154]	new|new[154]	_	_
34-3	2733-2739	output	abstract[154]	new[154]	_	_
34-4	2740-2742	of	abstract[154]	new[154]	_	_
34-5	2743-2746	the	abstract[154]|abstract[155]	new[154]|giv[155]	coref	35-4[162_155]
34-6	2747-2751	most	abstract[154]|abstract[155]	new[154]|giv[155]	_	_
34-7	2752-2763	significant	abstract[154]|abstract[155]	new[154]|giv[155]	_	_
34-8	2764-2769	input	abstract[154]|abstract[155]	new[154]|giv[155]	_	_
34-9	2770-2778	bit-pair	abstract[154]|abstract[155]	new[154]|giv[155]	_	_
34-10	2779-2781	in	_	_	_	_
34-11	2782-2785	the	object[156]	giv[156]	coref	35-11[163_156]
34-12	2786-2796	inaccurate	object[156]	giv[156]	_	_
34-13	2797-2806	sub-adder	object[156]	giv[156]	_	_
34-14	2807-2809	is	_	_	_	_
34-15	2810-2815	given	_	_	_	_
34-16	2816-2818	to	_	_	_	_
34-17	2819-2822	the	object[157]	new[157]	_	_
34-18	2823-2830	0-input	object[157]	new[157]	_	_
34-19	2831-2833	of	object[157]	new[157]	_	_
34-20	2834-2839	MUX21	object[157]|object	new[157]|giv	coref	34-32
34-21	2840-2841	,	_	_	_	_
34-22	2842-2845	and	_	_	_	_
34-23	2846-2847	a	abstract[159]	giv[159]	_	_
34-24	2848-2856	constant	abstract[159]	giv[159]	_	_
34-25	2857-2858	0	abstract[159]	giv[159]	_	_
34-26	2859-2861	is	_	_	_	_
34-27	2862-2867	given	_	_	_	_
34-28	2868-2870	to	_	_	_	_
34-29	2871-2874	the	object[160]	new[160]	_	_
34-30	2875-2882	1-input	object[160]	new[160]	_	_
34-31	2883-2885	of	object[160]	new[160]	_	_
34-32	2886-2891	MUX21	object[160]|abstract	new[160]|giv	coref	35-20
34-33	2892-2893	.	_	_	_	_

#Text=The AND of the most significant input bit-pair corresponding to the inaccurate sub-adder serves as the select input of MUX21 , besides serving as the carry input for the accurate sub-adder .
35-1	2894-2897	The	_	_	_	_
35-2	2898-2901	AND	_	_	_	_
35-3	2902-2904	of	_	_	_	_
35-4	2905-2908	the	abstract[162]	giv[162]	coref	39-15[0_162]
35-5	2909-2913	most	abstract[162]	giv[162]	_	_
35-6	2914-2925	significant	abstract[162]	giv[162]	_	_
35-7	2926-2931	input	abstract[162]	giv[162]	_	_
35-8	2932-2940	bit-pair	_	_	_	_
35-9	2941-2954	corresponding	_	_	_	_
35-10	2955-2957	to	_	_	_	_
35-11	2958-2961	the	object[163]	giv[163]	coref	39-18[182_163]
35-12	2962-2972	inaccurate	object[163]	giv[163]	_	_
35-13	2973-2982	sub-adder	object[163]	giv[163]	_	_
35-14	2983-2989	serves	_	_	_	_
35-15	2990-2992	as	_	_	_	_
35-16	2993-2996	the	_	_	_	_
35-17	2997-3003	select	person	new	_	_
35-18	3004-3009	input	_	_	_	_
35-19	3010-3012	of	_	_	_	_
35-20	3013-3018	MUX21	object	giv	_	_
35-21	3019-3020	,	_	_	_	_
35-22	3021-3028	besides	_	_	_	_
35-23	3029-3036	serving	_	_	_	_
35-24	3037-3039	as	_	_	_	_
35-25	3040-3043	the	_	_	_	_
35-26	3044-3049	carry	abstract	giv	_	_
35-27	3050-3055	input	_	_	_	_
35-28	3056-3059	for	_	_	_	_
35-29	3060-3063	the	object[167]	giv[167]	coref	39-1[176_167]
35-30	3064-3072	accurate	object[167]	giv[167]	_	_
35-31	3073-3082	sub-adder	object[167]	giv[167]	_	_
35-32	3083-3084	.	_	_	_	_

#Text=An optimized version of LOA presented in Reference , called OLOCA , is shown in
36-1	3085-3087	An	object[168]	new[168]	_	_
36-2	3088-3097	optimized	object[168]	new[168]	_	_
36-3	3098-3105	version	object[168]	new[168]	_	_
36-4	3106-3108	of	object[168]	new[168]	_	_
36-5	3109-3112	LOA	object[168]|abstract	new[168]|giv	coref	38-10
36-6	3113-3122	presented	_	_	_	_
36-7	3123-3125	in	_	_	_	_
36-8	3126-3135	Reference	abstract	giv	_	_
36-9	3136-3137	,	_	_	_	_
36-10	3138-3144	called	_	_	_	_
36-11	3145-3150	OLOCA	abstract	new	coref	39-22
36-12	3151-3152	,	_	_	_	_
36-13	3153-3155	is	_	_	_	_
36-14	3156-3161	shown	_	_	_	_
36-15	3162-3164	in	_	_	_	_

#Text=Figure 1
37-1	3165-3171	Figure	object[172]	giv[172]	_	_
37-2	3172-3173	1	object[172]	giv[172]	_	_

#Text=f. OLOCA is in fact a slight modification of LOA .
38-1	3174-3176	f.	abstract[173]	new[173]	_	_
38-2	3177-3182	OLOCA	abstract[173]	new[173]	_	_
38-3	3183-3185	is	_	_	_	_
38-4	3186-3188	in	_	_	_	_
38-5	3189-3193	fact	_	_	_	_
38-6	3194-3195	a	abstract[174]	new[174]	_	_
38-7	3196-3202	slight	abstract[174]	new[174]	_	_
38-8	3203-3215	modification	abstract[174]	new[174]	_	_
38-9	3216-3218	of	abstract[174]	new[174]	_	_
38-10	3219-3222	LOA	abstract[174]|abstract	new[174]|giv	coref	39-29
38-11	3223-3224	.	_	_	_	_

#Text=The accurate sub-adder and the sum output bits corresponding to the two most significant bit positions in the inaccurate sub-adder of OLOCA are the same as that of LOA .
39-1	3225-3228	The	object[176]	giv[176]	_	_
39-2	3229-3237	accurate	object[176]	giv[176]	_	_
39-3	3238-3247	sub-adder	object[176]	giv[176]	_	_
39-4	3248-3251	and	_	_	_	_
39-5	3252-3255	the	object[179]	giv[179]	coref	40-10[190_179]
39-6	3256-3259	sum	quantity|object[179]	giv|giv[179]	coref	40-12
39-7	3260-3266	output	abstract|object[179]	giv|giv[179]	coref	40-13
39-8	3267-3271	bits	object[179]	giv[179]	_	_
39-9	3272-3285	corresponding	_	_	_	_
39-10	3286-3288	to	_	_	_	_
39-11	3289-3292	the	abstract[181]	new[181]	_	_
39-12	3293-3296	two	abstract[181]	new[181]	_	_
39-13	3297-3301	most	abstract[181]	new[181]	_	_
39-14	3302-3313	significant	abstract[181]	new[181]	_	_
39-15	3314-3317	bit	abstract|abstract[181]	giv|new[181]	coref	41-19
39-16	3318-3327	positions	abstract[181]	new[181]	_	_
39-17	3328-3330	in	abstract[181]	new[181]	_	_
39-18	3331-3334	the	abstract[181]|abstract[182]	new[181]|giv[182]	coref	40-16[191_182]
39-19	3335-3345	inaccurate	abstract[181]|abstract[182]	new[181]|giv[182]	_	_
39-20	3346-3355	sub-adder	abstract[181]|abstract[182]	new[181]|giv[182]	_	_
39-21	3356-3358	of	abstract[181]|abstract[182]	new[181]|giv[182]	_	_
39-22	3359-3364	OLOCA	abstract[181]|abstract[182]|object	new[181]|giv[182]|giv	coref	40-20
39-23	3365-3368	are	_	_	_	_
39-24	3369-3372	the	_	_	_	_
39-25	3373-3377	same	_	_	_	_
39-26	3378-3380	as	_	_	_	_
39-27	3381-3385	that	_	_	_	_
39-28	3386-3388	of	_	_	_	_
39-29	3389-3392	LOA	abstract	giv	coref	41-2[194_0]
39-30	3393-3394	.	_	_	_	_

#Text=However , the remaining ( K – 2 ) less significant sum output bits in the inaccurate sub-adder of OLOCA are tied to a constant 1 .
40-1	3395-3402	However	_	_	_	_
40-2	3403-3404	,	_	_	_	_
40-3	3405-3408	the	event[185]	new[185]	_	_
40-4	3409-3418	remaining	event[185]	new[185]	_	_
40-5	3419-3420	(	_	_	_	_
40-6	3421-3422	K	person[186]	giv[186]	coref	41-9[0_186]
40-7	3423-3424	–	person[186]	giv[186]	_	_
40-8	3425-3426	2	person[186]|quantity	giv[186]|new	coref	42-9
40-9	3427-3428	)	_	_	_	_
40-10	3429-3433	less	object[190]	giv[190]	coref	41-7[198_190]
40-11	3434-3445	significant	object[190]	giv[190]	_	_
40-12	3446-3449	sum	quantity|object[190]	giv|giv[190]	coref	41-10
40-13	3450-3456	output	abstract|object[190]	giv|giv[190]	coref	41-11
40-14	3457-3461	bits	object[190]	giv[190]	_	_
40-15	3462-3464	in	object[190]	giv[190]	_	_
40-16	3465-3468	the	object[190]|abstract[191]	giv[190]|giv[191]	coref	42-34[212_191]
40-17	3469-3479	inaccurate	object[190]|abstract[191]	giv[190]|giv[191]	_	_
40-18	3480-3489	sub-adder	object[190]|abstract[191]	giv[190]|giv[191]	_	_
40-19	3490-3492	of	object[190]|abstract[191]	giv[190]|giv[191]	_	_
40-20	3493-3498	OLOCA	object[190]|abstract[191]|object	giv[190]|giv[191]|giv	coref	42-14
40-21	3499-3502	are	_	_	_	_
40-22	3503-3507	tied	_	_	_	_
40-23	3508-3510	to	_	_	_	_
40-24	3511-3512	a	quantity[193]	giv[193]	coref	42-1[201_193]
40-25	3513-3521	constant	quantity[193]	giv[193]	_	_
40-26	3522-3523	1	quantity[193]	giv[193]	_	_
40-27	3524-3525	.	_	_	_	_

#Text=In the LOA , however , all the K sum output bits are produced by OR-ing the respective input bit-pairs .
41-1	3526-3528	In	_	_	_	_
41-2	3529-3532	the	abstract[194]	giv[194]	coref	43-18[0_194]
41-3	3533-3536	LOA	abstract[194]	giv[194]	_	_
41-4	3537-3538	,	_	_	_	_
41-5	3539-3546	however	_	_	_	_
41-6	3547-3548	,	_	_	_	_
41-7	3549-3552	all	object[198]	giv[198]	coref	42-12[204_198]
41-8	3553-3556	the	object[198]	giv[198]	_	_
41-9	3557-3558	K	person|object[198]	giv|giv[198]	coref	42-5[202_0]
41-10	3559-3562	sum	quantity|object[198]	giv|giv[198]	_	_
41-11	3563-3569	output	abstract|object[198]	giv|giv[198]	_	_
41-12	3570-3574	bits	object[198]	giv[198]	_	_
41-13	3575-3578	are	_	_	_	_
41-14	3579-3587	produced	_	_	_	_
41-15	3588-3590	by	_	_	_	_
41-16	3591-3597	OR-ing	_	_	_	_
41-17	3598-3601	the	object[200]	new[200]	_	_
41-18	3602-3612	respective	object[200]	new[200]	_	_
41-19	3613-3618	input	abstract|object[200]	giv|new[200]	_	_
41-20	3619-3628	bit-pairs	object[200]	new[200]	_	_
41-21	3629-3630	.	_	_	_	_

#Text=A constant 1 for the ( K – 2 ) sum bits in OLOCA implies the elimination of look-up tables ( LUTs ) and flip-flops ( FFs ) for realizing those bits of the inaccurate sub-adder for a FPGA-based implementation .
42-1	3631-3632	A	quantity[201]	giv[201]	_	_
42-2	3633-3641	constant	quantity[201]	giv[201]	_	_
42-3	3642-3643	1	quantity[201]	giv[201]	_	_
42-4	3644-3647	for	_	_	_	_
42-5	3648-3651	the	person[202]	giv[202]	_	_
42-6	3652-3653	(	person[202]	giv[202]	_	_
42-7	3654-3655	K	person[202]	giv[202]	_	_
42-8	3656-3657	–	person[202]	giv[202]	_	_
42-9	3658-3659	2	person[202]|quantity	giv[202]|giv	_	_
42-10	3660-3661	)	person[202]	giv[202]	_	_
42-11	3662-3665	sum	_	_	_	_
42-12	3666-3670	bits	object[204]	giv[204]	_	_
42-13	3671-3673	in	object[204]	giv[204]	_	_
42-14	3674-3679	OLOCA	object[204]|abstract	giv[204]|giv	coref	43-3
42-15	3680-3687	implies	_	_	_	_
42-16	3688-3691	the	abstract[206]	new[206]	_	_
42-17	3692-3703	elimination	abstract[206]	new[206]	_	_
42-18	3704-3706	of	abstract[206]	new[206]	_	_
42-19	3707-3714	look-up	abstract[206]|abstract[207]	new[206]|new[207]	appos	42-22[0_207]
42-20	3715-3721	tables	abstract[206]|abstract[207]	new[206]|new[207]	_	_
42-21	3722-3723	(	_	_	_	_
42-22	3724-3728	LUTs	abstract	giv	_	_
42-23	3729-3730	)	_	_	_	_
42-24	3731-3734	and	_	_	_	_
42-25	3735-3745	flip-flops	object	new	_	_
42-26	3746-3747	(	_	_	_	_
42-27	3748-3751	FFs	abstract	new	_	_
42-28	3752-3753	)	_	_	_	_
42-29	3754-3757	for	_	_	_	_
42-30	3758-3767	realizing	_	_	_	_
42-31	3768-3773	those	object[211]	new[211]	_	_
42-32	3774-3778	bits	object[211]	new[211]	_	_
42-33	3779-3781	of	object[211]	new[211]	_	_
42-34	3782-3785	the	object[211]|abstract[212]	new[211]|giv[212]	_	_
42-35	3786-3796	inaccurate	object[211]|abstract[212]	new[211]|giv[212]	_	_
42-36	3797-3806	sub-adder	object[211]|abstract[212]	new[211]|giv[212]	_	_
42-37	3807-3810	for	object[211]|abstract[212]	new[211]|giv[212]	_	_
42-38	3811-3812	a	object[211]|abstract[212]|abstract[213]	new[211]|giv[212]|new[213]	_	_
42-39	3813-3823	FPGA-based	object[211]|abstract[212]|abstract[213]	new[211]|giv[212]|new[213]	_	_
42-40	3824-3838	implementation	object[211]|abstract[212]|abstract[213]	new[211]|giv[212]|new[213]	_	_
42-41	3839-3840	.	_	_	_	_

#Text=Hence , OLOCA is likely to consume less FPGA resources compared to the accurate FPGA adder , LOA , LOAWA , APPROX5 , and HEAA , which is substantiated by the simulation results given in the next section .
43-1	3841-3846	Hence	_	_	_	_
43-2	3847-3848	,	_	_	_	_
43-3	3849-3854	OLOCA	object	giv	_	_
43-4	3855-3857	is	_	_	_	_
43-5	3858-3864	likely	_	_	_	_
43-6	3865-3867	to	_	_	_	_
43-7	3868-3875	consume	_	_	_	_
43-8	3876-3880	less	abstract[216]	giv[216]	_	_
43-9	3881-3885	FPGA	substance|abstract[216]	giv|giv[216]	coref	43-15
43-10	3886-3895	resources	abstract[216]	giv[216]	_	_
43-11	3896-3904	compared	_	_	_	_
43-12	3905-3907	to	_	_	_	_
43-13	3908-3911	the	abstract[218]	giv[218]	_	_
43-14	3912-3920	accurate	abstract[218]	giv[218]	_	_
43-15	3921-3925	FPGA	abstract|abstract[218]	giv|giv[218]	_	_
43-16	3926-3931	adder	abstract[218]	giv[218]	_	_
43-17	3932-3933	,	_	_	_	_
43-18	3934-3937	LOA	abstract	giv	_	_
43-19	3938-3939	,	_	_	_	_
43-20	3940-3945	LOAWA	abstract	giv	_	_
43-21	3946-3947	,	_	_	_	_
43-22	3948-3955	APPROX5	object	giv	_	_
43-23	3956-3957	,	_	_	_	_
43-24	3958-3961	and	_	_	_	_
43-25	3962-3966	HEAA	abstract	giv	_	_
43-26	3967-3968	,	_	_	_	_
43-27	3969-3974	which	_	_	_	_
43-28	3975-3977	is	_	_	_	_
43-29	3978-3991	substantiated	_	_	_	_
43-30	3992-3994	by	_	_	_	_
43-31	3995-3998	the	abstract[224]	new[224]	_	_
43-32	3999-4009	simulation	abstract|abstract[224]	new|new[224]	_	_
43-33	4010-4017	results	abstract[224]	new[224]	_	_
43-34	4018-4023	given	_	_	_	_
43-35	4024-4026	in	_	_	_	_
43-36	4027-4030	the	abstract[225]	new[225]	_	_
43-37	4031-4035	next	abstract[225]	new[225]	_	_
43-38	4036-4043	section	abstract[225]	new[225]	_	_
43-39	4044-4045	.	_	_	_	_
