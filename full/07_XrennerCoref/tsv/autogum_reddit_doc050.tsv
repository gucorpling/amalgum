#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=Q : How should C++ support persistent memory ?
1-1	0-1	Q	abstract	new	_	_
1-2	2-3	:	_	_	_	_
1-3	4-7	How	_	_	_	_
1-4	8-14	should	_	_	_	_
1-5	15-18	C++	abstract	new	coref	12-30
1-6	19-26	support	abstract	new	none|none	1-6|5-6
1-7	27-37	persistent	abstract[3]	new[3]	coref	10-19[71_3]
1-8	38-44	memory	abstract[3]	new[3]	_	_
1-9	45-46	?	_	_	_	_

#Text=Optane DDR4
2-1	47-53	Optane	substance|object[5]	new|new[5]	coref|coref|coref|coref	6-10|6-19|6-10|6-19
2-2	54-58	DDR4	object[5]	new[5]	_	_

#Text=DIMMs have been announced ( https://www.anandtech.com/show/12828/intel-launches-optane-dimms-up-to-512gb-apache-pass-is-here ) .
3-1	59-64	DIMMs	object	new	coref	5-7[22_0]
3-2	65-69	have	_	_	_	_
3-3	70-74	been	_	_	_	_
3-4	75-84	announced	_	_	_	_
3-5	85-86	(	_	_	_	_
3-6	87-183	https://www.anandtech.com/show/12828/intel-launches-optane-dimms-up-to-512gb-apache-pass-is-here	place	new	_	_
3-7	184-185	)	_	_	_	_
3-8	186-187	.	_	_	_	_

#Text=These fit into your RAM slots , and on supporting motherboards ( i. e. none of the current ones ) , they can be configured in the BIOS to appear either as a hard drive , or as RAM , to your system .
4-1	188-193	These	_	_	_	_
4-2	194-197	fit	_	_	_	_
4-3	198-202	into	_	_	_	_
4-4	203-207	your	person|object[10]	acc|new[10]	ana|coref|ana|coref	4-42|5-11[23_10]|4-42|5-11[23_10]
4-5	208-211	RAM	object|object[10]	new|new[10]	coref	4-39[16_0]
4-6	212-217	slots	object[10]	new[10]	_	_
4-7	218-219	,	_	_	_	_
4-8	220-223	and	_	_	_	_
4-9	224-226	on	_	_	_	_
4-10	227-237	supporting	_	_	_	_
4-11	238-250	motherboards	object	new	coref	5-1[20_0]
4-12	251-252	(	_	_	_	_
4-13	253-255	i.	_	_	_	_
4-14	256-258	e.	event[12]	new[12]	_	_
4-15	259-263	none	event[12]	new[12]	_	_
4-16	264-266	of	event[12]	new[12]	_	_
4-17	267-270	the	event[12]|object[13]	new[12]|new[13]	ana	4-22[0_13]
4-18	271-278	current	event[12]|object[13]	new[12]|new[13]	_	_
4-19	279-283	ones	event[12]|object[13]	new[12]|new[13]	_	_
4-20	284-285	)	_	_	_	_
4-21	286-287	,	_	_	_	_
4-22	288-292	they	object	giv	_	_
4-23	293-296	can	_	_	_	_
4-24	297-299	be	_	_	_	_
4-25	300-310	configured	_	_	_	_
4-26	311-313	in	_	_	_	_
4-27	314-317	the	object[15]	new[15]	_	_
4-28	318-322	BIOS	object[15]	new[15]	_	_
4-29	323-325	to	_	_	_	_
4-30	326-332	appear	_	_	_	_
4-31	333-339	either	_	_	_	_
4-32	340-342	as	_	_	_	_
4-33	343-344	a	_	_	_	_
4-34	345-349	hard	_	_	_	_
4-35	350-355	drive	_	_	_	_
4-36	356-357	,	_	_	_	_
4-37	358-360	or	_	_	_	_
4-38	361-363	as	_	_	_	_
4-39	364-367	RAM	object[16]	giv[16]	coref	6-18[36_16]
4-40	368-369	,	object[16]	giv[16]	_	_
4-41	370-372	to	object[16]	giv[16]	_	_
4-42	373-377	your	object[16]|person|abstract[18]	giv[16]|giv|new[18]	ana|ana	5-6|5-6
4-43	378-384	system	object[16]|abstract[18]	giv[16]|new[18]	_	_
4-44	385-386	.	_	_	_	_

#Text=Next year 's motherboards which support PRAM DIMMs should have sufficient slots for fitting up to 64Tb ( yes , terabytes ) of DIMMs , though these will probably be server motherboards .
5-1	387-391	Next	time[19]|object[20]	new[19]|giv[20]	_	_
5-2	392-396	year	time[19]|object[20]	new[19]|giv[20]	_	_
5-3	397-399	's	time[19]|object[20]	new[19]|giv[20]	_	_
5-4	400-412	motherboards	object[20]	giv[20]	_	_
5-5	413-418	which	_	_	_	_
5-6	419-426	support	abstract	new	none	12-31
5-7	427-431	PRAM	abstract|object[22]	new|giv[22]	coref|coref|coref|coref	5-24[0_22]|8-4|5-24[0_22]|8-4
5-8	432-437	DIMMs	object[22]	giv[22]	_	_
5-9	438-444	should	_	_	_	_
5-10	445-449	have	_	_	_	_
5-11	450-460	sufficient	object[23]	giv[23]	_	_
5-12	461-466	slots	object[23]	giv[23]	_	_
5-13	467-470	for	_	_	_	_
5-14	471-478	fitting	_	_	_	_
5-15	479-481	up	_	_	_	_
5-16	482-484	to	_	_	_	_
5-17	485-489	64Tb	quantity	new	_	_
5-18	490-491	(	_	_	_	_
5-19	492-495	yes	_	_	_	_
5-20	496-497	,	_	_	_	_
5-21	498-507	terabytes	quantity[25]	new[25]	_	_
5-22	508-509	)	quantity[25]	new[25]	_	_
5-23	510-512	of	quantity[25]	new[25]	_	_
5-24	513-518	DIMMs	quantity[25]|object	new[25]|giv	ana	5-27
5-25	519-520	,	_	_	_	_
5-26	521-527	though	_	_	_	_
5-27	528-533	these	object	giv	coref	5-31[29_0]
5-28	534-538	will	_	_	_	_
5-29	539-547	probably	_	_	_	_
5-30	548-550	be	_	_	_	_
5-31	551-557	server	object|object[29]	new|giv[29]	coref|coref	6-10[32_29]|6-10[32_29]
5-32	558-570	motherboards	object[29]	giv[29]	_	_
5-33	571-572	.	_	_	_	_

#Text=Despite some of the misinformation currently going around , Optane DIMMs have a similar read latency to normal DDR4 RAM , but about double the write latency .
6-1	573-580	Despite	_	_	_	_
6-2	581-585	some	_	_	_	_
6-3	586-588	of	_	_	_	_
6-4	589-592	the	abstract[30]	new[30]	_	_
6-5	593-607	misinformation	abstract[30]	new[30]	_	_
6-6	608-617	currently	_	_	_	_
6-7	618-623	going	_	_	_	_
6-8	624-630	around	_	_	_	_
6-9	631-632	,	_	_	_	_
6-10	633-639	Optane	substance|object[32]	giv|giv[32]	coref|coref	10-4[66_32]|10-4[66_32]
6-11	640-645	DIMMs	object[32]	giv[32]	_	_
6-12	646-650	have	_	_	_	_
6-13	651-652	a	abstract[34]	new[34]	coref	6-25[38_34]
6-14	653-660	similar	abstract[34]	new[34]	_	_
6-15	661-665	read	abstract|abstract[34]	new|new[34]	_	_
6-16	666-673	latency	abstract[34]	new[34]	_	_
6-17	674-676	to	abstract[34]	new[34]	_	_
6-18	677-683	normal	abstract[34]|object[36]	new[34]|giv[36]	coref	7-5[41_36]
6-19	684-688	DDR4	abstract[34]|object|object[36]	new[34]|giv|giv[36]	coref	7-5
6-20	689-692	RAM	abstract[34]|object[36]	new[34]|giv[36]	_	_
6-21	693-694	,	_	_	_	_
6-22	695-698	but	_	_	_	_
6-23	699-704	about	_	_	_	_
6-24	705-711	double	_	_	_	_
6-25	712-715	the	abstract[38]	giv[38]	_	_
6-26	716-721	write	abstract|abstract[38]	new|giv[38]	_	_
6-27	722-729	latency	abstract[38]	giv[38]	_	_
6-28	730-731	.	_	_	_	_

#Text=Bandwidth is similar to DDR4 RAM i.e. lots .
7-1	732-741	Bandwidth	object	new	_	_
7-2	742-744	is	_	_	_	_
7-3	745-752	similar	_	_	_	_
7-4	753-755	to	_	_	_	_
7-5	756-760	DDR4	abstract|object[41]	giv|giv[41]	coref|coref	23-1[156_41]|23-1[156_41]
7-6	761-764	RAM	object[41]	giv[41]	_	_
7-7	765-769	i.e.	_	_	_	_
7-8	770-774	lots	_	_	_	_
7-9	775-776	.	_	_	_	_

#Text=Unlike DRAM , PRAM does not require constant DRAM refreshes , and thus is especially attractive to power conserving devices such as laptops and mobile phones .
8-1	777-783	Unlike	_	_	_	_
8-2	784-788	DRAM	abstract	new	coref	8-9
8-3	789-790	,	_	_	_	_
8-4	791-795	PRAM	object	giv	_	_
8-5	796-800	does	_	_	_	_
8-6	801-804	not	_	_	_	_
8-7	805-812	require	_	_	_	_
8-8	813-821	constant	event[45]	new[45]	_	_
8-9	822-826	DRAM	abstract|event[45]	giv|new[45]	_	_
8-10	827-836	refreshes	event[45]	new[45]	_	_
8-11	837-838	,	_	_	_	_
8-12	839-842	and	_	_	_	_
8-13	843-847	thus	_	_	_	_
8-14	848-850	is	_	_	_	_
8-15	851-861	especially	_	_	_	_
8-16	862-872	attractive	_	_	_	_
8-17	873-875	to	_	_	_	_
8-18	876-881	power	abstract	new	_	_
8-19	882-892	conserving	_	_	_	_
8-20	893-900	devices	object[47]	new[47]	coref	24-13[166_47]
8-21	901-905	such	object[47]	new[47]	_	_
8-22	906-908	as	object[47]	new[47]	_	_
8-23	909-916	laptops	object[47]|object	new[47]|new	_	_
8-24	917-920	and	object[47]	new[47]	_	_
8-25	921-927	mobile	object[47]|object[49]	new[47]|new[49]	_	_
8-26	928-934	phones	object[47]|object[49]	new[47]|new[49]	_	_
8-27	935-936	.	_	_	_	_

#Text=The dollars per Gb ratio is dropping faster than any other type of storage currently , as if trends continue , they will match the capacity per dollar of flash storage around this time next year ( see Figure 1 in http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf ) .
9-1	937-940	The	quantity[50]	new[50]	_	_
9-2	941-948	dollars	quantity[50]	new[50]	_	_
9-3	949-952	per	quantity[50]	new[50]	_	_
9-4	953-955	Gb	quantity[50]|abstract|abstract[52]	new[50]|new|new[52]	_	_
9-5	956-961	ratio	quantity[50]|abstract[52]	new[50]|new[52]	_	_
9-6	962-964	is	_	_	_	_
9-7	965-973	dropping	_	_	_	_
9-8	974-980	faster	_	_	_	_
9-9	981-985	than	_	_	_	_
9-10	986-989	any	abstract[53]	new[53]	_	_
9-11	990-995	other	abstract[53]	new[53]	_	_
9-12	996-1000	type	abstract[53]	new[53]	_	_
9-13	1001-1003	of	abstract[53]	new[53]	_	_
9-14	1004-1011	storage	abstract[53]|object[54]	new[53]|new[54]	coref	9-30[60_54]
9-15	1012-1021	currently	abstract[53]|object[54]	new[53]|new[54]	_	_
9-16	1022-1023	,	_	_	_	_
9-17	1024-1026	as	_	_	_	_
9-18	1027-1029	if	_	_	_	_
9-19	1030-1036	trends	abstract	new	ana	9-22
9-20	1037-1045	continue	_	_	_	_
9-21	1046-1047	,	_	_	_	_
9-22	1048-1052	they	abstract	giv	_	_
9-23	1053-1057	will	_	_	_	_
9-24	1058-1063	match	_	_	_	_
9-25	1064-1067	the	quantity[57]	new[57]	_	_
9-26	1068-1076	capacity	quantity[57]	new[57]	_	_
9-27	1077-1080	per	quantity[57]	new[57]	_	_
9-28	1081-1087	dollar	quantity[57]|quantity[58]	new[57]|new[58]	_	_
9-29	1088-1090	of	quantity[57]|quantity[58]	new[57]|new[58]	_	_
9-30	1091-1096	flash	quantity[57]|quantity[58]|abstract|object[60]	new[57]|new[58]|new|giv[60]	coref|coref	9-33[61_0]|9-33[61_0]
9-31	1097-1104	storage	quantity[57]|quantity[58]|object[60]	new[57]|new[58]|giv[60]	_	_
9-32	1105-1111	around	_	_	_	_
9-33	1112-1116	this	time[61]	giv[61]	coref	21-6[152_61]
9-34	1117-1121	time	time[61]	giv[61]	_	_
9-35	1122-1126	next	time[62]	new[62]	_	_
9-36	1127-1131	year	time[62]	new[62]	_	_
9-37	1132-1133	(	_	_	_	_
9-38	1134-1137	see	_	_	_	_
9-39	1138-1144	Figure	object[63]	new[63]	_	_
9-40	1145-1146	1	object[63]	new[63]	_	_
9-41	1147-1149	in	_	_	_	_
9-42	1150-1217	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf	place	new	coref	22-1
9-43	1218-1219	)	_	_	_	_
9-44	1220-1221	.	_	_	_	_

#Text=Persisting data to these DIMMs is as straightforward as telling your CPU to flush modified cache lines to main memory .
10-1	1222-1232	Persisting	abstract[65]	new[65]	_	_
10-2	1233-1237	data	abstract[65]	new[65]	_	_
10-3	1238-1240	to	abstract[65]	new[65]	_	_
10-4	1241-1246	these	abstract[65]|object[66]	new[65]|giv[66]	_	_
10-5	1247-1252	DIMMs	abstract[65]|object[66]	new[65]|giv[66]	_	_
10-6	1253-1255	is	_	_	_	_
10-7	1256-1258	as	_	_	_	_
10-8	1259-1274	straightforward	_	_	_	_
10-9	1275-1277	as	_	_	_	_
10-10	1278-1285	telling	_	_	_	_
10-11	1286-1290	your	person|object[68]	giv|new[68]	ana|ana	20-28|20-28
10-12	1291-1294	CPU	object[68]	new[68]	_	_
10-13	1295-1297	to	_	_	_	_
10-14	1298-1303	flush	_	_	_	_
10-15	1304-1312	modified	abstract[70]	new[70]	coref	11-14[76_70]
10-16	1313-1318	cache	place|abstract[70]	new|new[70]	coref	11-17[77_0]
10-17	1319-1324	lines	abstract[70]	new[70]	_	_
10-18	1325-1327	to	_	_	_	_
10-19	1328-1332	main	abstract[71]	giv[71]	ana	11-6[0_71]
10-20	1333-1339	memory	abstract[71]	giv[71]	_	_
10-21	1340-1341	.	_	_	_	_

#Text=On current Intel CPUs , this is inefficient as one must also evict those lines from the cache , but on all recent ARM CPUs and on Ice Lake Intel CPUs onwards , one can flush modified cache lines without eviction .
11-1	1342-1344	On	_	_	_	_
11-2	1345-1352	current	abstract[73]	new[73]	_	_
11-3	1353-1358	Intel	organization|abstract[73]	new|new[73]	coref	16-1[99_0]
11-4	1359-1363	CPUs	abstract[73]	new[73]	_	_
11-5	1364-1365	,	_	_	_	_
11-6	1366-1370	this	abstract	giv	ana	11-10
11-7	1371-1373	is	_	_	_	_
11-8	1374-1385	inefficient	_	_	_	_
11-9	1386-1388	as	_	_	_	_
11-10	1389-1392	one	abstract	giv	ana	11-34
11-11	1393-1397	must	_	_	_	_
11-12	1398-1402	also	_	_	_	_
11-13	1403-1408	evict	_	_	_	_
11-14	1409-1414	those	abstract[76]	giv[76]	coref	11-37[83_76]
11-15	1415-1420	lines	abstract[76]	giv[76]	_	_
11-16	1421-1425	from	_	_	_	_
11-17	1426-1429	the	place[77]	giv[77]	coref	11-38[0_77]
11-18	1430-1435	cache	place[77]	giv[77]	_	_
11-19	1436-1437	,	_	_	_	_
11-20	1438-1441	but	_	_	_	_
11-21	1442-1444	on	_	_	_	_
11-22	1445-1448	all	object[79]	new[79]	coref	11-28[80_79]
11-23	1449-1455	recent	object[79]	new[79]	_	_
11-24	1456-1459	ARM	abstract|object[79]	new|new[79]	_	_
11-25	1460-1464	CPUs	object[79]	new[79]	_	_
11-26	1465-1468	and	_	_	_	_
11-27	1469-1471	on	_	_	_	_
11-28	1472-1475	Ice	object[80]	giv[80]	_	_
11-29	1476-1480	Lake	object[80]	giv[80]	_	_
11-30	1481-1486	Intel	object[80]	giv[80]	_	_
11-31	1487-1491	CPUs	object[80]	giv[80]	_	_
11-32	1492-1499	onwards	object[80]	giv[80]	_	_
11-33	1500-1501	,	_	_	_	_
11-34	1502-1505	one	abstract	giv	coref	12-32[93_0]
11-35	1506-1509	can	_	_	_	_
11-36	1510-1515	flush	_	_	_	_
11-37	1516-1524	modified	abstract[83]	giv[83]	coref	12-12[87_83]
11-38	1525-1530	cache	place|abstract[83]	giv|giv[83]	_	_
11-39	1531-1536	lines	abstract[83]	giv[83]	_	_
11-40	1537-1544	without	_	_	_	_
11-41	1545-1553	eviction	abstract	new	_	_
11-42	1554-1555	.	_	_	_	_

#Text=So , given that we 're about a year out from these things appearing in commodity ( if likely premium ) hardware , how would /r/cpp like to see C++ support persistent memory ?
12-1	1556-1558	So	_	_	_	_
12-2	1559-1560	,	_	_	_	_
12-3	1561-1566	given	_	_	_	_
12-4	1567-1571	that	_	_	_	_
12-5	1572-1574	we	person	acc	ana	17-10
12-6	1575-1578	're	_	_	_	_
12-7	1579-1584	about	_	_	_	_
12-8	1585-1586	a	time[86]	new[86]	_	_
12-9	1587-1591	year	time[86]	new[86]	_	_
12-10	1592-1595	out	time[86]	new[86]	_	_
12-11	1596-1600	from	time[86]	new[86]	_	_
12-12	1601-1606	these	time[86]|abstract[87]	new[86]|giv[87]	coref	14-6[0_87]
12-13	1607-1613	things	time[86]|abstract[87]	new[86]|giv[87]	_	_
12-14	1614-1623	appearing	_	_	_	_
12-15	1624-1626	in	_	_	_	_
12-16	1627-1636	commodity	abstract	new	_	_
12-17	1637-1638	(	_	_	_	_
12-18	1639-1641	if	_	_	_	_
12-19	1642-1648	likely	object[89]|abstract[90]	new[89]|new[90]	_	_
12-20	1649-1656	premium	object[89]|abstract[90]	new[89]|new[90]	_	_
12-21	1657-1658	)	abstract[90]	new[90]	_	_
12-22	1659-1667	hardware	abstract[90]	new[90]	_	_
12-23	1668-1669	,	_	_	_	_
12-24	1670-1673	how	_	_	_	_
12-25	1674-1679	would	_	_	_	_
12-26	1680-1686	/r/cpp	abstract	new	_	_
12-27	1687-1691	like	_	_	_	_
12-28	1692-1694	to	_	_	_	_
12-29	1695-1698	see	_	_	_	_
12-30	1699-1702	C++	abstract	giv	coref	19-3
12-31	1703-1710	support	abstract	new	coref	18-3[110_0]
12-32	1711-1721	persistent	abstract[93]	giv[93]	coref	16-4[0_93]
12-33	1722-1728	memory	abstract[93]	giv[93]	_	_
12-34	1729-1730	?	_	_	_	_

#Text=Some options : 1 .
13-1	1731-1735	Some	abstract[94]	new[94]	_	_
13-2	1736-1743	options	abstract[94]	new[94]	_	_
13-3	1744-1745	:	abstract[94]	new[94]	_	_
13-4	1746-1747	1	abstract[94]	new[94]	_	_
13-5	1748-1749	.	_	_	_	_

#Text=Do nothing , see how things are in a few years from now .
14-1	1750-1752	Do	_	_	_	_
14-2	1753-1760	nothing	abstract	new	_	_
14-3	1761-1762	,	_	_	_	_
14-4	1763-1766	see	_	_	_	_
14-5	1767-1770	how	_	_	_	_
14-6	1771-1777	things	abstract	giv	_	_
14-7	1778-1781	are	_	_	_	_
14-8	1782-1784	in	_	_	_	_
14-9	1785-1786	a	time[97]	new[97]	coref	21-6[153_97]
14-10	1787-1790	few	time[97]	new[97]	_	_
14-11	1791-1796	years	time[97]	new[97]	_	_
14-12	1797-1801	from	time[97]	new[97]	_	_
14-13	1802-1805	now	time[97]	new[97]	_	_
14-14	1806-1807	.	_	_	_	_

#Text=2 .
15-1	1808-1809	2	quantity	new	_	_
15-2	1810-1811	.	_	_	_	_

#Text=Intel 's persistent memory library ( http://pmem.io/pmdk/ ) will be sufficient . 3 .
16-1	1812-1817	Intel	organization[99]|object[101]	giv[99]|new[101]	coref|coref|coref|coref	17-1[103_99]|17-1[105_101]|17-1[103_99]|17-1[105_101]
16-2	1818-1820	's	organization[99]|object[101]	giv[99]|new[101]	_	_
16-3	1821-1831	persistent	object[101]	new[101]	_	_
16-4	1832-1838	memory	abstract|object[101]	giv|new[101]	coref	17-4
16-5	1839-1846	library	object[101]	new[101]	_	_
16-6	1847-1848	(	_	_	_	_
16-7	1849-1869	http://pmem.io/pmdk/	place	new	_	_
16-8	1870-1871	)	_	_	_	_
16-9	1872-1876	will	_	_	_	_
16-10	1877-1879	be	_	_	_	_
16-11	1880-1890	sufficient	_	_	_	_
16-12	1891-1892	.	_	_	_	_
16-13	1893-1894	3	_	_	_	_
16-14	1895-1896	.	_	_	_	_

#Text=Intel 's persistent memory library is too alien , we need something more STLish . 4 .
17-1	1897-1902	Intel	organization[103]|abstract[105]	giv[103]|giv[105]	coref|coref	24-2[163_103]|24-2[163_103]
17-2	1903-1905	's	organization[103]|abstract[105]	giv[103]|giv[105]	_	_
17-3	1906-1916	persistent	abstract[105]	giv[105]	_	_
17-4	1917-1923	memory	abstract|abstract[105]	giv|giv[105]	coref	19-9[113_0]
17-5	1924-1931	library	abstract[105]	giv[105]	_	_
17-6	1932-1934	is	_	_	_	_
17-7	1935-1938	too	_	_	_	_
17-8	1939-1944	alien	_	_	_	_
17-9	1945-1946	,	_	_	_	_
17-10	1947-1949	we	person	giv	ana	18-1
17-11	1950-1954	need	_	_	_	_
17-12	1955-1964	something	object	new	_	_
17-13	1965-1969	more	abstract[108]	new[108]	_	_
17-14	1970-1976	STLish	abstract[108]	new[108]	_	_
17-15	1977-1978	.	_	_	_	_
17-16	1979-1980	4	_	_	_	_
17-17	1981-1982	.	_	_	_	_

#Text=We need this support immediately !
18-1	1983-1985	We	person	giv	ana	25-35
18-2	1986-1990	need	_	_	_	_
18-3	1991-1995	this	abstract[110]	new[110]	coref	19-68[0_110]
18-4	1996-2003	support	abstract[110]	new[110]	_	_
18-5	2004-2015	immediately	_	_	_	_
18-6	2016-2017	!	_	_	_	_

#Text=Refactor the C++ 23 standard to directly support persistent memory ( understanding that this will slip the release date considerably later than 2023 ) Disclaimer : I 'm the guy presenting P1026 A call for a Data Persistence ( iostream v2 ) study group to WG21 LEWG this Wednesday morning coming , and I am absolutely canvassing for what kind of feelings the C++ userbase have regarding support for persistent memory .
19-1	2018-2026	Refactor	_	_	_	_
19-2	2027-2030	the	abstract[112]	new[112]	_	_
19-3	2031-2034	C++	abstract|abstract[112]	giv|new[112]	coref	19-64
19-4	2035-2037	23	abstract[112]	new[112]	_	_
19-5	2038-2046	standard	abstract[112]	new[112]	_	_
19-6	2047-2049	to	_	_	_	_
19-7	2050-2058	directly	_	_	_	_
19-8	2059-2066	support	_	_	_	_
19-9	2067-2077	persistent	abstract[113]	giv[113]	ana	19-14[0_113]
19-10	2078-2084	memory	abstract[113]	giv[113]	_	_
19-11	2085-2086	(	_	_	_	_
19-12	2087-2100	understanding	_	_	_	_
19-13	2101-2105	that	_	_	_	_
19-14	2106-2110	this	abstract	giv	coref	19-70[137_0]
19-15	2111-2115	will	_	_	_	_
19-16	2116-2120	slip	_	_	_	_
19-17	2121-2124	the	time[116]	new[116]	_	_
19-18	2125-2132	release	event|time[116]	new|new[116]	_	_
19-19	2133-2137	date	time[116]	new[116]	_	_
19-20	2138-2150	considerably	time[116]	new[116]	_	_
19-21	2151-2156	later	time[116]	new[116]	_	_
19-22	2157-2161	than	time[116]	new[116]	_	_
19-23	2162-2166	2023	time[116]|time	new[116]|new	_	_
19-24	2167-2168	)	time[116]	new[116]	_	_
19-25	2169-2179	Disclaimer	time[116]|object	new[116]|new	_	_
19-26	2180-2181	:	_	_	_	_
19-27	2182-2183	I	person	acc	coref	19-29[120_0]
19-28	2184-2186	'm	_	_	_	_
19-29	2187-2190	the	person[120]	giv[120]	ana	19-54[0_120]
19-30	2191-2194	guy	person[120]	giv[120]	_	_
19-31	2195-2205	presenting	_	_	_	_
19-32	2206-2211	P1026	abstract	new	_	_
19-33	2212-2213	A	abstract[122]	new[122]	_	_
19-34	2214-2218	call	abstract[122]	new[122]	_	_
19-35	2219-2222	for	abstract[122]	new[122]	_	_
19-36	2223-2224	a	abstract[122]|abstract[124]	new[122]|new[124]	appos	19-40[126_124]
19-37	2225-2229	Data	abstract[122]|abstract|abstract[124]	new[122]|new|new[124]	_	_
19-38	2230-2241	Persistence	abstract[122]|abstract[124]	new[122]|new[124]	_	_
19-39	2242-2243	(	_	_	_	_
19-40	2244-2252	iostream	place|abstract[126]	new|giv[126]	_	_
19-41	2253-2255	v2	abstract[126]	giv[126]	_	_
19-42	2256-2257	)	_	_	_	_
19-43	2258-2263	study	abstract|person[128]	new|new[128]	_	_
19-44	2264-2269	group	person[128]	new[128]	_	_
19-45	2270-2272	to	person[128]	new[128]	_	_
19-46	2273-2277	WG21	person[128]|organization|organization[130]	new[128]|new|new[130]	_	_
19-47	2278-2282	LEWG	person[128]|organization[130]	new[128]|new[130]	_	_
19-48	2283-2287	this	time[131]	new[131]	_	_
19-49	2288-2297	Wednesday	time[131]	new[131]	_	_
19-50	2298-2305	morning	time[131]	new[131]	_	_
19-51	2306-2312	coming	_	_	_	_
19-52	2313-2314	,	_	_	_	_
19-53	2315-2318	and	_	_	_	_
19-54	2319-2320	I	person	giv	ana	23-14
19-55	2321-2323	am	_	_	_	_
19-56	2324-2334	absolutely	_	_	_	_
19-57	2335-2345	canvassing	_	_	_	_
19-58	2346-2349	for	_	_	_	_
19-59	2350-2354	what	_	_	_	_
19-60	2355-2359	kind	abstract[133]	new[133]	_	_
19-61	2360-2362	of	abstract[133]	new[133]	_	_
19-62	2363-2371	feelings	abstract[133]	new[133]	_	_
19-63	2372-2375	the	person[135]	new[135]	_	_
19-64	2376-2379	C++	abstract|person[135]	giv|new[135]	coref	20-12
19-65	2380-2388	userbase	person[135]	new[135]	_	_
19-66	2389-2393	have	_	_	_	_
19-67	2394-2403	regarding	_	_	_	_
19-68	2404-2411	support	abstract	giv	_	_
19-69	2412-2415	for	_	_	_	_
19-70	2416-2426	persistent	abstract[137]	giv[137]	coref	23-26[0_137]
19-71	2427-2433	memory	abstract[137]	giv[137]	_	_
19-72	2434-2435	.	_	_	_	_

#Text=WG21 will likely prefer option 1 above , but if the C++ community were feeling very strongly about option 4 ... : ) Anyway , this is your chance to get feedback to the C++ standards committee , and maybe help guide a decision .
20-1	2436-2440	WG21	_	_	_	_
20-2	2441-2445	will	_	_	_	_
20-3	2446-2452	likely	_	_	_	_
20-4	2453-2459	prefer	_	_	_	_
20-5	2460-2466	option	abstract[138]	new[138]	_	_
20-6	2467-2468	1	abstract[138]	new[138]	_	_
20-7	2469-2474	above	_	_	_	_
20-8	2475-2476	,	_	_	_	_
20-9	2477-2480	but	_	_	_	_
20-10	2481-2483	if	_	_	_	_
20-11	2484-2487	the	organization[140]	new[140]	_	_
20-12	2488-2491	C++	abstract|organization[140]	giv|new[140]	coref	20-35
20-13	2492-2501	community	organization[140]	new[140]	_	_
20-14	2502-2506	were	_	_	_	_
20-15	2507-2514	feeling	_	_	_	_
20-16	2515-2519	very	_	_	_	_
20-17	2520-2528	strongly	_	_	_	_
20-18	2529-2534	about	_	_	_	_
20-19	2535-2541	option	abstract[141]	new[141]	ana	20-26[0_141]
20-20	2542-2543	4	abstract[141]	new[141]	_	_
20-21	2544-2547	...	_	_	_	_
20-22	2548-2549	:	_	_	_	_
20-23	2550-2551	)	_	_	_	_
20-24	2552-2558	Anyway	_	_	_	_
20-25	2559-2560	,	_	_	_	_
20-26	2561-2565	this	event	giv	coref	20-28[144_0]
20-27	2566-2568	is	_	_	_	_
20-28	2569-2573	your	person|event[144]	giv|giv[144]	ana|ana	21-6|21-6
20-29	2574-2580	chance	event[144]	giv[144]	_	_
20-30	2581-2583	to	_	_	_	_
20-31	2584-2587	get	_	_	_	_
20-32	2588-2596	feedback	abstract	new	coref	21-9
20-33	2597-2599	to	_	_	_	_
20-34	2600-2603	the	organization[148]	new[148]	_	_
20-35	2604-2607	C++	abstract|organization[148]	giv|new[148]	_	_
20-36	2608-2617	standards	abstract|organization[148]	new|new[148]	_	_
20-37	2618-2627	committee	organization[148]	new[148]	_	_
20-38	2628-2629	,	_	_	_	_
20-39	2630-2633	and	_	_	_	_
20-40	2634-2639	maybe	_	_	_	_
20-41	2640-2644	help	_	_	_	_
20-42	2645-2650	guide	_	_	_	_
20-43	2651-2652	a	event[149]	new[149]	_	_
20-44	2653-2661	decision	event[149]	new[149]	_	_
20-45	2662-2663	.	_	_	_	_

#Text=Many thanks in advance for your time and feedback .
21-1	2664-2668	Many	_	_	_	_
21-2	2669-2675	thanks	_	_	_	_
21-3	2676-2678	in	_	_	_	_
21-4	2679-2686	advance	abstract[150]	new[150]	_	_
21-5	2687-2690	for	abstract[150]	new[150]	_	_
21-6	2691-2695	your	abstract[150]|person|abstract[152]|time[153]	new[150]|giv|giv[152]|giv[153]	_	_
21-7	2696-2700	time	abstract[150]|abstract[152]|time[153]	new[150]|giv[152]|giv[153]	_	_
21-8	2701-2704	and	abstract[150]|time[153]	new[150]|giv[153]	_	_
21-9	2705-2713	feedback	abstract[150]|time[153]|abstract	new[150]|giv[153]|giv	_	_
21-10	2714-2715	.	_	_	_	_

#Text=http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf
22-1	2716-2783	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1026r0.pdf	place	giv	_	_

#Text=Non-volatile RAM is nothing new , one of the first C embedded systems I worked on had only NVRAM , which was used for working memory as well as storage .
23-1	2784-2796	Non-volatile	object[156]	giv[156]	coref	23-4[157_156]
23-2	2797-2800	RAM	object[156]	giv[156]	_	_
23-3	2801-2803	is	_	_	_	_
23-4	2804-2811	nothing	object[157]	giv[157]	appos	23-7[158_157]
23-5	2812-2815	new	object[157]	giv[157]	_	_
23-6	2816-2817	,	_	_	_	_
23-7	2818-2821	one	object[158]	giv[158]	coref	24-20[168_158]
23-8	2822-2824	of	object[158]	giv[158]	_	_
23-9	2825-2828	the	object[158]|object[159]	giv[158]|new[159]	ana	24-6[0_159]
23-10	2829-2834	first	object[158]|object[159]	giv[158]|new[159]	_	_
23-11	2835-2836	C	object[158]|object[159]	giv[158]|new[159]	_	_
23-12	2837-2845	embedded	object[158]|object[159]	giv[158]|new[159]	_	_
23-13	2846-2853	systems	object[158]|object[159]	giv[158]|new[159]	_	_
23-14	2854-2855	I	person	giv	ana	25-1
23-15	2856-2862	worked	_	_	_	_
23-16	2863-2865	on	_	_	_	_
23-17	2866-2869	had	_	_	_	_
23-18	2870-2874	only	object[161]	new[161]	_	_
23-19	2875-2880	NVRAM	object[161]	new[161]	_	_
23-20	2881-2882	,	_	_	_	_
23-21	2883-2888	which	_	_	_	_
23-22	2889-2892	was	_	_	_	_
23-23	2893-2897	used	_	_	_	_
23-24	2898-2901	for	_	_	_	_
23-25	2902-2909	working	_	_	_	_
23-26	2910-2916	memory	abstract	giv	_	_
23-27	2917-2919	as	_	_	_	_
23-28	2920-2924	well	_	_	_	_
23-29	2925-2927	as	_	_	_	_
23-30	2928-2935	storage	_	_	_	_
23-31	2936-2937	.	_	_	_	_

#Text=Incidentally the manufacturer collapsed because they could n't compete on price with other devices that used a mix of cheap RAM and Flash .
24-1	2938-2950	Incidentally	_	_	_	_
24-2	2951-2954	the	organization[163]	giv[163]	_	_
24-3	2955-2967	manufacturer	organization[163]	giv[163]	_	_
24-4	2968-2977	collapsed	_	_	_	_
24-5	2978-2985	because	_	_	_	_
24-6	2986-2990	they	object	giv	_	_
24-7	2991-2996	could	_	_	_	_
24-8	2997-3000	n't	_	_	_	_
24-9	3001-3008	compete	_	_	_	_
24-10	3009-3011	on	_	_	_	_
24-11	3012-3017	price	quantity	new	_	_
24-12	3018-3022	with	_	_	_	_
24-13	3023-3028	other	object[166]	giv[166]	_	_
24-14	3029-3036	devices	object[166]	giv[166]	_	_
24-15	3037-3041	that	_	_	_	_
24-16	3042-3046	used	_	_	_	_
24-17	3047-3048	a	abstract[167]	new[167]	_	_
24-18	3049-3052	mix	abstract[167]	new[167]	_	_
24-19	3053-3055	of	abstract[167]	new[167]	_	_
24-20	3056-3061	cheap	abstract[167]|object[168]	new[167]|giv[168]	_	_
24-21	3062-3065	RAM	abstract[167]|object[168]	new[167]|giv[168]	_	_
24-22	3066-3069	and	abstract[167]	new[167]	_	_
24-23	3070-3075	Flash	abstract[167]|person	new[167]|new	_	_
24-24	3076-3077	.	_	_	_	_

#Text=I do n't recall the exact details now , but I think the way the OS set up was that certain address ranges would be marked as do n't reset on startup , and we could assign variables to that address range via a source code extension .
25-1	3078-3079	I	person	giv	ana	25-11
25-2	3080-3082	do	_	_	_	_
25-3	3083-3086	n't	_	_	_	_
25-4	3087-3093	recall	_	_	_	_
25-5	3094-3097	the	abstract[171]	new[171]	_	_
25-6	3098-3103	exact	abstract[171]	new[171]	_	_
25-7	3104-3111	details	abstract[171]	new[171]	_	_
25-8	3112-3115	now	_	_	_	_
25-9	3116-3117	,	_	_	_	_
25-10	3118-3121	but	_	_	_	_
25-11	3122-3123	I	person	giv	ana	27-1
25-12	3124-3129	think	_	_	_	_
25-13	3130-3133	the	abstract[173]	new[173]	_	_
25-14	3134-3137	way	abstract[173]	new[173]	_	_
25-15	3138-3141	the	abstract[173]|object[174]	new[173]|new[174]	_	_
25-16	3142-3144	OS	abstract[173]|object[174]	new[173]|new[174]	_	_
25-17	3145-3148	set	abstract[173]	new[173]	_	_
25-18	3149-3151	up	abstract[173]	new[173]	_	_
25-19	3152-3155	was	abstract[173]	new[173]	_	_
25-20	3156-3160	that	abstract[173]	new[173]	_	_
25-21	3161-3168	certain	abstract[173]|abstract[176]	new[173]|new[176]	_	_
25-22	3169-3176	address	abstract[173]|place|abstract[176]	new[173]|new|new[176]	_	_
25-23	3177-3183	ranges	abstract[173]|abstract[176]	new[173]|new[176]	_	_
25-24	3184-3189	would	abstract[173]	new[173]	_	_
25-25	3190-3192	be	abstract[173]	new[173]	_	_
25-26	3193-3199	marked	abstract[173]	new[173]	_	_
25-27	3200-3202	as	abstract[173]	new[173]	_	_
25-28	3203-3205	do	abstract[173]	new[173]	_	_
25-29	3206-3209	n't	abstract[173]	new[173]	_	_
25-30	3210-3215	reset	abstract[173]	new[173]	_	_
25-31	3216-3218	on	abstract[173]	new[173]	_	_
25-32	3219-3226	startup	abstract[173]|abstract	new[173]|new	_	_
25-33	3227-3228	,	abstract[173]	new[173]	_	_
25-34	3229-3232	and	abstract[173]	new[173]	_	_
25-35	3233-3235	we	abstract[173]|person	new[173]|giv	ana	26-2
25-36	3236-3241	could	abstract[173]	new[173]	_	_
25-37	3242-3248	assign	abstract[173]	new[173]	_	_
25-38	3249-3258	variables	abstract[173]|abstract	new[173]|new	coref	26-9[185_0]
25-39	3259-3261	to	_	_	_	_
25-40	3262-3266	that	_	_	_	_
25-41	3267-3274	address	_	_	_	_
25-42	3275-3280	range	abstract	new	_	_
25-43	3281-3284	via	_	_	_	_
25-44	3285-3286	a	object[183]	new[183]	_	_
25-45	3287-3293	source	abstract|object[183]	new|new[183]	_	_
25-46	3294-3298	code	abstract|object[183]	new|new[183]	_	_
25-47	3299-3308	extension	object[183]	new[183]	_	_
25-48	3309-3310	.	_	_	_	_

#Text=Then we could either just work directly in those variables , or ( to support adding struct members in future ) . memcpy in and out of it with some primitive serialization .
26-1	3311-3315	Then	_	_	_	_
26-2	3316-3318	we	person	giv	_	_
26-3	3319-3324	could	_	_	_	_
26-4	3325-3331	either	_	_	_	_
26-5	3332-3336	just	_	_	_	_
26-6	3337-3341	work	_	_	_	_
26-7	3342-3350	directly	_	_	_	_
26-8	3351-3353	in	_	_	_	_
26-9	3354-3359	those	abstract[185]	giv[185]	_	_
26-10	3360-3369	variables	abstract[185]	giv[185]	_	_
26-11	3370-3371	,	_	_	_	_
26-12	3372-3374	or	_	_	_	_
26-13	3375-3376	(	_	_	_	_
26-14	3377-3379	to	_	_	_	_
26-15	3380-3387	support	_	_	_	_
26-16	3388-3394	adding	_	_	_	_
26-17	3395-3401	struct	abstract|abstract[187]	new|new[187]	_	_
26-18	3402-3409	members	abstract[187]	new[187]	_	_
26-19	3410-3412	in	_	_	_	_
26-20	3413-3419	future	abstract	new	ana	26-28[190_0]
26-21	3420-3421	)	_	_	_	_
26-22	3422-3423	.	_	_	_	_
26-23	3424-3430	memcpy	abstract[189]	new[189]	_	_
26-24	3431-3433	in	abstract[189]	new[189]	_	_
26-25	3434-3437	and	abstract[189]	new[189]	_	_
26-26	3438-3441	out	abstract[189]	new[189]	_	_
26-27	3442-3444	of	abstract[189]	new[189]	_	_
26-28	3445-3447	it	abstract[189]|abstract[190]	new[189]|giv[190]	_	_
26-29	3448-3452	with	abstract[189]|abstract[190]	new[189]|giv[190]	_	_
26-30	3453-3457	some	abstract[189]|abstract[190]|abstract[191]	new[189]|giv[190]|new[191]	_	_
26-31	3458-3467	primitive	abstract[189]|abstract[190]|abstract[191]	new[189]|giv[190]|new[191]	_	_
26-32	3468-3481	serialization	abstract[189]|abstract[190]|abstract[191]	new[189]|giv[190]|new[191]	_	_
26-33	3482-3483	.	_	_	_	_

#Text=I 'm sure people can come up with much better idioms nowdays though : )
27-1	3484-3485	I	person	giv	_	_
27-2	3486-3488	'm	_	_	_	_
27-3	3489-3493	sure	_	_	_	_
27-4	3494-3500	people	person	new	_	_
27-5	3501-3504	can	_	_	_	_
27-6	3505-3509	come	_	_	_	_
27-7	3510-3512	up	_	_	_	_
27-8	3513-3517	with	_	_	_	_
27-9	3518-3522	much	abstract[194]	new[194]	_	_
27-10	3523-3529	better	abstract[194]	new[194]	_	_
27-11	3530-3536	idioms	abstract[194]	new[194]	_	_
27-12	3537-3544	nowdays	_	_	_	_
27-13	3545-3551	though	_	_	_	_
27-14	3552-3553	:	_	_	_	_
27-15	3554-3555	)	_	_	_	_
