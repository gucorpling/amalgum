#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=1 .
1-1	0-1	1	quantity	new	_	_
1-2	2-3	.	_	_	_	_

#Text=Introduction
2-1	4-16	Introduction	abstract	new	_	_

#Text=Microservice architecture is a new trend rising fast for application development , as it enhances flexibility to incorporate different technologies , it reduces complexity by using lightweight and modular services , and it improves overall scalability and resilience of the system .
3-1	17-29	Microservice	object|abstract[4]	new|new[4]	coref|coref|coref|coref	3-4[5_4]|4-11|3-4[5_4]|4-11
3-2	30-42	architecture	abstract[4]	new[4]	_	_
3-3	43-45	is	_	_	_	_
3-4	46-47	a	abstract[5]	giv[5]	coref	6-6[38_5]
3-5	48-51	new	abstract[5]	giv[5]	_	_
3-6	52-57	trend	abstract[5]	giv[5]	_	_
3-7	58-64	rising	_	_	_	_
3-8	65-69	fast	_	_	_	_
3-9	70-73	for	_	_	_	_
3-10	74-85	application	abstract|abstract[7]	new|new[7]	ana|coref|ana|coref	3-14[0_7]|4-19[24_0]|3-14[0_7]|4-19[24_0]
3-11	86-97	development	abstract[7]	new[7]	_	_
3-12	98-99	,	_	_	_	_
3-13	100-102	as	_	_	_	_
3-14	103-105	it	abstract	giv	ana	3-22
3-15	106-114	enhances	_	_	_	_
3-16	115-126	flexibility	abstract	new	_	_
3-17	127-129	to	_	_	_	_
3-18	130-141	incorporate	_	_	_	_
3-19	142-151	different	abstract[10]	new[10]	_	_
3-20	152-164	technologies	abstract[10]	new[10]	_	_
3-21	165-166	,	_	_	_	_
3-22	167-169	it	abstract	giv	ana	3-33
3-23	170-177	reduces	_	_	_	_
3-24	178-188	complexity	abstract	new	_	_
3-25	189-191	by	_	_	_	_
3-26	192-197	using	_	_	_	_
3-27	198-209	lightweight	abstract[13]	new[13]	coref	4-26[25_13]
3-28	210-213	and	abstract[13]	new[13]	_	_
3-29	214-221	modular	abstract[13]	new[13]	_	_
3-30	222-230	services	abstract[13]	new[13]	_	_
3-31	231-232	,	_	_	_	_
3-32	233-236	and	_	_	_	_
3-33	237-239	it	abstract	giv	ana	4-32
3-34	240-248	improves	_	_	_	_
3-35	249-256	overall	abstract[15]	new[15]	_	_
3-36	257-268	scalability	abstract[15]	new[15]	_	_
3-37	269-272	and	_	_	_	_
3-38	273-283	resilience	abstract[16]	new[16]	_	_
3-39	284-286	of	abstract[16]	new[16]	_	_
3-40	287-290	the	abstract[16]|abstract[17]	new[16]|new[17]	_	_
3-41	291-297	system	abstract[16]|abstract[17]	new[16]|new[17]	_	_
3-42	298-299	.	_	_	_	_

#Text=In the definition ( Microservices : https://martinfowler.com/tags/microservices.html ) , the microservice architectural style is an approach to develop a single application as a suite of small services , each running in its own process and communicating with lightweight mechanisms ( e. g. , HTTP resource API ) .
4-1	300-302	In	_	_	_	_
4-2	303-306	the	abstract[18]	new[18]	appos	4-5[0_18]
4-3	307-317	definition	abstract[18]	new[18]	_	_
4-4	318-319	(	_	_	_	_
4-5	320-333	Microservices	abstract	giv	coref	6-6
4-6	334-335	:	_	_	_	_
4-7	336-384	https://martinfowler.com/tags/microservices.html	place	new	_	_
4-8	385-386	)	_	_	_	_
4-9	387-388	,	_	_	_	_
4-10	389-392	the	abstract[22]	new[22]	coref	4-15[23_22]
4-11	393-405	microservice	event|abstract[22]	giv|new[22]	_	_
4-12	406-419	architectural	abstract[22]	new[22]	_	_
4-13	420-425	style	abstract[22]	new[22]	_	_
4-14	426-428	is	_	_	_	_
4-15	429-431	an	abstract[23]	giv[23]	_	_
4-16	432-440	approach	abstract[23]	giv[23]	_	_
4-17	441-443	to	_	_	_	_
4-18	444-451	develop	_	_	_	_
4-19	452-453	a	abstract[24]	giv[24]	coref	5-1[32_24]
4-20	454-460	single	abstract[24]	giv[24]	_	_
4-21	461-472	application	abstract[24]	giv[24]	_	_
4-22	473-475	as	abstract[24]	giv[24]	_	_
4-23	476-477	a	abstract[24]	giv[24]	_	_
4-24	478-483	suite	abstract[24]	giv[24]	_	_
4-25	484-486	of	abstract[24]	giv[24]	_	_
4-26	487-492	small	abstract[24]|abstract[25]	giv[24]|giv[25]	coref	5-7[33_25]
4-27	493-501	services	abstract[24]|abstract[25]	giv[24]|giv[25]	_	_
4-28	502-503	,	_	_	_	_
4-29	504-508	each	_	_	_	_
4-30	509-516	running	_	_	_	_
4-31	517-519	in	_	_	_	_
4-32	520-523	its	abstract|object[27]	giv|new[27]	_	_
4-33	524-527	own	object[27]	new[27]	_	_
4-34	528-535	process	object[27]	new[27]	_	_
4-35	536-539	and	_	_	_	_
4-36	540-553	communicating	_	_	_	_
4-37	554-558	with	_	_	_	_
4-38	559-570	lightweight	abstract[28]	new[28]	appos	4-41[29_28]
4-39	571-581	mechanisms	abstract[28]	new[28]	_	_
4-40	582-583	(	_	_	_	_
4-41	584-586	e.	abstract[29]	giv[29]	_	_
4-42	587-589	g.	abstract[29]	giv[29]	_	_
4-43	590-591	,	abstract[29]	giv[29]	_	_
4-44	592-596	HTTP	abstract[29]|abstract|abstract[31]	giv[29]|new|new[31]	coref|coref	9-22[0_31]|9-22[0_31]
4-45	597-605	resource	abstract[29]|abstract[31]	giv[29]|new[31]	_	_
4-46	606-609	API	abstract[29]	giv[29]	_	_
4-47	610-611	)	_	_	_	_
4-48	612-613	.	_	_	_	_

#Text=The application then is composed of a number of services ( service-based application ) that work cohesively to provide complex functionalities .
5-1	614-617	The	abstract[32]	giv[32]	coref	7-4[43_32]
5-2	618-629	application	abstract[32]	giv[32]	_	_
5-3	630-634	then	_	_	_	_
5-4	635-637	is	_	_	_	_
5-5	638-646	composed	_	_	_	_
5-6	647-649	of	_	_	_	_
5-7	650-651	a	abstract[33]	giv[33]	appos	5-12[34_33]
5-8	652-658	number	abstract[33]	giv[33]	_	_
5-9	659-661	of	abstract[33]	giv[33]	_	_
5-10	662-670	services	abstract[33]	giv[33]	_	_
5-11	671-672	(	_	_	_	_
5-12	673-686	service-based	abstract[34]	giv[34]	coref	10-7[66_34]
5-13	687-698	application	abstract[34]	giv[34]	_	_
5-14	699-700	)	_	_	_	_
5-15	701-705	that	_	_	_	_
5-16	706-710	work	_	_	_	_
5-17	711-721	cohesively	_	_	_	_
5-18	722-724	to	_	_	_	_
5-19	725-732	provide	_	_	_	_
5-20	733-740	complex	abstract[35]	new[35]	coref	17-19[133_35]
5-21	741-756	functionalities	abstract[35]	new[35]	_	_
5-22	757-758	.	_	_	_	_

#Text=Due to the advantages of microservices architecture , many developers intend to transform traditional monolithic applications into service-based applications .
6-1	759-762	Due	_	_	_	_
6-2	763-765	to	_	_	_	_
6-3	766-769	the	abstract[36]	new[36]	_	_
6-4	770-780	advantages	abstract[36]	new[36]	_	_
6-5	781-783	of	abstract[36]	new[36]	_	_
6-6	784-797	microservices	abstract[36]|object|abstract[38]	new[36]|giv|giv[38]	_	_
6-7	798-810	architecture	abstract[36]|abstract[38]	new[36]|giv[38]	_	_
6-8	811-812	,	_	_	_	_
6-9	813-817	many	person[39]	new[39]	_	_
6-10	818-828	developers	person[39]	new[39]	_	_
6-11	829-835	intend	_	_	_	_
6-12	836-838	to	_	_	_	_
6-13	839-848	transform	_	_	_	_
6-14	849-860	traditional	abstract[40]	new[40]	_	_
6-15	861-871	monolithic	abstract[40]	new[40]	_	_
6-16	872-884	applications	abstract[40]	new[40]	_	_
6-17	885-889	into	_	_	_	_
6-18	890-903	service-based	abstract[41]	new[41]	coref	11-6[75_41]
6-19	904-916	applications	abstract[41]	new[41]	_	_
6-20	917-918	.	_	_	_	_

#Text=For instance , an online shopping application could be basically divided into product service , cart service , and order service , which can greatly improve the productivity , agility , and resilience of the application .
7-1	919-922	For	_	_	_	_
7-2	923-931	instance	_	_	_	_
7-3	932-933	,	_	_	_	_
7-4	934-936	an	abstract[43]	giv[43]	coref	7-35[53_43]
7-5	937-943	online	abstract[43]	giv[43]	_	_
7-6	944-952	shopping	event|abstract[43]	new|giv[43]	_	_
7-7	953-964	application	abstract[43]	giv[43]	_	_
7-8	965-970	could	_	_	_	_
7-9	971-973	be	_	_	_	_
7-10	974-983	basically	_	_	_	_
7-11	984-991	divided	_	_	_	_
7-12	992-996	into	_	_	_	_
7-13	997-1004	product	abstract|abstract[45]	new|new[45]	_	_
7-14	1005-1012	service	abstract[45]	new[45]	_	_
7-15	1013-1014	,	_	_	_	_
7-16	1015-1019	cart	object|abstract[47]	new|new[47]	_	_
7-17	1020-1027	service	abstract[47]	new[47]	_	_
7-18	1028-1029	,	_	_	_	_
7-19	1030-1033	and	_	_	_	_
7-20	1034-1039	order	abstract|object[49]	new|new[49]	coref|coref	9-15[59_49]|9-15[59_49]
7-21	1040-1047	service	object[49]	new[49]	_	_
7-22	1048-1049	,	_	_	_	_
7-23	1050-1055	which	_	_	_	_
7-24	1056-1059	can	_	_	_	_
7-25	1060-1067	greatly	_	_	_	_
7-26	1068-1075	improve	_	_	_	_
7-27	1076-1079	the	abstract[50]	new[50]	_	_
7-28	1080-1092	productivity	abstract[50]	new[50]	_	_
7-29	1093-1094	,	_	_	_	_
7-30	1095-1102	agility	abstract	new	_	_
7-31	1103-1104	,	_	_	_	_
7-32	1105-1108	and	_	_	_	_
7-33	1109-1119	resilience	abstract[52]	new[52]	_	_
7-34	1120-1122	of	abstract[52]	new[52]	_	_
7-35	1123-1126	the	abstract[52]|abstract[53]	new[52]|giv[53]	ana	8-3[0_53]
7-36	1127-1138	application	abstract[52]|abstract[53]	new[52]|giv[53]	_	_
7-37	1139-1140	.	_	_	_	_

#Text=However , it also brings challenges .
8-1	1141-1148	However	_	_	_	_
8-2	1149-1150	,	_	_	_	_
8-3	1151-1153	it	abstract	giv	coref	9-3[56_0]
8-4	1154-1158	also	_	_	_	_
8-5	1159-1165	brings	_	_	_	_
8-6	1166-1176	challenges	abstract	new	_	_
8-7	1177-1178	.	_	_	_	_

#Text=When deploying a service-based application in clouds , the scheduler has to carefully schedule each service , which may have diverse resource demands , on distributed compute clusters .
9-1	1179-1183	When	_	_	_	_
9-2	1184-1193	deploying	_	_	_	_
9-3	1194-1195	a	abstract[56]	giv[56]	coref	15-3[117_56]
9-4	1196-1209	service-based	abstract[56]	giv[56]	_	_
9-5	1210-1221	application	abstract[56]	giv[56]	_	_
9-6	1222-1224	in	_	_	_	_
9-7	1225-1231	clouds	place	new	coref	14-32
9-8	1232-1233	,	_	_	_	_
9-9	1234-1237	the	abstract[58]	new[58]	coref	26-6[198_58]
9-10	1238-1247	scheduler	abstract[58]	new[58]	_	_
9-11	1248-1251	has	_	_	_	_
9-12	1252-1254	to	_	_	_	_
9-13	1255-1264	carefully	_	_	_	_
9-14	1265-1273	schedule	_	_	_	_
9-15	1274-1278	each	object[59]	giv[59]	coref	10-24[0_59]
9-16	1279-1286	service	object[59]	giv[59]	_	_
9-17	1287-1288	,	_	_	_	_
9-18	1289-1294	which	_	_	_	_
9-19	1295-1298	may	_	_	_	_
9-20	1299-1303	have	_	_	_	_
9-21	1304-1311	diverse	abstract[61]	new[61]	coref	16-10[124_61]
9-22	1312-1320	resource	abstract|abstract[61]	giv|new[61]	coref	16-11
9-23	1321-1328	demands	abstract[61]	new[61]	_	_
9-24	1329-1330	,	_	_	_	_
9-25	1331-1333	on	_	_	_	_
9-26	1334-1345	distributed	abstract[63]	new[63]	coref	27-14[209_63]
9-27	1346-1353	compute	abstract|abstract[63]	new|new[63]	_	_
9-28	1354-1362	clusters	abstract[63]	new[63]	_	_
9-29	1363-1364	.	_	_	_	_

#Text=Furthermore , the network communication between different services needs to be handled well , as the communication conditions significantly influence the quality of service ( e. g. , the response time of a service ) .
10-1	1365-1376	Furthermore	_	_	_	_
10-2	1377-1378	,	_	_	_	_
10-3	1379-1382	the	abstract[65]	new[65]	coref	10-17[0_65]
10-4	1383-1390	network	abstract|abstract[65]	new|new[65]	coref	11-11
10-5	1391-1404	communication	abstract[65]	new[65]	_	_
10-6	1405-1412	between	abstract[65]	new[65]	_	_
10-7	1413-1422	different	abstract[65]|abstract[66]	new[65]|giv[66]	coref	11-14[78_66]
10-8	1423-1431	services	abstract[65]|abstract[66]	new[65]|giv[66]	_	_
10-9	1432-1437	needs	_	_	_	_
10-10	1438-1440	to	_	_	_	_
10-11	1441-1443	be	_	_	_	_
10-12	1444-1451	handled	_	_	_	_
10-13	1452-1456	well	_	_	_	_
10-14	1457-1458	,	_	_	_	_
10-15	1459-1461	as	_	_	_	_
10-16	1462-1465	the	abstract[68]	new[68]	_	_
10-17	1466-1479	communication	abstract|abstract[68]	giv|new[68]	coref	19-16[146_0]
10-18	1480-1490	conditions	abstract[68]	new[68]	_	_
10-19	1491-1504	significantly	_	_	_	_
10-20	1505-1514	influence	_	_	_	_
10-21	1515-1518	the	abstract[69]	new[69]	_	_
10-22	1519-1526	quality	abstract[69]	new[69]	_	_
10-23	1527-1529	of	abstract[69]	new[69]	_	_
10-24	1530-1537	service	abstract[69]|object	new[69]|giv	coref	10-33[73_0]
10-25	1538-1539	(	_	_	_	_
10-26	1540-1542	e.	_	_	_	_
10-27	1543-1545	g.	_	_	_	_
10-28	1546-1547	,	_	_	_	_
10-29	1548-1551	the	time[72]	new[72]	coref	17-15[132_72]
10-30	1552-1560	response	abstract|time[72]	new|new[72]	coref	20-16
10-31	1561-1565	time	time[72]	new[72]	_	_
10-32	1566-1568	of	time[72]	new[72]	_	_
10-33	1569-1570	a	time[72]|object[73]	new[72]|giv[73]	coref	17-11[131_73]
10-34	1571-1578	service	time[72]|object[73]	new[72]|giv[73]	_	_
10-35	1579-1580	)	_	_	_	_
10-36	1581-1582	.	_	_	_	_

#Text=Ensuring the desired performance of service-based applications , especially the network performance between the involved services , becomes increasingly important .
11-1	1583-1591	Ensuring	_	_	_	_
11-2	1592-1595	the	abstract[74]	new[74]	appos	11-9[77_74]
11-3	1596-1603	desired	abstract[74]	new[74]	_	_
11-4	1604-1615	performance	abstract[74]	new[74]	_	_
11-5	1616-1618	of	abstract[74]	new[74]	_	_
11-6	1619-1632	service-based	abstract[74]|abstract[75]	new[74]|giv[75]	coref	12-4[79_75]
11-7	1633-1645	applications	abstract[74]|abstract[75]	new[74]|giv[75]	_	_
11-8	1646-1647	,	_	_	_	_
11-9	1648-1658	especially	abstract[77]	giv[77]	coref	20-11[0_77]
11-10	1659-1662	the	abstract[77]	giv[77]	_	_
11-11	1663-1670	network	abstract|abstract[77]	giv|giv[77]	coref	31-24
11-12	1671-1682	performance	abstract[77]	giv[77]	_	_
11-13	1683-1690	between	abstract[77]	giv[77]	_	_
11-14	1691-1694	the	abstract[77]|abstract[78]	giv[77]|giv[78]	coref	12-7[80_78]
11-15	1695-1703	involved	abstract[77]|abstract[78]	giv[77]|giv[78]	_	_
11-16	1704-1712	services	abstract[77]|abstract[78]	giv[77]|giv[78]	_	_
11-17	1713-1714	,	_	_	_	_
11-18	1715-1722	becomes	_	_	_	_
11-19	1723-1735	increasingly	_	_	_	_
11-20	1736-1745	important	_	_	_	_
11-21	1746-1747	.	_	_	_	_

#Text=In general , service-based applications involve numerous distributed and complex services which usually require more computing resources beyond single machine capability .
12-1	1748-1750	In	_	_	_	_
12-2	1751-1758	general	_	_	_	_
12-3	1759-1760	,	_	_	_	_
12-4	1761-1774	service-based	abstract[79]	giv[79]	coref	13-51[106_79]
12-5	1775-1787	applications	abstract[79]	giv[79]	_	_
12-6	1788-1795	involve	_	_	_	_
12-7	1796-1804	numerous	abstract[80]	giv[80]	coref	14-20[0_80]
12-8	1805-1816	distributed	abstract[80]	giv[80]	_	_
12-9	1817-1820	and	abstract[80]	giv[80]	_	_
12-10	1821-1828	complex	abstract[80]	giv[80]	_	_
12-11	1829-1837	services	abstract[80]	giv[80]	_	_
12-12	1838-1843	which	_	_	_	_
12-13	1844-1851	usually	_	_	_	_
12-14	1852-1859	require	_	_	_	_
12-15	1860-1864	more	abstract[82]	new[82]	coref	17-7[130_82]
12-16	1865-1874	computing	abstract|abstract[82]	new|new[82]	coref	13-10
12-17	1875-1884	resources	abstract[82]	new[82]	_	_
12-18	1885-1891	beyond	_	_	_	_
12-19	1892-1898	single	abstract[84]	new[84]	_	_
12-20	1899-1906	machine	object|abstract[84]	new|new[84]	coref	17-1[129_0]
12-21	1907-1917	capability	abstract[84]	new[84]	_	_
12-22	1918-1919	.	_	_	_	_

#Text=Therefore , a cluster of networked machines or cloud computing platforms ( e. g. , Amazon EC2 ( Amazon EC2 : https://aws.amazon.com ) , Microsoft Azure ( Microsoft Azure : https://azure.microsoft.com ) , or Google Cloud Platform ( Google Cloud Platform : https://cloud.google.com ) ) are generally leveraged to run service-based applications .
13-1	1920-1929	Therefore	_	_	_	_
13-2	1930-1931	,	_	_	_	_
13-3	1932-1933	a	abstract[85]	new[85]	coref	18-16[138_85]
13-4	1934-1941	cluster	abstract[85]	new[85]	_	_
13-5	1942-1944	of	abstract[85]	new[85]	_	_
13-6	1945-1954	networked	abstract[85]|object[86]	new[85]|new[86]	coref	18-20[139_86]
13-7	1955-1963	machines	abstract[85]|object[86]	new[85]|new[86]	_	_
13-8	1964-1966	or	abstract[85]	new[85]	_	_
13-9	1967-1972	cloud	abstract[85]|object[88]	new[85]|new[88]	appos	13-16[90_88]
13-10	1973-1982	computing	abstract[85]|abstract|object[88]	new[85]|giv|new[88]	_	_
13-11	1983-1992	platforms	abstract[85]|object[88]	new[85]|new[88]	_	_
13-12	1993-1994	(	_	_	_	_
13-13	1995-1997	e.	_	_	_	_
13-14	1998-2000	g.	_	_	_	_
13-15	2001-2002	,	_	_	_	_
13-16	2003-2009	Amazon	organization|object[90]	new|giv[90]	coref|appos|coref|appos	13-19|13-19[92_90]|13-19|13-19[92_90]
13-17	2010-2013	EC2	object[90]	giv[90]	_	_
13-18	2014-2015	(	_	_	_	_
13-19	2016-2022	Amazon	organization|object[92]	giv|giv[92]	_	_
13-20	2023-2026	EC2	object[92]	giv[92]	_	_
13-21	2027-2028	:	_	_	_	_
13-22	2029-2051	https://aws.amazon.com	place	new	_	_
13-23	2052-2053	)	_	_	_	_
13-24	2054-2055	,	_	_	_	_
13-25	2056-2065	Microsoft	organization|organization[95]	new|new[95]	coref|appos|coref|appos	13-28|13-28[97_95]|13-28|13-28[97_95]
13-26	2066-2071	Azure	organization[95]	new[95]	_	_
13-27	2072-2073	(	_	_	_	_
13-28	2074-2083	Microsoft	organization|organization[97]	giv|giv[97]	_	_
13-29	2084-2089	Azure	organization[97]	giv[97]	_	_
13-30	2090-2091	:	_	_	_	_
13-31	2092-2119	https://azure.microsoft.com	place	new	_	_
13-32	2120-2121	)	_	_	_	_
13-33	2122-2123	,	_	_	_	_
13-34	2124-2126	or	_	_	_	_
13-35	2127-2133	Google	organization|organization[101]	new|new[101]	coref|appos|coref|appos	13-39|13-39[104_101]|13-39|13-39[104_101]
13-36	2134-2139	Cloud	person|organization[101]	new|new[101]	coref	13-40
13-37	2140-2148	Platform	organization[101]	new[101]	_	_
13-38	2149-2150	(	_	_	_	_
13-39	2151-2157	Google	organization|object[104]	giv|giv[104]	_	_
13-40	2158-2163	Cloud	person|object[104]	giv|giv[104]	_	_
13-41	2164-2172	Platform	object[104]	giv[104]	_	_
13-42	2173-2174	:	_	_	_	_
13-43	2175-2199	https://cloud.google.com	place	new	_	_
13-44	2200-2201	)	_	_	_	_
13-45	2202-2203	)	_	_	_	_
13-46	2204-2207	are	_	_	_	_
13-47	2208-2217	generally	_	_	_	_
13-48	2218-2227	leveraged	_	_	_	_
13-49	2228-2230	to	_	_	_	_
13-50	2231-2234	run	_	_	_	_
13-51	2235-2248	service-based	abstract[106]	giv[106]	coref	14-30[0_106]
13-52	2249-2261	applications	abstract[106]	giv[106]	_	_
13-53	2262-2263	.	_	_	_	_

#Text=More importantly , containers are emerging as the disruptive technology for effectively encapsulating runtime contexts of software components and services , which significantly improves portability and efficiency of deploying applications in clouds .
14-1	2264-2268	More	_	_	_	_
14-2	2269-2280	importantly	_	_	_	_
14-3	2281-2282	,	_	_	_	_
14-4	2283-2293	containers	object	new	_	_
14-5	2294-2297	are	_	_	_	_
14-6	2298-2306	emerging	_	_	_	_
14-7	2307-2309	as	_	_	_	_
14-8	2310-2313	the	_	_	_	_
14-9	2314-2324	disruptive	_	_	_	_
14-10	2325-2335	technology	_	_	_	_
14-11	2336-2339	for	_	_	_	_
14-12	2340-2351	effectively	_	_	_	_
14-13	2352-2365	encapsulating	_	_	_	_
14-14	2366-2373	runtime	time|abstract[109]	new|new[109]	_	_
14-15	2374-2382	contexts	abstract[109]	new[109]	_	_
14-16	2383-2385	of	abstract[109]	new[109]	_	_
14-17	2386-2394	software	abstract[109]|object|abstract[111]	new[109]|new|new[111]	coref|coref	30-7[228_111]|30-7[228_111]
14-18	2395-2405	components	abstract[109]|abstract[111]	new[109]|new[111]	_	_
14-19	2406-2409	and	abstract[109]	new[109]	_	_
14-20	2410-2418	services	abstract[109]|abstract	new[109]|giv	coref	16-3
14-21	2419-2420	,	_	_	_	_
14-22	2421-2426	which	_	_	_	_
14-23	2427-2440	significantly	_	_	_	_
14-24	2441-2449	improves	_	_	_	_
14-25	2450-2461	portability	abstract	new	_	_
14-26	2462-2465	and	_	_	_	_
14-27	2466-2476	efficiency	abstract	new	coref	25-8[190_0]
14-28	2477-2479	of	_	_	_	_
14-29	2480-2489	deploying	_	_	_	_
14-30	2490-2502	applications	abstract	giv	coref	23-5[174_0]
14-31	2503-2505	in	_	_	_	_
14-32	2506-2512	clouds	place	giv	coref	15-7
14-33	2513-2514	.	_	_	_	_

#Text=When deploying a service-based application in clouds , several essential aspects have to be taken into account .
15-1	2515-2519	When	_	_	_	_
15-2	2520-2529	deploying	_	_	_	_
15-3	2530-2531	a	abstract[117]	giv[117]	coref	16-6[122_117]
15-4	2532-2545	service-based	abstract[117]	giv[117]	_	_
15-5	2546-2557	application	abstract[117]	giv[117]	_	_
15-6	2558-2560	in	_	_	_	_
15-7	2561-2567	clouds	place	giv	coref	23-11
15-8	2568-2569	,	_	_	_	_
15-9	2570-2577	several	abstract[119]	new[119]	_	_
15-10	2578-2587	essential	abstract[119]	new[119]	_	_
15-11	2588-2595	aspects	abstract[119]	new[119]	_	_
15-12	2596-2600	have	_	_	_	_
15-13	2601-2603	to	_	_	_	_
15-14	2604-2606	be	_	_	_	_
15-15	2607-2612	taken	_	_	_	_
15-16	2613-2617	into	_	_	_	_
15-17	2618-2625	account	abstract	new	_	_
15-18	2626-2627	.	_	_	_	_

#Text=First , services involved in the application often have diverse resource demands , such as CPU , memory and disk .
16-1	2628-2633	First	_	_	_	_
16-2	2634-2635	,	_	_	_	_
16-3	2636-2644	services	abstract	giv	coref	19-3
16-4	2645-2653	involved	_	_	_	_
16-5	2654-2656	in	_	_	_	_
16-6	2657-2660	the	abstract[122]	giv[122]	coref	19-6[141_122]
16-7	2661-2672	application	abstract[122]	giv[122]	_	_
16-8	2673-2678	often	_	_	_	_
16-9	2679-2683	have	_	_	_	_
16-10	2684-2691	diverse	abstract[124]	giv[124]	coref	19-10[143_124]
16-11	2692-2700	resource	abstract|abstract[124]	giv|giv[124]	coref	18-2
16-12	2701-2708	demands	abstract[124]	giv[124]	_	_
16-13	2709-2710	,	abstract[124]	giv[124]	_	_
16-14	2711-2715	such	abstract[124]	giv[124]	_	_
16-15	2716-2718	as	abstract[124]	giv[124]	_	_
16-16	2719-2722	CPU	abstract[124]|abstract|person[126]	giv[124]|new|new[126]	ana|ana	19-13[144_126]|19-13[144_126]
16-17	2723-2724	,	abstract[124]|person[126]	giv[124]|new[126]	_	_
16-18	2725-2731	memory	abstract[124]|person[126]|abstract	giv[124]|new[126]|new	_	_
16-19	2732-2735	and	abstract[124]|person[126]	giv[124]|new[126]	_	_
16-20	2736-2740	disk	abstract[124]|person[126]|object	giv[124]|new[126]|new	_	_
16-21	2741-2742	.	_	_	_	_

#Text=The underlying machine has to ensure sufficient resources to run each service and at the same time provide cohesive functionalities .
17-1	2743-2746	The	object[129]	giv[129]	coref	21-22[166_129]
17-2	2747-2757	underlying	object[129]	giv[129]	_	_
17-3	2758-2765	machine	object[129]	giv[129]	_	_
17-4	2766-2769	has	_	_	_	_
17-5	2770-2772	to	_	_	_	_
17-6	2773-2779	ensure	_	_	_	_
17-7	2780-2790	sufficient	abstract[130]	giv[130]	_	_
17-8	2791-2800	resources	abstract[130]	giv[130]	_	_
17-9	2801-2803	to	_	_	_	_
17-10	2804-2807	run	_	_	_	_
17-11	2808-2812	each	object[131]	giv[131]	coref	18-5[136_131]
17-12	2813-2820	service	object[131]	giv[131]	_	_
17-13	2821-2824	and	_	_	_	_
17-14	2825-2827	at	_	_	_	_
17-15	2828-2831	the	time[132]	giv[132]	_	_
17-16	2832-2836	same	time[132]	giv[132]	_	_
17-17	2837-2841	time	time[132]	giv[132]	_	_
17-18	2842-2849	provide	_	_	_	_
17-19	2850-2858	cohesive	abstract[133]	giv[133]	_	_
17-20	2859-2874	functionalities	abstract[133]	giv[133]	_	_
17-21	2875-2876	.	_	_	_	_

#Text=Efficient resource allocation to each service is difficult , while it becomes more challenging when the cluster consists of heterogeneous machines .
18-1	2877-2886	Efficient	abstract[135]	new[135]	_	_
18-2	2887-2895	resource	abstract|abstract[135]	giv|new[135]	coref	22-15
18-3	2896-2906	allocation	abstract[135]	new[135]	_	_
18-4	2907-2909	to	abstract[135]	new[135]	_	_
18-5	2910-2914	each	abstract[135]|object[136]	new[135]|giv[136]	ana	18-11[0_136]
18-6	2915-2922	service	abstract[135]|object[136]	new[135]|giv[136]	_	_
18-7	2923-2925	is	_	_	_	_
18-8	2926-2935	difficult	_	_	_	_
18-9	2936-2937	,	_	_	_	_
18-10	2938-2943	while	_	_	_	_
18-11	2944-2946	it	object	giv	coref	20-19[155_0]
18-12	2947-2954	becomes	_	_	_	_
18-13	2955-2959	more	_	_	_	_
18-14	2960-2971	challenging	_	_	_	_
18-15	2972-2976	when	_	_	_	_
18-16	2977-2980	the	abstract[138]	giv[138]	coref	24-13[0_138]
18-17	2981-2988	cluster	abstract[138]	giv[138]	_	_
18-18	2989-2997	consists	_	_	_	_
18-19	2998-3000	of	_	_	_	_
18-20	3001-3014	heterogeneous	object[139]	giv[139]	_	_
18-21	3015-3023	machines	object[139]	giv[139]	_	_
18-22	3024-3025	.	_	_	_	_

#Text=Second , services involved in the application often have traffic demands among them due to data communication , which require meticulous treatment .
19-1	3026-3032	Second	_	_	_	_
19-2	3033-3034	,	_	_	_	_
19-3	3035-3043	services	abstract	giv	coref	21-12[162_0]
19-4	3044-3052	involved	_	_	_	_
19-5	3053-3055	in	_	_	_	_
19-6	3056-3059	the	abstract[141]	giv[141]	coref	24-9[177_141]
19-7	3060-3071	application	abstract[141]	giv[141]	_	_
19-8	3072-3077	often	_	_	_	_
19-9	3078-3082	have	_	_	_	_
19-10	3083-3090	traffic	abstract|abstract[143]	new|giv[143]	coref|coref|coref|coref	20-5|20-4[150_143]|20-5|20-4[150_143]
19-11	3091-3098	demands	abstract[143]	giv[143]	_	_
19-12	3099-3104	among	abstract[143]	giv[143]	_	_
19-13	3105-3109	them	abstract[143]|person[144]	giv[143]|giv[144]	_	_
19-14	3110-3113	due	abstract[143]|person[144]	giv[143]|giv[144]	_	_
19-15	3114-3116	to	_	_	_	_
19-16	3117-3121	data	abstract|abstract[146]	new|giv[146]	coref|coref	21-29[167_146]|21-29[167_146]
19-17	3122-3135	communication	abstract[146]	giv[146]	_	_
19-18	3136-3137	,	_	_	_	_
19-19	3138-3143	which	_	_	_	_
19-20	3144-3151	require	_	_	_	_
19-21	3152-3162	meticulous	abstract[147]	new[147]	_	_
19-22	3163-3172	treatment	abstract[147]	new[147]	_	_
19-23	3173-3174	.	_	_	_	_

#Text=Poor handling of the traffic demands can result in severe performance degradation , as the response time of a service is directly affected by its traffic situation .
20-1	3175-3179	Poor	abstract[148]	new[148]	_	_
20-2	3180-3188	handling	abstract[148]	new[148]	_	_
20-3	3189-3191	of	abstract[148]	new[148]	_	_
20-4	3192-3195	the	abstract[148]|abstract[150]	new[148]|giv[150]	coref	21-2[160_150]
20-5	3196-3203	traffic	abstract[148]|abstract|abstract[150]	new[148]|giv|giv[150]	coref	20-26
20-6	3204-3211	demands	abstract[148]|abstract[150]	new[148]|giv[150]	_	_
20-7	3212-3215	can	_	_	_	_
20-8	3216-3222	result	_	_	_	_
20-9	3223-3225	in	_	_	_	_
20-10	3226-3232	severe	abstract[152]	new[152]	_	_
20-11	3233-3244	performance	abstract|abstract[152]	giv|new[152]	_	_
20-12	3245-3256	degradation	abstract[152]	new[152]	_	_
20-13	3257-3258	,	_	_	_	_
20-14	3259-3261	as	_	_	_	_
20-15	3262-3265	the	abstract[154]	new[154]	_	_
20-16	3266-3274	response	abstract|abstract[154]	giv|new[154]	_	_
20-17	3275-3279	time	abstract[154]	new[154]	_	_
20-18	3280-3282	of	abstract[154]	new[154]	_	_
20-19	3283-3284	a	abstract[154]|object[155]	new[154]|giv[155]	ana	20-25[0_155]
20-20	3285-3292	service	abstract[154]|object[155]	new[154]|giv[155]	_	_
20-21	3293-3295	is	_	_	_	_
20-22	3296-3304	directly	_	_	_	_
20-23	3305-3313	affected	_	_	_	_
20-24	3314-3316	by	_	_	_	_
20-25	3317-3320	its	object|abstract[158]	giv|new[158]	coref|coref	24-19[180_0]|24-19[180_0]
20-26	3321-3328	traffic	abstract|abstract[158]	giv|new[158]	coref	21-3
20-27	3329-3338	situation	abstract[158]	new[158]	_	_
20-28	3339-3340	.	_	_	_	_

#Text=Considering the traffic demands , an intuitive solution is to place the services that have large traffic demands among them on the same machine , which can achieve intra-machine communication and reduce inter-machine traffic .
21-1	3341-3352	Considering	_	_	_	_
21-2	3353-3356	the	abstract[160]	giv[160]	coref	21-16[164_160]
21-3	3357-3364	traffic	abstract|abstract[160]	giv|giv[160]	coref	21-17
21-4	3365-3372	demands	abstract[160]	giv[160]	_	_
21-5	3373-3374	,	_	_	_	_
21-6	3375-3377	an	event[161]	new[161]	_	_
21-7	3378-3387	intuitive	event[161]	new[161]	_	_
21-8	3388-3396	solution	event[161]	new[161]	_	_
21-9	3397-3399	is	_	_	_	_
21-10	3400-3402	to	_	_	_	_
21-11	3403-3408	place	_	_	_	_
21-12	3409-3412	the	abstract[162]	giv[162]	ana	21-20[0_162]
21-13	3413-3421	services	abstract[162]	giv[162]	_	_
21-14	3422-3426	that	_	_	_	_
21-15	3427-3431	have	_	_	_	_
21-16	3432-3437	large	abstract[164]	giv[164]	coref	24-27[184_164]
21-17	3438-3445	traffic	abstract|abstract[164]	giv|giv[164]	coref	21-33[168_0]
21-18	3446-3453	demands	abstract[164]	giv[164]	_	_
21-19	3454-3459	among	abstract[164]	giv[164]	_	_
21-20	3460-3464	them	abstract[164]|abstract	giv[164]|giv	coref	22-3[169_0]
21-21	3465-3467	on	_	_	_	_
21-22	3468-3471	the	object[166]	giv[166]	coref	22-10[170_166]
21-23	3472-3476	same	object[166]	giv[166]	_	_
21-24	3477-3484	machine	object[166]	giv[166]	_	_
21-25	3485-3486	,	_	_	_	_
21-26	3487-3492	which	_	_	_	_
21-27	3493-3496	can	_	_	_	_
21-28	3497-3504	achieve	_	_	_	_
21-29	3505-3518	intra-machine	abstract[167]	giv[167]	_	_
21-30	3519-3532	communication	abstract[167]	giv[167]	_	_
21-31	3533-3536	and	_	_	_	_
21-32	3537-3543	reduce	_	_	_	_
21-33	3544-3557	inter-machine	abstract[168]	giv[168]	coref	24-31[0_168]
21-34	3558-3565	traffic	abstract[168]	giv[168]	_	_
21-35	3566-3567	.	_	_	_	_

#Text=However , such services cannot all be co-located on one machine due to limited resource capacities .
22-1	3568-3575	However	_	_	_	_
22-2	3576-3577	,	_	_	_	_
22-3	3578-3582	such	abstract[169]	giv[169]	_	_
22-4	3583-3591	services	abstract[169]	giv[169]	_	_
22-5	3592-3598	cannot	_	_	_	_
22-6	3599-3602	all	_	_	_	_
22-7	3603-3605	be	_	_	_	_
22-8	3606-3616	co-located	_	_	_	_
22-9	3617-3619	on	_	_	_	_
22-10	3620-3623	one	object[170]	giv[170]	coref	31-12[234_170]
22-11	3624-3631	machine	object[170]	giv[170]	_	_
22-12	3632-3635	due	object[170]	giv[170]	_	_
22-13	3636-3638	to	_	_	_	_
22-14	3639-3646	limited	abstract[172]	new[172]	_	_
22-15	3647-3655	resource	abstract|abstract[172]	giv|new[172]	coref	24-28
22-16	3656-3666	capacities	abstract[172]	new[172]	_	_
22-17	3667-3668	.	_	_	_	_

#Text=Hence , placement of service-based applications is quite complicated in clouds .
23-1	3669-3674	Hence	_	_	_	_
23-2	3675-3676	,	_	_	_	_
23-3	3677-3686	placement	abstract[173]	new[173]	coref	27-11[0_173]
23-4	3687-3689	of	abstract[173]	new[173]	_	_
23-5	3690-3703	service-based	abstract[173]|abstract[174]	new[173]|giv[174]	coref	28-10[213_174]
23-6	3704-3716	applications	abstract[173]|abstract[174]	new[173]|giv[174]	_	_
23-7	3717-3719	is	_	_	_	_
23-8	3720-3725	quite	_	_	_	_
23-9	3726-3737	complicated	_	_	_	_
23-10	3738-3740	in	_	_	_	_
23-11	3741-3747	clouds	place	giv	_	_
23-12	3748-3749	.	_	_	_	_

#Text=In order to achieve a desired performance of a service-based application , cluster schedulers have to carefully place each service of the application with respect to the resource demands and traffic demands .
24-1	3750-3752	In	_	_	_	_
24-2	3753-3758	order	_	_	_	_
24-3	3759-3761	to	_	_	_	_
24-4	3762-3769	achieve	_	_	_	_
24-5	3770-3771	a	abstract[176]	new[176]	_	_
24-6	3772-3779	desired	abstract[176]	new[176]	_	_
24-7	3780-3791	performance	abstract[176]	new[176]	_	_
24-8	3792-3794	of	abstract[176]	new[176]	_	_
24-9	3795-3796	a	abstract[176]|abstract[177]	new[176]|giv[177]	coref	24-22[181_177]
24-10	3797-3810	service-based	abstract[176]|abstract[177]	new[176]|giv[177]	_	_
24-11	3811-3822	application	abstract[176]|abstract[177]	new[176]|giv[177]	_	_
24-12	3823-3824	,	_	_	_	_
24-13	3825-3832	cluster	abstract|abstract[179]	giv|new[179]	coref|coref|coref|coref	25-1[186_0]|32-13[246_179]|25-1[186_0]|32-13[246_179]
24-14	3833-3843	schedulers	abstract[179]	new[179]	_	_
24-15	3844-3848	have	_	_	_	_
24-16	3849-3851	to	_	_	_	_
24-17	3852-3861	carefully	_	_	_	_
24-18	3862-3867	place	_	_	_	_
24-19	3868-3872	each	object[180]	giv[180]	coref	30-11[0_180]
24-20	3873-3880	service	object[180]	giv[180]	_	_
24-21	3881-3883	of	object[180]	giv[180]	_	_
24-22	3884-3887	the	object[180]|abstract[181]	giv[180]|giv[181]	coref	30-15[0_181]
24-23	3888-3899	application	object[180]|abstract[181]	giv[180]|giv[181]	_	_
24-24	3900-3904	with	object[180]|abstract[181]	giv[180]|giv[181]	_	_
24-25	3905-3912	respect	object[180]|abstract[181]|abstract[182]	giv[180]|giv[181]|new[182]	_	_
24-26	3913-3915	to	object[180]|abstract[181]|abstract[182]	giv[180]|giv[181]|new[182]	_	_
24-27	3916-3919	the	object[180]|abstract[181]|abstract[182]|abstract[184]	giv[180]|giv[181]|new[182]|giv[184]	coref	28-16[216_184]
24-28	3920-3928	resource	object[180]|abstract[181]|abstract[182]|abstract|abstract[184]	giv[180]|giv[181]|new[182]|giv|giv[184]	coref	25-10
24-29	3929-3936	demands	object[180]|abstract[181]|abstract[182]|abstract[184]	giv[180]|giv[181]|new[182]|giv[184]	_	_
24-30	3937-3940	and	object[180]|abstract[181]|abstract[182]|abstract[184]	giv[180]|giv[181]|new[182]|giv[184]	_	_
24-31	3941-3948	traffic	object[180]|abstract[181]|abstract[182]|abstract[184]|abstract	giv[180]|giv[181]|new[182]|giv[184]|giv	coref	28-17
24-32	3949-3956	demands	object[180]|abstract[181]|abstract[182]|abstract[184]	giv[180]|giv[181]|new[182]|giv[184]	_	_
24-33	3957-3958	.	_	_	_	_

#Text=Recent cluster scheduling methods mainly focus on the cluster resource efficiency or job completion time of batch workloads .
25-1	3959-3965	Recent	abstract[186]|abstract[187]	giv[186]|new[187]	coref|coref	25-9[0_186]|25-9[0_186]
25-2	3966-3973	cluster	abstract[186]|abstract[187]	giv[186]|new[187]	_	_
25-3	3974-3984	scheduling	abstract[187]	new[187]	_	_
25-4	3985-3992	methods	abstract[187]	new[187]	_	_
25-5	3993-3999	mainly	_	_	_	_
25-6	4000-4005	focus	_	_	_	_
25-7	4006-4008	on	_	_	_	_
25-8	4009-4012	the	abstract[190]	giv[190]	_	_
25-9	4013-4020	cluster	abstract|abstract[190]	giv|giv[190]	coref	26-8
25-10	4021-4029	resource	abstract|abstract[190]	giv|giv[190]	coref	31-25
25-11	4030-4040	efficiency	abstract[190]	giv[190]	_	_
25-12	4041-4043	or	_	_	_	_
25-13	4044-4047	job	abstract|object[193]	new|new[193]	_	_
25-14	4048-4058	completion	event|object[193]	new|new[193]	_	_
25-15	4059-4063	time	object[193]	new[193]	_	_
25-16	4064-4066	of	object[193]	new[193]	_	_
25-17	4067-4072	batch	object[193]|quantity|abstract[195]	new[193]|new|new[195]	_	_
25-18	4073-4082	workloads	object[193]|abstract[195]	new[193]|new[195]	_	_
25-19	4083-4084	.	_	_	_	_

#Text=For instance , Tetris , a multi-resource cluster scheduler , adapts heuristics for the multi-dimensional bin packing problem to efficiently pack tasks on multi-resource cluster .
26-1	4085-4088	For	_	_	_	_
26-2	4089-4097	instance	_	_	_	_
26-3	4098-4099	,	_	_	_	_
26-4	4100-4106	Tetris	organization	new	_	_
26-5	4107-4108	,	_	_	_	_
26-6	4109-4110	a	abstract[198]	giv[198]	coref	27-3[206_198]
26-7	4111-4125	multi-resource	abstract[198]	giv[198]	_	_
26-8	4126-4133	cluster	abstract|abstract[198]	giv|giv[198]	coref	26-24[203_0]
26-9	4134-4143	scheduler	abstract[198]	giv[198]	_	_
26-10	4144-4145	,	_	_	_	_
26-11	4146-4152	adapts	_	_	_	_
26-12	4153-4163	heuristics	abstract	new	_	_
26-13	4164-4167	for	_	_	_	_
26-14	4168-4171	the	place[200]	new[200]	_	_
26-15	4172-4189	multi-dimensional	place[200]	new[200]	_	_
26-16	4190-4193	bin	place[200]	new[200]	_	_
26-17	4194-4201	packing	_	_	_	_
26-18	4202-4209	problem	abstract	new	coref	29-16
26-19	4210-4212	to	_	_	_	_
26-20	4213-4224	efficiently	_	_	_	_
26-21	4225-4229	pack	_	_	_	_
26-22	4230-4235	tasks	abstract	new	_	_
26-23	4236-4238	on	_	_	_	_
26-24	4239-4253	multi-resource	abstract[203]	giv[203]	coref	27-5[0_203]
26-25	4254-4261	cluster	abstract[203]	giv[203]	_	_
26-26	4262-4263	.	_	_	_	_

#Text=Firmament , a centralized cluster scheduler , can make high-quality placement decisions on large-scale clusters via a min-cost max-flow optimization .
27-1	4264-4273	Firmament	organization	new	_	_
27-2	4274-4275	,	_	_	_	_
27-3	4276-4277	a	abstract[206]	giv[206]	_	_
27-4	4278-4289	centralized	abstract[206]	giv[206]	_	_
27-5	4290-4297	cluster	abstract|abstract[206]	giv|giv[206]	coref	31-28[241_0]
27-6	4298-4307	scheduler	abstract[206]	giv[206]	_	_
27-7	4308-4309	,	_	_	_	_
27-8	4310-4313	can	_	_	_	_
27-9	4314-4318	make	_	_	_	_
27-10	4319-4331	high-quality	abstract[208]	new[208]	coref	28-22[0_208]
27-11	4332-4341	placement	abstract|abstract[208]	giv|new[208]	coref	30-14[230_0]
27-12	4342-4351	decisions	abstract[208]	new[208]	_	_
27-13	4352-4354	on	abstract[208]	new[208]	_	_
27-14	4355-4366	large-scale	abstract[208]|abstract[209]	new[208]|giv[209]	_	_
27-15	4367-4375	clusters	abstract[208]|abstract[209]	new[208]|giv[209]	_	_
27-16	4376-4379	via	abstract[208]|abstract[209]	new[208]|giv[209]	_	_
27-17	4380-4381	a	abstract[208]|abstract[209]|abstract[210]	new[208]|giv[209]|new[210]	_	_
27-18	4382-4390	min-cost	abstract[208]|abstract[209]|abstract[210]	new[208]|giv[209]|new[210]	_	_
27-19	4391-4399	max-flow	abstract[208]|abstract[209]|abstract[210]	new[208]|giv[209]|new[210]	_	_
27-20	4400-4412	optimization	abstract[208]|abstract[209]|abstract[210]	new[208]|giv[209]|new[210]	_	_
27-21	4413-4414	.	_	_	_	_

#Text=Unfortunately , these solutions would face difficulties for handling service-based applications , as they ignore the traffic demands when making placement decisions .
28-1	4415-4428	Unfortunately	_	_	_	_
28-2	4429-4430	,	_	_	_	_
28-3	4431-4436	these	abstract[211]	new[211]	coref	31-5[233_211]
28-4	4437-4446	solutions	abstract[211]	new[211]	_	_
28-5	4447-4452	would	_	_	_	_
28-6	4453-4457	face	_	_	_	_
28-7	4458-4470	difficulties	abstract	new	_	_
28-8	4471-4474	for	_	_	_	_
28-9	4475-4483	handling	_	_	_	_
28-10	4484-4497	service-based	abstract[213]	giv[213]	ana	28-14[0_213]
28-11	4498-4510	applications	abstract[213]	giv[213]	_	_
28-12	4511-4512	,	_	_	_	_
28-13	4513-4515	as	_	_	_	_
28-14	4516-4520	they	abstract	giv	ana	30-3
28-15	4521-4527	ignore	_	_	_	_
28-16	4528-4531	the	abstract[216]	giv[216]	_	_
28-17	4532-4539	traffic	abstract|abstract[216]	giv|giv[216]	_	_
28-18	4540-4547	demands	abstract[216]	giv[216]	_	_
28-19	4548-4552	when	_	_	_	_
28-20	4553-4559	making	_	_	_	_
28-21	4560-4569	placement	_	_	_	_
28-22	4570-4579	decisions	abstract	giv	_	_
28-23	4580-4581	.	_	_	_	_

#Text=Some other research works concentrate on composite Software as a service ( SaaS ) placement problem , which try to minimize the total execution time for composite SaaS .
29-1	4582-4586	Some	abstract[219]	new[219]	_	_
29-2	4587-4592	other	abstract[219]	new[219]	_	_
29-3	4593-4601	research	abstract|abstract[219]	new|new[219]	coref	31-6
29-4	4602-4607	works	abstract[219]	new[219]	_	_
29-5	4608-4619	concentrate	_	_	_	_
29-6	4620-4622	on	_	_	_	_
29-7	4623-4632	composite	abstract[220]	new[220]	_	_
29-8	4633-4641	Software	abstract[220]	new[220]	_	_
29-9	4642-4644	as	_	_	_	_
29-10	4645-4646	a	_	_	_	_
29-11	4647-4654	service	_	_	_	_
29-12	4655-4656	(	_	_	_	_
29-13	4657-4661	SaaS	abstract	new	coref	29-27[225_0]
29-14	4662-4663	)	_	_	_	_
29-15	4664-4673	placement	_	_	_	_
29-16	4674-4681	problem	abstract	giv	coref	31-17[237_0]
29-17	4682-4683	,	_	_	_	_
29-18	4684-4689	which	_	_	_	_
29-19	4690-4693	try	_	_	_	_
29-20	4694-4696	to	_	_	_	_
29-21	4697-4705	minimize	_	_	_	_
29-22	4706-4709	the	abstract[224]	new[224]	_	_
29-23	4710-4715	total	abstract[224]	new[224]	_	_
29-24	4716-4725	execution	abstract|abstract[224]	new|new[224]	_	_
29-25	4726-4730	time	abstract[224]	new[224]	_	_
29-26	4731-4734	for	abstract[224]	new[224]	_	_
29-27	4735-4744	composite	abstract[224]|abstract[225]	new[224]|giv[225]	_	_
29-28	4745-4749	SaaS	abstract[224]|abstract[225]	new[224]|giv[225]	_	_
29-29	4750-4751	.	_	_	_	_

#Text=However , they only focus on a set of predefined service components for the application placement .
30-1	4752-4759	However	_	_	_	_
30-2	4760-4761	,	_	_	_	_
30-3	4762-4766	they	abstract	giv	_	_
30-4	4767-4771	only	_	_	_	_
30-5	4772-4777	focus	_	_	_	_
30-6	4778-4780	on	_	_	_	_
30-7	4781-4782	a	abstract[228]	giv[228]	_	_
30-8	4783-4786	set	abstract[228]	giv[228]	_	_
30-9	4787-4789	of	abstract[228]	giv[228]	_	_
30-10	4790-4800	predefined	abstract[228]	giv[228]	_	_
30-11	4801-4808	service	object|abstract[228]	giv|giv[228]	_	_
30-12	4809-4819	components	abstract[228]	giv[228]	_	_
30-13	4820-4823	for	abstract[228]	giv[228]	_	_
30-14	4824-4827	the	abstract[228]|abstract[230]	giv[228]|giv[230]	coref	31-17[0_230]
30-15	4828-4839	application	abstract[228]|abstract|abstract[230]	giv[228]|giv|giv[230]	coref	33-15[253_0]
30-16	4840-4849	placement	abstract[228]|abstract[230]	giv[228]|giv[230]	_	_
30-17	4850-4851	.	_	_	_	_

#Text=For traffic-aware scheduling , relevant research solutions are proposed to handle virtual machine ( VM ) placement problem , which aims to optimize network resource usage over the cluster .
31-1	4852-4855	For	_	_	_	_
31-2	4856-4869	traffic-aware	abstract[231]	new[231]	_	_
31-3	4870-4880	scheduling	abstract[231]	new[231]	_	_
31-4	4881-4882	,	_	_	_	_
31-5	4883-4891	relevant	abstract[233]	giv[233]	coref	32-3[242_233]
31-6	4892-4900	research	abstract|abstract[233]	giv|giv[233]	_	_
31-7	4901-4910	solutions	abstract[233]	giv[233]	_	_
31-8	4911-4914	are	_	_	_	_
31-9	4915-4923	proposed	_	_	_	_
31-10	4924-4926	to	_	_	_	_
31-11	4927-4933	handle	_	_	_	_
31-12	4934-4941	virtual	object[234]	giv[234]	_	_
31-13	4942-4949	machine	object[234]	giv[234]	_	_
31-14	4950-4951	(	_	_	_	_
31-15	4952-4954	VM	abstract	new	_	_
31-16	4955-4956	)	_	_	_	_
31-17	4957-4966	placement	abstract|abstract[237]	giv|giv[237]	_	_
31-18	4967-4974	problem	abstract[237]	giv[237]	_	_
31-19	4975-4976	,	_	_	_	_
31-20	4977-4982	which	_	_	_	_
31-21	4983-4987	aims	_	_	_	_
31-22	4988-4990	to	_	_	_	_
31-23	4991-4999	optimize	_	_	_	_
31-24	5000-5007	network	place|abstract[240]	giv|new[240]	coref|coref	32-9|32-9
31-25	5008-5016	resource	abstract|abstract[240]	giv|new[240]	_	_
31-26	5017-5022	usage	abstract[240]	new[240]	_	_
31-27	5023-5027	over	_	_	_	_
31-28	5028-5031	the	abstract[241]	giv[241]	coref	32-16[0_241]
31-29	5032-5039	cluster	abstract[241]	giv[241]	_	_
31-30	5040-5041	.	_	_	_	_

#Text=However , these solutions rely on a certain network topology , while most of existing cluster schedulers are agnostic to network topology .
32-1	5042-5049	However	_	_	_	_
32-2	5050-5051	,	_	_	_	_
32-3	5052-5057	these	abstract[242]	giv[242]	_	_
32-4	5058-5067	solutions	abstract[242]	giv[242]	_	_
32-5	5068-5072	rely	_	_	_	_
32-6	5073-5075	on	_	_	_	_
32-7	5076-5077	a	abstract[244]	new[244]	coref	32-22[0_244]
32-8	5078-5085	certain	abstract[244]	new[244]	_	_
32-9	5086-5093	network	place|abstract[244]	giv|new[244]	coref	33-10
32-10	5094-5102	topology	abstract[244]	new[244]	_	_
32-11	5103-5104	,	_	_	_	_
32-12	5105-5110	while	_	_	_	_
32-13	5111-5115	most	abstract[246]	giv[246]	_	_
32-14	5116-5118	of	abstract[246]	giv[246]	_	_
32-15	5119-5127	existing	abstract[246]	giv[246]	_	_
32-16	5128-5135	cluster	abstract|abstract[246]	giv|giv[246]	_	_
32-17	5136-5146	schedulers	abstract[246]	giv[246]	_	_
32-18	5147-5150	are	_	_	_	_
32-19	5151-5159	agnostic	_	_	_	_
32-20	5160-5162	to	_	_	_	_
32-21	5163-5170	network	_	_	_	_
32-22	5171-5179	topology	abstract	giv	coref	33-11
32-23	5180-5181	.	_	_	_	_

#Text=In particular , it is hard to get the network topology information when deploying a service-based application on a virtual infrastructure .
33-1	5182-5184	In	_	_	_	_
33-2	5185-5195	particular	_	_	_	_
33-3	5196-5197	,	_	_	_	_
33-4	5198-5200	it	object	new	cata	33-4[0_249]
33-5	5201-5203	is	_	_	_	_
33-6	5204-5208	hard	_	_	_	_
33-7	5209-5211	to	object[249]	new[249]	_	_
33-8	5212-5215	get	object[249]	new[249]	_	_
33-9	5216-5219	the	object[249]|abstract[252]	new[249]|new[252]	_	_
33-10	5220-5227	network	object[249]|abstract|abstract[252]	new[249]|giv|new[252]	_	_
33-11	5228-5236	topology	object[249]|abstract|abstract[252]	new[249]|giv|new[252]	_	_
33-12	5237-5248	information	object[249]|abstract[252]	new[249]|new[252]	_	_
33-13	5249-5253	when	_	_	_	_
33-14	5254-5263	deploying	_	_	_	_
33-15	5264-5265	a	abstract[253]	giv[253]	_	_
33-16	5266-5279	service-based	abstract[253]	giv[253]	_	_
33-17	5280-5291	application	abstract[253]	giv[253]	_	_
33-18	5292-5294	on	abstract[253]	giv[253]	_	_
33-19	5295-5296	a	abstract[253]|place[254]	giv[253]|new[254]	_	_
33-20	5297-5304	virtual	abstract[253]|place[254]	giv[253]|new[254]	_	_
33-21	5305-5319	infrastructure	abstract[253]|place[254]	giv[253]|new[254]	_	_
33-22	5320-5321	.	_	_	_	_
