<text id="autogum_reddit_doc109" title="How much are basic classification neural networks actually used?" shortTile="much-basic-classification" author="Reddit community (see URL)" type="reddit" dateCollected="2019-11-02" dateCreated="2018-04-30" dateModified="2018-04-30" sourceURL="http://redd.it/8g2jat" speakerList="#adventuringraw, #unknown" speakerCount="2">
<head>How much are basic classification neural networks actually used?</head>
<sp who="#unknown">
<p>Most courses in Machine Learning begin with basic neural networks where you learn how feed-forward and back-propagation works, and regularisation. For example, the first part of the Stanford Machine Learning course on classification. I was wondering, how far can you get with that basic approach? Is it scalable to real-world problems, and do people actually use vanilla NNs much (without convolutions or other fancy stuff)? I'm just curious what bare minimum knowledge is required to actually "get  <hi rend="bold">real</hi>  stuff done" in ML that isn't just MNIST digit classification. I guess my question also extends to the basic techniques in unsupervised learning too. The fact that ML jobs pay so well makes me skeptical that you can get really far on the basics, but I'd like to hear what people think.</p>
</sp>
<sp who="#adventuringraw">
<p>I'm still gearing up to get into datascience, but after a few months now doing data engineering work at a fortune 500 company... I'm starting to suspect that at least part of the brick wall waiting for all those bright eyed would-be data scientists has to do with the grunt work of actually working with the data. The logistics of even just deploying a raw ETL pipeline is not trivial. Even just getting functional enough with pandas to be productive with basic data munging is again... not trivial. What's that? Another f'ing byte that utf-8 or mac-roman can't parse? The rest API we're pulling client data from decided to spit out some random unicode characters on a Japanese street address that broke the system? Your logging sucks and it took you two hours to hunt down a simple bug? You weren't organized setting up your ETL DAG and now it's a pain in the ass to run the second half of this job after you hit a fail point halfway through? Your docker skills suck so you don't even know how to contribute to the conversation with the team about how to get this thing deployed on AWS? Holy fuck you guys, there's a lot to learn. I suspect the majority of the companies out there looking to get more into ML don't have the data to go beyond making more basic predictions with scikit-learn. Getting production ready even with just a basic logistic classifier is no joke. </p>
<p>My own gut feeling for what little it's worth... I wonder how much vanilla NNs are used as well, but I have a DS friend that mostly doesn't deal with NNs at all. You can get a ton done with scikit-learn.</p>
</sp>
</text>
