<text id="autogum_academic_doc584" title="A Cloud-based Middleware for Self-Adaptive IoT-Collaboration Services" shortTile="cloudbased-middleware" author="Soojin Park, Sungyong Park" type="academic" dateCollected="2019-11-03" sourceURL="https://www.mdpi.com/1424-8220/19/20/4559/htm" speakerList="none" speakerCount="0">
<head> 3. Cloud-based Middleware Platform for Self-Adaptive IoT Collaboration Services</head>
<p>
<figure>Figure 1</figure> shows the overview of a conceptual architecture of the proposed cloud-based middleware framework for the self-adaptive IoT based collaboration among multiple systems. Non-adaptive systems which run on PCs, tablets, or mobile phones and self-adaptive systems such as a robot or unmanned aerial vehicle (UAV) can collaborate to achieve a common service goal. Besides, passive sensors or actuator devices with no separate control unit can also participate in the collaboration as well. The passive actuator may be embedded in and controlled by a single system, or directly receives the commands of the IoT collaboration controller. This communication between various systems and devices is carried out through the <hi rend="italic">Publish-Subscribe Communication Layer</hi>. As is named, this layer provides a high-performance scalable communication among a large number of IoT devices based on the publish-subscribe communication model. This layer delivers newly published data to consumers who subscribe from multiple but different subsets of sensing data simultaneously.  </p>

<p>Each MAPE cycle for controlling the collaboration of multiple systems and devices is created into one VM in the cloud area. To construct a generic conceptual architecture, we have designed to separate IoT service domain-dependent components from the core MAPE loop components, which are domain-independent parts. Each VM is divided into two layers. One is the <hi rend="italic">MAPE Core Bundle Layer</hi>, which implements the connectors between the four MAAPE components, the <hi rend="italic">Publish-Subscribe Communication Layer</hi>, and the <hi rend="italic">ParticipantRegistry</hi>. The other layer is the <hi rend="italic">IoT Service Bundle Layer</hi>, which consists of concrete MAPE components required to control a specific IoT collaboration service. The former layer is provided equally to developers, literally, as a middleware framework, and the latter layer includes the components developed by IoT service developers according to the domain requirements. The components belonging to both layers are in the form of OSGi bundles.  </p>

<p>The <hi rend="italic">IoT Service Launcher</hi> by itself works as one of the VMs created in the cloud area like other VMs for implementing IoT collaboration services. To help developers easily manage the <hi rend="italic">IoT Service Bundles</hi>, we provide each operation of the <hi rend="italic">IoT Service Launcher</hi> in the form of a cloud service. The developers can easily perform a series of tasks until the actual IoT service is launched, including the creation/deletion/start/stop of each IoT collaboration service VM. The addition/removal of a specific service bundle can be done by using the cloud service provided by the <hi rend="italic">IoT Service Launcher</hi> as well. The <hi rend="italic">IoT Service Participant Manager</hi> provides an auto-registration mechanism of participant systems or devices collaborating in IoT collaboration. Whenever the devices or systems which can participate in an IoT collaboration are power-on, information of the participant is automatically registered to the <hi rend="italic">Participant Registry</hi>. The address of the <hi rend="italic">IoT Service Participant Manager</hi> should be saved in the devices and systems before. The <hi rend="italic">Adaptation Executor</hi> can look up a specific object among the registered systems and devices in the <hi rend="italic">Participant Registry</hi> as needed. </p>
</text>
