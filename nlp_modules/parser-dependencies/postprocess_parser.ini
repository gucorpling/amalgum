; reference numbers in square brackets, e.g. [3], are dep and usually attach to root, not nummod
func=/root/;text=/\[/;func=/nummod/;text=/\]/	#1.*#2.#3.#4	#1>#3;#3:func=dep
text=/\[/;xpos=/CD/;text=/\]/;text=/\[/;func=/dep/&xpos=/CD/;text=/\]/	#1.#2.#3.*#4.#5.#6;#2>#4	#3:func=conj
;xpos=/V.*/;func=/obl/;func=/nmod/&morph=/obl/	#1>#2>#3;#1.*#2.*#3	#1>#3;#3:func=obl
;xpos=/V.*/;func=/obl/;func=/case/;func=/obl/&morph=/nmod/	#1>#2;#1>#4>#3;#1.*#2.#3.*#4	#2>#4;#4:func=nmod

; numerical ordinals are amod not nummod
func=/nummod/&text=/[0-9]+(nd|st|rd|th)/	none	#1:func=amod

; Roman numerals in names
xpos=/NNP.*/;func=/nummod|flat/&text=/I+|IV|VI+/	#1>#2;#1.*#2	#2:func=dep

; rare compound numbers spelled out
func=/nummod/&text=/[0-9,.]+/;text=/^(million|billion|thousand|trillion)$/	#2>#1;#1.#2	#1:func=compound

; year old
text=/[0-9]+-?year/;text=/olds?/	#2>#1	#1:func=obl:tmod

text=/^(19|20)[0-9][0-9]$/&func=/nummod/&morph=/compound/	none	#1:func=compound
text=/^(19|20)[0-9][0-9]$/&func=/nummod/&morph=/(.*tmod)/	none	#1:func=$2

# Names dominating number to the right should be dep
xpos=/NNP/;func=/nummod/	#1.#2;#1>#2	#2:func=dep

# believe flair:
morph=/amod/&func=/compound/	none	#1:func=amod
func=/amod/&morph=/compound/	none	#1:func=compound
func=/advmod/&morph=/(mark|discourse)/	none	#1:func=$1
func!=/.*pass/&morph=/(.*pass)/	none	#1:func=$1
morph=/case/&func=/mark/&edep=/.*case.*/	none	#1:func=case
morph=/mark/&func=/case/&edep=/.*mark.*/	none	#1:func=mark
morph=/parataxis/&func=/conj|appos/	none	#1:func=parataxis
morph=/conj/&func=/pararaxis|appos/	none	#1:func=conj

# RP RB
xpos=/RB/&func=/compound:prt/	none	#1:func=advmod
xpos=/RP/&func=/advmod/	none	#1:func=compound:prt
xpos=/UH/&func=/advmod/	none	#1:func=discourse

text=/if/&func=/case/	none	#1:func=mark

;func=/amod/&morph=/compound/	none	#1:func=compound

# rewire cop-root prediction, but first ensure there is only one such prediction
morph=/root/;morph=/root/&func!=/root/&func=/(.*)/	#1.*#2	#2:morph=$1
morph=/root/&func!=/root/&func=/(.*)/;morph=/root/	#1.*#2	#1:morph=$1
func=/root/&morph=/cop/;morph=/root/;text=/.*/	#1.*#2;#1>#3	#1:func=cop;#2:func=root;#2:head=0;#2>#1;#2>#3

# preposition stranding
xpos=/V.*/&func=/acl:relcl/;func=/case/&morph=/obl.*/	#1>#2	#2:func=obl
xpos=/V.*/&func=/acl:relcl/;func=/case/&edep=/.*obl.*/	#1>#2	#2:func=obl

# interpolate EWT nmod/obl PP attachment
text=/.*/;func=/obl/&morph=/nmod/&edep=/.*(nmod).*/;text=/.*/	#1>#2;#3~#2;#1>#3	#3>#2;#2:func=nmod
text=/.*/;func=/nmod/&morph=/obl/&edep=/.*(obl).*/;text=/.*/	#1>#2;#3~#2;#3>#1	#3>#2;#2:func=obl
;text=/.*/;func=/obl/&edep=/.*(nmod).*(nmod).*/;text=/.*/	#1>#2;#3~#2;#1>#3	#3>#2;#2:func=nmod
;text=/.*/;func=/nmod/&edep=/.*(obl).*(obl).*/;text=/.*/	#1>#2;#3~#2;#3>#1	#3>#2;#2:func=obl

# impossible deps
text=/(?i)(bec[ao]me|remain(ed|ing)?)s?/;func=/obj/	#1>#2	#2:func=xcomp
text=/(?i)call(ing|ed|s)?/;func=/iobj/;func=/obj/	#1>#2;#1>#3	#2:func=obj;#3:func=xcomp
text=/(?i)call(ing|ed|s)?/;func=/obj/&text=/which|that/;func=/obj/	#1>#2;#1>#3;#2.*#3	#3:func=xcomp
text=/(?i)(call|make?)(ing|ed|s)?/;func=/obj/;func=/obj/	#1>#2;#1>#3;#2.*#3	#2:func=obj;#3:func=xcomp
# other double obj as ditransitive
#xpos=/V.*/;func=/obj/;func=/obj/	#1>#2;#1>#3;#1.*#2.*#3	#2:func=iobj

# passive
xpos=/VBN/;func=/nsubj:pass/;func=/cop/	#1>#2;#1>#3;#2.#3.*#1	#3:func=aux:pass
xpos=/VBG|JJ/;func=/aux:pass/	#1>#2	#2:func=cop

# fixed
text=/one/;text=/another/	#1>#2;#1.#2	#2:func=fixed
text=/at/;text=/least/	#1>#2;#1.#2	#2:func=fixed
text=/.*/;text!=/(?i)so/;text=/that/&func=/fixed/&xpos=/IN/	#1>#2>#3	#1>#3;#3:func=mark
text=/like/&xpos=/UH/	none	#1:func=discourse
