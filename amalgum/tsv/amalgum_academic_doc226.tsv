#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=1. Introduction
1-1	0-2	1.	_	_	_	_
1-2	3-15	Introduction	abstract	new	_	_

#Text=Microservice architecture is a new trend rising fast for application development , as it enhances flexibility to incorporate different technologies , it reduces complexity by using lightweight and modular services , and it improves overall scalability and resilience of the system .
2-1	16-28	Microservice	object|abstract[3]	new|new[3]	coref|coref|coref|coref	2-4[4_3]|3-11|2-4[4_3]|3-11
2-2	29-41	architecture	abstract[3]	new[3]	_	_
2-3	42-44	is	_	_	_	_
2-4	45-46	a	abstract[4]	giv[4]	coref	5-6[37_4]
2-5	47-50	new	abstract[4]	giv[4]	_	_
2-6	51-56	trend	abstract[4]	giv[4]	_	_
2-7	57-63	rising	_	_	_	_
2-8	64-68	fast	_	_	_	_
2-9	69-72	for	_	_	_	_
2-10	73-84	application	abstract|abstract[6]	new|new[6]	ana|coref|ana|coref	2-14[0_6]|3-19[23_0]|2-14[0_6]|3-19[23_0]
2-11	85-96	development	abstract[6]	new[6]	_	_
2-12	97-98	,	_	_	_	_
2-13	99-101	as	_	_	_	_
2-14	102-104	it	abstract	giv	ana	2-22
2-15	105-113	enhances	_	_	_	_
2-16	114-125	flexibility	abstract	new	_	_
2-17	126-128	to	_	_	_	_
2-18	129-140	incorporate	_	_	_	_
2-19	141-150	different	abstract[9]	new[9]	_	_
2-20	151-163	technologies	abstract[9]	new[9]	_	_
2-21	164-165	,	_	_	_	_
2-22	166-168	it	abstract	giv	ana	2-33
2-23	169-176	reduces	_	_	_	_
2-24	177-187	complexity	abstract	new	_	_
2-25	188-190	by	_	_	_	_
2-26	191-196	using	_	_	_	_
2-27	197-208	lightweight	abstract[12]	new[12]	coref	3-26[24_12]
2-28	209-212	and	abstract[12]	new[12]	_	_
2-29	213-220	modular	abstract[12]	new[12]	_	_
2-30	221-229	services	abstract[12]	new[12]	_	_
2-31	230-231	,	_	_	_	_
2-32	232-235	and	_	_	_	_
2-33	236-238	it	abstract	giv	ana	3-32
2-34	239-247	improves	_	_	_	_
2-35	248-255	overall	abstract[14]	new[14]	_	_
2-36	256-267	scalability	abstract[14]	new[14]	_	_
2-37	268-271	and	_	_	_	_
2-38	272-282	resilience	abstract[15]	new[15]	_	_
2-39	283-285	of	abstract[15]	new[15]	_	_
2-40	286-289	the	abstract[15]|abstract[16]	new[15]|new[16]	_	_
2-41	290-296	system	abstract[15]|abstract[16]	new[15]|new[16]	_	_
2-42	297-298	.	_	_	_	_

#Text=In the definition ( Microservices : https://martinfowler.com/tags/microservices.html ) , the microservice architectural style is an approach to develop a single application as a suite of small services , each running in its own process and communicating with lightweight mechanisms ( e. g. , HTTP resource API ) .
3-1	299-301	In	_	_	_	_
3-2	302-305	the	abstract[17]	new[17]	appos	3-5[0_17]
3-3	306-316	definition	abstract[17]	new[17]	_	_
3-4	317-318	(	_	_	_	_
3-5	319-332	Microservices	abstract	giv	coref	5-6
3-6	333-334	:	_	_	_	_
3-7	335-383	https://martinfowler.com/tags/microservices.html	place	new	_	_
3-8	384-385	)	_	_	_	_
3-9	386-387	,	_	_	_	_
3-10	388-391	the	abstract[21]	new[21]	coref	3-15[22_21]
3-11	392-404	microservice	event|abstract[21]	giv|new[21]	_	_
3-12	405-418	architectural	abstract[21]	new[21]	_	_
3-13	419-424	style	abstract[21]	new[21]	_	_
3-14	425-427	is	_	_	_	_
3-15	428-430	an	abstract[22]	giv[22]	_	_
3-16	431-439	approach	abstract[22]	giv[22]	_	_
3-17	440-442	to	_	_	_	_
3-18	443-450	develop	_	_	_	_
3-19	451-452	a	abstract[23]	giv[23]	coref	4-1[31_23]
3-20	453-459	single	abstract[23]	giv[23]	_	_
3-21	460-471	application	abstract[23]	giv[23]	_	_
3-22	472-474	as	abstract[23]	giv[23]	_	_
3-23	475-476	a	abstract[23]	giv[23]	_	_
3-24	477-482	suite	abstract[23]	giv[23]	_	_
3-25	483-485	of	abstract[23]	giv[23]	_	_
3-26	486-491	small	abstract[23]|abstract[24]	giv[23]|giv[24]	coref	4-7[32_24]
3-27	492-500	services	abstract[23]|abstract[24]	giv[23]|giv[24]	_	_
3-28	501-502	,	_	_	_	_
3-29	503-507	each	_	_	_	_
3-30	508-515	running	_	_	_	_
3-31	516-518	in	_	_	_	_
3-32	519-522	its	abstract|object[26]	giv|new[26]	_	_
3-33	523-526	own	object[26]	new[26]	_	_
3-34	527-534	process	object[26]	new[26]	_	_
3-35	535-538	and	_	_	_	_
3-36	539-552	communicating	_	_	_	_
3-37	553-557	with	_	_	_	_
3-38	558-569	lightweight	abstract[27]	new[27]	appos	3-41[28_27]
3-39	570-580	mechanisms	abstract[27]	new[27]	_	_
3-40	581-582	(	_	_	_	_
3-41	583-585	e.	abstract[28]	giv[28]	_	_
3-42	586-588	g.	abstract[28]	giv[28]	_	_
3-43	589-590	,	abstract[28]	giv[28]	_	_
3-44	591-595	HTTP	abstract[28]|abstract|abstract[30]	giv[28]|new|new[30]	coref|coref	8-22[0_30]|8-22[0_30]
3-45	596-604	resource	abstract[28]|abstract[30]	giv[28]|new[30]	_	_
3-46	605-608	API	abstract[28]	giv[28]	_	_
3-47	609-610	)	_	_	_	_
3-48	611-612	.	_	_	_	_

#Text=The application then is composed of a number of services ( service-based application ) that work cohesively to provide complex functionalities .
4-1	613-616	The	abstract[31]	giv[31]	coref	6-4[42_31]
4-2	617-628	application	abstract[31]	giv[31]	_	_
4-3	629-633	then	_	_	_	_
4-4	634-636	is	_	_	_	_
4-5	637-645	composed	_	_	_	_
4-6	646-648	of	_	_	_	_
4-7	649-650	a	abstract[32]	giv[32]	appos	4-12[33_32]
4-8	651-657	number	abstract[32]	giv[32]	_	_
4-9	658-660	of	abstract[32]	giv[32]	_	_
4-10	661-669	services	abstract[32]	giv[32]	_	_
4-11	670-671	(	_	_	_	_
4-12	672-685	service-based	abstract[33]	giv[33]	coref	9-7[65_33]
4-13	686-697	application	abstract[33]	giv[33]	_	_
4-14	698-699	)	_	_	_	_
4-15	700-704	that	_	_	_	_
4-16	705-709	work	_	_	_	_
4-17	710-720	cohesively	_	_	_	_
4-18	721-723	to	_	_	_	_
4-19	724-731	provide	_	_	_	_
4-20	732-739	complex	abstract[34]	new[34]	coref	16-19[132_34]
4-21	740-755	functionalities	abstract[34]	new[34]	_	_
4-22	756-757	.	_	_	_	_

#Text=Due to the advantages of microservices architecture , many developers intend to transform traditional monolithic applications into service-based applications .
5-1	758-761	Due	_	_	_	_
5-2	762-764	to	_	_	_	_
5-3	765-768	the	abstract[35]	new[35]	_	_
5-4	769-779	advantages	abstract[35]	new[35]	_	_
5-5	780-782	of	abstract[35]	new[35]	_	_
5-6	783-796	microservices	abstract[35]|object|abstract[37]	new[35]|giv|giv[37]	_	_
5-7	797-809	architecture	abstract[35]|abstract[37]	new[35]|giv[37]	_	_
5-8	810-811	,	_	_	_	_
5-9	812-816	many	person[38]	new[38]	_	_
5-10	817-827	developers	person[38]	new[38]	_	_
5-11	828-834	intend	_	_	_	_
5-12	835-837	to	_	_	_	_
5-13	838-847	transform	_	_	_	_
5-14	848-859	traditional	abstract[39]	new[39]	_	_
5-15	860-870	monolithic	abstract[39]	new[39]	_	_
5-16	871-883	applications	abstract[39]	new[39]	_	_
5-17	884-888	into	_	_	_	_
5-18	889-902	service-based	abstract[40]	new[40]	coref	10-6[74_40]
5-19	903-915	applications	abstract[40]	new[40]	_	_
5-20	916-917	.	_	_	_	_

#Text=For instance , an online shopping application could be basically divided into product service , cart service , and order service , which can greatly improve the productivity , agility , and resilience of the application .
6-1	918-921	For	_	_	_	_
6-2	922-930	instance	_	_	_	_
6-3	931-932	,	_	_	_	_
6-4	933-935	an	abstract[42]	giv[42]	coref	6-35[52_42]
6-5	936-942	online	abstract[42]	giv[42]	_	_
6-6	943-951	shopping	event|abstract[42]	new|giv[42]	_	_
6-7	952-963	application	abstract[42]	giv[42]	_	_
6-8	964-969	could	_	_	_	_
6-9	970-972	be	_	_	_	_
6-10	973-982	basically	_	_	_	_
6-11	983-990	divided	_	_	_	_
6-12	991-995	into	_	_	_	_
6-13	996-1003	product	abstract|abstract[44]	new|new[44]	_	_
6-14	1004-1011	service	abstract[44]	new[44]	_	_
6-15	1012-1013	,	_	_	_	_
6-16	1014-1018	cart	object|abstract[46]	new|new[46]	_	_
6-17	1019-1026	service	abstract[46]	new[46]	_	_
6-18	1027-1028	,	_	_	_	_
6-19	1029-1032	and	_	_	_	_
6-20	1033-1038	order	abstract|object[48]	new|new[48]	coref|coref	8-15[58_48]|8-15[58_48]
6-21	1039-1046	service	object[48]	new[48]	_	_
6-22	1047-1048	,	_	_	_	_
6-23	1049-1054	which	_	_	_	_
6-24	1055-1058	can	_	_	_	_
6-25	1059-1066	greatly	_	_	_	_
6-26	1067-1074	improve	_	_	_	_
6-27	1075-1078	the	abstract[49]	new[49]	_	_
6-28	1079-1091	productivity	abstract[49]	new[49]	_	_
6-29	1092-1093	,	_	_	_	_
6-30	1094-1101	agility	abstract	new	_	_
6-31	1102-1103	,	_	_	_	_
6-32	1104-1107	and	_	_	_	_
6-33	1108-1118	resilience	abstract[51]	new[51]	_	_
6-34	1119-1121	of	abstract[51]	new[51]	_	_
6-35	1122-1125	the	abstract[51]|abstract[52]	new[51]|giv[52]	ana	7-3[0_52]
6-36	1126-1137	application	abstract[51]|abstract[52]	new[51]|giv[52]	_	_
6-37	1138-1139	.	_	_	_	_

#Text=However , it also brings challenges .
7-1	1140-1147	However	_	_	_	_
7-2	1148-1149	,	_	_	_	_
7-3	1150-1152	it	abstract	giv	coref	8-3[55_0]
7-4	1153-1157	also	_	_	_	_
7-5	1158-1164	brings	_	_	_	_
7-6	1165-1175	challenges	abstract	new	_	_
7-7	1176-1177	.	_	_	_	_

#Text=When deploying a service-based application in clouds , the scheduler has to carefully schedule each service , which may have diverse resource demands , on distributed compute clusters .
8-1	1178-1182	When	_	_	_	_
8-2	1183-1192	deploying	_	_	_	_
8-3	1193-1194	a	abstract[55]	giv[55]	coref	14-3[116_55]
8-4	1195-1208	service-based	abstract[55]	giv[55]	_	_
8-5	1209-1220	application	abstract[55]	giv[55]	_	_
8-6	1221-1223	in	_	_	_	_
8-7	1224-1230	clouds	place	new	coref	13-32
8-8	1231-1232	,	_	_	_	_
8-9	1233-1236	the	abstract[57]	new[57]	coref	25-6[197_57]
8-10	1237-1246	scheduler	abstract[57]	new[57]	_	_
8-11	1247-1250	has	_	_	_	_
8-12	1251-1253	to	_	_	_	_
8-13	1254-1263	carefully	_	_	_	_
8-14	1264-1272	schedule	_	_	_	_
8-15	1273-1277	each	object[58]	giv[58]	coref	9-24[0_58]
8-16	1278-1285	service	object[58]	giv[58]	_	_
8-17	1286-1287	,	_	_	_	_
8-18	1288-1293	which	_	_	_	_
8-19	1294-1297	may	_	_	_	_
8-20	1298-1302	have	_	_	_	_
8-21	1303-1310	diverse	abstract[60]	new[60]	coref	15-10[123_60]
8-22	1311-1319	resource	abstract|abstract[60]	giv|new[60]	coref	15-11
8-23	1320-1327	demands	abstract[60]	new[60]	_	_
8-24	1328-1329	,	_	_	_	_
8-25	1330-1332	on	_	_	_	_
8-26	1333-1344	distributed	abstract[62]	new[62]	coref	26-14[208_62]
8-27	1345-1352	compute	abstract|abstract[62]	new|new[62]	_	_
8-28	1353-1361	clusters	abstract[62]	new[62]	_	_
8-29	1362-1363	.	_	_	_	_

#Text=Furthermore , the network communication between different services needs to be handled well , as the communication conditions significantly influence the quality of service ( e. g. , the response time of a service ) .
9-1	1364-1375	Furthermore	_	_	_	_
9-2	1376-1377	,	_	_	_	_
9-3	1378-1381	the	abstract[64]	new[64]	coref	9-17[0_64]
9-4	1382-1389	network	abstract|abstract[64]	new|new[64]	coref	10-11
9-5	1390-1403	communication	abstract[64]	new[64]	_	_
9-6	1404-1411	between	abstract[64]	new[64]	_	_
9-7	1412-1421	different	abstract[64]|abstract[65]	new[64]|giv[65]	coref	10-14[77_65]
9-8	1422-1430	services	abstract[64]|abstract[65]	new[64]|giv[65]	_	_
9-9	1431-1436	needs	_	_	_	_
9-10	1437-1439	to	_	_	_	_
9-11	1440-1442	be	_	_	_	_
9-12	1443-1450	handled	_	_	_	_
9-13	1451-1455	well	_	_	_	_
9-14	1456-1457	,	_	_	_	_
9-15	1458-1460	as	_	_	_	_
9-16	1461-1464	the	abstract[67]	new[67]	_	_
9-17	1465-1478	communication	abstract|abstract[67]	giv|new[67]	coref	18-16[145_0]
9-18	1479-1489	conditions	abstract[67]	new[67]	_	_
9-19	1490-1503	significantly	_	_	_	_
9-20	1504-1513	influence	_	_	_	_
9-21	1514-1517	the	abstract[68]	new[68]	_	_
9-22	1518-1525	quality	abstract[68]	new[68]	_	_
9-23	1526-1528	of	abstract[68]	new[68]	_	_
9-24	1529-1536	service	abstract[68]|object	new[68]|giv	coref	9-33[72_0]
9-25	1537-1538	(	_	_	_	_
9-26	1539-1541	e.	_	_	_	_
9-27	1542-1544	g.	_	_	_	_
9-28	1545-1546	,	_	_	_	_
9-29	1547-1550	the	time[71]	new[71]	coref	16-15[131_71]
9-30	1551-1559	response	abstract|time[71]	new|new[71]	coref	19-16
9-31	1560-1564	time	time[71]	new[71]	_	_
9-32	1565-1567	of	time[71]	new[71]	_	_
9-33	1568-1569	a	time[71]|object[72]	new[71]|giv[72]	coref	16-11[130_72]
9-34	1570-1577	service	time[71]|object[72]	new[71]|giv[72]	_	_
9-35	1578-1579	)	_	_	_	_
9-36	1580-1581	.	_	_	_	_

#Text=Ensuring the desired performance of service-based applications , especially the network performance between the involved services , becomes increasingly important .
10-1	1582-1590	Ensuring	_	_	_	_
10-2	1591-1594	the	abstract[73]	new[73]	appos	10-9[76_73]
10-3	1595-1602	desired	abstract[73]	new[73]	_	_
10-4	1603-1614	performance	abstract[73]	new[73]	_	_
10-5	1615-1617	of	abstract[73]	new[73]	_	_
10-6	1618-1631	service-based	abstract[73]|abstract[74]	new[73]|giv[74]	coref	11-4[78_74]
10-7	1632-1644	applications	abstract[73]|abstract[74]	new[73]|giv[74]	_	_
10-8	1645-1646	,	_	_	_	_
10-9	1647-1657	especially	abstract[76]	giv[76]	coref	19-11[0_76]
10-10	1658-1661	the	abstract[76]	giv[76]	_	_
10-11	1662-1669	network	abstract|abstract[76]	giv|giv[76]	coref	30-24
10-12	1670-1681	performance	abstract[76]	giv[76]	_	_
10-13	1682-1689	between	abstract[76]	giv[76]	_	_
10-14	1690-1693	the	abstract[76]|abstract[77]	giv[76]|giv[77]	coref	11-7[79_77]
10-15	1694-1702	involved	abstract[76]|abstract[77]	giv[76]|giv[77]	_	_
10-16	1703-1711	services	abstract[76]|abstract[77]	giv[76]|giv[77]	_	_
10-17	1712-1713	,	_	_	_	_
10-18	1714-1721	becomes	_	_	_	_
10-19	1722-1734	increasingly	_	_	_	_
10-20	1735-1744	important	_	_	_	_
10-21	1745-1746	.	_	_	_	_

#Text=In general , service-based applications involve numerous distributed and complex services which usually require more computing resources beyond single machine capability .
11-1	1747-1749	In	_	_	_	_
11-2	1750-1757	general	_	_	_	_
11-3	1758-1759	,	_	_	_	_
11-4	1760-1773	service-based	abstract[78]	giv[78]	coref	12-51[105_78]
11-5	1774-1786	applications	abstract[78]	giv[78]	_	_
11-6	1787-1794	involve	_	_	_	_
11-7	1795-1803	numerous	abstract[79]	giv[79]	coref	13-20[0_79]
11-8	1804-1815	distributed	abstract[79]	giv[79]	_	_
11-9	1816-1819	and	abstract[79]	giv[79]	_	_
11-10	1820-1827	complex	abstract[79]	giv[79]	_	_
11-11	1828-1836	services	abstract[79]	giv[79]	_	_
11-12	1837-1842	which	_	_	_	_
11-13	1843-1850	usually	_	_	_	_
11-14	1851-1858	require	_	_	_	_
11-15	1859-1863	more	abstract[81]	new[81]	coref	16-7[129_81]
11-16	1864-1873	computing	abstract|abstract[81]	new|new[81]	coref	12-10
11-17	1874-1883	resources	abstract[81]	new[81]	_	_
11-18	1884-1890	beyond	_	_	_	_
11-19	1891-1897	single	abstract[83]	new[83]	_	_
11-20	1898-1905	machine	object|abstract[83]	new|new[83]	coref	16-1[128_0]
11-21	1906-1916	capability	abstract[83]	new[83]	_	_
11-22	1917-1918	.	_	_	_	_

#Text=Therefore , a cluster of networked machines or cloud computing platforms ( e. g. , Amazon EC2 ( Amazon EC2 : https://aws.amazon.com ) , Microsoft Azure ( Microsoft Azure : https://azure.microsoft.com ) , or Google Cloud Platform ( Google Cloud Platform : https://cloud.google.com ) ) are generally leveraged to run service-based applications .
12-1	1919-1928	Therefore	_	_	_	_
12-2	1929-1930	,	_	_	_	_
12-3	1931-1932	a	abstract[84]	new[84]	coref	17-16[137_84]
12-4	1933-1940	cluster	abstract[84]	new[84]	_	_
12-5	1941-1943	of	abstract[84]	new[84]	_	_
12-6	1944-1953	networked	abstract[84]|object[85]	new[84]|new[85]	coref	17-20[138_85]
12-7	1954-1962	machines	abstract[84]|object[85]	new[84]|new[85]	_	_
12-8	1963-1965	or	abstract[84]	new[84]	_	_
12-9	1966-1971	cloud	abstract[84]|object[87]	new[84]|new[87]	appos	12-16[89_87]
12-10	1972-1981	computing	abstract[84]|abstract|object[87]	new[84]|giv|new[87]	_	_
12-11	1982-1991	platforms	abstract[84]|object[87]	new[84]|new[87]	_	_
12-12	1992-1993	(	_	_	_	_
12-13	1994-1996	e.	_	_	_	_
12-14	1997-1999	g.	_	_	_	_
12-15	2000-2001	,	_	_	_	_
12-16	2002-2008	Amazon	organization|object[89]	new|giv[89]	coref|appos|coref|appos	12-19|12-19[91_89]|12-19|12-19[91_89]
12-17	2009-2012	EC2	object[89]	giv[89]	_	_
12-18	2013-2014	(	_	_	_	_
12-19	2015-2021	Amazon	organization|object[91]	giv|giv[91]	_	_
12-20	2022-2025	EC2	object[91]	giv[91]	_	_
12-21	2026-2027	:	_	_	_	_
12-22	2028-2050	https://aws.amazon.com	place	new	_	_
12-23	2051-2052	)	_	_	_	_
12-24	2053-2054	,	_	_	_	_
12-25	2055-2064	Microsoft	organization|organization[94]	new|new[94]	coref|appos|coref|appos	12-28|12-28[96_94]|12-28|12-28[96_94]
12-26	2065-2070	Azure	organization[94]	new[94]	_	_
12-27	2071-2072	(	_	_	_	_
12-28	2073-2082	Microsoft	organization|organization[96]	giv|giv[96]	_	_
12-29	2083-2088	Azure	organization[96]	giv[96]	_	_
12-30	2089-2090	:	_	_	_	_
12-31	2091-2118	https://azure.microsoft.com	place	new	_	_
12-32	2119-2120	)	_	_	_	_
12-33	2121-2122	,	_	_	_	_
12-34	2123-2125	or	_	_	_	_
12-35	2126-2132	Google	organization|organization[100]	new|new[100]	coref|appos|coref|appos	12-39|12-39[103_100]|12-39|12-39[103_100]
12-36	2133-2138	Cloud	person|organization[100]	new|new[100]	coref	12-40
12-37	2139-2147	Platform	organization[100]	new[100]	_	_
12-38	2148-2149	(	_	_	_	_
12-39	2150-2156	Google	organization|object[103]	giv|giv[103]	_	_
12-40	2157-2162	Cloud	person|object[103]	giv|giv[103]	_	_
12-41	2163-2171	Platform	object[103]	giv[103]	_	_
12-42	2172-2173	:	_	_	_	_
12-43	2174-2198	https://cloud.google.com	place	new	_	_
12-44	2199-2200	)	_	_	_	_
12-45	2201-2202	)	_	_	_	_
12-46	2203-2206	are	_	_	_	_
12-47	2207-2216	generally	_	_	_	_
12-48	2217-2226	leveraged	_	_	_	_
12-49	2227-2229	to	_	_	_	_
12-50	2230-2233	run	_	_	_	_
12-51	2234-2247	service-based	abstract[105]	giv[105]	coref	13-30[0_105]
12-52	2248-2260	applications	abstract[105]	giv[105]	_	_
12-53	2261-2262	.	_	_	_	_

#Text=More importantly , containers are emerging as the disruptive technology for effectively encapsulating runtime contexts of software components and services , which significantly improves portability and efficiency of deploying applications in clouds .
13-1	2263-2267	More	_	_	_	_
13-2	2268-2279	importantly	_	_	_	_
13-3	2280-2281	,	_	_	_	_
13-4	2282-2292	containers	object	new	_	_
13-5	2293-2296	are	_	_	_	_
13-6	2297-2305	emerging	_	_	_	_
13-7	2306-2308	as	_	_	_	_
13-8	2309-2312	the	_	_	_	_
13-9	2313-2323	disruptive	_	_	_	_
13-10	2324-2334	technology	_	_	_	_
13-11	2335-2338	for	_	_	_	_
13-12	2339-2350	effectively	_	_	_	_
13-13	2351-2364	encapsulating	_	_	_	_
13-14	2365-2372	runtime	time|abstract[108]	new|new[108]	_	_
13-15	2373-2381	contexts	abstract[108]	new[108]	_	_
13-16	2382-2384	of	abstract[108]	new[108]	_	_
13-17	2385-2393	software	abstract[108]|object|abstract[110]	new[108]|new|new[110]	coref|coref	29-7[227_110]|29-7[227_110]
13-18	2394-2404	components	abstract[108]|abstract[110]	new[108]|new[110]	_	_
13-19	2405-2408	and	abstract[108]	new[108]	_	_
13-20	2409-2417	services	abstract[108]|abstract	new[108]|giv	coref	15-3
13-21	2418-2419	,	_	_	_	_
13-22	2420-2425	which	_	_	_	_
13-23	2426-2439	significantly	_	_	_	_
13-24	2440-2448	improves	_	_	_	_
13-25	2449-2460	portability	abstract	new	_	_
13-26	2461-2464	and	_	_	_	_
13-27	2465-2475	efficiency	abstract	new	coref	24-8[189_0]
13-28	2476-2478	of	_	_	_	_
13-29	2479-2488	deploying	_	_	_	_
13-30	2489-2501	applications	abstract	giv	coref	22-5[173_0]
13-31	2502-2504	in	_	_	_	_
13-32	2505-2511	clouds	place	giv	coref	14-7
13-33	2512-2513	.	_	_	_	_

#Text=When deploying a service-based application in clouds , several essential aspects have to be taken into account .
14-1	2514-2518	When	_	_	_	_
14-2	2519-2528	deploying	_	_	_	_
14-3	2529-2530	a	abstract[116]	giv[116]	coref	15-6[121_116]
14-4	2531-2544	service-based	abstract[116]	giv[116]	_	_
14-5	2545-2556	application	abstract[116]	giv[116]	_	_
14-6	2557-2559	in	_	_	_	_
14-7	2560-2566	clouds	place	giv	coref	22-11
14-8	2567-2568	,	_	_	_	_
14-9	2569-2576	several	abstract[118]	new[118]	_	_
14-10	2577-2586	essential	abstract[118]	new[118]	_	_
14-11	2587-2594	aspects	abstract[118]	new[118]	_	_
14-12	2595-2599	have	_	_	_	_
14-13	2600-2602	to	_	_	_	_
14-14	2603-2605	be	_	_	_	_
14-15	2606-2611	taken	_	_	_	_
14-16	2612-2616	into	_	_	_	_
14-17	2617-2624	account	abstract	new	_	_
14-18	2625-2626	.	_	_	_	_

#Text=First , services involved in the application often have diverse resource demands , such as CPU , memory and disk .
15-1	2627-2632	First	_	_	_	_
15-2	2633-2634	,	_	_	_	_
15-3	2635-2643	services	abstract	giv	coref	18-3
15-4	2644-2652	involved	_	_	_	_
15-5	2653-2655	in	_	_	_	_
15-6	2656-2659	the	abstract[121]	giv[121]	coref	18-6[140_121]
15-7	2660-2671	application	abstract[121]	giv[121]	_	_
15-8	2672-2677	often	_	_	_	_
15-9	2678-2682	have	_	_	_	_
15-10	2683-2690	diverse	abstract[123]	giv[123]	coref	18-10[142_123]
15-11	2691-2699	resource	abstract|abstract[123]	giv|giv[123]	coref	17-2
15-12	2700-2707	demands	abstract[123]	giv[123]	_	_
15-13	2708-2709	,	abstract[123]	giv[123]	_	_
15-14	2710-2714	such	abstract[123]	giv[123]	_	_
15-15	2715-2717	as	abstract[123]	giv[123]	_	_
15-16	2718-2721	CPU	abstract[123]|abstract|person[125]	giv[123]|new|new[125]	ana|ana	18-13[143_125]|18-13[143_125]
15-17	2722-2723	,	abstract[123]|person[125]	giv[123]|new[125]	_	_
15-18	2724-2730	memory	abstract[123]|person[125]|abstract	giv[123]|new[125]|new	_	_
15-19	2731-2734	and	abstract[123]|person[125]	giv[123]|new[125]	_	_
15-20	2735-2739	disk	abstract[123]|person[125]|object	giv[123]|new[125]|new	_	_
15-21	2740-2741	.	_	_	_	_

#Text=The underlying machine has to ensure sufficient resources to run each service and at the same time provide cohesive functionalities .
16-1	2742-2745	The	object[128]	giv[128]	coref	20-22[165_128]
16-2	2746-2756	underlying	object[128]	giv[128]	_	_
16-3	2757-2764	machine	object[128]	giv[128]	_	_
16-4	2765-2768	has	_	_	_	_
16-5	2769-2771	to	_	_	_	_
16-6	2772-2778	ensure	_	_	_	_
16-7	2779-2789	sufficient	abstract[129]	giv[129]	_	_
16-8	2790-2799	resources	abstract[129]	giv[129]	_	_
16-9	2800-2802	to	_	_	_	_
16-10	2803-2806	run	_	_	_	_
16-11	2807-2811	each	object[130]	giv[130]	coref	17-5[135_130]
16-12	2812-2819	service	object[130]	giv[130]	_	_
16-13	2820-2823	and	_	_	_	_
16-14	2824-2826	at	_	_	_	_
16-15	2827-2830	the	time[131]	giv[131]	_	_
16-16	2831-2835	same	time[131]	giv[131]	_	_
16-17	2836-2840	time	time[131]	giv[131]	_	_
16-18	2841-2848	provide	_	_	_	_
16-19	2849-2857	cohesive	abstract[132]	giv[132]	_	_
16-20	2858-2873	functionalities	abstract[132]	giv[132]	_	_
16-21	2874-2875	.	_	_	_	_

#Text=Efficient resource allocation to each service is difficult , while it becomes more challenging when the cluster consists of heterogeneous machines .
17-1	2876-2885	Efficient	abstract[134]	new[134]	_	_
17-2	2886-2894	resource	abstract|abstract[134]	giv|new[134]	coref	21-15
17-3	2895-2905	allocation	abstract[134]	new[134]	_	_
17-4	2906-2908	to	abstract[134]	new[134]	_	_
17-5	2909-2913	each	abstract[134]|object[135]	new[134]|giv[135]	ana	17-11[0_135]
17-6	2914-2921	service	abstract[134]|object[135]	new[134]|giv[135]	_	_
17-7	2922-2924	is	_	_	_	_
17-8	2925-2934	difficult	_	_	_	_
17-9	2935-2936	,	_	_	_	_
17-10	2937-2942	while	_	_	_	_
17-11	2943-2945	it	object	giv	coref	19-19[154_0]
17-12	2946-2953	becomes	_	_	_	_
17-13	2954-2958	more	_	_	_	_
17-14	2959-2970	challenging	_	_	_	_
17-15	2971-2975	when	_	_	_	_
17-16	2976-2979	the	abstract[137]	giv[137]	coref	23-13[0_137]
17-17	2980-2987	cluster	abstract[137]	giv[137]	_	_
17-18	2988-2996	consists	_	_	_	_
17-19	2997-2999	of	_	_	_	_
17-20	3000-3013	heterogeneous	object[138]	giv[138]	_	_
17-21	3014-3022	machines	object[138]	giv[138]	_	_
17-22	3023-3024	.	_	_	_	_

#Text=Second , services involved in the application often have traffic demands among them due to data communication , which require meticulous treatment .
18-1	3025-3031	Second	_	_	_	_
18-2	3032-3033	,	_	_	_	_
18-3	3034-3042	services	abstract	giv	coref	20-12[161_0]
18-4	3043-3051	involved	_	_	_	_
18-5	3052-3054	in	_	_	_	_
18-6	3055-3058	the	abstract[140]	giv[140]	coref	23-9[176_140]
18-7	3059-3070	application	abstract[140]	giv[140]	_	_
18-8	3071-3076	often	_	_	_	_
18-9	3077-3081	have	_	_	_	_
18-10	3082-3089	traffic	abstract|abstract[142]	new|giv[142]	coref|coref|coref|coref	19-5|19-4[149_142]|19-5|19-4[149_142]
18-11	3090-3097	demands	abstract[142]	giv[142]	_	_
18-12	3098-3103	among	abstract[142]	giv[142]	_	_
18-13	3104-3108	them	abstract[142]|person[143]	giv[142]|giv[143]	_	_
18-14	3109-3112	due	abstract[142]|person[143]	giv[142]|giv[143]	_	_
18-15	3113-3115	to	_	_	_	_
18-16	3116-3120	data	abstract|abstract[145]	new|giv[145]	coref|coref	20-29[166_145]|20-29[166_145]
18-17	3121-3134	communication	abstract[145]	giv[145]	_	_
18-18	3135-3136	,	_	_	_	_
18-19	3137-3142	which	_	_	_	_
18-20	3143-3150	require	_	_	_	_
18-21	3151-3161	meticulous	abstract[146]	new[146]	_	_
18-22	3162-3171	treatment	abstract[146]	new[146]	_	_
18-23	3172-3173	.	_	_	_	_

#Text=Poor handling of the traffic demands can result in severe performance degradation , as the response time of a service is directly affected by its traffic situation .
19-1	3174-3178	Poor	abstract[147]	new[147]	_	_
19-2	3179-3187	handling	abstract[147]	new[147]	_	_
19-3	3188-3190	of	abstract[147]	new[147]	_	_
19-4	3191-3194	the	abstract[147]|abstract[149]	new[147]|giv[149]	coref	20-2[159_149]
19-5	3195-3202	traffic	abstract[147]|abstract|abstract[149]	new[147]|giv|giv[149]	coref	19-26
19-6	3203-3210	demands	abstract[147]|abstract[149]	new[147]|giv[149]	_	_
19-7	3211-3214	can	_	_	_	_
19-8	3215-3221	result	_	_	_	_
19-9	3222-3224	in	_	_	_	_
19-10	3225-3231	severe	abstract[151]	new[151]	_	_
19-11	3232-3243	performance	abstract|abstract[151]	giv|new[151]	_	_
19-12	3244-3255	degradation	abstract[151]	new[151]	_	_
19-13	3256-3257	,	_	_	_	_
19-14	3258-3260	as	_	_	_	_
19-15	3261-3264	the	abstract[153]	new[153]	_	_
19-16	3265-3273	response	abstract|abstract[153]	giv|new[153]	_	_
19-17	3274-3278	time	abstract[153]	new[153]	_	_
19-18	3279-3281	of	abstract[153]	new[153]	_	_
19-19	3282-3283	a	abstract[153]|object[154]	new[153]|giv[154]	ana	19-25[0_154]
19-20	3284-3291	service	abstract[153]|object[154]	new[153]|giv[154]	_	_
19-21	3292-3294	is	_	_	_	_
19-22	3295-3303	directly	_	_	_	_
19-23	3304-3312	affected	_	_	_	_
19-24	3313-3315	by	_	_	_	_
19-25	3316-3319	its	object|abstract[157]	giv|new[157]	coref|coref	23-19[179_0]|23-19[179_0]
19-26	3320-3327	traffic	abstract|abstract[157]	giv|new[157]	coref	20-3
19-27	3328-3337	situation	abstract[157]	new[157]	_	_
19-28	3338-3339	.	_	_	_	_

#Text=Considering the traffic demands , an intuitive solution is to place the services that have large traffic demands among them on the same machine , which can achieve intra-machine communication and reduce inter-machine traffic .
20-1	3340-3351	Considering	_	_	_	_
20-2	3352-3355	the	abstract[159]	giv[159]	coref	20-16[163_159]
20-3	3356-3363	traffic	abstract|abstract[159]	giv|giv[159]	coref	20-17
20-4	3364-3371	demands	abstract[159]	giv[159]	_	_
20-5	3372-3373	,	_	_	_	_
20-6	3374-3376	an	event[160]	new[160]	_	_
20-7	3377-3386	intuitive	event[160]	new[160]	_	_
20-8	3387-3395	solution	event[160]	new[160]	_	_
20-9	3396-3398	is	_	_	_	_
20-10	3399-3401	to	_	_	_	_
20-11	3402-3407	place	_	_	_	_
20-12	3408-3411	the	abstract[161]	giv[161]	ana	20-20[0_161]
20-13	3412-3420	services	abstract[161]	giv[161]	_	_
20-14	3421-3425	that	_	_	_	_
20-15	3426-3430	have	_	_	_	_
20-16	3431-3436	large	abstract[163]	giv[163]	coref	23-27[183_163]
20-17	3437-3444	traffic	abstract|abstract[163]	giv|giv[163]	coref	20-33[167_0]
20-18	3445-3452	demands	abstract[163]	giv[163]	_	_
20-19	3453-3458	among	abstract[163]	giv[163]	_	_
20-20	3459-3463	them	abstract[163]|abstract	giv[163]|giv	coref	21-3[168_0]
20-21	3464-3466	on	_	_	_	_
20-22	3467-3470	the	object[165]	giv[165]	coref	21-10[169_165]
20-23	3471-3475	same	object[165]	giv[165]	_	_
20-24	3476-3483	machine	object[165]	giv[165]	_	_
20-25	3484-3485	,	_	_	_	_
20-26	3486-3491	which	_	_	_	_
20-27	3492-3495	can	_	_	_	_
20-28	3496-3503	achieve	_	_	_	_
20-29	3504-3517	intra-machine	abstract[166]	giv[166]	_	_
20-30	3518-3531	communication	abstract[166]	giv[166]	_	_
20-31	3532-3535	and	_	_	_	_
20-32	3536-3542	reduce	_	_	_	_
20-33	3543-3556	inter-machine	abstract[167]	giv[167]	coref	23-31[0_167]
20-34	3557-3564	traffic	abstract[167]	giv[167]	_	_
20-35	3565-3566	.	_	_	_	_

#Text=However , such services cannot all be co-located on one machine due to limited resource capacities .
21-1	3567-3574	However	_	_	_	_
21-2	3575-3576	,	_	_	_	_
21-3	3577-3581	such	abstract[168]	giv[168]	_	_
21-4	3582-3590	services	abstract[168]	giv[168]	_	_
21-5	3591-3597	cannot	_	_	_	_
21-6	3598-3601	all	_	_	_	_
21-7	3602-3604	be	_	_	_	_
21-8	3605-3615	co-located	_	_	_	_
21-9	3616-3618	on	_	_	_	_
21-10	3619-3622	one	object[169]	giv[169]	coref	30-12[233_169]
21-11	3623-3630	machine	object[169]	giv[169]	_	_
21-12	3631-3634	due	object[169]	giv[169]	_	_
21-13	3635-3637	to	_	_	_	_
21-14	3638-3645	limited	abstract[171]	new[171]	_	_
21-15	3646-3654	resource	abstract|abstract[171]	giv|new[171]	coref	23-28
21-16	3655-3665	capacities	abstract[171]	new[171]	_	_
21-17	3666-3667	.	_	_	_	_

#Text=Hence , placement of service-based applications is quite complicated in clouds .
22-1	3668-3673	Hence	_	_	_	_
22-2	3674-3675	,	_	_	_	_
22-3	3676-3685	placement	abstract[172]	new[172]	coref	26-11[0_172]
22-4	3686-3688	of	abstract[172]	new[172]	_	_
22-5	3689-3702	service-based	abstract[172]|abstract[173]	new[172]|giv[173]	coref	27-10[212_173]
22-6	3703-3715	applications	abstract[172]|abstract[173]	new[172]|giv[173]	_	_
22-7	3716-3718	is	_	_	_	_
22-8	3719-3724	quite	_	_	_	_
22-9	3725-3736	complicated	_	_	_	_
22-10	3737-3739	in	_	_	_	_
22-11	3740-3746	clouds	place	giv	_	_
22-12	3747-3748	.	_	_	_	_

#Text=In order to achieve a desired performance of a service-based application , cluster schedulers have to carefully place each service of the application with respect to the resource demands and traffic demands .
23-1	3749-3751	In	_	_	_	_
23-2	3752-3757	order	_	_	_	_
23-3	3758-3760	to	_	_	_	_
23-4	3761-3768	achieve	_	_	_	_
23-5	3769-3770	a	abstract[175]	new[175]	_	_
23-6	3771-3778	desired	abstract[175]	new[175]	_	_
23-7	3779-3790	performance	abstract[175]	new[175]	_	_
23-8	3791-3793	of	abstract[175]	new[175]	_	_
23-9	3794-3795	a	abstract[175]|abstract[176]	new[175]|giv[176]	coref	23-22[180_176]
23-10	3796-3809	service-based	abstract[175]|abstract[176]	new[175]|giv[176]	_	_
23-11	3810-3821	application	abstract[175]|abstract[176]	new[175]|giv[176]	_	_
23-12	3822-3823	,	_	_	_	_
23-13	3824-3831	cluster	abstract|abstract[178]	giv|new[178]	coref|coref|coref|coref	24-1[185_0]|31-13[245_178]|24-1[185_0]|31-13[245_178]
23-14	3832-3842	schedulers	abstract[178]	new[178]	_	_
23-15	3843-3847	have	_	_	_	_
23-16	3848-3850	to	_	_	_	_
23-17	3851-3860	carefully	_	_	_	_
23-18	3861-3866	place	_	_	_	_
23-19	3867-3871	each	object[179]	giv[179]	coref	29-11[0_179]
23-20	3872-3879	service	object[179]	giv[179]	_	_
23-21	3880-3882	of	object[179]	giv[179]	_	_
23-22	3883-3886	the	object[179]|abstract[180]	giv[179]|giv[180]	coref	29-15[0_180]
23-23	3887-3898	application	object[179]|abstract[180]	giv[179]|giv[180]	_	_
23-24	3899-3903	with	object[179]|abstract[180]	giv[179]|giv[180]	_	_
23-25	3904-3911	respect	object[179]|abstract[180]|abstract[181]	giv[179]|giv[180]|new[181]	_	_
23-26	3912-3914	to	object[179]|abstract[180]|abstract[181]	giv[179]|giv[180]|new[181]	_	_
23-27	3915-3918	the	object[179]|abstract[180]|abstract[181]|abstract[183]	giv[179]|giv[180]|new[181]|giv[183]	coref	27-16[215_183]
23-28	3919-3927	resource	object[179]|abstract[180]|abstract[181]|abstract|abstract[183]	giv[179]|giv[180]|new[181]|giv|giv[183]	coref	24-10
23-29	3928-3935	demands	object[179]|abstract[180]|abstract[181]|abstract[183]	giv[179]|giv[180]|new[181]|giv[183]	_	_
23-30	3936-3939	and	object[179]|abstract[180]|abstract[181]|abstract[183]	giv[179]|giv[180]|new[181]|giv[183]	_	_
23-31	3940-3947	traffic	object[179]|abstract[180]|abstract[181]|abstract[183]|abstract	giv[179]|giv[180]|new[181]|giv[183]|giv	coref	27-17
23-32	3948-3955	demands	object[179]|abstract[180]|abstract[181]|abstract[183]	giv[179]|giv[180]|new[181]|giv[183]	_	_
23-33	3956-3957	.	_	_	_	_

#Text=Recent cluster scheduling methods mainly focus on the cluster resource efficiency or job completion time of batch workloads .
24-1	3958-3964	Recent	abstract[185]|abstract[186]	giv[185]|new[186]	coref|coref	24-9[0_185]|24-9[0_185]
24-2	3965-3972	cluster	abstract[185]|abstract[186]	giv[185]|new[186]	_	_
24-3	3973-3983	scheduling	abstract[186]	new[186]	_	_
24-4	3984-3991	methods	abstract[186]	new[186]	_	_
24-5	3992-3998	mainly	_	_	_	_
24-6	3999-4004	focus	_	_	_	_
24-7	4005-4007	on	_	_	_	_
24-8	4008-4011	the	abstract[189]	giv[189]	_	_
24-9	4012-4019	cluster	abstract|abstract[189]	giv|giv[189]	coref	25-8
24-10	4020-4028	resource	abstract|abstract[189]	giv|giv[189]	coref	30-25
24-11	4029-4039	efficiency	abstract[189]	giv[189]	_	_
24-12	4040-4042	or	_	_	_	_
24-13	4043-4046	job	abstract|object[192]	new|new[192]	_	_
24-14	4047-4057	completion	event|object[192]	new|new[192]	_	_
24-15	4058-4062	time	object[192]	new[192]	_	_
24-16	4063-4065	of	object[192]	new[192]	_	_
24-17	4066-4071	batch	object[192]|quantity|abstract[194]	new[192]|new|new[194]	_	_
24-18	4072-4081	workloads	object[192]|abstract[194]	new[192]|new[194]	_	_
24-19	4082-4083	.	_	_	_	_

#Text=For instance , Tetris , a multi-resource cluster scheduler , adapts heuristics for the multi-dimensional bin packing problem to efficiently pack tasks on multi-resource cluster .
25-1	4084-4087	For	_	_	_	_
25-2	4088-4096	instance	_	_	_	_
25-3	4097-4098	,	_	_	_	_
25-4	4099-4105	Tetris	organization	new	_	_
25-5	4106-4107	,	_	_	_	_
25-6	4108-4109	a	abstract[197]	giv[197]	coref	26-3[205_197]
25-7	4110-4124	multi-resource	abstract[197]	giv[197]	_	_
25-8	4125-4132	cluster	abstract|abstract[197]	giv|giv[197]	coref	25-24[202_0]
25-9	4133-4142	scheduler	abstract[197]	giv[197]	_	_
25-10	4143-4144	,	_	_	_	_
25-11	4145-4151	adapts	_	_	_	_
25-12	4152-4162	heuristics	abstract	new	_	_
25-13	4163-4166	for	_	_	_	_
25-14	4167-4170	the	place[199]	new[199]	_	_
25-15	4171-4188	multi-dimensional	place[199]	new[199]	_	_
25-16	4189-4192	bin	place[199]	new[199]	_	_
25-17	4193-4200	packing	_	_	_	_
25-18	4201-4208	problem	abstract	new	coref	28-16
25-19	4209-4211	to	_	_	_	_
25-20	4212-4223	efficiently	_	_	_	_
25-21	4224-4228	pack	_	_	_	_
25-22	4229-4234	tasks	abstract	new	_	_
25-23	4235-4237	on	_	_	_	_
25-24	4238-4252	multi-resource	abstract[202]	giv[202]	coref	26-5[0_202]
25-25	4253-4260	cluster	abstract[202]	giv[202]	_	_
25-26	4261-4262	.	_	_	_	_

#Text=Firmament , a centralized cluster scheduler , can make high-quality placement decisions on large-scale clusters via a min-cost max-flow optimization .
26-1	4263-4272	Firmament	organization	new	_	_
26-2	4273-4274	,	_	_	_	_
26-3	4275-4276	a	abstract[205]	giv[205]	_	_
26-4	4277-4288	centralized	abstract[205]	giv[205]	_	_
26-5	4289-4296	cluster	abstract|abstract[205]	giv|giv[205]	coref	30-28[240_0]
26-6	4297-4306	scheduler	abstract[205]	giv[205]	_	_
26-7	4307-4308	,	_	_	_	_
26-8	4309-4312	can	_	_	_	_
26-9	4313-4317	make	_	_	_	_
26-10	4318-4330	high-quality	abstract[207]	new[207]	coref	27-22[0_207]
26-11	4331-4340	placement	abstract|abstract[207]	giv|new[207]	coref	29-14[229_0]
26-12	4341-4350	decisions	abstract[207]	new[207]	_	_
26-13	4351-4353	on	abstract[207]	new[207]	_	_
26-14	4354-4365	large-scale	abstract[207]|abstract[208]	new[207]|giv[208]	_	_
26-15	4366-4374	clusters	abstract[207]|abstract[208]	new[207]|giv[208]	_	_
26-16	4375-4378	via	abstract[207]|abstract[208]	new[207]|giv[208]	_	_
26-17	4379-4380	a	abstract[207]|abstract[208]|abstract[209]	new[207]|giv[208]|new[209]	_	_
26-18	4381-4389	min-cost	abstract[207]|abstract[208]|abstract[209]	new[207]|giv[208]|new[209]	_	_
26-19	4390-4398	max-flow	abstract[207]|abstract[208]|abstract[209]	new[207]|giv[208]|new[209]	_	_
26-20	4399-4411	optimization	abstract[207]|abstract[208]|abstract[209]	new[207]|giv[208]|new[209]	_	_
26-21	4412-4413	.	_	_	_	_

#Text=Unfortunately , these solutions would face difficulties for handling service-based applications , as they ignore the traffic demands when making placement decisions .
27-1	4414-4427	Unfortunately	_	_	_	_
27-2	4428-4429	,	_	_	_	_
27-3	4430-4435	these	abstract[210]	new[210]	coref	30-5[232_210]
27-4	4436-4445	solutions	abstract[210]	new[210]	_	_
27-5	4446-4451	would	_	_	_	_
27-6	4452-4456	face	_	_	_	_
27-7	4457-4469	difficulties	abstract	new	_	_
27-8	4470-4473	for	_	_	_	_
27-9	4474-4482	handling	_	_	_	_
27-10	4483-4496	service-based	abstract[212]	giv[212]	ana	27-14[0_212]
27-11	4497-4509	applications	abstract[212]	giv[212]	_	_
27-12	4510-4511	,	_	_	_	_
27-13	4512-4514	as	_	_	_	_
27-14	4515-4519	they	abstract	giv	ana	29-3
27-15	4520-4526	ignore	_	_	_	_
27-16	4527-4530	the	abstract[215]	giv[215]	_	_
27-17	4531-4538	traffic	abstract|abstract[215]	giv|giv[215]	_	_
27-18	4539-4546	demands	abstract[215]	giv[215]	_	_
27-19	4547-4551	when	_	_	_	_
27-20	4552-4558	making	_	_	_	_
27-21	4559-4568	placement	_	_	_	_
27-22	4569-4578	decisions	abstract	giv	_	_
27-23	4579-4580	.	_	_	_	_

#Text=Some other research works concentrate on composite Software as a service ( SaaS ) placement problem , which try to minimize the total execution time for composite SaaS .
28-1	4581-4585	Some	abstract[218]	new[218]	_	_
28-2	4586-4591	other	abstract[218]	new[218]	_	_
28-3	4592-4600	research	abstract|abstract[218]	new|new[218]	coref	30-6
28-4	4601-4606	works	abstract[218]	new[218]	_	_
28-5	4607-4618	concentrate	_	_	_	_
28-6	4619-4621	on	_	_	_	_
28-7	4622-4631	composite	abstract[219]	new[219]	_	_
28-8	4632-4640	Software	abstract[219]	new[219]	_	_
28-9	4641-4643	as	_	_	_	_
28-10	4644-4645	a	_	_	_	_
28-11	4646-4653	service	_	_	_	_
28-12	4654-4655	(	_	_	_	_
28-13	4656-4660	SaaS	abstract	new	coref	28-27[224_0]
28-14	4661-4662	)	_	_	_	_
28-15	4663-4672	placement	_	_	_	_
28-16	4673-4680	problem	abstract	giv	coref	30-17[236_0]
28-17	4681-4682	,	_	_	_	_
28-18	4683-4688	which	_	_	_	_
28-19	4689-4692	try	_	_	_	_
28-20	4693-4695	to	_	_	_	_
28-21	4696-4704	minimize	_	_	_	_
28-22	4705-4708	the	abstract[223]	new[223]	_	_
28-23	4709-4714	total	abstract[223]	new[223]	_	_
28-24	4715-4724	execution	abstract|abstract[223]	new|new[223]	_	_
28-25	4725-4729	time	abstract[223]	new[223]	_	_
28-26	4730-4733	for	abstract[223]	new[223]	_	_
28-27	4734-4743	composite	abstract[223]|abstract[224]	new[223]|giv[224]	_	_
28-28	4744-4748	SaaS	abstract[223]|abstract[224]	new[223]|giv[224]	_	_
28-29	4749-4750	.	_	_	_	_

#Text=However , they only focus on a set of predefined service components for the application placement .
29-1	4751-4758	However	_	_	_	_
29-2	4759-4760	,	_	_	_	_
29-3	4761-4765	they	abstract	giv	_	_
29-4	4766-4770	only	_	_	_	_
29-5	4771-4776	focus	_	_	_	_
29-6	4777-4779	on	_	_	_	_
29-7	4780-4781	a	abstract[227]	giv[227]	_	_
29-8	4782-4785	set	abstract[227]	giv[227]	_	_
29-9	4786-4788	of	abstract[227]	giv[227]	_	_
29-10	4789-4799	predefined	abstract[227]	giv[227]	_	_
29-11	4800-4807	service	object|abstract[227]	giv|giv[227]	_	_
29-12	4808-4818	components	abstract[227]	giv[227]	_	_
29-13	4819-4822	for	abstract[227]	giv[227]	_	_
29-14	4823-4826	the	abstract[227]|abstract[229]	giv[227]|giv[229]	coref	30-17[0_229]
29-15	4827-4838	application	abstract[227]|abstract|abstract[229]	giv[227]|giv|giv[229]	coref	32-15[252_0]
29-16	4839-4848	placement	abstract[227]|abstract[229]	giv[227]|giv[229]	_	_
29-17	4849-4850	.	_	_	_	_

#Text=For traffic-aware scheduling , relevant research solutions are proposed to handle virtual machine ( VM ) placement problem , which aims to optimize network resource usage over the cluster .
30-1	4851-4854	For	_	_	_	_
30-2	4855-4868	traffic-aware	abstract[230]	new[230]	_	_
30-3	4869-4879	scheduling	abstract[230]	new[230]	_	_
30-4	4880-4881	,	_	_	_	_
30-5	4882-4890	relevant	abstract[232]	giv[232]	coref	31-3[241_232]
30-6	4891-4899	research	abstract|abstract[232]	giv|giv[232]	_	_
30-7	4900-4909	solutions	abstract[232]	giv[232]	_	_
30-8	4910-4913	are	_	_	_	_
30-9	4914-4922	proposed	_	_	_	_
30-10	4923-4925	to	_	_	_	_
30-11	4926-4932	handle	_	_	_	_
30-12	4933-4940	virtual	object[233]	giv[233]	_	_
30-13	4941-4948	machine	object[233]	giv[233]	_	_
30-14	4949-4950	(	_	_	_	_
30-15	4951-4953	VM	abstract	new	_	_
30-16	4954-4955	)	_	_	_	_
30-17	4956-4965	placement	abstract|abstract[236]	giv|giv[236]	_	_
30-18	4966-4973	problem	abstract[236]	giv[236]	_	_
30-19	4974-4975	,	_	_	_	_
30-20	4976-4981	which	_	_	_	_
30-21	4982-4986	aims	_	_	_	_
30-22	4987-4989	to	_	_	_	_
30-23	4990-4998	optimize	_	_	_	_
30-24	4999-5006	network	place|abstract[239]	giv|new[239]	coref|coref	31-9|31-9
30-25	5007-5015	resource	abstract|abstract[239]	giv|new[239]	_	_
30-26	5016-5021	usage	abstract[239]	new[239]	_	_
30-27	5022-5026	over	_	_	_	_
30-28	5027-5030	the	abstract[240]	giv[240]	coref	31-16[0_240]
30-29	5031-5038	cluster	abstract[240]	giv[240]	_	_
30-30	5039-5040	.	_	_	_	_

#Text=However , these solutions rely on a certain network topology , while most of existing cluster schedulers are agnostic to network topology .
31-1	5041-5048	However	_	_	_	_
31-2	5049-5050	,	_	_	_	_
31-3	5051-5056	these	abstract[241]	giv[241]	_	_
31-4	5057-5066	solutions	abstract[241]	giv[241]	_	_
31-5	5067-5071	rely	_	_	_	_
31-6	5072-5074	on	_	_	_	_
31-7	5075-5076	a	abstract[243]	new[243]	coref	31-22[0_243]
31-8	5077-5084	certain	abstract[243]	new[243]	_	_
31-9	5085-5092	network	place|abstract[243]	giv|new[243]	coref	32-10
31-10	5093-5101	topology	abstract[243]	new[243]	_	_
31-11	5102-5103	,	_	_	_	_
31-12	5104-5109	while	_	_	_	_
31-13	5110-5114	most	abstract[245]	giv[245]	_	_
31-14	5115-5117	of	abstract[245]	giv[245]	_	_
31-15	5118-5126	existing	abstract[245]	giv[245]	_	_
31-16	5127-5134	cluster	abstract|abstract[245]	giv|giv[245]	_	_
31-17	5135-5145	schedulers	abstract[245]	giv[245]	_	_
31-18	5146-5149	are	_	_	_	_
31-19	5150-5158	agnostic	_	_	_	_
31-20	5159-5161	to	_	_	_	_
31-21	5162-5169	network	_	_	_	_
31-22	5170-5178	topology	abstract	giv	coref	32-11
31-23	5179-5180	.	_	_	_	_

#Text=In particular , it is hard to get the network topology information when deploying a service-based application on a virtual infrastructure .
32-1	5181-5183	In	_	_	_	_
32-2	5184-5194	particular	_	_	_	_
32-3	5195-5196	,	_	_	_	_
32-4	5197-5199	it	object	new	cata	32-4[0_248]
32-5	5200-5202	is	_	_	_	_
32-6	5203-5207	hard	_	_	_	_
32-7	5208-5210	to	object[248]	new[248]	_	_
32-8	5211-5214	get	object[248]	new[248]	_	_
32-9	5215-5218	the	object[248]|abstract[251]	new[248]|new[251]	_	_
32-10	5219-5226	network	object[248]|abstract|abstract[251]	new[248]|giv|new[251]	_	_
32-11	5227-5235	topology	object[248]|abstract|abstract[251]	new[248]|giv|new[251]	_	_
32-12	5236-5247	information	object[248]|abstract[251]	new[248]|new[251]	_	_
32-13	5248-5252	when	_	_	_	_
32-14	5253-5262	deploying	_	_	_	_
32-15	5263-5264	a	abstract[252]	giv[252]	_	_
32-16	5265-5278	service-based	abstract[252]	giv[252]	_	_
32-17	5279-5290	application	abstract[252]	giv[252]	_	_
32-18	5291-5293	on	abstract[252]	giv[252]	_	_
32-19	5294-5295	a	abstract[252]|place[253]	giv[252]|new[253]	_	_
32-20	5296-5303	virtual	abstract[252]|place[253]	giv[252]|new[253]	_	_
32-21	5304-5318	infrastructure	abstract[252]|place[253]	giv[252]|new[253]	_	_
32-22	5319-5320	.	_	_	_	_
