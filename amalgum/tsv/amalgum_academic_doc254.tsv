#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=3. Accurate and Approximate Adders
1-1	0-2	3.	_	_	_	_
1-2	3-11	Accurate	_	_	_	_
1-3	12-15	and	_	_	_	_
1-4	16-27	Approximate	abstract[1]	new[1]	coref	2-14[6_1]
1-5	28-34	Adders	abstract[1]	new[1]	_	_

#Text=The architecture of an N-bit accurate adder and the generic architectures of N-bit approximate adders are shown in
2-1	35-38	The	abstract[2]	new[2]	_	_
2-2	39-51	architecture	abstract[2]	new[2]	_	_
2-3	52-54	of	abstract[2]	new[2]	_	_
2-4	55-57	an	abstract[2]|abstract[3]	new[2]|new[3]	coref	6-6[0_3]
2-5	58-63	N-bit	abstract[2]|abstract[3]	new[2]|new[3]	_	_
2-6	64-72	accurate	abstract[2]|abstract[3]	new[2]|new[3]	_	_
2-7	73-78	adder	abstract[2]|abstract[3]	new[2]|new[3]	_	_
2-8	79-82	and	abstract[2]	new[2]	_	_
2-9	83-86	the	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-10	87-94	generic	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-11	95-108	architectures	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-12	109-111	of	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-13	112-117	N-bit	abstract[2]|abstract[4]|object	new[2]|new[4]|new	_	_
2-14	118-129	approximate	abstract[2]|abstract[4]|abstract[6]	new[2]|new[4]|giv[6]	coref	5-2[8_6]
2-15	130-136	adders	abstract[2]|abstract[4]|abstract[6]	new[2]|new[4]|giv[6]	_	_
2-16	137-140	are	_	_	_	_
2-17	141-146	shown	_	_	_	_
2-18	147-149	in	_	_	_	_

#Text=Figure 1
3-1	150-156	Figure	object[7]	new[7]	coref	7-1[18_7]
3-2	157-158	1	object[7]	new[7]	_	_

#Text=.
4-1	159-160	.	_	_	_	_

#Text=For the approximate adders , we define the size of the least significant inaccurate sub-adder to be K-bits , and hence the size of the more significant accurate sub-adder will be ( N – K)-bits .
5-1	161-164	For	_	_	_	_
5-2	165-168	the	abstract[8]	giv[8]	coref	10-31[41_8]
5-3	169-180	approximate	abstract[8]	giv[8]	_	_
5-4	181-187	adders	abstract[8]	giv[8]	_	_
5-5	188-189	,	_	_	_	_
5-6	190-192	we	person	acc	ana	11-1
5-7	193-199	define	_	_	_	_
5-8	200-203	the	quantity[10]	new[10]	_	_
5-9	204-208	size	quantity[10]	new[10]	_	_
5-10	209-211	of	quantity[10]	new[10]	_	_
5-11	212-215	the	quantity[10]|abstract[11]	new[10]|new[11]	coref	10-21[38_11]
5-12	216-221	least	quantity[10]|abstract[11]	new[10]|new[11]	_	_
5-13	222-233	significant	quantity[10]|abstract[11]	new[10]|new[11]	_	_
5-14	234-244	inaccurate	quantity[10]|abstract[11]	new[10]|new[11]	_	_
5-15	245-254	sub-adder	quantity[10]|abstract[11]	new[10]|new[11]	_	_
5-16	255-257	to	_	_	_	_
5-17	258-260	be	_	_	_	_
5-18	261-267	K-bits	quantity	new	_	_
5-19	268-269	,	_	_	_	_
5-20	270-273	and	_	_	_	_
5-21	274-279	hence	quantity[13]	new[13]	_	_
5-22	280-283	the	quantity[13]	new[13]	_	_
5-23	284-288	size	quantity[13]	new[13]	_	_
5-24	289-291	of	quantity[13]	new[13]	_	_
5-25	292-295	the	quantity[13]|object[14]	new[13]|new[14]	coref	10-10[34_14]
5-26	296-300	more	quantity[13]|object[14]	new[13]|new[14]	_	_
5-27	301-312	significant	quantity[13]|object[14]	new[13]|new[14]	_	_
5-28	313-321	accurate	quantity[13]|object[14]	new[13]|new[14]	_	_
5-29	322-331	sub-adder	quantity[13]|object[14]	new[13]|new[14]	_	_
5-30	332-336	will	_	_	_	_
5-31	337-339	be	_	_	_	_
5-32	340-341	(	_	_	_	_
5-33	342-343	N	_	_	_	_
5-34	344-345	–	_	_	_	_
5-35	346-353	K)-bits	_	_	_	_
5-36	354-355	.	_	_	_	_

#Text=A and B represent the adder inputs in
6-1	356-357	A	_	_	_	_
6-2	358-361	and	_	_	_	_
6-3	362-363	B	place	new	_	_
6-4	364-373	represent	_	_	_	_
6-5	374-377	the	abstract[17]	new[17]	coref	9-5[27_17]
6-6	378-383	adder	abstract|abstract[17]	giv|new[17]	coref	9-6
6-7	384-390	inputs	abstract[17]	new[17]	_	_
6-8	391-393	in	_	_	_	_

#Text=Figure 1
7-1	394-400	Figure	object[18]	giv[18]	coref	13-1[56_18]
7-2	401-402	1	object[18]	giv[18]	_	_

#Text=, while SUM denotes the sum output , which includes a carry overflow bit .
8-1	403-404	,	_	_	_	_
8-2	405-410	while	_	_	_	_
8-3	411-414	SUM	quantity	new	coref	25-23
8-4	415-422	denotes	_	_	_	_
8-5	423-426	the	abstract[21]	new[21]	_	_
8-6	427-430	sum	quantity|abstract[21]	new|new[21]	coref	10-18
8-7	431-437	output	abstract[21]	new[21]	_	_
8-8	438-439	,	_	_	_	_
8-9	440-445	which	_	_	_	_
8-10	446-454	includes	_	_	_	_
8-11	455-456	a	abstract[24]	new[24]	coref	9-13[0_24]
8-12	457-462	carry	abstract|abstract[24]	new|new[24]	coref	10-37
8-13	463-471	overflow	event|abstract[24]	new|new[24]	coref	10-36[43_0]
8-14	472-475	bit	abstract[24]	new[24]	_	_
8-15	476-477	.	_	_	_	_

#Text=The subscripts associated with the adder inputs and outputs denote the corresponding bit positions .
9-1	478-481	The	abstract[25]	new[25]	_	_
9-2	482-492	subscripts	abstract[25]	new[25]	_	_
9-3	493-503	associated	_	_	_	_
9-4	504-508	with	_	_	_	_
9-5	509-512	the	abstract[27]	giv[27]	_	_
9-6	513-518	adder	abstract|abstract[27]	giv|giv[27]	coref	12-1[55_0]
9-7	519-525	inputs	abstract[27]	giv[27]	_	_
9-8	526-529	and	abstract[27]	giv[27]	_	_
9-9	530-537	outputs	abstract[27]|abstract	giv[27]|new	_	_
9-10	538-544	denote	_	_	_	_
9-11	545-548	the	abstract[30]	new[30]	_	_
9-12	549-562	corresponding	abstract[30]	new[30]	_	_
9-13	563-566	bit	abstract|abstract[30]	giv|new[30]	coref	25-33
9-14	567-576	positions	abstract[30]	new[30]	_	_
9-15	577-578	.	_	_	_	_

#Text=The ( N – K ) sum bits of the accurate sub-adder are combined with the K sum bits of the inaccurate sub-adder to produce the N sum bits of approximate adders , which includes the carry overflow .
10-1	579-582	The	quantity[31]	new[31]	_	_
10-2	583-584	(	quantity[31]	new[31]	_	_
10-3	585-586	N	quantity[31]	new[31]	_	_
10-4	587-588	–	quantity[31]	new[31]	_	_
10-5	589-590	K	quantity[31]|person	new[31]|new	coref	10-17
10-6	591-592	)	quantity[31]	new[31]	_	_
10-7	593-596	sum	_	_	_	_
10-8	597-601	bits	object[33]	new[33]	_	_
10-9	602-604	of	object[33]	new[33]	_	_
10-10	605-608	the	object[33]|object[34]	new[33]|giv[34]	coref	17-27[81_34]
10-11	609-617	accurate	object[33]|object[34]	new[33]|giv[34]	_	_
10-12	618-627	sub-adder	object[33]|object[34]	new[33]|giv[34]	_	_
10-13	628-631	are	_	_	_	_
10-14	632-640	combined	_	_	_	_
10-15	641-645	with	_	_	_	_
10-16	646-649	the	object[37]	new[37]	_	_
10-17	650-651	K	person|object[37]	giv|new[37]	coref	16-7
10-18	652-655	sum	quantity|object[37]	giv|new[37]	coref	10-28
10-19	656-660	bits	object[37]	new[37]	_	_
10-20	661-663	of	object[37]	new[37]	_	_
10-21	664-667	the	object[37]|abstract[38]	new[37]|giv[38]	coref	16-11[68_38]
10-22	668-678	inaccurate	object[37]|abstract[38]	new[37]|giv[38]	_	_
10-23	679-688	sub-adder	object[37]|abstract[38]	new[37]|giv[38]	_	_
10-24	689-691	to	_	_	_	_
10-25	692-699	produce	_	_	_	_
10-26	700-703	the	object[40]	new[40]	coref	16-19[71_40]
10-27	704-705	N	object[40]	new[40]	_	_
10-28	706-709	sum	quantity|object[40]	giv|new[40]	coref	16-20[70_0]
10-29	710-714	bits	object[40]	new[40]	_	_
10-30	715-717	of	object[40]	new[40]	_	_
10-31	718-729	approximate	object[40]|abstract[41]	new[40]|giv[41]	coref	11-7[46_41]
10-32	730-736	adders	object[40]|abstract[41]	new[40]|giv[41]	_	_
10-33	737-738	,	_	_	_	_
10-34	739-744	which	_	_	_	_
10-35	745-753	includes	_	_	_	_
10-36	754-757	the	event[43]	giv[43]	_	_
10-37	758-763	carry	abstract|event[43]	giv|giv[43]	coref	17-24
10-38	764-772	overflow	event[43]	giv[43]	_	_
10-39	773-774	.	_	_	_	_

#Text=We shall use some legends for the approximate adders for the ease of referencing ; some of the legends are defined by the authors in their respective works while the remaining are defined by us in this work for referencing .
11-1	775-777	We	person	giv	ana	11-35
11-2	778-783	shall	_	_	_	_
11-3	784-787	use	_	_	_	_
11-4	788-792	some	abstract[45]	new[45]	coref	11-18[49_45]
11-5	793-800	legends	abstract[45]	new[45]	_	_
11-6	801-804	for	abstract[45]	new[45]	_	_
11-7	805-808	the	abstract[45]|abstract[46]	new[45]|giv[46]	ana	11-16[48_46]
11-8	809-820	approximate	abstract[45]|abstract[46]	new[45]|giv[46]	_	_
11-9	821-827	adders	abstract[45]|abstract[46]	new[45]|giv[46]	_	_
11-10	828-831	for	abstract[45]|abstract[46]	new[45]|giv[46]	_	_
11-11	832-835	the	abstract[45]|abstract[46]|abstract[47]	new[45]|giv[46]|new[47]	_	_
11-12	836-840	ease	abstract[45]|abstract[46]|abstract[47]	new[45]|giv[46]|new[47]	_	_
11-13	841-843	of	_	_	_	_
11-14	844-855	referencing	_	_	_	_
11-15	856-857	;	_	_	_	_
11-16	858-862	some	abstract[48]	giv[48]	coref	30-25[139_48]
11-17	863-865	of	abstract[48]	giv[48]	_	_
11-18	866-869	the	abstract[48]|abstract[49]	giv[48]|giv[49]	_	_
11-19	870-877	legends	abstract[48]|abstract[49]	giv[48]|giv[49]	_	_
11-20	878-881	are	_	_	_	_
11-21	882-889	defined	_	_	_	_
11-22	890-892	by	_	_	_	_
11-23	893-896	the	person[50]	new[50]	_	_
11-24	897-904	authors	person[50]	new[50]	_	_
11-25	905-907	in	person[50]	new[50]	_	_
11-26	908-913	their	person[50]|abstract[51]	new[50]|new[51]	_	_
11-27	914-924	respective	person[50]|abstract[51]	new[50]|new[51]	_	_
11-28	925-930	works	person[50]|abstract[51]	new[50]|new[51]	_	_
11-29	931-936	while	_	_	_	_
11-30	937-940	the	abstract[52]	new[52]	_	_
11-31	941-950	remaining	abstract[52]	new[52]	_	_
11-32	951-954	are	_	_	_	_
11-33	955-962	defined	_	_	_	_
11-34	963-965	by	_	_	_	_
11-35	966-968	us	person	giv	ana	30-1
11-36	969-971	in	_	_	_	_
11-37	972-976	this	object[54]	new[54]	_	_
11-38	977-981	work	object[54]	new[54]	_	_
11-39	982-985	for	_	_	_	_
11-40	986-997	referencing	_	_	_	_
11-41	998-999	.	_	_	_	_

#Text=The accurate adder is shown in
12-1	1000-1003	The	abstract[55]	giv[55]	_	_
12-2	1004-1012	accurate	abstract[55]	giv[55]	_	_
12-3	1013-1018	adder	abstract[55]	giv[55]	_	_
12-4	1019-1021	is	_	_	_	_
12-5	1022-1027	shown	_	_	_	_
12-6	1028-1030	in	_	_	_	_

#Text=Figure 1
13-1	1031-1037	Figure	object[56]	giv[56]	coref	15-1[63_56]
13-2	1038-1039	1	object[56]	giv[56]	_	_

#Text=a. The approximate adder of Reference , called the lower-part OR adder ( LOA ) , is shown in
14-1	1040-1042	a.	person	new	_	_
14-2	1043-1046	The	abstract[58]	new[58]	coref	14-12[0_58]
14-3	1047-1058	approximate	abstract[58]	new[58]	_	_
14-4	1059-1064	adder	abstract[58]	new[58]	_	_
14-5	1065-1067	of	abstract[58]	new[58]	_	_
14-6	1068-1077	Reference	abstract[58]|person	new[58]|new	_	_
14-7	1078-1079	,	_	_	_	_
14-8	1080-1086	called	_	_	_	_
14-9	1087-1090	the	abstract[60]	new[60]	_	_
14-10	1091-1101	lower-part	abstract[60]	new[60]	_	_
14-11	1102-1104	OR	_	_	_	_
14-12	1105-1110	adder	abstract	giv	appos	14-14
14-13	1111-1112	(	_	_	_	_
14-14	1113-1116	LOA	abstract	giv	coref	16-3[64_0]
14-15	1117-1118	)	_	_	_	_
14-16	1119-1120	,	_	_	_	_
14-17	1121-1123	is	_	_	_	_
14-18	1124-1129	shown	_	_	_	_
14-19	1130-1132	in	_	_	_	_

#Text=Figure 1
15-1	1133-1139	Figure	object[63]	giv[63]	coref	20-1[90_63]
15-2	1140-1141	1	object[63]	giv[63]	_	_

#Text=b. In the LOA , the K input bit-pairs of the inaccurate sub-adder are respectively OR-ed to produce the K sum bits .
16-1	1142-1144	b.	_	_	_	_
16-2	1145-1147	In	_	_	_	_
16-3	1148-1151	the	abstract[64]	giv[64]	coref	18-16[0_64]
16-4	1152-1155	LOA	abstract[64]	giv[64]	_	_
16-5	1156-1157	,	_	_	_	_
16-6	1158-1161	the	abstract[67]	new[67]	_	_
16-7	1162-1163	K	person|abstract[67]	giv|new[67]	coref	16-20
16-8	1164-1169	input	abstract|abstract[67]	new|new[67]	coref	21-17[96_0]
16-9	1170-1179	bit-pairs	abstract[67]	new[67]	_	_
16-10	1180-1182	of	abstract[67]	new[67]	_	_
16-11	1183-1186	the	abstract[67]|abstract[68]	new[67]|giv[68]	coref	17-6[73_68]
16-12	1187-1197	inaccurate	abstract[67]|abstract[68]	new[67]|giv[68]	_	_
16-13	1198-1207	sub-adder	abstract[67]|abstract[68]	new[67]|giv[68]	_	_
16-14	1208-1211	are	_	_	_	_
16-15	1212-1224	respectively	_	_	_	_
16-16	1225-1230	OR-ed	_	_	_	_
16-17	1231-1233	to	_	_	_	_
16-18	1234-1241	produce	_	_	_	_
16-19	1242-1245	the	object[71]	giv[71]	_	_
16-20	1246-1247	K	person|quantity[70]|object[71]	giv|giv[70]|giv[71]	coref|coref	25-2[0_70]|39-6[185_0]
16-21	1248-1251	sum	quantity[70]|object[71]	giv[70]|giv[71]	_	_
16-22	1252-1256	bits	object[71]	giv[71]	_	_
16-23	1257-1258	.	_	_	_	_

#Text=The most significant bit-pair of the inaccurate sub-adder viz. AK – 1 and BK – 1 is alone AND-ed and given as the carry input for the accurate sub-adder .
17-1	1259-1262	The	abstract[72]	new[72]	_	_
17-2	1263-1267	most	abstract[72]	new[72]	_	_
17-3	1268-1279	significant	abstract[72]	new[72]	_	_
17-4	1280-1288	bit-pair	abstract[72]	new[72]	_	_
17-5	1289-1291	of	abstract[72]	new[72]	_	_
17-6	1292-1295	the	abstract[72]|abstract[73]|abstract[74]	new[72]|giv[73]|new[74]	coref|coref	22-16[102_73]|26-16[123_74]
17-7	1296-1306	inaccurate	abstract[72]|abstract[73]|abstract[74]	new[72]|giv[73]|new[74]	_	_
17-8	1307-1316	sub-adder	abstract[72]|abstract[73]|abstract[74]	new[72]|giv[73]|new[74]	_	_
17-9	1317-1321	viz.	abstract[72]|abstract[74]	new[72]|new[74]	_	_
17-10	1322-1324	AK	abstract[72]|abstract[74]|abstract	new[72]|new[74]|new	_	_
17-11	1325-1326	–	abstract[72]|abstract[74]	new[72]|new[74]	_	_
17-12	1327-1328	1	abstract[72]|abstract[74]|quantity	new[72]|new[74]|new	coref	17-16
17-13	1329-1332	and	abstract[72]|abstract[74]	new[72]|new[74]	_	_
17-14	1333-1335	BK	abstract[72]|abstract[74]|abstract[77]	new[72]|new[74]|new[77]	_	_
17-15	1336-1337	–	abstract[72]|abstract[74]|abstract[77]	new[72]|new[74]|new[77]	_	_
17-16	1338-1339	1	abstract[72]|abstract[74]|abstract[77]|quantity	new[72]|new[74]|new[77]|giv	coref	26-22
17-17	1340-1342	is	_	_	_	_
17-18	1343-1348	alone	_	_	_	_
17-19	1349-1355	AND-ed	abstract	new	_	_
17-20	1356-1359	and	_	_	_	_
17-21	1360-1365	given	_	_	_	_
17-22	1366-1368	as	_	_	_	_
17-23	1369-1372	the	_	_	_	_
17-24	1373-1378	carry	abstract	giv	coref	21-18
17-25	1379-1384	input	_	_	_	_
17-26	1385-1388	for	_	_	_	_
17-27	1389-1392	the	object[81]	giv[81]	coref	21-21[97_81]
17-28	1393-1401	accurate	object[81]	giv[81]	_	_
17-29	1402-1411	sub-adder	object[81]	giv[81]	_	_
17-30	1412-1413	.	_	_	_	_

#Text=The approximate adder of Reference shall be referred to as LOAWA ( i. e. , LOA without the 2-input AND function ) .
18-1	1414-1417	The	object[82]	new[82]	coref	22-1[99_82]
18-2	1418-1429	approximate	object[82]	new[82]	_	_
18-3	1430-1435	adder	object[82]	new[82]	_	_
18-4	1436-1438	of	object[82]	new[82]	_	_
18-5	1439-1448	Reference	object[82]|abstract	new[82]|new	coref	21-10
18-6	1449-1454	shall	_	_	_	_
18-7	1455-1457	be	_	_	_	_
18-8	1458-1466	referred	_	_	_	_
18-9	1467-1469	to	_	_	_	_
18-10	1470-1472	as	_	_	_	_
18-11	1473-1478	LOAWA	abstract	new	coref	19-1
18-12	1479-1480	(	_	_	_	_
18-13	1481-1483	i.	_	_	_	_
18-14	1484-1486	e.	_	_	_	_
18-15	1487-1488	,	_	_	_	_
18-16	1489-1492	LOA	abstract	giv	coref	31-7
18-17	1493-1500	without	_	_	_	_
18-18	1501-1504	the	abstract[86]|abstract[87]	new[86]|new[87]	coref|coref	32-16[149_86]|32-16[150_87]
18-19	1505-1512	2-input	abstract[86]|abstract[87]	new[86]|new[87]	_	_
18-20	1513-1516	AND	abstract[87]	new[87]	_	_
18-21	1517-1525	function	abstract[87]|abstract	new[87]|new	_	_
18-22	1526-1527	)	_	_	_	_
18-23	1528-1529	.	_	_	_	_

#Text=LOAWA is shown in
19-1	1530-1535	LOAWA	abstract	giv	coref	42-20
19-2	1536-1538	is	_	_	_	_
19-3	1539-1544	shown	_	_	_	_
19-4	1545-1547	in	_	_	_	_

#Text=Figure 1
20-1	1548-1554	Figure	object[90]	giv[90]	coref	23-1[103_90]
20-2	1555-1556	1	object[90]	giv[90]	_	_

#Text=c , which is nearly identical to LOA of Reference ; the only exception being that the carry input of the accurate sub-adder is set to a constant 0 .
21-1	1557-1558	c	abstract	new	_	_
21-2	1559-1560	,	_	_	_	_
21-3	1561-1566	which	_	_	_	_
21-4	1567-1569	is	_	_	_	_
21-5	1570-1576	nearly	_	_	_	_
21-6	1577-1586	identical	_	_	_	_
21-7	1587-1589	to	_	_	_	_
21-8	1590-1593	LOA	abstract[92]	new[92]	_	_
21-9	1594-1596	of	abstract[92]	new[92]	_	_
21-10	1597-1606	Reference	abstract[92]|abstract	new[92]|giv	coref	27-7
21-11	1607-1608	;	_	_	_	_
21-12	1609-1612	the	abstract[94]	new[94]	_	_
21-13	1613-1617	only	abstract[94]	new[94]	_	_
21-14	1618-1627	exception	abstract[94]	new[94]	_	_
21-15	1628-1633	being	_	_	_	_
21-16	1634-1638	that	_	_	_	_
21-17	1639-1642	the	abstract[96]	giv[96]	coref	25-17[0_96]
21-18	1643-1648	carry	abstract|abstract[96]	giv|giv[96]	coref	26-2
21-19	1649-1654	input	abstract[96]	giv[96]	_	_
21-20	1655-1657	of	abstract[96]	giv[96]	_	_
21-21	1658-1661	the	abstract[96]|object[97]	giv[96]|giv[97]	coref	26-5[120_97]
21-22	1662-1670	accurate	abstract[96]|object[97]	giv[96]|giv[97]	_	_
21-23	1671-1680	sub-adder	abstract[96]|object[97]	giv[96]|giv[97]	_	_
21-24	1681-1683	is	_	_	_	_
21-25	1684-1687	set	_	_	_	_
21-26	1688-1690	to	_	_	_	_
21-27	1691-1692	a	abstract[98]	new[98]	coref	33-23[158_98]
21-28	1693-1701	constant	abstract[98]	new[98]	_	_
21-29	1702-1703	0	abstract[98]	new[98]	_	_
21-30	1704-1705	.	_	_	_	_

#Text=The approximate adder of , which uses the type 5 approximate full adder for realizing the inaccurate sub-adder is shown in
22-1	1706-1709	The	abstract[99]	giv[99]	coref	22-10[101_99]
22-2	1710-1721	approximate	abstract[99]	giv[99]	_	_
22-3	1722-1727	adder	abstract[99]	giv[99]	_	_
22-4	1728-1730	of	abstract[99]	giv[99]	_	_
22-5	1731-1732	,	_	_	_	_
22-6	1733-1738	which	_	_	_	_
22-7	1739-1743	uses	_	_	_	_
22-8	1744-1747	the	abstract[100]	new[100]	_	_
22-9	1748-1752	type	abstract[100]	new[100]	_	_
22-10	1753-1754	5	abstract[101]	giv[101]	coref	24-2[105_101]
22-11	1755-1766	approximate	abstract[101]	giv[101]	_	_
22-12	1767-1771	full	abstract[101]	giv[101]	_	_
22-13	1772-1777	adder	abstract[101]	giv[101]	_	_
22-14	1778-1781	for	_	_	_	_
22-15	1782-1791	realizing	_	_	_	_
22-16	1792-1795	the	abstract[102]	giv[102]	coref	25-5[109_102]
22-17	1796-1806	inaccurate	abstract[102]	giv[102]	_	_
22-18	1807-1816	sub-adder	abstract[102]	giv[102]	_	_
22-19	1817-1819	is	_	_	_	_
22-20	1820-1825	shown	_	_	_	_
22-21	1826-1828	in	_	_	_	_

#Text=Figure 1
23-1	1829-1835	Figure	object[103]	giv[103]	coref	28-1[129_103]
23-2	1836-1837	1	object[103]	giv[103]	_	_

#Text=d. This approximate adder shall be referred to as APPROX5 .
24-1	1838-1840	d.	person	new	_	_
24-2	1841-1845	This	abstract[105]	giv[105]	coref	27-1[126_105]
24-3	1846-1857	approximate	abstract[105]	giv[105]	_	_
24-4	1858-1863	adder	abstract[105]	giv[105]	_	_
24-5	1864-1869	shall	_	_	_	_
24-6	1870-1872	be	_	_	_	_
24-7	1873-1881	referred	_	_	_	_
24-8	1882-1884	to	_	_	_	_
24-9	1885-1887	as	_	_	_	_
24-10	1888-1895	APPROX5	abstract	new	coref	42-22
24-11	1896-1897	.	_	_	_	_

#Text=The sum bits of the inaccurate sub-adder are the same as one set of the corresponding input bits , i. e. , SUM i = B i , where i denotes a bit position .
25-1	1898-1901	The	object[108]	new[108]	coref	25-15[111_108]
25-2	1902-1905	sum	quantity|object[108]	giv|new[108]	coref	38-6
25-3	1906-1910	bits	object[108]	new[108]	_	_
25-4	1911-1913	of	object[108]	new[108]	_	_
25-5	1914-1917	the	object[108]|abstract[109]	new[108]|giv[109]	ana	25-24[0_109]
25-6	1918-1928	inaccurate	object[108]|abstract[109]	new[108]|giv[109]	_	_
25-7	1929-1938	sub-adder	object[108]|abstract[109]	new[108]|giv[109]	_	_
25-8	1939-1942	are	_	_	_	_
25-9	1943-1946	the	_	_	_	_
25-10	1947-1951	same	_	_	_	_
25-11	1952-1954	as	_	_	_	_
25-12	1955-1958	one	_	_	_	_
25-13	1959-1962	set	_	_	_	_
25-14	1963-1965	of	_	_	_	_
25-15	1966-1969	the	object[111]	giv[111]	coref	38-5[178_111]
25-16	1970-1983	corresponding	object[111]	giv[111]	_	_
25-17	1984-1989	input	abstract|object[111]	giv|giv[111]	coref	26-1[119_0]
25-18	1990-1994	bits	object[111]	giv[111]	_	_
25-19	1995-1996	,	_	_	_	_
25-20	1997-1999	i.	_	_	_	_
25-21	2000-2002	e.	_	_	_	_
25-22	2003-2004	,	_	_	_	_
25-23	2005-2008	SUM	quantity	giv	ana	25-27
25-24	2009-2010	i	abstract	giv	ana	25-30
25-25	2011-2012	=	_	_	_	_
25-26	2013-2014	B	_	_	_	_
25-27	2015-2016	i	quantity	giv	_	_
25-28	2017-2018	,	_	_	_	_
25-29	2019-2024	where	_	_	_	_
25-30	2025-2026	i	abstract	giv	coref	26-16[122_0]
25-31	2027-2034	denotes	_	_	_	_
25-32	2035-2036	a	abstract[117]	new[117]	_	_
25-33	2037-2040	bit	abstract|abstract[117]	giv|new[117]	_	_
25-34	2041-2049	position	abstract[117]	new[117]	_	_
25-35	2050-2051	.	_	_	_	_

#Text=The carry input for the accurate sub-adder is a most significant input bit belonging to the inaccurate sub-adder viz. AK – 1 .
26-1	2052-2055	The	abstract[119]	giv[119]	coref	26-9[121_119]
26-2	2056-2061	carry	abstract|abstract[119]	giv|giv[119]	coref	34-26
26-3	2062-2067	input	abstract[119]	giv[119]	_	_
26-4	2068-2071	for	abstract[119]	giv[119]	_	_
26-5	2072-2075	the	abstract[119]|object[120]	giv[119]|giv[120]	coref	34-29[166_120]
26-6	2076-2084	accurate	abstract[119]|object[120]	giv[119]|giv[120]	_	_
26-7	2085-2094	sub-adder	abstract[119]|object[120]	giv[119]|giv[120]	_	_
26-8	2095-2097	is	_	_	_	_
26-9	2098-2099	a	abstract[121]	giv[121]	coref	33-5[154_121]
26-10	2100-2104	most	abstract[121]	giv[121]	_	_
26-11	2105-2116	significant	abstract[121]	giv[121]	_	_
26-12	2117-2122	input	abstract[121]	giv[121]	_	_
26-13	2123-2126	bit	abstract[121]	giv[121]	_	_
26-14	2127-2136	belonging	_	_	_	_
26-15	2137-2139	to	_	_	_	_
26-16	2140-2143	the	object[122]|abstract[123]	giv[122]|giv[123]	coref	32-10[148_122]
26-17	2144-2154	inaccurate	object[122]|abstract[123]	giv[122]|giv[123]	_	_
26-18	2155-2164	sub-adder	object[122]|abstract[123]	giv[122]|giv[123]	_	_
26-19	2165-2169	viz.	abstract[123]	giv[123]	_	_
26-20	2170-2172	AK	abstract[124]	new[124]	_	_
26-21	2173-2174	–	abstract[124]	new[124]	_	_
26-22	2175-2176	1	abstract[124]|quantity	new[124]|giv	coref	39-24[192_0]
26-23	2177-2178	.	_	_	_	_

#Text=The hardware-efficient approximate adder presented in Reference shall be called HEAA , which is shown in
27-1	2179-2182	The	abstract[126]	giv[126]	coref	30-11[136_126]
27-2	2183-2201	hardware-efficient	abstract[126]	giv[126]	_	_
27-3	2202-2213	approximate	abstract[126]	giv[126]	_	_
27-4	2214-2219	adder	abstract[126]	giv[126]	_	_
27-5	2220-2229	presented	_	_	_	_
27-6	2230-2232	in	_	_	_	_
27-7	2233-2242	Reference	abstract	giv	coref	35-8
27-8	2243-2248	shall	_	_	_	_
27-9	2249-2251	be	_	_	_	_
27-10	2252-2258	called	_	_	_	_
27-11	2259-2263	HEAA	abstract	new	coref	30-4
27-12	2264-2265	,	_	_	_	_
27-13	2266-2271	which	_	_	_	_
27-14	2272-2274	is	_	_	_	_
27-15	2275-2280	shown	_	_	_	_
27-16	2281-2283	in	_	_	_	_

#Text=Figure 1
28-1	2284-2290	Figure	object[129]	giv[129]	coref	36-1[171_129]
28-2	2291-2292	1	object[129]	giv[129]	_	_

#Text=e.
29-1	2293-2295	e.	abstract	new	_	_

#Text=We observe that HEAA consumes less FPGA resources compared to the accurate FPGA adder and consumes either the same FPGA resources as that of some approximate adders or more FPGA resources in comparison with other approximate adders .
30-1	2296-2298	We	person	giv	_	_
30-2	2299-2306	observe	_	_	_	_
30-3	2307-2311	that	_	_	_	_
30-4	2312-2316	HEAA	abstract	giv	coref	31-1
30-5	2317-2325	consumes	_	_	_	_
30-6	2326-2330	less	abstract[134]	new[134]	coref	30-17[138_134]
30-7	2331-2335	FPGA	substance|abstract[134]	new|new[134]	coref	30-13
30-8	2336-2345	resources	abstract[134]	new[134]	_	_
30-9	2346-2354	compared	_	_	_	_
30-10	2355-2357	to	_	_	_	_
30-11	2358-2361	the	abstract[136]	giv[136]	coref	42-13[217_136]
30-12	2362-2370	accurate	abstract[136]	giv[136]	_	_
30-13	2371-2375	FPGA	abstract|abstract[136]	giv|giv[136]	coref	30-20
30-14	2376-2381	adder	abstract[136]	giv[136]	_	_
30-15	2382-2385	and	_	_	_	_
30-16	2386-2394	consumes	_	_	_	_
30-17	2395-2401	either	abstract[138]	giv[138]	coref	42-8[215_138]
30-18	2402-2405	the	abstract[138]	giv[138]	_	_
30-19	2406-2410	same	abstract[138]	giv[138]	_	_
30-20	2411-2415	FPGA	substance|abstract[138]	giv|giv[138]	coref	30-30
30-21	2416-2425	resources	abstract[138]	giv[138]	_	_
30-22	2426-2428	as	_	_	_	_
30-23	2429-2433	that	_	_	_	_
30-24	2434-2436	of	_	_	_	_
30-25	2437-2441	some	abstract[139]	giv[139]	_	_
30-26	2442-2453	approximate	abstract[139]	giv[139]	_	_
30-27	2454-2460	adders	abstract[139]	giv[139]	_	_
30-28	2461-2463	or	abstract[139]	giv[139]	_	_
30-29	2464-2468	more	abstract[139]|abstract[141]	giv[139]|new[141]	_	_
30-30	2469-2473	FPGA	abstract[139]|substance|abstract[141]	giv[139]|giv|new[141]	coref	42-9
30-31	2474-2483	resources	abstract[139]|abstract[141]	giv[139]|new[141]	_	_
30-32	2484-2486	in	abstract[139]|abstract[141]	giv[139]|new[141]	_	_
30-33	2487-2497	comparison	abstract[139]|abstract[141]|abstract[142]	giv[139]|new[141]|new[142]	_	_
30-34	2498-2502	with	abstract[139]|abstract[141]|abstract[142]	giv[139]|new[141]|new[142]	_	_
30-35	2503-2508	other	abstract[139]|abstract[141]|abstract[142]	giv[139]|new[141]|new[142]	_	_
30-36	2509-2520	approximate	abstract[139]|abstract[141]|abstract[142]	giv[139]|new[141]|new[142]	_	_
30-37	2521-2527	adders	abstract[139]|abstract[141]|abstract[142]	giv[139]|new[141]|new[142]	_	_
30-38	2528-2529	.	_	_	_	_

#Text=HEAA is almost structurally similar to LOA ; however , there exists a difference .
31-1	2530-2534	HEAA	substance	giv	coref	42-25
31-2	2535-2537	is	_	_	_	_
31-3	2538-2544	almost	_	_	_	_
31-4	2545-2557	structurally	_	_	_	_
31-5	2558-2565	similar	_	_	_	_
31-6	2566-2568	to	_	_	_	_
31-7	2569-2572	LOA	abstract	giv	coref	35-5
31-8	2573-2574	;	_	_	_	_
31-9	2575-2582	however	_	_	_	_
31-10	2583-2584	,	_	_	_	_
31-11	2585-2590	there	_	_	_	_
31-12	2591-2597	exists	_	_	_	_
31-13	2598-2599	a	abstract[145]	new[145]	_	_
31-14	2600-2610	difference	abstract[145]	new[145]	_	_
31-15	2611-2612	.	_	_	_	_

#Text=A 2-to-1 multiplexer ( MUX21 ) is used in the inaccurate sub-adder in addition to the 2-input OR functions .
32-1	2613-2614	A	abstract[146]	new[146]	_	_
32-2	2615-2621	2-to-1	abstract[146]	new[146]	_	_
32-3	2622-2633	multiplexer	abstract[146]	new[146]	_	_
32-4	2634-2635	(	_	_	_	_
32-5	2636-2641	MUX21	object	new	coref	33-20
32-6	2642-2643	)	_	_	_	_
32-7	2644-2646	is	_	_	_	_
32-8	2647-2651	used	_	_	_	_
32-9	2652-2654	in	_	_	_	_
32-10	2655-2658	the	object[148]	giv[148]	coref	33-11[155_148]
32-11	2659-2669	inaccurate	object[148]	giv[148]	_	_
32-12	2670-2679	sub-adder	object[148]	giv[148]	_	_
32-13	2680-2682	in	_	_	_	_
32-14	2683-2691	addition	_	_	_	_
32-15	2692-2694	to	_	_	_	_
32-16	2695-2698	the	abstract[149]|abstract[150]	giv[149]|giv[150]	_	_
32-17	2699-2706	2-input	abstract[149]|abstract[150]	giv[149]|giv[150]	_	_
32-18	2707-2709	OR	abstract[150]	giv[150]	_	_
32-19	2710-2719	functions	abstract[150]|abstract	giv[150]|new	_	_
32-20	2720-2721	.	_	_	_	_

#Text=The OR-ed output of the most significant input bit-pair in the inaccurate sub-adder is given to the 0-input of MUX21 , and a constant 0 is given to the 1-input of MUX21 .
33-1	2722-2725	The	abstract[153]	new[153]	coref	38-7[0_153]
33-2	2726-2731	OR-ed	abstract|abstract[153]	new|new[153]	_	_
33-3	2732-2738	output	abstract[153]	new[153]	_	_
33-4	2739-2741	of	abstract[153]	new[153]	_	_
33-5	2742-2745	the	abstract[153]|abstract[154]	new[153]|giv[154]	coref	34-4[161_154]
33-6	2746-2750	most	abstract[153]|abstract[154]	new[153]|giv[154]	_	_
33-7	2751-2762	significant	abstract[153]|abstract[154]	new[153]|giv[154]	_	_
33-8	2763-2768	input	abstract[153]|abstract[154]	new[153]|giv[154]	_	_
33-9	2769-2777	bit-pair	abstract[153]|abstract[154]	new[153]|giv[154]	_	_
33-10	2778-2780	in	_	_	_	_
33-11	2781-2784	the	object[155]	giv[155]	coref	34-11[162_155]
33-12	2785-2795	inaccurate	object[155]	giv[155]	_	_
33-13	2796-2805	sub-adder	object[155]	giv[155]	_	_
33-14	2806-2808	is	_	_	_	_
33-15	2809-2814	given	_	_	_	_
33-16	2815-2817	to	_	_	_	_
33-17	2818-2821	the	object[156]	new[156]	_	_
33-18	2822-2829	0-input	object[156]	new[156]	_	_
33-19	2830-2832	of	object[156]	new[156]	_	_
33-20	2833-2838	MUX21	object[156]|object	new[156]|giv	coref	33-32
33-21	2839-2840	,	_	_	_	_
33-22	2841-2844	and	_	_	_	_
33-23	2845-2846	a	abstract[158]	giv[158]	_	_
33-24	2847-2855	constant	abstract[158]	giv[158]	_	_
33-25	2856-2857	0	abstract[158]	giv[158]	_	_
33-26	2858-2860	is	_	_	_	_
33-27	2861-2866	given	_	_	_	_
33-28	2867-2869	to	_	_	_	_
33-29	2870-2873	the	object[159]	new[159]	_	_
33-30	2874-2881	1-input	object[159]	new[159]	_	_
33-31	2882-2884	of	object[159]	new[159]	_	_
33-32	2885-2890	MUX21	object[159]|abstract	new[159]|giv	coref	34-20
33-33	2891-2892	.	_	_	_	_

#Text=The AND of the most significant input bit-pair corresponding to the inaccurate sub-adder serves as the select input of MUX21 , besides serving as the carry input for the accurate sub-adder .
34-1	2893-2896	The	_	_	_	_
34-2	2897-2900	AND	_	_	_	_
34-3	2901-2903	of	_	_	_	_
34-4	2904-2907	the	abstract[161]	giv[161]	coref	38-15[0_161]
34-5	2908-2912	most	abstract[161]	giv[161]	_	_
34-6	2913-2924	significant	abstract[161]	giv[161]	_	_
34-7	2925-2930	input	abstract[161]	giv[161]	_	_
34-8	2931-2939	bit-pair	_	_	_	_
34-9	2940-2953	corresponding	_	_	_	_
34-10	2954-2956	to	_	_	_	_
34-11	2957-2960	the	object[162]	giv[162]	coref	38-18[181_162]
34-12	2961-2971	inaccurate	object[162]	giv[162]	_	_
34-13	2972-2981	sub-adder	object[162]	giv[162]	_	_
34-14	2982-2988	serves	_	_	_	_
34-15	2989-2991	as	_	_	_	_
34-16	2992-2995	the	_	_	_	_
34-17	2996-3002	select	person	new	_	_
34-18	3003-3008	input	_	_	_	_
34-19	3009-3011	of	_	_	_	_
34-20	3012-3017	MUX21	object	giv	_	_
34-21	3018-3019	,	_	_	_	_
34-22	3020-3027	besides	_	_	_	_
34-23	3028-3035	serving	_	_	_	_
34-24	3036-3038	as	_	_	_	_
34-25	3039-3042	the	_	_	_	_
34-26	3043-3048	carry	abstract	giv	_	_
34-27	3049-3054	input	_	_	_	_
34-28	3055-3058	for	_	_	_	_
34-29	3059-3062	the	object[166]	giv[166]	coref	38-1[175_166]
34-30	3063-3071	accurate	object[166]	giv[166]	_	_
34-31	3072-3081	sub-adder	object[166]	giv[166]	_	_
34-32	3082-3083	.	_	_	_	_

#Text=An optimized version of LOA presented in Reference , called OLOCA , is shown in
35-1	3084-3086	An	object[167]	new[167]	_	_
35-2	3087-3096	optimized	object[167]	new[167]	_	_
35-3	3097-3104	version	object[167]	new[167]	_	_
35-4	3105-3107	of	object[167]	new[167]	_	_
35-5	3108-3111	LOA	object[167]|abstract	new[167]|giv	coref	37-10
35-6	3112-3121	presented	_	_	_	_
35-7	3122-3124	in	_	_	_	_
35-8	3125-3134	Reference	abstract	giv	_	_
35-9	3135-3136	,	_	_	_	_
35-10	3137-3143	called	_	_	_	_
35-11	3144-3149	OLOCA	abstract	new	coref	38-22
35-12	3150-3151	,	_	_	_	_
35-13	3152-3154	is	_	_	_	_
35-14	3155-3160	shown	_	_	_	_
35-15	3161-3163	in	_	_	_	_

#Text=Figure 1
36-1	3164-3170	Figure	object[171]	giv[171]	_	_
36-2	3171-3172	1	object[171]	giv[171]	_	_

#Text=f. OLOCA is in fact a slight modification of LOA .
37-1	3173-3175	f.	abstract[172]	new[172]	_	_
37-2	3176-3181	OLOCA	abstract[172]	new[172]	_	_
37-3	3182-3184	is	_	_	_	_
37-4	3185-3187	in	_	_	_	_
37-5	3188-3192	fact	_	_	_	_
37-6	3193-3194	a	abstract[173]	new[173]	_	_
37-7	3195-3201	slight	abstract[173]	new[173]	_	_
37-8	3202-3214	modification	abstract[173]	new[173]	_	_
37-9	3215-3217	of	abstract[173]	new[173]	_	_
37-10	3218-3221	LOA	abstract[173]|abstract	new[173]|giv	coref	38-29
37-11	3222-3223	.	_	_	_	_

#Text=The accurate sub-adder and the sum output bits corresponding to the two most significant bit positions in the inaccurate sub-adder of OLOCA are the same as that of LOA .
38-1	3224-3227	The	object[175]	giv[175]	_	_
38-2	3228-3236	accurate	object[175]	giv[175]	_	_
38-3	3237-3246	sub-adder	object[175]	giv[175]	_	_
38-4	3247-3250	and	_	_	_	_
38-5	3251-3254	the	object[178]	giv[178]	coref	39-10[189_178]
38-6	3255-3258	sum	quantity|object[178]	giv|giv[178]	coref	39-12
38-7	3259-3265	output	abstract|object[178]	giv|giv[178]	coref	39-13
38-8	3266-3270	bits	object[178]	giv[178]	_	_
38-9	3271-3284	corresponding	_	_	_	_
38-10	3285-3287	to	_	_	_	_
38-11	3288-3291	the	abstract[180]	new[180]	_	_
38-12	3292-3295	two	abstract[180]	new[180]	_	_
38-13	3296-3300	most	abstract[180]	new[180]	_	_
38-14	3301-3312	significant	abstract[180]	new[180]	_	_
38-15	3313-3316	bit	abstract|abstract[180]	giv|new[180]	coref	40-19
38-16	3317-3326	positions	abstract[180]	new[180]	_	_
38-17	3327-3329	in	abstract[180]	new[180]	_	_
38-18	3330-3333	the	abstract[180]|abstract[181]	new[180]|giv[181]	coref	39-16[190_181]
38-19	3334-3344	inaccurate	abstract[180]|abstract[181]	new[180]|giv[181]	_	_
38-20	3345-3354	sub-adder	abstract[180]|abstract[181]	new[180]|giv[181]	_	_
38-21	3355-3357	of	abstract[180]|abstract[181]	new[180]|giv[181]	_	_
38-22	3358-3363	OLOCA	abstract[180]|abstract[181]|object	new[180]|giv[181]|giv	coref	39-20
38-23	3364-3367	are	_	_	_	_
38-24	3368-3371	the	_	_	_	_
38-25	3372-3376	same	_	_	_	_
38-26	3377-3379	as	_	_	_	_
38-27	3380-3384	that	_	_	_	_
38-28	3385-3387	of	_	_	_	_
38-29	3388-3391	LOA	abstract	giv	coref	40-2[193_0]
38-30	3392-3393	.	_	_	_	_

#Text=However , the remaining ( K – 2 ) less significant sum output bits in the inaccurate sub-adder of OLOCA are tied to a constant 1 .
39-1	3394-3401	However	_	_	_	_
39-2	3402-3403	,	_	_	_	_
39-3	3404-3407	the	event[184]	new[184]	_	_
39-4	3408-3417	remaining	event[184]	new[184]	_	_
39-5	3418-3419	(	_	_	_	_
39-6	3420-3421	K	person[185]	giv[185]	coref	40-9[0_185]
39-7	3422-3423	–	person[185]	giv[185]	_	_
39-8	3424-3425	2	person[185]|quantity	giv[185]|new	coref	41-9
39-9	3426-3427	)	_	_	_	_
39-10	3428-3432	less	object[189]	giv[189]	coref	40-7[197_189]
39-11	3433-3444	significant	object[189]	giv[189]	_	_
39-12	3445-3448	sum	quantity|object[189]	giv|giv[189]	coref	40-10
39-13	3449-3455	output	abstract|object[189]	giv|giv[189]	coref	40-11
39-14	3456-3460	bits	object[189]	giv[189]	_	_
39-15	3461-3463	in	object[189]	giv[189]	_	_
39-16	3464-3467	the	object[189]|abstract[190]	giv[189]|giv[190]	coref	41-34[211_190]
39-17	3468-3478	inaccurate	object[189]|abstract[190]	giv[189]|giv[190]	_	_
39-18	3479-3488	sub-adder	object[189]|abstract[190]	giv[189]|giv[190]	_	_
39-19	3489-3491	of	object[189]|abstract[190]	giv[189]|giv[190]	_	_
39-20	3492-3497	OLOCA	object[189]|abstract[190]|object	giv[189]|giv[190]|giv	coref	41-14
39-21	3498-3501	are	_	_	_	_
39-22	3502-3506	tied	_	_	_	_
39-23	3507-3509	to	_	_	_	_
39-24	3510-3511	a	quantity[192]	giv[192]	coref	41-1[200_192]
39-25	3512-3520	constant	quantity[192]	giv[192]	_	_
39-26	3521-3522	1	quantity[192]	giv[192]	_	_
39-27	3523-3524	.	_	_	_	_

#Text=In the LOA , however , all the K sum output bits are produced by OR-ing the respective input bit-pairs .
40-1	3525-3527	In	_	_	_	_
40-2	3528-3531	the	abstract[193]	giv[193]	coref	42-18[0_193]
40-3	3532-3535	LOA	abstract[193]	giv[193]	_	_
40-4	3536-3537	,	_	_	_	_
40-5	3538-3545	however	_	_	_	_
40-6	3546-3547	,	_	_	_	_
40-7	3548-3551	all	object[197]	giv[197]	coref	41-12[203_197]
40-8	3552-3555	the	object[197]	giv[197]	_	_
40-9	3556-3557	K	person|object[197]	giv|giv[197]	coref	41-5[201_0]
40-10	3558-3561	sum	quantity|object[197]	giv|giv[197]	_	_
40-11	3562-3568	output	abstract|object[197]	giv|giv[197]	_	_
40-12	3569-3573	bits	object[197]	giv[197]	_	_
40-13	3574-3577	are	_	_	_	_
40-14	3578-3586	produced	_	_	_	_
40-15	3587-3589	by	_	_	_	_
40-16	3590-3596	OR-ing	_	_	_	_
40-17	3597-3600	the	object[199]	new[199]	_	_
40-18	3601-3611	respective	object[199]	new[199]	_	_
40-19	3612-3617	input	abstract|object[199]	giv|new[199]	_	_
40-20	3618-3627	bit-pairs	object[199]	new[199]	_	_
40-21	3628-3629	.	_	_	_	_

#Text=A constant 1 for the ( K – 2 ) sum bits in OLOCA implies the elimination of look-up tables ( LUTs ) and flip-flops ( FFs ) for realizing those bits of the inaccurate sub-adder for a FPGA-based implementation .
41-1	3630-3631	A	quantity[200]	giv[200]	_	_
41-2	3632-3640	constant	quantity[200]	giv[200]	_	_
41-3	3641-3642	1	quantity[200]	giv[200]	_	_
41-4	3643-3646	for	_	_	_	_
41-5	3647-3650	the	person[201]	giv[201]	_	_
41-6	3651-3652	(	person[201]	giv[201]	_	_
41-7	3653-3654	K	person[201]	giv[201]	_	_
41-8	3655-3656	–	person[201]	giv[201]	_	_
41-9	3657-3658	2	person[201]|quantity	giv[201]|giv	_	_
41-10	3659-3660	)	person[201]	giv[201]	_	_
41-11	3661-3664	sum	_	_	_	_
41-12	3665-3669	bits	object[203]	giv[203]	_	_
41-13	3670-3672	in	object[203]	giv[203]	_	_
41-14	3673-3678	OLOCA	object[203]|abstract	giv[203]|giv	coref	42-3
41-15	3679-3686	implies	_	_	_	_
41-16	3687-3690	the	abstract[205]	new[205]	_	_
41-17	3691-3702	elimination	abstract[205]	new[205]	_	_
41-18	3703-3705	of	abstract[205]	new[205]	_	_
41-19	3706-3713	look-up	abstract[205]|abstract[206]	new[205]|new[206]	appos	41-22[0_206]
41-20	3714-3720	tables	abstract[205]|abstract[206]	new[205]|new[206]	_	_
41-21	3721-3722	(	_	_	_	_
41-22	3723-3727	LUTs	abstract	giv	_	_
41-23	3728-3729	)	_	_	_	_
41-24	3730-3733	and	_	_	_	_
41-25	3734-3744	flip-flops	object	new	_	_
41-26	3745-3746	(	_	_	_	_
41-27	3747-3750	FFs	abstract	new	_	_
41-28	3751-3752	)	_	_	_	_
41-29	3753-3756	for	_	_	_	_
41-30	3757-3766	realizing	_	_	_	_
41-31	3767-3772	those	object[210]	new[210]	_	_
41-32	3773-3777	bits	object[210]	new[210]	_	_
41-33	3778-3780	of	object[210]	new[210]	_	_
41-34	3781-3784	the	object[210]|abstract[211]	new[210]|giv[211]	_	_
41-35	3785-3795	inaccurate	object[210]|abstract[211]	new[210]|giv[211]	_	_
41-36	3796-3805	sub-adder	object[210]|abstract[211]	new[210]|giv[211]	_	_
41-37	3806-3809	for	object[210]|abstract[211]	new[210]|giv[211]	_	_
41-38	3810-3811	a	object[210]|abstract[211]|abstract[212]	new[210]|giv[211]|new[212]	_	_
41-39	3812-3822	FPGA-based	object[210]|abstract[211]|abstract[212]	new[210]|giv[211]|new[212]	_	_
41-40	3823-3837	implementation	object[210]|abstract[211]|abstract[212]	new[210]|giv[211]|new[212]	_	_
41-41	3838-3839	.	_	_	_	_

#Text=Hence , OLOCA is likely to consume less FPGA resources compared to the accurate FPGA adder , LOA , LOAWA , APPROX5 , and HEAA , which is substantiated by the simulation results given in the next section .
42-1	3840-3845	Hence	_	_	_	_
42-2	3846-3847	,	_	_	_	_
42-3	3848-3853	OLOCA	object	giv	_	_
42-4	3854-3856	is	_	_	_	_
42-5	3857-3863	likely	_	_	_	_
42-6	3864-3866	to	_	_	_	_
42-7	3867-3874	consume	_	_	_	_
42-8	3875-3879	less	abstract[215]	giv[215]	_	_
42-9	3880-3884	FPGA	substance|abstract[215]	giv|giv[215]	coref	42-15
42-10	3885-3894	resources	abstract[215]	giv[215]	_	_
42-11	3895-3903	compared	_	_	_	_
42-12	3904-3906	to	_	_	_	_
42-13	3907-3910	the	abstract[217]	giv[217]	_	_
42-14	3911-3919	accurate	abstract[217]	giv[217]	_	_
42-15	3920-3924	FPGA	abstract|abstract[217]	giv|giv[217]	_	_
42-16	3925-3930	adder	abstract[217]	giv[217]	_	_
42-17	3931-3932	,	_	_	_	_
42-18	3933-3936	LOA	abstract	giv	_	_
42-19	3937-3938	,	_	_	_	_
42-20	3939-3944	LOAWA	abstract	giv	_	_
42-21	3945-3946	,	_	_	_	_
42-22	3947-3954	APPROX5	object	giv	_	_
42-23	3955-3956	,	_	_	_	_
42-24	3957-3960	and	_	_	_	_
42-25	3961-3965	HEAA	abstract	giv	_	_
42-26	3966-3967	,	_	_	_	_
42-27	3968-3973	which	_	_	_	_
42-28	3974-3976	is	_	_	_	_
42-29	3977-3990	substantiated	_	_	_	_
42-30	3991-3993	by	_	_	_	_
42-31	3994-3997	the	abstract[223]	new[223]	_	_
42-32	3998-4008	simulation	abstract|abstract[223]	new|new[223]	_	_
42-33	4009-4016	results	abstract[223]	new[223]	_	_
42-34	4017-4022	given	_	_	_	_
42-35	4023-4025	in	_	_	_	_
42-36	4026-4029	the	abstract[224]	new[224]	_	_
42-37	4030-4034	next	abstract[224]	new[224]	_	_
42-38	4035-4042	section	abstract[224]	new[224]	_	_
42-39	4043-4044	.	_	_	_	_
