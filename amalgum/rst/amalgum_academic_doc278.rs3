<rst>
<header>
	<relations>
			<rel name="means" type="rst"/>
			<rel name="elaboration" type="rst"/>
			<rel name="background" type="rst"/>
			<rel name="attribution" type="rst"/>
			<rel name="condition" type="rst"/>
			<rel name="circumstance" type="rst"/>
			<rel name="purpose" type="rst"/>
			<rel name="preparation" type="rst"/>
			<rel name="sequence" type="multinuc"/>
			<rel name="same_unit" type="multinuc"/>
			<rel name="joint" type="multinuc"/>
		</relations>
</header>
<body>
<segment id="1" parent="1001" relname="preparation">2. Self-Similar Graph Actions</segment>
<segment id="2" parent="1002" relname="span">We review the properties of self-similar graph actions</segment>
<segment id="3" parent="2" relname="elaboration">defined by Exel and Pardo .</segment>
<segment id="4" parent="1004" relname="preparation">All the material in this section is taken from works .</segment>
<segment id="5" parent="1006" relname="span">Suppose that is a directed graph ,</segment>
<segment id="6" parent="5" relname="elaboration">where is the set of vertices , is the set of edges , d is the domain map ,</segment>
<segment id="7" parent="1004" relname="joint">and r is the range map .</segment>
<segment id="8" parent="1008" relname="span">A directed graph E is called finite</segment>
<segment id="9" parent="8" relname="condition">if and are finite sets .</segment>
<segment id="10" parent="1010" relname="span">For a natural number n , a path of length n in E is a finite sequence of the form</segment>
<segment id="11" parent="10" relname="elaboration">where and for every i .</segment>
<segment id="12" parent="1009" relname="joint">The domain and range of a are defined by and , respectively .</segment>
<segment id="13" parent="1013" relname="preparation">A vertex is considered as a path of length 0 , with .</segment>
<segment id="14" parent="1014" relname="span">If a and b are paths</segment>
<segment id="15" parent="1015" relname="span">such that ,</segment>
<segment id="16" parent="1017" relname="span">then we denote the path</segment>
<segment id="17" parent="16" relname="elaboration">obtained</segment>
<segment id="18" parent="1017" relname="means">by juxtaposing a and b by .</segment>
<segment id="19" parent="1013" relname="joint">We use to denote the length of a .</segment>
<segment id="20" parent="1013" relname="joint">For every non-negative integer n , we denote the set of paths of length n in E by and define .</segment>
<segment id="21" parent="1013" relname="joint">The set of right-infinite paths of the form is denoted by .</segment>
<segment id="22" parent="1022" relname="preparation">The product topology of a discrete set E is defined on .</segment>
<segment id="23" parent="1023" relname="preparation">The cylinder set for each is defined by</segment>
<segment id="24" parent="1024" relname="preparation">Then , the collection of all such cylinder sets forms a basis for the product topology on .</segment>
<segment id="25" parent="1025" relname="span">An automorphism of a directed graph E is a bijective map ,</segment>
<segment id="26" parent="25" relname="elaboration">such that for , , and on .</segment>
<segment id="27" parent="1027" relname="span">An action of a group G on a directed graph E is a group homomorphism from G to the group of all automorphisms of E .</segment>
<segment id="28" parent="1028" relname="joint">To simplify the notation ,</segment>
<segment id="29" parent="1028" relname="joint">we will adopt the shorthand notation</segment>
<segment id="30" parent="1030" relname="span">A self-similar graph action consists of a directed graph E and an action of a group G on E by automorphisms , with a one-cocycle ,</segment>
<segment id="31" parent="30" relname="elaboration">such that for all and ,</segment>
<segment id="32" parent="1032" relname="span">As Exel and Pardo showed in</segment>
<segment id="33" parent="1033" relname="span">( [ 6 ]</segment>
<segment id="34" parent="33" relname="elaboration">Proposition 2.4 ) ,</segment>
<segment id="35" parent="1036" relname="span">the G action and one-cocycle extend to via the inductive formula for with ,</segment>
<segment id="36" parent="35" relname="purpose">so that we have for every with .</segment>
<segment id="37" parent="1038" relname="span">In addition , the G action induces an action of G on</segment>
<segment id="38" parent="37" relname="elaboration">given by</segment>
<segment id="39" parent="1039" relname="span">It is not difficult to obtain the following properties of restrictions .</segment>
<segment id="40" parent="39" relname="elaboration">For and with ,</segment>
<segment id="41" parent="1041" relname="span">A self-similar graph action is called pseudo-free</segment>
<segment id="42" parent="41" relname="condition">if for any satisfying and , it holds that .</segment>
<segment id="43" parent="1044" relname="attribution">We say</segment>
<segment id="44" parent="1044" relname="span">that the G action on is topologically free</segment>
<segment id="45" parent="44" relname="condition">if is dense in for every .</segment>
<segment id="46" parent="1046" relname="span">A path in is said to have an entry</segment>
<segment id="47" parent="1047" relname="span">if there is at least one such</segment>
<segment id="48" parent="47" relname="elaboration">that has more than one element .</segment>
<segment id="49" parent="1049" relname="preparation">Assumption 1.</segment>
<segment id="50" parent="1050" relname="preparation">In this study , we assume the following ,</segment>
<segment id="51" parent="1050" relname="joint">1 .</segment>
<segment id="52" parent="1052" relname="preparation">Every group is a finitely generated countable group ,</segment>
<segment id="53" parent="1054" relname="span">2 . every graph is a connected finite directed graph with the properties</segment>
<segment id="54" parent="53" relname="elaboration">that every circuit has an entry</segment>
<segment id="55" parent="1052" relname="joint">and and are nonempty sets for every vertex ,</segment>
<segment id="56" parent="1056" relname="span">3 .</segment>
<segment id="57" parent="56" relname="elaboration">every finite path has an entry ,</segment>
<segment id="58" parent="1052" relname="joint">4 . our self-similar graph action is pseudo-free ,</segment>
<segment id="59" parent="1052" relname="joint">and</segment>
<segment id="60" parent="1052" relname="joint">5 . the G action on is topologically free .</segment>
<segment id="61" parent="1061" relname="preparation">Inverse Semigroups and Groupoids</segment>
<segment id="62" parent="1062" relname="preparation">Suppose that is a self-similar graph action .</segment>
<segment id="63" parent="1064" relname="span">An inverse semigroup of is defined as follows</segment>
<segment id="64" parent="63" relname="elaboration">( [ 6 ] §4 ) ,</segment>
<segment id="65" parent="1066" relname="span">with the binary operation</segment>
<segment id="66" parent="65" relname="elaboration">defined by and the unitary adjoint operation</segment>
<segment id="67" parent="1066" relname="elaboration">defined by</segment>
<segment id="68" parent="1069" relname="span">Then , is an inverse semigroup</segment>
<segment id="69" parent="68" relname="elaboration">containing zero ,</segment>
<segment id="70" parent="1068" relname="same_unit">whose idempotent semi-lattice is given by</segment>
<segment id="71" parent="1071" relname="span">The inverse semigroup has a canonical action on in terms of partial homeomorphisms :</segment>
<segment id="72" parent="71" relname="elaboration">The domain of is and</segment>
<segment id="73" parent="74" relname="attribution">We note</segment>
<segment id="74" parent="1073" relname="span">that is the empty map .</segment>
<segment id="75" parent="1075" relname="preparation">Now , we briefly describe groupoids of germs of inverse semigroups and groups .</segment>
<segment id="76" parent="1076" relname="span">Let X be a locally compact Hausdorff space and S an inverse semigroup</segment>
<segment id="77" parent="1077" relname="span">( or a group )</segment>
<segment id="78" parent="77" relname="elaboration">acting on X .</segment>
<segment id="79" parent="1078" relname="joint">Then , consider a set ,</segment>
<segment id="80" parent="1078" relname="joint">and define an equivalence relation on by if and only if and s and t coincide on a neighborhood of x .</segment>
<segment id="81" parent="1081" relname="span">The equivalence class of every is called the germ of s at x ,</segment>
<segment id="82" parent="81" relname="elaboration">denoted by .</segment>
<segment id="83" parent="1084" relname="span">The set of every germ is a groupoid ,</segment>
<segment id="84" parent="83" relname="elaboration">called the groupoid of germs of S on X ,</segment>
<segment id="85" parent="1084" relname="elaboration">whose operations are given by</segment>
<segment id="86" parent="1078" relname="joint">The unit space is identified with X .</segment>
<segment id="87" parent="88" relname="circumstance">When two germs and satisfy ,</segment>
<segment id="88" parent="1087" relname="span">their product is defined as</segment>
<segment id="89" parent="1089" relname="span">A basis for a topology is given by the collection of sets of the form</segment>
<segment id="90" parent="1090" relname="joint">The groupoid of germs of the action on is denoted by ,</segment>
<segment id="91" parent="1090" relname="joint">and called the Cuntz – Pimsner groupoid of .</segment>
<segment id="92" parent="1092" relname="attribution">We recall</segment>
<segment id="93" parent="1092" relname="span">that an inverse semigroup S has an order relation</segment>
<segment id="94" parent="93" relname="elaboration">defined by</segment>
<group id="1000" type="span" />
<group id="1001" type="span" parent="1000" relname="span"/>
<group id="1002" type="span" parent="1003" relname="preparation"/>
<group id="1003" type="span" parent="1001" relname="span"/>
<group id="1004" type="multinuc" parent="1003" relname="span"/>
<group id="1006" type="span" parent="1004" relname="joint"/>
<group id="1007" type="span" parent="1004" relname="joint"/>
<group id="1008" type="span" parent="1009" relname="background"/>
<group id="1009" type="multinuc" parent="1007" relname="span"/>
<group id="1010" type="span" parent="1009" relname="joint"/>
<group id="1012" type="span" parent="1009" relname="joint"/>
<group id="1013" type="multinuc" parent="1012" relname="span"/>
<group id="1014" type="span" parent="1013" relname="joint"/>
<group id="1015" type="span" parent="14" relname="elaboration"/>
<group id="1016" type="span" parent="15" relname="elaboration"/>
<group id="1017" type="span" parent="1016" relname="span"/>
<group id="1021" type="span" parent="1013" relname="joint"/>
<group id="1022" type="span" parent="1021" relname="span"/>
<group id="1023" type="span" parent="1022" relname="span"/>
<group id="1024" type="span" parent="1023" relname="span"/>
<group id="1025" type="span" parent="1026" relname="preparation"/>
<group id="1026" type="span" parent="1024" relname="span"/>
<group id="1027" type="span" parent="1029" relname="preparation"/>
<group id="1028" type="multinuc" parent="27" relname="purpose"/>
<group id="1029" type="span" parent="1026" relname="span"/>
<group id="1030" type="span" parent="1031" relname="preparation"/>
<group id="1031" type="span" parent="1029" relname="span"/>
<group id="1032" type="span" parent="1034" relname="preparation"/>
<group id="1033" type="span" parent="32" relname="elaboration"/>
<group id="1034" type="multinuc" parent="1031" relname="span"/>
<group id="1036" type="span" parent="1034" relname="joint"/>
<group id="1037" type="multinuc" parent="1034" relname="joint"/>
<group id="1038" type="span" parent="1037" relname="same_unit"/>
<group id="1039" type="span" parent="1037" relname="same_unit"/>
<group id="1041" type="span" parent="1034" relname="joint"/>
<group id="1043" type="span" parent="1034" relname="joint"/>
<group id="1044" type="span" parent="1043" relname="span"/>
<group id="1045" type="span" parent="1034" relname="joint"/>
<group id="1046" type="span" parent="1048" relname="preparation"/>
<group id="1047" type="span" parent="46" relname="condition"/>
<group id="1048" type="span" parent="1045" relname="span"/>
<group id="1049" type="span" parent="1048" relname="span"/>
<group id="1050" type="multinuc" parent="1049" relname="span"/>
<group id="1051" type="span" parent="1050" relname="joint"/>
<group id="1052" type="multinuc" parent="1051" relname="span"/>
<group id="1054" type="span" parent="1052" relname="joint"/>
<group id="1056" type="span" parent="1052" relname="joint"/>
<group id="1060" type="span" parent="1052" relname="joint"/>
<group id="1061" type="span" parent="1060" relname="span"/>
<group id="1062" type="multinuc" parent="1061" relname="span"/>
<group id="1063" type="multinuc" parent="1062" relname="joint"/>
<group id="1064" type="span" parent="1063" relname="same_unit"/>
<group id="1065" type="span" parent="1063" relname="same_unit"/>
<group id="1066" type="span" parent="1065" relname="span"/>
<group id="1067" type="span" parent="1062" relname="joint"/>
<group id="1068" type="multinuc" parent="1070" relname="preparation"/>
<group id="1069" type="span" parent="1068" relname="same_unit"/>
<group id="1070" type="multinuc" parent="1067" relname="span"/>
<group id="1071" type="span" parent="1070" relname="joint"/>
<group id="1073" type="span" parent="1070" relname="joint"/>
<group id="1074" type="span" parent="1070" relname="joint"/>
<group id="1075" type="multinuc" parent="1074" relname="span"/>
<group id="1076" type="span" parent="1075" relname="sequence"/>
<group id="1077" type="span" parent="76" relname="elaboration"/>
<group id="1078" type="multinuc" parent="1075" relname="sequence"/>
<group id="1081" type="span" parent="1078" relname="joint"/>
<group id="1083" type="span" parent="1078" relname="joint"/>
<group id="1084" type="span" parent="1083" relname="span"/>
<group id="1086" type="span" parent="1078" relname="joint"/>
<group id="1087" type="span" parent="1088" relname="circumstance"/>
<group id="1088" type="multinuc" parent="1086" relname="span"/>
<group id="1089" type="span" parent="1088" relname="joint"/>
<group id="1090" type="multinuc" parent="89" relname="elaboration"/>
<group id="1091" type="span" parent="1088" relname="joint"/>
<group id="1092" type="span" parent="1091" relname="span"/>
	</body>
</rst>
