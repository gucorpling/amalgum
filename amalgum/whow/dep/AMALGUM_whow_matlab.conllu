# meta::id = AMALGUM_whow_matlab
# meta::title = Create a Robot Model in MATLAB
# meta::shortTitle = matlab
# meta::type = whow
# meta::dateCollected = 2019-11-06
# meta::dateCreated = 2018-10-14
# meta::dateModified = 2019-06-24
# meta::sourceURL = https://www.wikihow.com/Create-a-Robot-Model-in-MATLAB
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_whow_matlab
# sent_id = AMALGUM_whow_matlab-1
# s_type = imp
# text = Create a Robot Model
# newpar = head (2 s)
1	Create	create	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->126
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-1
3	Robot	Robot	PROPN	NNP	Number=Sing	4	compound	4:compound	_
4	Model	Model	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=abstract-1)

# sent_id = AMALGUM_whow_matlab-2
# s_type = frag
# text = in MATLAB
1	in	in	ADP	IN	_	2	case	2:case	Discourse=background:2->5
2	MATLAB	Matlab	PROPN	NNP	Number=Sing	0	root	0:root	Entity=(abstract-2)|SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-3
# s_type = decl
# text = You can model your robot in MATLAB using the robotics toolbox.
# newpar = p (3 s)
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:3->2|Entity=(person-3)
2	can	can	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	model	model	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-4(person-3)
5	robot	robot	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-4)
6	in	in	ADP	IN	_	7	case	7:case	_
7	MATLAB	Matlab	PROPN	NNP	Number=Sing	3	obl	3:obl:in	Entity=(abstract-2)
8	using	use	VERB	VBG	VerbForm=Ger	3	advcl	3:advcl	Discourse=means:4->3
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-5
10	robotics	robotics	NOUN	NNS	Number=Plur	11	compound	11:compound	Entity=(abstract-6)
11	toolbox	toolbox	NOUN	NN	Number=Sing	8	obj	8:obj	Entity=abstract-5)|SpaceAfter=No
12	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_matlab-4
# s_type = decl
# text = This article will help you understand the basic process and commands used.
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	2:det	Discourse=background:5->126|Entity=(abstract-7
2	article	article	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-7)
3	will	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	help	help	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	4	obj	4:obj|6:nsubj:xsubj	Entity=(person-3)
6	understand	understand	VERB	VB	VerbForm=Inf	4	xcomp	4:xcomp	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-8
8	basic	basic	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	process	process	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=abstract-8)
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	commands	command	NOUN	NNS	Number=Plur	9	conj	6:obj|9:conj:and	Entity=(organization-9
12	used	use	VERB	VBN	Tense=Past|VerbForm=Part	9	acl	9:acl	Discourse=elaboration:6->5|Entity=organization-9)|SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-5
# s_type = decl
# text = All the code in this tutorial can be copied and pasted into MATLAB and the appropriate places changed to match your data.
1	All	all	PRON	PDT	_	3	det:predet	3:det:predet	Discourse=elaboration:7->5|Entity=(abstract-10
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	_
3	code	code	NOUN	NN	Number=Sing	9	nsubj:pass	9:nsubj:pass|11:nsubj:pass	_
4	in	in	ADP	IN	_	6	case	6:case	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	6:det	Entity=(abstract-11
6	tutorial	tutorial	NOUN	NN	Number=Sing	3	nmod	3:nmod:in	Entity=abstract-10)abstract-11)
7	can	can	AUX	MD	VerbForm=Fin	9	aux	9:aux|11:aux|18:aux	_
8	be	be	AUX	VB	VerbForm=Inf	9	aux:pass	9:aux:pass|11:aux:pass|18:aux:pass	_
9	copied	copy	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	pasted	past	VERB	VBN	Tense=Past|VerbForm=Part	9	conj	9:conj:and	_
12	into	into	ADP	IN	_	13	case	13:case	_
13	MATLAB	Matlab	PROPN	NNP	Number=Sing	11	obl	11:obl:into	Entity=(abstract-2)
14	and	and	CCONJ	CC	_	18	cc	18:cc	Discourse=joint:8->7
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(place-12
16	appropriate	appropriate	ADJ	JJ	Degree=Pos	17	amod	17:amod	_
17	places	place	NOUN	NNS	Number=Plur	18	nsubj:pass	18:nsubj:pass	Entity=place-12)
18	changed	change	VERB	VBN	Tense=Past|VerbForm=Part	9	conj	9:conj:and	_
19	to	to	PART	TO	_	20	mark	20:mark	Discourse=purpose:9->8
20	match	match	VERB	VB	VerbForm=Inf	18	advcl	18:advcl:to	_
21	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	22	nmod:poss	22:nmod:poss	Entity=(abstract-13(person-3)
22	data	datum	NOUN	NNS	Number=Plur	20	obj	20:obj	Entity=abstract-13)|SpaceAfter=No
23	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_whow_matlab-6
# s_type = frag
# text = Steps
# newpar = head (1 s)
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:10->15|Entity=(abstract-14)

# sent_id = AMALGUM_whow_matlab-7
# s_type = ger
# text = Preparing
# newpar = head (1 s)
1	Preparing	prepare	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=preparation:11->15

# sent_id = AMALGUM_whow_matlab-8
# s_type = imp
# text = Understand the terminology you'll need to know:
# newpar = list type:::"ordered" (16 s) | item (6 s)
1	Understand	understand	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:12->15
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(event-15
3	terminology	terminology	NOUN	NN	Number=Sing	1	obj	1:obj	_
4-5	you'll	_	_	_	_	_	_	_	_
4	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	6	nsubj	6:nsubj|8:nsubj:xsubj	Discourse=elaboration:13->12|Entity=(person-3)
5	'll	will	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
6	need	need	VERB	VB	VerbForm=Inf	3	acl:relcl	3:acl:relcl	_
7	to	to	PART	TO	_	8	mark	8:mark	_
8	know	know	VERB	VB	VerbForm=Inf	6	xcomp	6:xcomp	Entity=event-15)|SpaceAfter=No
9	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-9
# s_type = frag
# text = Tool:
# newpar = list type:::"unordered" (5 s) | item (3 s)
1	Tool	tool	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:14->15|Entity=(place-16)|SpaceAfter=No
2	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-10
# s_type = decl
# text = This is the end of the robot.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	4	nsubj	4:nsubj	Discourse=elaboration:15->7|Entity=(event-15)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(event-15
4	end	end	NOUN	NN	Number=Sing	0	root	0:root	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-4
7	robot	robot	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=event-15)object-4)|SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-11
# s_type = sub
# text = The tool would equivalent to your hand on your arm.
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=elaboration:16->15|Entity=(object-17
2	tool	tool	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=object-17)
3	would	would	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	equivalent	equivalent	ADJ	JJ	Degree=Pos	0	root	0:root	_
5	to	to	ADP	IN	_	7	case	7:case	_
6	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=(object-18(person-3)
7	hand	hand	NOUN	NN	Number=Sing	4	obl	4:obl:to	_
8	on	on	ADP	IN	_	10	case	10:case	_
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(object-19(person-3)
10	arm	arm	NOUN	NN	Number=Sing	7	nmod	7:nmod:on	Entity=object-18)object-19)|SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-12
# s_type = decl
# text = Base: This is the beginning of the robot.
# newpar = item (2 s)
1	Base	Base	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:17->18|Entity=(event-20)|SpaceAfter=No
2	:	:	PUNCT	:	_	6	punct	6:punct	_
3	This	this	PRON	DT	Number=Sing|PronType=Dem	6	nsubj	6:nsubj	Discourse=elaboration:18->15|Entity=(event-20)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(event-20
6	beginning	beginning	NOUN	NN	Number=Sing	1	parataxis	1:parataxis	_
7	of	of	ADP	IN	_	9	case	9:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-4
9	robot	robot	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=event-20)object-4)|SpaceAfter=No
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-13
# s_type = imp
# text = Think of how your shoulder is the base of your arm.
1	Think	think	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:19->18
2	of	of	ADP	IN	_	3	case	3:case	_
3	how	how	SCONJ	WRB	PronType=Rel	1	obl	1:obl:of	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(place-21(object-22(person-3)
5	shoulder	shoulder	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-22)
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	_
8	base	base	NOUN	NN	Number=Sing	3	acl:relcl	3:acl:relcl	_
9	of	of	ADP	IN	_	11	case	11:case	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(object-19(person-3)
11	arm	arm	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=place-21)object-19)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-14
# s_type = imp
# text = Learn what DH parameters are.
# newpar = item (2 s)
1	Learn	learn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:20->19
2	what	what	PRON	WP	PronType=Int	1	obj	1:obj	_
3	DH	DH	PROPN	NNP	Abbr=Yes|Number=Sing	4	compound	4:compound	Entity=(abstract-23(abstract-24)
4	parameters	parameter	NOUN	NNS	Number=Plur	2	nsubj	2:nsubj	Entity=abstract-23)
5	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	cop	2:cop	SpaceAfter=No
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-15
# s_type = decl
# text = DH parameters are like the dimensions of the robot.
1	DH	DH	PROPN	NNP	Abbr=Yes|Number=Sing	2	compound	2:compound	Discourse=joint:21->20|Entity=(abstract-23(abstract-24)
2	parameters	parameter	NOUN	NNS	Number=Plur	6	nsubj	6:nsubj	Entity=abstract-23)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
4	like	like	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-25
6	dimensions	dimension	NOUN	NNS	Number=Plur	0	root	0:root	_
7	of	of	ADP	IN	_	9	case	9:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-4
9	robot	robot	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=abstract-25)object-4)|SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_matlab-16
# s_type = imp
# text = Familiarize yourself with MATLAB, specifically with matrices and vectors.
# newpar = item (2 s)
1	Familiarize	familiarize	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:22->24
2	yourself	yourself	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs|Reflex=Yes	1	obj	1:obj	Entity=(person-3)
3	with	with	ADP	IN	_	4	case	4:case	_
4	MATLAB	Matlab	PROPN	NNP	Number=Sing	1	obl	1:obl:with	Entity=(abstract-2)|SpaceAfter=No
5	,	,	PUNCT	,	_	8	punct	8:punct	_
6	specifically	specifically	ADV	RB	Degree=Pos	8	advmod	8:advmod	Entity=(abstract-26
7	with	with	ADP	IN	_	8	case	8:case	_
8	matrices	matrice	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=abstract-26)
9	and	and	CCONJ	CC	_	10	cc	10:cc	_
10	vectors	vector	NOUN	NNS	Number=Plur	8	conj	1:obl:with|8:conj:and	Entity=(abstract-27)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-17
# s_type = decl
# text = If you need a refresher, Chapter 2 of the MATLAB Primer contains information on matrices.
# newpar = list type:::"unordered" (1 s) | item (1 s)
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:23->24
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-3)
3	need	need	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	13	advcl	13:advcl:if	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(event-28
5	refresher	refresher	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=event-28)|SpaceAfter=No
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	Chapter	Chapter	PROPN	NNP	Number=Sing	13	nsubj	13:nsubj	Discourse=elaboration:24->21|Entity=(abstract-29
8	2	2	NUM	CD	NumForm=Digit|NumType=Card	7	flat	7:flat	_
9	of	of	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-30
11	MATLAB	Matlab	PROPN	NNP	Number=Sing	12	compound	12:compound	Entity=(abstract-2)
12	Primer	Primer	PROPN	NNP	Number=Sing	7	nmod	7:nmod:of	Entity=abstract-29)abstract-30)
13	contains	contain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
14	information	information	NOUN	NN	Number=Sing	13	obj	13:obj	Entity=(abstract-31
15	on	on	ADP	IN	_	16	case	16:case	_
16	matrices	matrice	NOUN	NNS	Number=Plur	14	nmod	14:nmod:on	Entity=abstract-31)(abstract-26)|SpaceAfter=No
17	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_whow_matlab-18
# s_type = imp
# text = Read through the Robotics Toolbox for MATLAB.
# newpar = item (5 s)
1	Read	read	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:25->24
2	through	through	ADP	IN	_	5	case	5:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(place-32
4	Robotics	Robotics	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(abstract-6)
5	Toolbox	Toolbox	PROPN	NNP	Number=Sing	1	obl	1:obl:through	_
6	for	for	ADP	IN	_	7	case	7:case	_
7	MATLAB	Matlab	PROPN	NNP	Number=Sing	5	nmod	5:nmod:for	Entity=place-32)(abstract-2)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-19
# s_type = frag
# text = Specifically, the Prismatic.
# newpar = list type:::"unordered" (4 s) | item (4 s)
1	Specifically	specifically	ADV	RB	Degree=Pos	4	advmod	4:advmod	Discourse=preparation:26->27|Entity=(abstract-33|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
4	Prismatic	Prismatic	PROPN	NNP	Number=Sing	0	root	0:root	Entity=abstract-33)|SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	4:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-20
# s_type = other
# text = Prismatic, Revolute.
1	Prismatic	Prismatic	ADJ	JJ	Degree=Pos	0	root	0:root	Discourse=sequence:27->25|SpaceAfter=No
2	,	,	PUNCT	,	_	3	punct	3:punct	_
3	Revolute	revolute	ADJ	JJ	Degree=Pos	1	parataxis	1:parataxis	SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-21
# s_type = intj
# text = Revolute, SerialLink.
1	Revolute	revolute	ADJ	JJ	Degree=Pos	0	root	0:root	Discourse=joint:28->27|SpaceAfter=No
2	,	,	PUNCT	,	_	3	punct	3:punct	_
3	SerialLink	SerialLink	PROPN	NNP	Number=Sing	1	vocative	1:vocative	Entity=(person-34)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-22
# s_type = decl
# text = plot, and SerialLink.fkine commands
1	plot	plot	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Discourse=preparation:29->30|Entity=(abstract-35)|SpaceAfter=No
2	,	,	PUNCT	,	_	4	punct	4:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	_
4	SerialLink	SerialLink	PROPN	NNP	Number=Sing	1	conj	1:conj:and|7:nsubj	Entity=(person-34)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No
6	fkine	fkine	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=(abstract-36)
7	commands	command	NOUN	NNS	Number=Plur	0	root	0:root	Entity=(organization-9)

# sent_id = AMALGUM_whow_matlab-23
# s_type = imp
# text = Install the Robotics Toolbox.
# newpar = item (1 s)
1	Install	install	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:30->28
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(place-32
3	Robotics	Robotics	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=(abstract-6)
4	Toolbox	Toolbox	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=place-32)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-24
# s_type = ger
# text = Collecting Robot Data
# newpar = head (1 s)
1	Collecting	collect	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=means:31->30
2	Robot	Robot	PROPN	NNP	Number=Sing	3	compound	3:compound	Entity=(abstract-37(person-38)
3	Data	data	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=abstract-37)

# sent_id = AMALGUM_whow_matlab-25
# s_type = imp
# text = Determine the types of joints that are in your robot.
# newpar = list type:::"ordered" (8 s) | item (5 s)
1	Determine	determine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:32->31
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-39
3	types	type	NOUN	NNS	Number=Plur	1	obj	1:obj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	joints	joint	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of|7:nsubj	Entity=(object-40
6	that	that	PRON	WDT	PronType=Rel	7	nsubj	5:ref	Discourse=elaboration:33->32
7	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	acl:relcl	5:acl:relcl	_
8	in	in	ADP	IN	_	10	case	10:case	_
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(object-4(person-3)
10	robot	robot	NOUN	NN	Number=Sing	7	obl	7:obl:in	Entity=abstract-39)object-40)object-4)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-26
# s_type = decl
# text = Prismatic joints are ones that actuate in and out.
# newpar = list type:::"unordered" (4 s) | item (2 s)
1	Prismatic	Prismatic	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=joint:34->32|Entity=(object-40
2	joints	joint	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=object-40)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
4	ones	one	NOUN	NNS	Number=Plur	0	root	0:root|6:nsubj	Entity=(object-40
5	that	that	PRON	WDT	PronType=Rel	6	nsubj	4:ref	Discourse=elaboration:35->34
6	actuate	actuate	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	acl:relcl	4:acl:relcl	_
7	in	in	ADP	IN	_	6	obl	6:obl	_
8	and	and	CCONJ	CC	_	9	cc	9:cc	_
9	out	out	ADV	RB	_	7	conj	6:obl|7:conj:and	Entity=object-40)|SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-27
# s_type = decl
# text = Examples are shocks or pistons.
1	Examples	example	NOUN	NNS	Number=Plur	3	nsubj	3:nsubj|5:nsubj	Discourse=joint:36->34|Entity=(abstract-41)
2	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	3	cop	3:cop	_
3	shocks	shock	NOUN	NNS	Number=Plur	0	root	0:root	Entity=(abstract-41(abstract-41)
4	or	or	CCONJ	CC	_	5	cc	5:cc	_
5	pistons	piston	NOUN	NNS	Number=Plur	3	conj	3:conj:or	Entity=abstract-41)(object-42)|SpaceAfter=No
6	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_matlab-28
# s_type = decl
# text = Revolute joints are ones that rotate.
# newpar = item (2 s)
1	Revolute	revolute	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=joint:37->36|Entity=(object-40
2	joints	joint	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=object-40)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
4	ones	one	NOUN	NNS	Number=Plur	0	root	0:root|6:nsubj	Entity=(object-40
5	that	that	PRON	WDT	PronType=Rel	6	nsubj	4:ref	Discourse=elaboration:38->37
6	rotate	rotate	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	acl:relcl	4:acl:relcl	Entity=object-40)|SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-29
# s_type = frag
# text = For example, any kind of hinge.
1	For	for	ADP	IN	_	2	case	2:case	Discourse=elaboration:39->37
2	example	example	NOUN	NN	Number=Sing	5	nmod	5:nmod:for	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	any	any	DET	DT	_	5	det	5:det	_
5	kind	kind	NOUN	NN	Number=Sing	0	root	0:root	Entity=(object-43
6	of	of	ADP	IN	_	7	case	7:case	_
7	hinge	hinge	NOUN	NN	Number=Sing	5	nmod	5:nmod:of	Entity=object-43)|SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_matlab-30
# s_type = imp
# text = Determine the limits for each joint.
# newpar = item (2 s)
1	Determine	determine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:40->41
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-44
3	limits	limit	NOUN	NNS	Number=Plur	1	obj	1:obj	_
4	for	for	ADP	IN	_	6	case	6:case	_
5	each	each	DET	DT	_	6	det	6:det	Entity=(object-45
6	joint	joint	NOUN	NN	Number=Sing	3	nmod	3:nmod:for	Entity=abstract-44)object-45)|SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-31
# s_type = decl
# text = This is the range for which each joint can slide or rotate through.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	4	nsubj	4:nsubj	Discourse=joint:41->39|Entity=(object-45)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-45
4	range	range	NOUN	NN	Number=Sing	0	root	0:root|10:obl:for	_
5	for	for	ADP	IN	_	6	case	6:case	Discourse=elaboration:42->41
6	which	which	PRON	WDT	PronType=Rel	10	obl	4:ref	_
7	each	each	DET	DT	_	8	det	8:det	Entity=(object-45
8	joint	joint	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	Entity=object-45)
9	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux|12:aux	_
10	slide	slide	VERB	VB	VerbForm=Inf	4	acl:relcl	4:acl:relcl	_
11	or	or	CCONJ	CC	_	12	cc	12:cc	_
12	rotate	rotate	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	10	conj	4:acl:relcl|10:conj:or	Entity=object-45)
13	through	through	ADP	IN	_	6	case	6:case	SpaceAfter=No
14	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-32
# s_type = imp
# text = Create a table that contains the DH parameters for each joint.
# newpar = item (1 s)
# trailing_xml = <figure rend:::"Robot_Data_Collection_New.png"></figure>
1	Create	create	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:43->41
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-46
3	table	table	NOUN	NN	Number=Sing	1	obj	1:obj|5:nsubj	_
4	that	that	PRON	WDT	PronType=Rel	5	nsubj	3:ref	Discourse=elaboration:44->43
5	contains	contain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	acl:relcl	3:acl:relcl	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-23
7	DH	DH	PROPN	NNP	Abbr=Yes|Number=Sing	8	compound	8:compound	Entity=(abstract-24)
8	parameters	parameter	NOUN	NNS	Number=Plur	5	obj	5:obj	_
9	for	for	ADP	IN	_	11	case	11:case	_
10	each	each	DET	DT	_	11	det	11:det	Entity=(object-45
11	joint	joint	NOUN	NN	Number=Sing	8	nmod	8:nmod:for	Entity=object-46)abstract-23)object-45)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-33
# s_type = ger
# text = Creating the Robot Model
# newpar = head (1 s)
1	Creating	create	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=sequence:45->43
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-1
3	Robot	Robot	PROPN	NNP	Number=Sing	4	compound	4:compound	_
4	Model	Model	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=abstract-1)

# sent_id = AMALGUM_whow_matlab-34
# s_type = imp
# text = Create each joint in the MATLAB command window.
# newpar = list type:::"ordered" (28 s) | item (5 s)
1	Create	create	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:46->45
2	each	each	DET	DT	_	3	det	3:det	Entity=(object-45
3	joint	joint	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-45)
4	in	in	ADP	IN	_	8	case	8:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-47
6	MATLAB	Matlab	PROPN	NNP	Number=Sing	8	compound	8:compound	Entity=(abstract-2)
7	command	command	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(abstract-48)
8	window	window	NOUN	NN	Number=Sing	1	obl	1:obl:in	Entity=abstract-47)|SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-35
# s_type = frag
# text = Image:How to create a robot model in MATLAB Step 4.
# newpar = figure (2 s) | ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_Step_4.png" (2 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:47->48|Entity=(abstract-49)|SpaceAfter=No
2	:	:	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
3	How	how	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=attribution:48->46
4	to	to	PART	TO	_	5	mark	5:mark	_
5	create	create	VERB	VB	VerbForm=Inf	1	dep	1:dep	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-1
7	robot	robot	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-4)
8	model	model	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-1)
9	in	in	ADP	IN	_	10	case	10:case	_
10	MATLAB	Matlab	PROPN	NNP	Number=Sing	11	compound	11:compound	Entity=(abstract-50(abstract-2)
11	Step	step	PROPN	NNP	Number=Sing	5	obl	5:obl	_
12	4	4	NUM	CD	NumForm=Digit|NumType=Card	11	dep	11:dep	Entity=abstract-50)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-36
# s_type = frag
# text = png
1	png	Png	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=preparation:49->54|Entity=(abstract-51)

# sent_id = AMALGUM_whow_matlab-37
# s_type = imp
# text = Call this code if your joint is prismatic:
# newpar = list type:::"unordered" (2 s) | item (1 s)
1	Call	call	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:50->54
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-52
3	code	code	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-52)
4	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:51->50
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(object-45(person-3)
6	joint	joint	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-45)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
8	prismatic	prismatic	ADJ	JJ	Degree=Pos	1	advcl	1:advcl:if	SpaceAfter=No
9	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-38
# s_type = imp
# text = Call this code if your joint is revolute:
# newpar = item (1 s)
1	Call	call	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:52->54
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-52
3	code	code	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-52)
4	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:53->52
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(object-45(person-3)
6	joint	joint	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-45)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
8	revolute	revolute	ADJ	JJ	Degree=Pos	1	advcl	1:advcl:if	SpaceAfter=No
9	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-39
# s_type = imp
# text = Repeat the last step for each joint.
# newpar = item (3 s)
1	Repeat	repeat	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:54->46
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(event-53
3	last	last	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	step	step	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=event-53)
5	for	for	ADP	IN	_	7	case	7:case	_
6	each	each	DET	DT	_	7	det	7:det	Entity=(object-45
7	joint	joint	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=object-45)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-40
# s_type = frag
# text = Image:How to create a robot model in MATLAB step 5.
# newpar = figure (2 s) | ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_step_5.png" (2 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:55->56|Entity=(abstract-49)|SpaceAfter=No
2	:	:	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
3	How	how	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=attribution:56->54
4	to	to	PART	TO	_	5	mark	5:mark	_
5	create	create	VERB	VB	VerbForm=Inf	1	dep	1:dep	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-1
7	robot	robot	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-4)
8	model	model	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-1)
9	in	in	ADP	IN	_	11	case	11:case	_
10	MATLAB	Matlab	PROPN	NNP	Number=Sing	11	compound	11:compound	Entity=(event-53(abstract-2)
11	step	step	NOUN	NN	Number=Sing	5	obl	5:obl:in	_
12	5	5	NUM	CD	NumForm=Digit|NumType=Card	11	nummod	11:nummod	Entity=event-53)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-41
# s_type = frag
# text = png
1	png	png	NOUN	NN	Number=Sing	0	root	0:root	Discourse=sequence:57->54|Entity=(abstract-51)

# sent_id = AMALGUM_whow_matlab-42
# s_type = sub
# text = For example, the second joint should start off with L(2)=Revolute/Prismatic(...)
# newpar = list type:::"unordered" (3 s) | item (1 s)
1	For	for	ADP	IN	_	2	case	2:case	Discourse=elaboration:58->57
2	example	example	NOUN	NN	Number=Sing	8	obl	8:obl:for	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(object-45
5	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	6	amod	6:amod	_
6	joint	joint	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-45)
7	should	should	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
8	start	start	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	off	off	ADP	RP	_	8	compound:prt	8:compound:prt	_
10	with	with	ADP	IN	_	11	case	11:case	_
11	L(2)=Revolute/Prismatic(	L(2)=Revolute/Prismatic(	PROPN	NNP	Number=Sing	8	obl	8:obl:with	Entity=(abstract-54)|SpaceAfter=No
12	...	…	PUNCT	:	_	11	punct	11:punct	SpaceAfter=No
13	)	)	PUNCT	-RRB-	_	11	punct	11:punct	_

# sent_id = AMALGUM_whow_matlab-43
# s_type = sub
# text = The third joint should be L(3)=Revolute/Prismatic(...)
# newpar = item (1 s)
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:59->58|Entity=(object-45
2	third	third	ADJ	JJ	Degree=Pos|NumType=Ord	3	amod	3:amod	_
3	joint	joint	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=object-45)
4	should	should	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
5	be	be	AUX	VB	VerbForm=Inf	6	cop	6:cop	_
6	L(3)=Revolute/Prismatic(	L(3)=Revolute/Prismatic(	NOUN	NNS	Number=Plur	0	root	0:root	Entity=(object-45)|SpaceAfter=No
7	...	…	PUNCT	:	_	6	punct	6:punct	SpaceAfter=No
8	)	)	PUNCT	-RRB-	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_matlab-44
# s_type = sub
# text = The last joint should be L(last joint number)=Revolute/Prismatic(...)
# newpar = item (1 s)
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=elaboration:60->59|Entity=(object-45
2	last	last	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	joint	joint	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-45)
4	should	should	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
5	be	be	AUX	VB	VerbForm=Inf	8	cop	8:cop	_
6	L(last	l(last	NOUN	NN	Number=Sing	8	nummod	8:nummod	Entity=(object-45
7	joint	joint	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	number)=Revolute/Prismatic(	number)=Revolute/Prismatic(	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-45)|SpaceAfter=No
9	...	…	PUNCT	:	_	8	punct	8:punct	SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_matlab-45
# s_type = imp
# text = Call the following command, where "your robots name" is the identifier that you want for your robot.
# newpar = item (4 s)
1	Call	call	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:61->58
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-48
3	following	follow	VERB	VBG	VerbForm=Ger	4	amod	4:amod	_
4	command	command	NOUN	NN	Number=Sing	1	obj	1:obj	SpaceAfter=No
5	,	,	PUNCT	,	_	14	punct	14:punct	_
6	where	where	SCONJ	WRB	PronType=Int	14	mark	14:mark	Discourse=elaboration:62->61
7	"	''	PUNCT	``	_	10	punct	10:punct	Entity=(abstract-55|SpaceAfter=No
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(abstract-56(object-57(person-3)
9	robots	robot	NOUN	NNS	Number=Plur	10	compound	10:compound	Entity=object-57)
10	name	name	NOUN	NN	Number=Sing	14	nsubj	14:nsubj	Entity=abstract-56)|SpaceAfter=No
11	"	''	PUNCT	''	_	10	punct	10:punct	_
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	14:cop	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	_
14	identifier	identifier	NOUN	NN	Number=Sing	4	acl	4:acl:where|17:obj	_
15	that	that	PRON	WDT	PronType=Rel	17	obj	14:ref	Discourse=elaboration:63->62
16	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	17	nsubj	17:nsubj	Entity=(person-3)
17	want	want	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	14	acl:relcl	14:acl:relcl	_
18	for	for	ADP	IN	_	20	case	20:case	_
19	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	20	nmod:poss	20:nmod:poss	Entity=(object-4(person-3)
20	robot	robot	NOUN	NN	Number=Sing	17	obl	17:obl:for	Entity=abstract-48)abstract-55)object-4)|SpaceAfter=No
21	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-46
# s_type = frag
# text = Image:
# newpar = figure (3 s) | ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_step_6.png" (3 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:64->65|Entity=(abstract-49)|SpaceAfter=No
2	:	:	PUNCT	:	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-47
# s_type = inf
# text = How to create a robot model in MATLAB
1	How	how	SCONJ	WRB	PronType=Int	3	mark	3:mark	Discourse=attribution:65->61
2	to	to	PART	TO	_	3	mark	3:mark	_
3	create	create	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(abstract-1
5	robot	robot	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(object-4)
6	model	model	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=abstract-1)
7	in	in	ADP	IN	_	8	case	8:case	_
8	MATLAB	Matlab	PROPN	NNP	Number=Sing	3	obl	3:obl:in	Entity=(abstract-2)

# sent_id = AMALGUM_whow_matlab-48
# s_type = frag
# text = step 6.png
1	step	step	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:66->67|Entity=(event-53
2	6	6	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=event-53)|SpaceAfter=No
3	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No
4	png	png	NOUN	NN	Number=Sing	1	appos	1:appos	Entity=(abstract-51)

# sent_id = AMALGUM_whow_matlab-49
# s_type = imp
# text = Add an external reference frame to your robot by calling the following command, where T is a 4x4 matrix between the external reference frame and the first reference frame of your robot.
# newpar = item (4 s)
1	Add	add	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:67->61
2	an	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(abstract-58
3	external	external	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
4	reference	reference	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-59)
5	frame	frame	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-58)
6	to	to	ADP	IN	_	8	case	8:case	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(object-4(person-3)
8	robot	robot	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=object-4)
9	by	by	SCONJ	IN	_	10	mark	10:mark	Discourse=means:68->67
10	calling	call	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:by	_
11	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(abstract-48
12	following	follow	VERB	VBG	VerbForm=Ger	13	amod	13:amod	_
13	command	command	NOUN	NN	Number=Sing	10	obj	10:obj	SpaceAfter=No
14	,	,	PUNCT	,	_	20	punct	20:punct	_
15	where	where	SCONJ	WRB	PronType=Int	20	mark	20:mark	Discourse=elaboration:69->68
16	T	T	NOUN	NN	Number=Sing	20	nsubj	20:nsubj	Entity=(abstract-60(abstract-61)
17	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	cop	20:cop	_
18	a	a	DET	DT	Definite=Ind|PronType=Art	20	det	20:det	_
19	4x4	4x4	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(place-62)
20	matrix	matrix	NOUN	NN	Number=Sing	13	acl	13:acl:where	_
21	between	between	ADP	IN	_	25	case	25:case	_
22	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	Entity=(abstract-58
23	external	external	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
24	reference	reference	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-59)
25	frame	frame	NOUN	NN	Number=Sing	20	nmod	20:nmod:between	Entity=abstract-58)
26	and	and	CCONJ	CC	_	30	cc	30:cc	_
27	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(abstract-58
28	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	30	amod	30:amod	_
29	reference	reference	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-59)
30	frame	frame	NOUN	NN	Number=Sing	25	conj	20:nmod:between|25:conj:and	_
31	of	of	ADP	IN	_	33	case	33:case	_
32	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	33	nmod:poss	33:nmod:poss	Entity=(object-4(person-3)
33	robot	robot	NOUN	NN	Number=Sing	30	nmod	30:nmod:of	Entity=abstract-48)abstract-60)abstract-58)object-4)|SpaceAfter=No
34	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-50
# s_type = frag
# text = Image:How to create a robot model in MATLAB
# newpar = figure (2 s) | ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_step_7.png" (2 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:70->71|Entity=(abstract-49)|SpaceAfter=No
2	:	:	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
3	How	how	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=attribution:71->67
4	to	to	PART	TO	_	5	mark	5:mark	_
5	create	create	VERB	VB	VerbForm=Inf	1	dep	1:dep	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-1
7	robot	robot	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-4)
8	model	model	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-1)
9	in	in	ADP	IN	_	10	case	10:case	_
10	MATLAB	Matlab	PROPN	NNP	Number=Sing	5	obl	5:obl:in	Entity=(abstract-2)

# sent_id = AMALGUM_whow_matlab-51
# s_type = frag
# text = step 7.png
1	step	step	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:72->75|Entity=(event-53
2	7	7	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=event-53)|SpaceAfter=No
3	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No
4	png	png	NOUN	NN	Number=Sing	1	appos	1:appos	Entity=(event-53)

# sent_id = AMALGUM_whow_matlab-52
# s_type = imp
# text = Call the following instead, if your external reference frame is only translated with respect to first robot frame:
# newpar = list type:::"unordered" (1 s) | item (1 s)
1	Call	call	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:73->75
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	_
3	following	follow	VERB	VBG	VerbForm=Ger	1	obj	1:obj	_
4	instead	instead	ADV	RB	Degree=Pos	1	advmod	1:advmod	SpaceAfter=No
5	,	,	PUNCT	,	_	13	punct	13:punct	_
6	if	if	SCONJ	IN	_	13	mark	13:mark	Discourse=condition:74->73
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(abstract-58(person-3)
8	external	external	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
9	reference	reference	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(abstract-59)
10	frame	frame	NOUN	NN	Number=Sing	13	nsubj:pass	13:nsubj:pass	Entity=abstract-58)
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
12	only	only	ADV	RB	_	13	advmod	13:advmod	_
13	translated	translate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	advcl	1:advcl:if	_
14	with	with	ADP	IN	_	15	case	15:case	_
15	respect	respect	NOUN	NN	Number=Sing	13	obl	13:obl:with	_
16	to	to	ADP	IN	_	19	case	19:case	_
17	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	19	amod	19:amod	Entity=(abstract-58
18	robot	robot	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(object-4)
19	frame	frame	NOUN	NN	Number=Sing	15	nmod	15:nmod:to	Entity=abstract-58)|SpaceAfter=No
20	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-53
# s_type = imp
# text = Add a tool to the robot by calling the following command, where S is a 4x4 matrix that relates the tool tip frame to the last robot joint frame.
# newpar = item (3 s)
1	Add	add	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:75->67
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-63
3	tool	tool	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-63)
4	to	to	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(object-4
6	robot	robot	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=object-4)
7	by	by	SCONJ	IN	_	8	mark	8:mark	Discourse=means:76->75
8	calling	call	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:by	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-48
10	following	follow	VERB	VBG	VerbForm=Ger	11	amod	11:amod	_
11	command	command	NOUN	NN	Number=Sing	8	obj	8:obj	SpaceAfter=No
12	,	,	PUNCT	,	_	18	punct	18:punct	_
13	where	where	SCONJ	WRB	PronType=Rel	18	mark	18:mark	Discourse=elaboration:77->76
14	S	S	PROPN	NNPS	Number=Plur	18	nsubj	18:nsubj	Entity=(abstract-60(abstract-64)
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	cop	18:cop	_
16	a	a	DET	DT	Definite=Ind|PronType=Art	18	det	18:det	_
17	4x4	4x4	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(place-62)
18	matrix	matrix	NOUN	NN	Number=Sing	11	acl:relcl	11:acl:relcl|20:nsubj	_
19	that	that	PRON	WDT	PronType=Rel	20	nsubj	18:ref	Discourse=elaboration:78->77
20	relates	relate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	acl:relcl	18:acl:relcl	_
21	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(abstract-58
22	tool	tool	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(object-63)
23	tip	tip	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(abstract-65)
24	frame	frame	NOUN	NN	Number=Sing	20	obj	20:obj	Entity=abstract-58)
25	to	to	ADP	IN	_	30	case	30:case	_
26	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(abstract-66
27	last	last	ADJ	JJ	Degree=Pos	30	amod	30:amod	_
28	robot	robot	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(object-4)
29	joint	joint	ADJ	JJ	Degree=Pos	30	amod	30:amod	_
30	frame	frame	NOUN	NN	Number=Sing	20	obl	20:obl:to	Entity=abstract-48)abstract-60)abstract-66)|SpaceAfter=No
31	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_matlab-54
# s_type = frag
# text = Image:How to create a robot model in MATLAB step 8.png
# newpar = figure (1 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:79->80|Entity=(abstract-49)|SpaceAfter=No|XML=<ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_step_8.png">
2	:	:	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
3	How	how	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=attribution:80->75
4	to	to	PART	TO	_	5	mark	5:mark	_
5	create	create	VERB	VB	VerbForm=Inf	1	dep	1:dep	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-1
7	robot	robot	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-4)
8	model	model	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-1)
9	in	in	ADP	IN	_	11	case	11:case	_
10	MATLAB	Matlab	PROPN	NNP	Number=Sing	11	compound	11:compound	Entity=(event-53(abstract-2)
11	step	step	NOUN	NN	Number=Sing	5	obl	5:obl:in	_
12	8	8	NUM	CD	NumForm=Digit|NumType=Card	11	nummod	11:nummod	Entity=event-53)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No
14	png	png	NOUN	NN	Number=Sing	1	dep	1:dep	XML=</ref>

# sent_id = AMALGUM_whow_matlab-55
# s_type = imp
# text = Call the following command instead, if your tool tip is only translated from the last robot joint frame.
# newpar = list type:::"unordered" (1 s) | item (1 s)
1	Call	call	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:81->75
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-48
3	following	follow	VERB	VBG	VerbForm=Ger	4	amod	4:amod	_
4	command	command	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-48)
5	instead	instead	ADV	RB	Degree=Pos	1	advmod	1:advmod	SpaceAfter=No
6	,	,	PUNCT	,	_	13	punct	13:punct	_
7	if	if	SCONJ	IN	_	13	mark	13:mark	Discourse=condition:82->81
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(abstract-65(person-3)
9	tool	tool	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(object-63)
10	tip	tip	NOUN	NN	Number=Sing	13	nsubj:pass	13:nsubj:pass	Entity=abstract-65)
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
12	only	only	ADV	RB	_	13	advmod	13:advmod	_
13	translated	translate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	advcl	1:advcl:if	_
14	from	from	ADP	IN	_	19	case	19:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(abstract-66
16	last	last	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
17	robot	robot	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(object-4)
18	joint	joint	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
19	frame	frame	NOUN	NN	Number=Sing	13	obl	13:obl:from	Entity=abstract-66)|SpaceAfter=No
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-56
# s_type = imp
# text = Plot the robot by calling this command:
# newpar = item (6 s)
1	Plot	plot	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:83->87
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-4
3	robot	robot	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
4	by	by	SCONJ	IN	_	5	mark	5:mark	Discourse=means:84->83
5	calling	call	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:by	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	7:det	Entity=(abstract-48
7	command	command	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-48)|SpaceAfter=No
8	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-57
# s_type = frag
# text = Image:How to create a robot model in MATLAB step 9.png
# newpar = figure (1 s)
1	Image	image	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:85->86|Entity=(abstract-49)|SpaceAfter=No|XML=<ref target:::"https://www.wikihow.com/wiki/Special:FilePath/How_to_create_a_robot_model_in_MATLAB_step_9.png">
2	:	:	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
3	How	how	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=preparation:86->87
4	to	to	PART	TO	_	5	mark	5:mark	_
5	create	create	VERB	VB	VerbForm=Inf	1	dep	1:dep	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-1
7	robot	robot	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-4)
8	model	model	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-1)
9	in	in	ADP	IN	_	11	case	11:case	_
10	MATLAB	Matlab	PROPN	NNP	Number=Sing	11	compound	11:compound	Entity=(event-53(abstract-2)
11	step	step	NOUN	NN	Number=Sing	5	obl	5:obl:in	_
12	9	9	NUM	CD	NumForm=Digit|NumType=Card	11	nummod	11:nummod	Entity=event-53)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No
14	png	png	NOUN	NN	Number=Sing	1	dep	1:dep	XML=</ref>

# sent_id = AMALGUM_whow_matlab-58
# s_type = decl
# text = Usually you will set all the joint angles to zero.
# newpar = list type:::"unordered" (4 s) | item (1 s)
1	Usually	usually	ADV	RB	Degree=Pos	4	advmod	4:advmod	Discourse=joint:87->81
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-3)
3	will	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	set	set	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	all	all	PRON	PDT	_	8	det:predet	8:det:predet	Entity=(abstract-67
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	_
7	joint	joint	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	angles	angle	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-67)
9	to	to	ADP	IN	_	10	case	10:case	_
10	zero	zero	NOUN	NN	Number=Sing	4	obl	4:obl:to	Entity=(abstract-68)|SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_matlab-59
# s_type = sub
# text = If the robot is not all on the screen or there is too much empty space, you can use the option of 'workspace' to change the size of the plot in each direction from the origin.
# newpar = item (2 s)
1	If	if	SCONJ	IN	_	6	mark	6:mark	Discourse=condition:88->87
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-4
3	robot	robot	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=object-4)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	not	not	ADV	RB	Polarity=Neg	6	advmod	6:advmod	_
6	all	all	ADV	RB	Degree=Pos	20	advcl	20:advcl:if	_
7	on	on	ADP	IN	_	9	case	9:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-69
9	screen	screen	NOUN	NN	Number=Sing	6	obl	6:obl:on	Entity=object-69)
10	or	or	CCONJ	CC	_	12	cc	12:cc	Discourse=contrast:89->88
11	there	there	PRON	EX	_	12	expl	12:expl	_
12	is	be	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	conj	6:conj:or|20:advcl:if	_
13	too	too	ADV	RB	Degree=Pos	14	advmod	14:advmod	Entity=(place-70
14	much	much	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
15	empty	empty	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	space	space	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	Entity=place-70)|SpaceAfter=No
17	,	,	PUNCT	,	_	6	punct	6:punct	_
18	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	20	nsubj	20:nsubj	Discourse=elaboration:90->89|Entity=(person-3)
19	can	can	AUX	MD	VerbForm=Fin	20	aux	20:aux	_
20	use	use	VERB	VB	VerbForm=Inf	0	root	0:root	_
21	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-71
22	option	option	NOUN	NN	Number=Sing	20	obj	20:obj	_
23	of	of	ADP	IN	_	25	case	25:case	_
24	'	'	PUNCT	``	_	25	punct	25:punct	SpaceAfter=No
25	workspace	workspace	NOUN	NN	Number=Sing	22	nmod	22:nmod:of	Entity=(abstract-72)|SpaceAfter=No
26	'	'	PUNCT	''	_	25	punct	25:punct	Entity=abstract-71)
27	to	to	PART	TO	_	28	mark	28:mark	Discourse=purpose:91->90
28	change	change	VERB	VB	VerbForm=Inf	20	advcl	20:advcl:to	_
29	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(abstract-73
30	size	size	NOUN	NN	Number=Sing	28	obj	28:obj	_
31	of	of	ADP	IN	_	33	case	33:case	_
32	the	the	DET	DT	Definite=Def|PronType=Art	33	det	33:det	Entity=(abstract-74
33	plot	plot	NOUN	NN	Number=Sing	30	nmod	30:nmod:of	_
34	in	in	ADP	IN	_	36	case	36:case	_
35	each	each	DET	DT	_	36	det	36:det	Entity=(abstract-75
36	direction	direction	NOUN	NN	Number=Sing	33	nmod	33:nmod:in	_
37	from	from	ADP	IN	_	39	case	39:case	_
38	the	the	DET	DT	Definite=Def|PronType=Art	39	det	39:det	Entity=(place-76
39	origin	origin	NOUN	NN	Number=Sing	36	nmod	36:nmod:from	Entity=abstract-73)abstract-74)abstract-75)place-76)|SpaceAfter=No
40	.	.	PUNCT	.	_	20	punct	20:punct	_

# sent_id = AMALGUM_whow_matlab-60
# s_type = imp
# text = When calling the plot command, add this to the inside of the parenthesis of the plot command:
1	When	when	SCONJ	WRB	PronType=Int	2	mark	2:mark	Discourse=circumstance:92->93
2	calling	call	VERB	VBG	VerbForm=Ger	7	advcl	7:advcl:when	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-48
4	plot	plot	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-74)
5	command	command	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-48)|SpaceAfter=No
6	,	,	PUNCT	,	_	2	punct	2:punct	_
7	add	add	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:93->88
8	this	this	PRON	DT	Number=Sing|PronType=Dem	7	obj	7:obj	Entity=(abstract-48)
9	to	to	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-77
11	inside	inside	NOUN	NN	Number=Sing	7	obl	7:obl:to	_
12	of	of	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-78
14	parenthesis	parenthesis	NOUN	NN	Number=Sing	11	nmod	11:nmod:of	_
15	of	of	ADP	IN	_	18	case	18:case	_
16	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-48
17	plot	plot	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-74)
18	command	command	NOUN	NN	Number=Sing	14	nmod	14:nmod:of	Entity=abstract-77)abstract-78)abstract-48)|SpaceAfter=No
19	:	:	PUNCT	:	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_matlab-61
# s_type = decl
# text = You will have to play around with these values until the whole robot fits in the plot.
# newpar = item (1 s)
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj|5:nsubj:xsubj	Discourse=elaboration:94->93|Entity=(person-3)
2	will	will	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	have	have	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	play	play	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	around	around	ADV	RB	Degree=Pos	5	advmod	5:advmod	_
7	with	with	ADP	IN	_	9	case	9:case	_
8	these	this	DET	DT	Number=Plur|PronType=Dem	9	det	9:det	Entity=(abstract-79
9	values	value	NOUN	NNS	Number=Plur	5	obl	5:obl:with	Entity=abstract-79)
10	until	until	SCONJ	IN	_	14	mark	14:mark	Discourse=circumstance:95->94
11	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-4
12	whole	whole	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
13	robot	robot	NOUN	NN	Number=Sing	14	nsubj	14:nsubj	Entity=object-4)
14	fits	fit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	advcl	5:advcl:until	_
15	in	in	ADP	IN	_	17	case	17:case	_
16	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(abstract-74
17	plot	plot	NOUN	NN	Number=Sing	14	obl	14:obl:in	Entity=abstract-74)|SpaceAfter=No
18	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_matlab-62
# s_type = ger
# text = Verifying the Model
# newpar = head (1 s)
1	Verifying	verify	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=elaboration:96->94
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-1
3	Model	Model	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-1)

# sent_id = AMALGUM_whow_matlab-63
# s_type = imp
# text = Predict what the X,Y,and Z distances will be from your tool to your external reference frame.
# newpar = list type:::"ordered" (6 s)
1	Predict	predict	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:97->96
2	what	what	PRON	WP	PronType=Rel	1	obj	1:obj	_
3	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-80
4	X	X	PROPN	NNP	Number=Sing	10	compound	10:compound	Entity=(person-81)|SpaceAfter=No
5	,	,	PUNCT	,	_	6	punct	6:punct	SpaceAfter=No
6	Y	Y	PROPN	NNP	Number=Sing	4	conj	4:conj:and|10:compound	Entity=(abstract-82)|SpaceAfter=No
7	,	,	PUNCT	,	_	9	punct	9:punct	SpaceAfter=No
8	and	and	CCONJ	CC	_	9	cc	9:cc	_
9	Z	Z	NOUN	NN	Number=Sing	4	conj	4:conj:and|10:compound	Entity=(person-83)
10	distances	distance	NOUN	NNS	Number=Plur	2	nsubj	2:nsubj	Entity=abstract-80)
11	will	will	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
12	be	be	VERB	VB	VerbForm=Inf	2	acl:relcl	2:acl:relcl	_
13	from	from	ADP	IN	_	15	case	15:case	_
14	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	15	nmod:poss	15:nmod:poss	Entity=(object-63(person-3)
15	tool	tool	NOUN	NN	Number=Sing	12	obl	12:obl:from	_
16	to	to	ADP	IN	_	20	case	20:case	_
17	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	20	nmod:poss	20:nmod:poss	Entity=(abstract-66(person-3)
18	external	external	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
19	reference	reference	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-59)
20	frame	frame	NOUN	NN	Number=Sing	15	nmod	15:nmod:to	Entity=object-63)abstract-66)|SpaceAfter=No
21	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-64
# s_type = imp
# text = Do this by calling:
# trailing_xml = <figure rend:::"Step_10_Final Edit.png"></figure>
1	Do	do	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:98->100
2	this	this	PRON	DT	Number=Sing|PronType=Dem	1	obj	1:obj	Entity=(abstract-66)
3	by	by	SCONJ	IN	_	4	mark	4:mark	Discourse=means:99->98
4	calling	call	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:by	SpaceAfter=No
5	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-65
# s_type = decl
# text = A 4x4 matrix is returned that relates the tool tip frame in reference to the external reference frame.
# newpar = list type:::"unordered" (1 s) | item (1 s)
1	A	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Discourse=elaboration:100->93|Entity=(abstract-60
2	4x4	4x4	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(place-62)
3	matrix	matrix	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=abstract-60)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
5	returned	return	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	that	that	PRON	WDT	_	7	nsubj	7:nsubj	Discourse=elaboration:101->100
7	relates	relate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	5:ccomp	_
8	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-66
9	tool	tool	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(object-63)
10	tip	tip	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-65)
11	frame	frame	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=abstract-66)
12	in	in	ADP	IN	_	13	case	13:case	_
13	reference	reference	NOUN	NN	Number=Sing	7	obl	7:obl:in	_
14	to	to	ADP	IN	_	18	case	18:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-66
16	external	external	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
17	reference	reference	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-59)
18	frame	frame	NOUN	NN	Number=Sing	7	obl	7:obl:to	Entity=abstract-66)|SpaceAfter=No
19	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_matlab-66
# s_type = imp
# text = Check the results by getting a rough measurement of the actual robot distances from the reference frame.
# newpar = item (1 s)
# trailing_xml = <figure></figure>
1	Check	check	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:102->100
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-84
3	results	result	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-84)
4	by	by	SCONJ	IN	_	5	mark	5:mark	Discourse=means:103->102
5	getting	get	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:by	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-85
7	rough	rough	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	measurement	measurement	NOUN	NN	Number=Sing	5	obj	5:obj	_
9	of	of	ADP	IN	_	13	case	13:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(abstract-80
11	actual	actual	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
12	robot	robot	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(object-4)
13	distances	distance	NOUN	NNS	Number=Plur	8	nmod	8:nmod:of	_
14	from	from	ADP	IN	_	17	case	17:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(abstract-66
16	reference	reference	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(abstract-59)
17	frame	frame	NOUN	NN	Number=Sing	13	nmod	13:nmod:from	Entity=abstract-85)abstract-80)abstract-66)|SpaceAfter=No
18	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-67
# s_type = decl
# text = If you don't have the actual robot or it is not built.
# newpar = list type:::"unordered" (2 s) | item (2 s)
1	If	if	SCONJ	IN	_	5	mark	5:mark	Discourse=condition:104->106
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-3)
3-4	don't	_	_	_	_	_	_	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
4	n't	not	ADV	RB	Polarity=Neg	5	advmod	5:advmod	_
5	have	have	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-4
7	actual	actual	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	robot	robot	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=object-4)
9	or	or	CCONJ	CC	_	13	cc	13:cc	Discourse=contrast:105->104
10	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	13	nsubj:pass	13:nsubj:pass	Entity=(object-4)
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
12	not	not	ADV	RB	Polarity=Neg	13	advmod	13:advmod	_
13	built	build	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	conj	5:conj:or	SpaceAfter=No
14	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_matlab-68
# s_type = imp
# text = Sketch the robot and then calculate how far the end of the tool should be from the base frame.
1	Sketch	sketch	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:106->102
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-4
3	robot	robot	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
4	and	and	CCONJ	CC	_	6	cc	6:cc	Discourse=sequence:107->106
5	then	then	ADV	RB	PronType=Dem	6	advmod	6:advmod	_
6	calculate	calculate	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
7	how	how	SCONJ	WRB	PronType=Int	8	mark	8:mark	_
8	far	far	ADV	RB	Degree=Pos	15	advmod	15:advmod	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-86
10	end	end	NOUN	NN	Number=Sing	15	nsubj	15:nsubj	_
11	of	of	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-63
13	tool	tool	NOUN	NN	Number=Sing	10	nmod	10:nmod:of	Entity=object-86)object-63)
14	should	should	AUX	MD	VerbForm=Fin	15	aux	15:aux	_
15	be	be	AUX	VB	VerbForm=Inf	19	cop	19:cop	_
16	from	from	ADP	IN	_	19	case	19:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(abstract-66
18	base	base	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(abstract-87)
19	frame	frame	NOUN	NN	Number=Sing	6	ccomp	6:ccomp	Entity=abstract-66)|SpaceAfter=No
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-69
# s_type = frag
# text = Tips
# newpar = head (1 s)
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:108->112|Entity=(abstract-88)

# sent_id = AMALGUM_whow_matlab-70
# s_type = imp
# text = If the robot model does not have the same number of joints than it should, make sure that you aren't overwriting joints.
# newpar = list type:::"unordered" (5 s) | item (2 s)
1	If	if	SCONJ	IN	_	7	mark	7:mark	Discourse=condition:109->112
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-1
3	robot	robot	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-4)
4	model	model	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=abstract-1)
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	7:aux	_
6	not	not	ADV	RB	Polarity=Neg	7	advmod	7:advmod	_
7	have	have	VERB	VB	VerbForm=Inf	17	advcl	17:advcl:if	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-89
9	same	same	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	number	number	NOUN	NN	Number=Sing	7	obj	7:obj	_
11	of	of	ADP	IN	_	12	case	12:case	_
12	joints	joint	NOUN	NNS	Number=Plur	10	nmod	10:nmod:of	Entity=abstract-89)(abstract-90)
13	than	than	SCONJ	IN	_	15	mark	15:mark	Discourse=antithesis:110->109
14	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	15	nsubj	15:nsubj	Entity=(abstract-89)
15	should	should	AUX	MD	VerbForm=Fin	7	advcl	7:advcl:than	SpaceAfter=No
16	,	,	PUNCT	,	_	7	punct	7:punct	_
17	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:111->112
18	sure	sure	ADJ	JJ	Degree=Pos	17	xcomp	17:xcomp	_
19	that	that	SCONJ	IN	_	23	mark	23:mark	Discourse=joint:112->5
20	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	23	nsubj	23:nsubj	Entity=(person-3)
21-22	aren't	_	_	_	_	_	_	_	_
21	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	23	aux	23:aux	_
22	n't	not	ADV	RB	Polarity=Neg	23	advmod	23:advmod	_
23	overwriting	overwrite	VERB	VBG	Tense=Pres|VerbForm=Part	18	ccomp	18:ccomp	_
24	joints	joint	NOUN	NNS	Number=Plur	23	obj	23:obj	Entity=(abstract-90)|SpaceAfter=No
25	.	.	PUNCT	.	_	17	punct	17:punct	_

# sent_id = AMALGUM_whow_matlab-71
# s_type = decl
# text = The first joint should be L(1)=..., the second joint should be L(2)=...,L(3)=...,L(...)=... ,the last joint should be L(last joint number) when created.
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:113->112|Entity=(object-91
2	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	3	amod	3:amod	_
3	joint	joint	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=object-91)
4	should	should	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
5	be	be	AUX	VB	VerbForm=Inf	6	cop	6:cop	_
6	L(1)=	L(1)=	X	FW	_	0	root	0:root	SpaceAfter=No
7	...	…	PUNCT	:	_	14	punct	14:punct	SpaceAfter=No
8	,	,	PUNCT	,	_	14	punct	14:punct	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Discourse=elaboration:114->113|Entity=(abstract-92
10	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	11	amod	11:amod	_
11	joint	joint	NOUN	NN	Number=Sing	14	nsubj	14:nsubj|17:nsubj	Entity=abstract-92)
12	should	should	AUX	MD	VerbForm=Fin	14	aux	14:aux	_
13	be	be	AUX	VB	VerbForm=Inf	14	cop	14:cop	_
14	L(2)=	L(2)=	PROPN	NNP	Number=Sing	6	parataxis	6:parataxis	Entity=(abstract-92(abstract-92)|SpaceAfter=No
15	...	…	PUNCT	:	_	17	punct	17:punct	SpaceAfter=No
16	,	,	PUNCT	,	_	17	punct	17:punct	SpaceAfter=No
17	L(3)=	L(3)=	NOUN	NN	Number=Sing	14	conj	14:conj	Entity=abstract-92)(abstract-93)|SpaceAfter=No
18	...	…	PUNCT	:	_	20	punct	20:punct	SpaceAfter=No
19	,	,	PUNCT	,	_	20	punct	20:punct	SpaceAfter=No
20	L(	L(	PROPN	NNP	Number=Sing	17	parataxis	17:parataxis	Entity=(abstract-94)|SpaceAfter=No
21	...	…	PUNCT	:	_	20	punct	20:punct	SpaceAfter=No
22	)=	)=	PUNCT	-RRB-	_	20	parataxis	20:parataxis	SpaceAfter=No
23	...	…	PUNCT	:	_	32	punct	32:punct	_
24	,	,	PUNCT	,	_	32	punct	32:punct	SpaceAfter=No
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Discourse=elaboration:115->114|Entity=(abstract-92
26	last	last	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	joint	joint	NOUN	NN	Number=Sing	32	nsubj	32:nsubj	Entity=abstract-92)
28	should	should	AUX	MD	VerbForm=Fin	32	aux	32:aux	_
29	be	be	AUX	VB	VerbForm=Inf	32	cop	32:cop	_
30	L(last	l(last	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=(abstract-92(abstract-95)
31	joint	joint	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=(object-91)
32	number	number	NOUN	NN	Number=Sing	6	parataxis	6:parataxis	SpaceAfter=No
33	)	)	PUNCT	-RRB-	_	35	punct	35:punct	_
34	when	when	SCONJ	WRB	PronType=Int	35	mark	35:mark	Discourse=circumstance:116->115
35	created	create	VERB	VBN	Tense=Past|VerbForm=Part	32	acl	32:acl:when	Entity=abstract-92)|SpaceAfter=No
36	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_matlab-72
# s_type = imp
# text = If the values of your actual robot are far off, take a look at your DH parameters and make sure that you follow the proper procedure for defining robot parameters.
# newpar = item (1 s)
1	If	if	SCONJ	IN	_	10	mark	10:mark	Discourse=condition:117->118
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-79
3	values	value	NOUN	NNS	Number=Plur	10	nsubj	10:nsubj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=(object-4(person-3)
6	actual	actual	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	robot	robot	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-79)object-4)
8	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	10	cop	10:cop	_
9	far	far	ADV	RB	Degree=Pos	10	advmod	10:advmod	_
10	off	off	ADV	RB	Degree=Pos	12	advcl	12:advcl:if	SpaceAfter=No
11	,	,	PUNCT	,	_	10	punct	10:punct	_
12	take	take	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	Discourse=elaboration:118->113
13	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(event-96
14	look	look	NOUN	NN	Number=Sing	12	obj	12:obj	Entity=event-96)
15	at	at	ADP	IN	_	18	case	18:case	_
16	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	18	nmod:poss	18:nmod:poss	Entity=(abstract-97(person-3)
17	DH	DH	NOUN	NN	Abbr=Yes|Number=Sing	18	compound	18:compound	Entity=(abstract-98)
18	parameters	parameter	NOUN	NNS	Number=Plur	12	obl	12:obl:at	Entity=abstract-97)
19	and	and	CCONJ	CC	_	20	cc	20:cc	Discourse=joint:119->118
20	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	12	conj	12:conj:and	_
21	sure	sure	ADJ	JJ	Degree=Pos	20	xcomp	20:xcomp	_
22	that	that	SCONJ	IN	_	24	mark	24:mark	_
23	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	24	nsubj	24:nsubj	Entity=(person-3)
24	follow	follow	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	21	ccomp	21:ccomp	_
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Entity=(abstract-99
26	proper	proper	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	procedure	procedure	NOUN	NN	Number=Sing	24	obj	24:obj	_
28	for	for	SCONJ	IN	_	29	mark	29:mark	Discourse=elaboration:120->119
29	defining	define	VERB	VBG	VerbForm=Ger	27	acl	27:acl:for	_
30	robot	robot	NOUN	NN	Number=Sing	31	compound	31:compound	Entity=(abstract-97(object-4)
31	parameters	parameter	NOUN	NNS	Number=Plur	29	obj	29:obj	Entity=abstract-99)abstract-97)|SpaceAfter=No
32	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_whow_matlab-73
# s_type = imp
# text = Make sure to convert all your measurements to meters and Radians.
# newpar = item (2 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:121->113
2	sure	sure	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	convert	convert	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	_
5	all	all	ADJ	JJ	Degree=Pos	6	det:predet	6:det:predet	Entity=(abstract-100(person-101
6	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=person-101)
7	measurements	measurement	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-100)
8	to	to	ADP	IN	_	9	case	9:case	_
9	meters	meter	NOUN	NNS	Number=Plur	4	obl	4:obl:to	Entity=(abstract-102)
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	Radians	Radian	PROPN	NNPS	Number=Plur	9	conj	4:obl:to|9:conj:and	Entity=(person-103)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-74
# s_type = decl
# text = Otherwise, your model will not behave like your actual robot and could cause issues when the real thing is built.
1	Otherwise	otherwise	ADV	RB	Degree=Pos	7	advmod	7:advmod	Discourse=joint:122->121|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(abstract-1(person-3)
4	model	model	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=abstract-1)
5	will	will	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
6	not	not	ADV	RB	Polarity=Neg	7	advmod	7:advmod	_
7	behave	behave	VERB	VB	VerbForm=Inf	0	root	0:root	_
8	like	like	ADP	IN	_	11	case	11:case	_
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(object-4(person-3)
10	actual	actual	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	robot	robot	NOUN	NN	Number=Sing	7	obl	7:obl:like	Entity=object-4)
12	and	and	CCONJ	CC	_	14	cc	14:cc	Discourse=joint:123->122
13	could	could	AUX	MD	VerbForm=Fin	14	aux	14:aux	_
14	cause	cause	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	7	conj	7:conj:and	_
15	issues	issue	NOUN	NNS	Number=Plur	14	obj	14:obj	Entity=(abstract-104)
16	when	when	SCONJ	WRB	PronType=Int	21	mark	21:mark	Discourse=circumstance:124->123
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(object-4
18	real	real	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
19	thing	thing	NOUN	NN	Number=Sing	21	nsubj:pass	21:nsubj:pass	Entity=object-4)
20	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	aux:pass	21:aux:pass	_
21	built	build	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	advcl	14:advcl:when	SpaceAfter=No
22	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_matlab-75
# s_type = frag
# text = Warnings
# newpar = head (1 s)
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:125->126|Entity=(abstract-105)

# sent_id = AMALGUM_whow_matlab-76
# s_type = ger
# text = When building a program to move the robot.
# newpar = list type:::"unordered" (6 s) | item (3 s)
1	When	when	SCONJ	WRB	PronType=Int	2	mark	2:mark	Discourse=ROOT:126
2	building	build	VERB	VBG	VerbForm=Ger	0	root	0:root	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-106
4	program	program	NOUN	NN	Number=Sing	2	obj	2:obj	_
5	to	to	PART	TO	_	6	mark	6:mark	Discourse=purpose:127->126
6	move	move	VERB	VB	VerbForm=Inf	4	acl	4:acl:to	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-4
8	robot	robot	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=abstract-106)object-4)|SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_matlab-77
# s_type = imp
# text = Make sure to check the angle/distance it is supposed to move against the limits that were set earlier.
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:128->126
2	sure	sure	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	check	check	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-107
6	angle/distance	angle/distance	NOUN	NN	Number=Sing	4	obj	4:obj	_
7	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	9	nsubj:pass	9:nsubj:pass|11:nsubj:xsubj	Discourse=elaboration:129->128|Entity=(abstract-107)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	9:aux:pass	_
9	supposed	suppose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	acl:relcl	6:acl:relcl	_
10	to	to	PART	TO	_	11	mark	11:mark	_
11	move	move	VERB	VB	VerbForm=Inf	9	xcomp	9:xcomp	Entity=abstract-107)
12	against	against	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-108
14	limits	limit	NOUN	NNS	Number=Plur	11	obl	11:obl:against|17:nsubj:pass	_
15	that	that	PRON	WDT	PronType=Rel	17	nsubj:pass	14:ref	Discourse=elaboration:130->129
16	were	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	17	aux:pass	17:aux:pass	_
17	set	set	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	acl:relcl	14:acl:relcl	_
18	earlier	early	ADV	RBR	Degree=Cmp	17	advmod	17:advmod	Entity=abstract-108)|SpaceAfter=No
19	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-78
# s_type = decl
# text = This ensures that the robot model behaves like the actual robot.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	2	nsubj	2:nsubj	Discourse=joint:131->126|Entity=(abstract-107)
2	ensures	ensure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	that	that	SCONJ	IN	_	7	mark	7:mark	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-1
5	robot	robot	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(object-4)
6	model	model	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=abstract-1)
7	behaves	behave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	2:ccomp	_
8	like	like	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-4
10	actual	actual	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	robot	robot	NOUN	NN	Number=Sing	7	obl	7:obl:like	Entity=object-4)|SpaceAfter=No
12	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_matlab-79
# s_type = imp
# text = Make sure that you accurately measure the limits and DH parameters.
# newpar = item (3 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:132->126
2	sure	sure	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	that	that	SCONJ	IN	_	6	mark	6:mark	_
4	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	6	nsubj	6:nsubj	Entity=(person-3)
5	accurately	accurately	ADV	RB	Degree=Pos	6	advmod	6:advmod	_
6	measure	measure	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	2	ccomp	2:ccomp	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-108(abstract-108
8	limits	limit	NOUN	NNS	Number=Plur	6	obj	6:obj	Entity=abstract-108)
9	and	and	CCONJ	CC	_	11	cc	11:cc	_
10	DH	DH	PROPN	NNP	Abbr=Yes|Number=Sing	11	compound	11:compound	Entity=(abstract-97(abstract-24)
11	parameters	parameter	NOUN	NNS	Number=Plur	8	conj	6:obj|8:conj:and	Entity=abstract-108)abstract-97)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_matlab-80
# s_type = sub
# text = If this is done incorrectly, the actual robot may not behave the way you expect.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:133->134
2	this	this	PRON	DT	Number=Sing|PronType=Dem	4	nsubj:pass	4:nsubj:pass	Entity=(abstract-1)
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	done	do	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	advcl	12:advcl:if	_
5	incorrectly	incorrectly	ADV	RB	Degree=Pos	4	advmod	4:advmod	SpaceAfter=No
6	,	,	PUNCT	,	_	4	punct	4:punct	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Discourse=joint:134->126|Entity=(object-4
8	actual	actual	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	robot	robot	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	Entity=object-4)
10	may	may	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
11	not	not	ADV	RB	Polarity=Neg	12	advmod	12:advmod	_
12	behave	behave	VERB	VB	VerbForm=Inf	0	root	0:root	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-109
14	way	way	NOUN	NN	Number=Sing	12	obj	12:obj	_
15	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	16	nsubj	16:nsubj	Discourse=elaboration:135->134|Entity=(person-3)
16	expect	expect	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	14	acl:relcl	14:acl:relcl	Entity=abstract-109)|SpaceAfter=No
17	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_whow_matlab-81
# s_type = sub
# text = This could pose serious risks for injury, especially if the robot reaches the hardware limits and tries to continue.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	3	nsubj	3:nsubj	Discourse=joint:136->126|Entity=(abstract-109)
2	could	could	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	pose	pose	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	serious	serious	ADJ	JJ	Degree=Pos	5	amod	5:amod	Entity=(abstract-110
5	risks	risk	NOUN	NNS	Number=Plur	3	obj	3:obj	_
6	for	for	ADP	IN	_	7	case	7:case	_
7	injury	injury	NOUN	NN	Number=Sing	5	nmod	5:nmod:for	Entity=abstract-110)(event-111)|SpaceAfter=No
8	,	,	PUNCT	,	_	13	punct	13:punct	_
9	especially	especially	ADV	RB	Degree=Pos	13	advmod	13:advmod	Discourse=condition:137->136
10	if	if	SCONJ	IN	_	13	mark	13:mark	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-4
12	robot	robot	NOUN	NN	Number=Sing	13	nsubj	13:nsubj|18:nsubj|20:nsubj:xsubj	Entity=object-4)
13	reaches	reach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	advcl	3:advcl:if	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(abstract-108
15	hardware	hardware	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-112)
16	limits	limit	NOUN	NNS	Number=Plur	13	obj	13:obj	Entity=abstract-108)
17	and	and	CCONJ	CC	_	18	cc	18:cc	Discourse=joint:138->137
18	tries	try	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	conj	3:advcl:if|13:conj:and	_
19	to	to	PART	TO	_	20	mark	20:mark	_
20	continue	continue	VERB	VB	VerbForm=Inf	18	xcomp	18:xcomp	SpaceAfter=No
21	.	.	PUNCT	.	_	3	punct	3:punct	_

