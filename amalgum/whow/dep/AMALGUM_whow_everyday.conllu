# meta::id = AMALGUM_whow_everyday
# meta::title = Make a Simple Robot With Everyday Supplies
# meta::shortTitle = everyday
# meta::type = whow
# meta::dateCollected = 2019-11-06
# meta::dateCreated = 2011-09-18
# meta::dateModified = 2019-05-18
# meta::sourceURL = https://www.wikihow.com/Make-a-Simple-Robot-With-Everyday-Supplies
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_whow_everyday
# sent_id = AMALGUM_whow_everyday-1
# s_type = inf
# text = Make a Simple Robot With Everyday Supplies
# newpar = head (1 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->2
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(person-1
3	Simple	simple	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	Robot	robot	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=person-1)
5	With	with	ADP	IN	_	7	case	7:case	_
6	Everyday	Everyday	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(abstract-2
7	Supplies	supply	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=abstract-2)|SpaceAfter=No

# sent_id = AMALGUM_whow_everyday-2
# s_type = decl
# text = This little robot will add to your collection of cool things to display!
# newpar = p (2 s)
1	This	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Discourse=ROOT:2|Entity=(object-3
2	little	little	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	robot	robot	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=object-3)
4	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
5	add	add	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	to	to	ADP	IN	_	8	case	8:case	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(object-4(person-5)
8	collection	collection	NOUN	NN	Number=Sing	5	obl	5:obl:to	_
9	of	of	ADP	IN	_	11	case	11:case	_
10	cool	cool	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(object-6
11	things	thing	NOUN	NNS	Number=Plur	8	nmod	8:nmod:of	_
12	to	to	PART	TO	_	13	mark	13:mark	Discourse=elaboration:3->2
13	display	display	VERB	VB	VerbForm=Inf	11	acl	11:acl:to	Entity=object-4)object-6)|SpaceAfter=No
14	!	!	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_everyday-3
# s_type = decl
# text = These instructions tell you how to build a small robot that lights up its eyes, for an inexpensive, fun showpiece.
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	2:det	Discourse=preparation:4->7|Entity=(abstract-7
2	instructions	instruction	NOUN	NNS	Number=Plur	3	nsubj	3:nsubj	Entity=abstract-7)
3	tell	tell	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
4	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	3	iobj	3:iobj	Entity=(person-5)
5	how	how	SCONJ	WRB	PronType=Int	3	obj	3:obj	_
6	to	to	PART	TO	_	7	mark	7:mark	_
7	build	build	VERB	VB	VerbForm=Inf	5	acl	5:acl:to	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(object-3
9	small	small	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	robot	robot	NOUN	NN	Number=Sing	7	obj	7:obj|12:nsubj	_
11	that	that	PRON	WDT	PronType=Rel	12	nsubj	10:ref	Discourse=elaboration:5->4
12	lights	light	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	acl:relcl	10:acl:relcl	Entity=(abstract-8)
13	up	up	ADP	RP	_	12	compound:prt	12:compound:prt	_
14	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	15	nmod:poss	15:nmod:poss	Entity=(object-9(object-3)
15	eyes	eye	NOUN	NNS	Number=Plur	12	obj	12:obj	Entity=object-9)|SpaceAfter=No
16	,	,	PUNCT	,	_	22	punct	22:punct	_
17	for	for	ADP	IN	_	22	case	22:case	_
18	an	a	DET	DT	Definite=Ind|PronType=Art	22	det	22:det	Entity=(event-10
19	inexpensive	inexpensive	ADJ	JJ	Degree=Pos	22	amod	22:amod	SpaceAfter=No
20	,	,	PUNCT	,	_	19	punct	19:punct	_
21	fun	fun	ADJ	JJ	Degree=Pos	22	amod	22:amod	_
22	showpiece	showpiece	NOUN	NN	Number=Sing	12	obl	12:obl:for	Entity=object-3)event-10)|SpaceAfter=No
23	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_everyday-4
# s_type = frag
# text = Steps
# newpar = head (1 s)
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:6->7|Entity=(abstract-11)

# sent_id = AMALGUM_whow_everyday-5
# s_type = decl
# text = Pick your LED lights and heat shrink.
# newpar = list type:::"ordered" (38 s)
# newpar1 = item (4 s)
1	Pick	pick	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:7->2
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(object-12(person-5)
3	LED	LED	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-13)
4	lights	light	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-12)
5	and	and	CCONJ	CC	_	7	cc	7:cc	Discourse=joint:8->7
6	heat	heat	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=(substance-14)
7	shrink	shrink	NOUN	NN	Number=Sing	1	conj	1:conj:and	Entity=(object-15)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-6
# s_type = decl
# text = The two lights will form the robot's eyes.
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=sequence:9->7|Entity=(object-12
2	two	2	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	_
3	lights	light	NOUN	NNS	Number=Plur	5	nsubj	5:nsubj	Entity=object-12)
4	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
5	form	form	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-9
7-8	robot's	_	_	_	_	_	_	_	_
7	robot	robot	NOUN	NN	Number=Sing	9	nmod:poss	9:nmod:poss	Entity=(object-3
8	's	's	PART	POS	_	7	case	7:case	Entity=object-3)
9	eyes	eye	NOUN	NNS	Number=Plur	5	obj	5:obj	Entity=object-9)|SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_everyday-7
# s_type = imp
# text = Optionally, get heat shrink tubing as well for added color.
1	Optionally	optionally	ADV	RB	Degree=Pos	3	advmod	3:advmod	Discourse=joint:10->9|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	get	get	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	heat	heat	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(object-16(object-15(substance-14)
5	shrink	shrink	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=object-15)
6	tubing	tubing	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-16)
7	as	as	ADV	RB	_	3	advmod	3:advmod	_
8	well	well	ADV	RB	Degree=Pos	7	fixed	7:fixed	_
9	for	for	ADP	IN	_	11	case	11:case	_
10	added	added	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(abstract-17
11	color	color	NOUN	NN	Number=Sing	3	obl	3:obl:for	Entity=abstract-17)|SpaceAfter=No
12	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_everyday-8
# s_type = decl
# text = You won’t need more than 5 inches (13cm) of heat shrink for this project.
# trailing_xml = <figure rend:::"Make a Simple Robot With Everyday Supplies Step 1 Version 2.jpg"></figure>
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Discourse=joint:11->10|Entity=(person-5)
2-3	won’t	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
3	n’t	not	ADV	RB	Polarity=Neg	4	advmod	4:advmod	_
4	need	need	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	more	more	ADV	RBR	Degree=Cmp	7	advmod	7:advmod	Entity=(abstract-18
6	than	than	ADP	IN	_	5	fixed	5:fixed	_
7	5	5	NUM	CD	NumForm=Digit|NumType=Card	8	nummod	8:nummod	_
8	inches	inch	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-18)
9	(	(	PUNCT	-LRB-	_	10	punct	10:punct	Discourse=restatement:12->11|SpaceAfter=No
10	13cm	13cm	NUM	CD	NumForm=Word|NumType=Card	8	appos	8:appos	Entity=(abstract-18)|SpaceAfter=No
11	)	)	PUNCT	-RRB-	_	10	punct	10:punct	_
12	of	of	ADP	IN	_	14	case	14:case	Discourse=elaboration:13->11
13	heat	heat	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(object-15(substance-14)
14	shrink	shrink	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=object-15)
15	for	for	ADP	IN	_	17	case	17:case	_
16	this	this	DET	DT	Number=Sing|PronType=Dem	17	det	17:det	Entity=(abstract-19
17	project	project	NOUN	NN	Number=Sing	4	obl	4:obl:for	Entity=abstract-19)|SpaceAfter=No
18	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_everyday-9
# s_type = imp
# text = Clip a piece off of the heat shrink.
# newpar = item (3 s)
1	Clip	clip	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:14->11
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-20
3	piece	piece	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-20)
4	off	off	ADP	RP	_	1	compound:prt	1:compound:prt	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-15
7	heat	heat	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(substance-14)
8	shrink	shrink	NOUN	NN	Number=Sing	1	obl	1:obl:of	Entity=object-15)|SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-10
# s_type = imp
# text = Cut two small pieces of heat shrink, each about ½ inch (1.25cm) long.
1	Cut	cut	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:15->16
2	two	2	NUM	CD	NumForm=Digit|NumType=Card	4	nummod	4:nummod	Entity=(object-21
3	small	small	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	pieces	piece	NOUN	NNS	Number=Plur	1	obj	1:obj	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	heat	heat	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(object-15(substance-14)
7	shrink	shrink	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=object-15)|SpaceAfter=No
8	,	,	PUNCT	,	_	12	punct	12:punct	_
9	each	each	PRON	DT	_	12	nsubj	12:nsubj	Discourse=sequence:16->14|Entity=(object-15)
10	about	about	ADV	RB	_	11	advmod	11:advmod	Entity=(abstract-22
11	½	½	NUM	CD	NumForm=Word|NumType=Card	12	nummod	12:nummod	_
12	inch	inch	NOUN	NN	Number=Sing	4	nmod:npmod	4:nmod:npmod	Entity=object-21)abstract-22)
13	(	(	PUNCT	-LRB-	_	14	punct	14:punct	Discourse=restatement:17->16|SpaceAfter=No
14	1.25cm	1.25cm	NUM	CD	NumForm=Word|NumType=Card	12	appos	12:appos	SpaceAfter=No
15	)	)	PUNCT	-RRB-	_	14	punct	14:punct	_
16	long	long	ADJ	JJ	Degree=Pos	12	advmod	12:advmod	Discourse=same_unit:18->16|SpaceAfter=No
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-11
# s_type = decl
# text = This should be small enough that the pins on your LED will poke out after sliding through the heat shrink.
# trailing_xml = <figure rend:::"Make a Simple Robot With Everyday Supplies Step 2 Version 2.jpg"></figure>
1	This	this	PRON	DT	Number=Sing|PronType=Dem	4	nsubj	4:nsubj	Discourse=attribution:19->20|Entity=(abstract-22)
2	should	should	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
3	be	be	AUX	VB	VerbForm=Inf	4	cop	4:cop	_
4	small	small	ADJ	JJ	Degree=Pos	0	root	0:root	_
5	enough	enough	ADV	RB	Degree=Pos	4	advmod	4:advmod	_
6	that	that	SCONJ	IN	_	13	mark	13:mark	Discourse=sequence:20->16
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-23
8	pins	pin	NOUN	NNS	Number=Plur	13	nsubj	13:nsubj	_
9	on	on	ADP	IN	_	11	case	11:case	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(object-13(person-5)
11	LED	LED	NOUN	NN	Number=Sing	8	nmod	8:nmod:on	Entity=object-23)object-13)
12	will	will	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
13	poke	poke	VERB	VB	VerbForm=Inf	4	ccomp	4:ccomp	_
14	out	out	ADP	RP	_	13	compound:prt	13:compound:prt	_
15	after	after	SCONJ	IN	_	16	mark	16:mark	Discourse=circumstance:21->20
16	sliding	slide	VERB	VBG	VerbForm=Ger	13	advcl	13:advcl:after	_
17	through	through	ADP	IN	_	20	case	20:case	_
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(object-15
19	heat	heat	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(substance-14)
20	shrink	shrink	NOUN	NN	Number=Sing	16	obl	16:obl:through	Entity=object-15)|SpaceAfter=No
21	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_everyday-12
# s_type = imp
# text = Slide the LED through the heat shrink.
# newpar = item (3 s)
1	Slide	slide	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:22->20
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-13
3	LED	LED	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-13)
4	through	through	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-15
6	heat	heat	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(substance-14)
7	shrink	shrink	NOUN	NN	Number=Sing	1	obl	1:obl:through	Entity=object-15)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-13
# s_type = imp
# text = If you are using heat shrink, push the LED through until the light-up tip peeks out.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:23->24
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-5)
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	8	advcl	8:advcl:if	_
5	heat	heat	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(object-15(substance-14)
6	shrink	shrink	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-15)|SpaceAfter=No
7	,	,	PUNCT	,	_	4	punct	4:punct	_
8	push	push	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:24->22
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-13
10	LED	LED	PROPN	NNP	Number=Sing	8	obj	8:obj	Entity=object-13)
11	through	through	ADP	RP	_	8	compound:prt	8:compound:prt	_
12	until	until	SCONJ	IN	_	16	mark	16:mark	Discourse=circumstance:25->24
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-24
14	light-up	light-up	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(event-25)
15	tip	tip	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=object-24)
16	peeks	peek	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	advcl	8:advcl:until	_
17	out	out	ADP	RP	_	16	compound:prt	16:compound:prt	SpaceAfter=No
18	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_everyday-14
# s_type = imp
# text = Repeat this process for the second LED.
# trailing_xml = <figure rend:::"Make a Simple Robot With Everyday Supplies Step 3 Version 2.jpg"></figure>
1	Repeat	repeat	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:26->24
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-26
3	process	process	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-26)
4	for	for	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-13
6	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	7	amod	7:amod	_
7	LED	LED	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=object-13)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-15
# s_type = multiple
# text = Shrink the heat shrink with a Soldering Iron.
# newpar = item (4 s)
1	Shrink	shrink	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:27->26
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(substance-14
3	heat	heat	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=substance-14)
4	shrink	shrink	NOUN	NN	Number=Sing	1	parataxis	1:parataxis	_
5	with	with	ADP	IN	_	8	case	8:case	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(object-27
7	Soldering	soldering	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-28)
8	Iron	Iron	PROPN	NNP	Number=Sing	4	obl	4:obl:with	Entity=object-27)|SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-16
# s_type = imp
# text = Start up your Soldering Iron and bring it close to the LED lights and the heat shrink.
1	Start	start	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:28->27
2	up	up	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-27(person-5)
4	Soldering	soldering	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(object-28)
5	Iron	Iron	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-27)
6	and	and	CCONJ	CC	_	7	cc	7:cc	Discourse=joint:29->28
7	bring	bring	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
8	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	7	obj	7:obj	Entity=(abstract-26)
9	close	close	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
10	to	to	ADP	IN	_	13	case	13:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-12(object-12
12	LED	LED	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(object-13)
13	lights	light	NOUN	NNS	Number=Plur	9	obl	9:obl:to	Entity=object-12)
14	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:30->29
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(object-15
16	heat	heat	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(substance-14)
17	shrink	shrink	NOUN	NN	Number=Sing	13	conj	9:obl:to|13:conj:and	Entity=object-12)object-15)|SpaceAfter=No
18	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-17
# s_type = sub
# text = The heat from the iron should shrink the tube.
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=sequence:31->28|Entity=(substance-14
2	heat	heat	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	_
3	from	from	ADP	IN	_	5	case	5:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(substance-29
5	iron	iron	NOUN	NN	Number=Sing	2	nmod	2:nmod:from	Entity=substance-14)substance-29)
6	should	should	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
7	shrink	shrink	VERB	VB	VerbForm=Inf	0	root	0:root	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-30
9	tube	tube	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-30)|SpaceAfter=No
10	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_everyday-18
# s_type = imp
# text = Hold the LED with pliers to protect your fingers from the heat.
# trailing_xml = <figure rend:::"Make a Simple Robot With Everyday Supplies Step 4 Version 2.jpg"></figure>
1	Hold	hold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:32->31
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-13
3	LED	LED	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-13)
4	with	with	ADP	IN	_	5	case	5:case	_
5	pliers	plier	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=(object-31)
6	to	to	PART	TO	_	7	mark	7:mark	Discourse=purpose:33->32
7	protect	protect	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:to	_
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(object-32(person-5)
9	fingers	finger	NOUN	NNS	Number=Plur	7	obj	7:obj	Entity=object-32)
10	from	from	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(substance-14
12	heat	heat	NOUN	NN	Number=Sing	7	obl	7:obl:from	Entity=substance-14)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-19
# s_type = imp
# text = Select the battery pack.
# newpar = item (3 s)
1	Select	select	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:34->32
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-33
3	battery	battery	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-34)
4	pack	pack	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-33)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-20
# s_type = imp
# text = Get a battery pack rated of about 3v.
1	Get	get	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:35->37
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-33
3	battery	battery	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-34)
4	pack	pack	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	rated	rate	VERB	VBN	Tense=Past|VerbForm=Part	4	acl	4:acl	Discourse=elaboration:36->35
6	of	of	ADP	IN	_	8	case	8:case	_
7	about	about	ADV	RB	_	8	advmod	8:advmod	Entity=(abstract-35
8	3v	3v	NUM	CD	NumForm=Word|NumType=Card	5	obl	5:obl:of	Entity=object-33)abstract-35)|SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-21
# s_type = sub
# text = This should fit two AA batteries.
# trailing_xml = <figure rend:::"SimpleRobotBatteryPack.jpeg"></figure>
1	This	this	PRON	DT	Number=Sing|PronType=Dem	3	nsubj	3:nsubj	Discourse=joint:37->34|Entity=(abstract-35)
2	should	should	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	fit	fit	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	two	2	NUM	CD	NumForm=Digit|NumType=Card	6	nummod	6:nummod	Entity=(object-36
5	AA	AA	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-37)
6	batteries	battery	NOUN	NNS	Number=Plur	3	obj	3:obj	Entity=object-36)|SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_everyday-22
# s_type = imp
# text = Solder the LED and resistor to the battery pack.
# newpar = item (10 s)
1	Solder	solder	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:38->37
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-13
3	LED	LED	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-13)
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	resistor	resistor	NOUN	NN	Number=Sing	3	conj	1:obj|3:conj:and	Entity=(object-38)
6	to	to	ADP	IN	_	9	case	9:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-33
8	battery	battery	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(object-34)
9	pack	pack	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=object-33)|SpaceAfter=No
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-23
# s_type = imp
# text = Take some insulated wire with the ends stripped.
1	Take	take	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:39->38
2	some	some	DET	DT	_	4	det	4:det	Entity=(object-39
3	insulated	insulate	VERB	VBN	Tense=Past|VerbForm=Part	4	amod	4:amod	_
4	wire	wire	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	with	with	ADP	IN	_	7	case	7:case	Discourse=elaboration:40->39
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-40
7	ends	end	NOUN	NNS	Number=Plur	8	nsubj:pass	8:nsubj:pass	Entity=object-40)
8	stripped	strip	VERB	VBN	Tense=Past|VerbForm=Part	4	acl	4:acl	Entity=object-39)|SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-24
# s_type = imp
# text = Solder these components as follows:
# trailing_xml = <figure rend:::"CircuitDiagram.png"></figure>
1	Solder	solder	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:41->42|XML=<ref target:::"https://www.wikihow.com/wiki/Solder-Electronics"></ref>
2	these	this	DET	DT	Number=Plur|PronType=Dem	3	det	3:det	Entity=(abstract-41
3	components	component	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-41)
4	as	as	SCONJ	IN	_	5	mark	5:mark	_
5	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:as	SpaceAfter=No
6	:	:	PUNCT	:	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-25
# s_type = imp
# text = Solder the negative (black) wire of the battery pack to the short terminal of the LED lights.
# newpar = list type:::"unordered" (7 s)
# newpar1 = item (1 s)
1	Solder	solder	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:42->38
2	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-39
3	negative	negative	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
4	(	(	PUNCT	-LRB-	_	5	punct	5:punct	Discourse=elaboration:43->42|SpaceAfter=No
5	black	black	ADJ	JJ	Degree=Pos	7	amod	7:amod	SpaceAfter=No
6	)	)	PUNCT	-RRB-	_	5	punct	5:punct	_
7	wire	wire	NOUN	NN	Number=Sing	1	obj	1:obj	_
8	of	of	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-33
10	battery	battery	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(object-34)
11	pack	pack	NOUN	NN	Number=Sing	7	nmod	7:nmod:of	Entity=object-39)object-33)
12	to	to	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-42
14	short	short	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	terminal	terminal	NOUN	NN	Number=Sing	1	obl	1:obl:to	_
16	of	of	ADP	IN	_	19	case	19:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(object-12
18	LED	LED	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(object-13)
19	lights	light	NOUN	NNS	Number=Plur	15	nmod	15:nmod:of	Entity=object-42)object-12)|SpaceAfter=No
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-26
# s_type = imp
# text = Take a 100 ohm resistor (or a resistor close to that range).
# newpar = item (2 s)
1	Take	take	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:44->42
2	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(object-38
3	100	100	NUM	CD	NumForm=Digit|NumType=Card	4	nummod	4:nummod	Entity=(abstract-43
4	ohm	ohm	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=abstract-43)
5	resistor	resistor	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-38)
6	(	(	PUNCT	-LRB-	_	9	punct	9:punct	Discourse=contrast:45->44|SpaceAfter=No
7	or	or	CCONJ	CC	_	9	cc	9:cc	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-38
9	resistor	resistor	NOUN	NN	Number=Sing	5	conj	1:obj|5:conj:or	_
10	close	close	ADJ	JJ	Degree=Pos	9	amod	9:amod	Entity=object-38)
11	to	to	ADP	IN	_	13	case	13:case	_
12	that	that	DET	DT	Number=Sing|PronType=Dem	13	det	13:det	Entity=(abstract-44
13	range	range	NOUN	NN	Number=Sing	10	obl	10:obl:to	Entity=abstract-44)|SpaceAfter=No
14	)	)	PUNCT	-RRB-	_	9	punct	9:punct	SpaceAfter=No
15	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-27
# s_type = decl
# text = Without the resistor, the light will die out.
1	Without	without	ADP	IN	_	3	case	3:case	Discourse=sequence:46->44
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-38
3	resistor	resistor	NOUN	NN	Number=Sing	8	obl	8:obl:without	Entity=object-38)|SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-8
6	light	light	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=abstract-8)
7	will	will	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
8	die	die	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	out	out	ADP	RP	_	8	compound:prt	8:compound:prt	SpaceAfter=No
10	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_everyday-28
# s_type = frag
# text = Solder one pin of the resistor to the positive wire of the battery.
# newpar = item (1 s)
1	Solder	solder	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:47->37|Entity=(person-45
2	one	one	NUM	CD	NumForm=Word|NumType=Card	3	nummod	3:nummod	Entity=(object-46
3	pin	pin	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(object-38
6	resistor	resistor	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=person-45)object-46)object-38)
7	to	to	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-47
9	positive	positive	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	wire	wire	NOUN	NN	Number=Sing	1	obl	1:obl:to	_
11	of	of	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-34
13	battery	battery	NOUN	NN	Number=Sing	10	nmod	10:nmod:of	Entity=object-47)object-34)|SpaceAfter=No
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-29
# s_type = imp
# text = Solder the other pin of the resistor to the LED's positive terminal.
# newpar = item (1 s)
1	Solder	solder	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:48->47
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-48
3	other	other	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	pin	pin	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-38
7	resistor	resistor	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=object-48)object-38)
8	to	to	ADP	IN	_	13	case	13:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-42
10-11	LED's	_	_	_	_	_	_	_	_
10	LED	LED	PROPN	NNP	Number=Sing	13	nmod:poss	13:nmod:poss	Entity=(object-49
11	's	's	PART	POS	_	10	case	10:case	Entity=object-49)
12	positive	positive	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
13	terminal	terminal	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=object-42)|SpaceAfter=No
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-30
# s_type = imp
# text = Connect the two positive pins of the two LED's.
# newpar = item (1 s)
1	Connect	connect	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:49->48
2	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-23
3	two	2	NUM	CD	NumForm=Digit|NumType=Card	5	nummod	5:nummod	_
4	positive	positive	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	pins	pin	NOUN	NNS	Number=Plur	1	obj	1:obj	_
6	of	of	ADP	IN	_	9	case	9:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-13
8	two	2	NUM	CD	NumForm=Digit|NumType=Card	9	nummod	9:nummod	_
9-10	LED's	_	_	_	_	_	_	_	SpaceAfter=No
9	LED	LED	PROPN	NNP	Number=Sing	5	nmod	5:nmod:of	_
10	's	's	PART	POS	_	9	case	9:case	Entity=object-23)object-13)
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-31
# s_type = imp
# text = Connect the two negative pins of the two LED's.
# newpar = item (1 s)
# trailing_xml = <figure rend:::"SolderLED.jpeg"></figure>
1	Connect	connect	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:50->49
2	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-50
3	two	2	NUM	CD	NumForm=Digit|NumType=Card	5	nummod	5:nummod	_
4	negative	negative	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	pins	pin	NOUN	NNS	Number=Plur	1	obj	1:obj	_
6	of	of	ADP	IN	_	9	case	9:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-13
8	two	2	NUM	CD	NumForm=Digit|NumType=Card	9	nummod	9:nummod	_
9-10	LED's	_	_	_	_	_	_	_	SpaceAfter=No
9	LED	LED	PROPN	NNP	Number=Sing	5	nmod	5:nmod:of	_
10	's	's	PART	POS	_	9	case	9:case	Entity=object-50)object-13)
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-32
# s_type = imp
# text = Bend four paperclips into legs.
# newpar = item (2 s)
1	Bend	bend	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:51->50
2	four	4	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	Entity=(object-51
3	paperclips	paperclip	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-51)
4	into	into	ADP	IN	_	5	case	5:case	_
5	legs	leg	NOUN	NNS	Number=Plur	1	obl	1:obl:into	Entity=(object-52)|SpaceAfter=No
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-33
# s_type = imp
# text = Cut the paperclips such that they look like legs of the robot.
# trailing_xml = <figure rend:::"PaperClipsAfter.jpeg"></figure><figure rend:::"PaperClipsBefore.jpeg"></figure>
1	Cut	cut	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:52->51
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-51
3	paperclips	paperclip	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-51)
4	such	such	SCONJ	JJ	Degree=Pos	7	mark	7:mark	Discourse=elaboration:53->52
5	that	that	SCONJ	IN	_	7	mark	7:mark	_
6	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	7	nsubj	7:nsubj	Entity=(object-51)
7	look	look	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:such_that	_
8	like	like	ADP	IN	_	9	case	9:case	_
9	legs	leg	NOUN	NNS	Number=Plur	7	obl	7:obl:like	Entity=(object-52
10	of	of	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-53
12	robot	robot	NOUN	NN	Number=Sing	9	nmod	9:nmod:of	Entity=object-52)object-53)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-34
# s_type = frag
# text = Solder on your motor’s wires to the battery holder.
# newpar = item (2 s)
1	Solder	solder	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:54->52|Entity=(person-45)
2	on	on	ADP	IN	_	6	case	6:case	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(object-54(object-55(person-5)
4-5	motor’s	_	_	_	_	_	_	_	_
4	motor	motor	NOUN	NN	Number=Sing	6	nmod:poss	6:nmod:poss	_
5	’s	's	PART	POS	_	4	case	4:case	Entity=object-55)
6	wires	wire	NOUN	NNS	Number=Plur	1	obl	1:obl:on	Entity=object-54)
7	to	to	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-56
9	battery	battery	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(object-34)
10	holder	holder	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=object-56)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-35
# s_type = imp
# text = Solder the vibrating motor's wires to the positive and the negative wire of the battery holder.
# trailing_xml = <figure rend:::"SimpleRobotSolderMotor.jpeg"></figure>
1	Solder	solder	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:55->54
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-54
3	vibrating	vibrate	VERB	VBG	VerbForm=Ger	4	amod	4:amod	Entity=(object-55
4-5	motor's	_	_	_	_	_	_	_	_
4	motor	motor	NOUN	NN	Number=Sing	6	nmod:poss	6:nmod:poss	_
5	's	's	PART	POS	_	4	case	4:case	Entity=object-55)
6	wires	wire	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-54)
7	to	to	ADP	IN	_	13	case	13:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-57
9	positive	positive	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
10	and	and	CCONJ	CC	_	13	cc	13:cc	_
11	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	_
12	negative	negative	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
13	wire	wire	NOUN	NN	Number=Sing	1	obl	1:obl:to	_
14	of	of	ADP	IN	_	17	case	17:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(object-56
16	battery	battery	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(object-34)
17	holder	holder	NOUN	NN	Number=Sing	13	nmod	13:nmod:of	Entity=object-57)object-56)|SpaceAfter=No
18	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-36
# s_type = imp
# text = Hot glue the motor to the battery holder.
# newpar = item (3 s)
1	Hot	hot	ADJ	JJ	Degree=Pos	2	advmod	2:advmod	Discourse=sequence:56->55
2	glue	glue	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-55
4	motor	motor	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=object-55)
5	to	to	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-56
7	battery	battery	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-34)
8	holder	holder	NOUN	NN	Number=Sing	2	obl	2:obl:to	Entity=object-56)|SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_everyday-37
# s_type = imp
# text = Hot glue the motor on top of the battery holder.
1	Hot	hot	ADJ	JJ	Degree=Pos	2	advmod	2:advmod	Discourse=joint:57->56
2	glue	glue	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-55
4	motor	motor	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=object-55)
5	on	on	ADP	IN	_	6	case	6:case	_
6	top	top	NOUN	NN	Number=Sing	2	obl	2:obl:on	_
7	of	of	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-56
9	battery	battery	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(object-34)
10	holder	holder	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=object-56)|SpaceAfter=No
11	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_everyday-38
# s_type = imp
# text = Attach the battery holder's wires to the motor pins.
# trailing_xml = <figure rend:::"SimpleRobotGlueMotorBattery2.jpeg"></figure><figure rend:::"SimpleRobotGlueMotorBattery1.jpeg"></figure>
1	Attach	attach	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:58->57
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-54
3	battery	battery	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-56(object-34)
4-5	holder's	_	_	_	_	_	_	_	_
4	holder	holder	NOUN	NN	Number=Sing	6	nmod:poss	6:nmod:poss	_
5	's	's	PART	POS	_	4	case	4:case	Entity=object-56)
6	wires	wire	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-54)
7	to	to	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-50
9	motor	motor	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(object-55)
10	pins	pin	NOUN	NNS	Number=Plur	1	obl	1:obl:to	Entity=object-50)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-39
# s_type = imp
# text = Finish your robot.
# newpar = item (4 s)
1	Finish	finish	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:59->58
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-53(person-5)
3	robot	robot	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-53)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-40
# s_type = imp
# text = Prop up your robot with the paper clip legs.
1	Prop	prop	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:60->59
2	up	up	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(object-53(person-5)
4	robot	robot	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-53)
5	with	with	ADP	IN	_	9	case	9:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-52
7	paper	paper	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-58(object-59)
8	clip	clip	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=object-58)
9	legs	leg	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=object-52)|SpaceAfter=No
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-41
# s_type = imp
# text = Put the batteries in and watch your little robot light up and move.
1	Put	put	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:61->60
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-36
3	batteries	battery	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-36)
4	in	in	ADP	RP	_	1	compound:prt	1:compound:prt	_
5	and	and	CCONJ	CC	_	6	cc	6:cc	Discourse=joint:62->61
6	watch	watch	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(object-53(person-5)
8	little	little	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	robot	robot	NOUN	NN	Number=Sing	6	obj	6:obj|10:nsubj:xsubj|13:nsubj:xsubj	Entity=object-53)
10	light	light	VERB	VB	VerbForm=Inf	6	xcomp	6:xcomp	_
11	up	up	ADP	RP	_	10	compound:prt	10:compound:prt	_
12	and	and	CCONJ	CC	_	13	cc	13:cc	_
13	move	move	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	10	conj	6:xcomp|10:conj:and	SpaceAfter=No
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-42
# s_type = imp
# text = Keep it on a flat, smooth surface so it doesn't fall over.
# trailing_xml = <figure rend:::"WikiHowRobot.jpeg"></figure>
1	Keep	keep	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:63->61
2	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	1	obj	1:obj	Entity=(object-53)
3	on	on	ADP	IN	_	8	case	8:case	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(place-60
5	flat	flat	ADJ	JJ	Degree=Pos	8	amod	8:amod	SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	smooth	smooth	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	surface	surface	NOUN	NN	Number=Sing	1	obl	1:obl:on	Entity=place-60)
9	so	so	SCONJ	IN	_	13	mark	13:mark	Discourse=purpose:64->63
10	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	13	nsubj	13:nsubj	Entity=(object-53)
11-12	doesn't	_	_	_	_	_	_	_	_
11	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux	13:aux	_
12	n't	not	ADV	RB	Polarity=Neg	13	advmod	13:advmod	_
13	fall	fall	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:so	_
14	over	over	ADP	RP	_	13	compound:prt	13:compound:prt	SpaceAfter=No
15	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-43
# s_type = frag
# text = Tips
# newpar = head (1 s)
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:65->66|Entity=(abstract-61)

# sent_id = AMALGUM_whow_everyday-44
# s_type = imp
# text = For your safety, wear safety goggles and use a fume extractor while soldering.
# newpar = list type:::"unordered" (3 s)
# newpar1 = item (1 s)
1	For	for	ADP	IN	_	3	case	3:case	Discourse=joint:66->7
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-62(person-5)
3	safety	safety	NOUN	NN	Number=Sing	5	obl	5:obl:for	Entity=abstract-62)|SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	wear	wear	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
6	safety	safety	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(object-63(abstract-62)
7	goggles	goggle	NOUN	NNS	Number=Plur	5	obj	5:obj	Entity=object-63)
8	and	and	CCONJ	CC	_	9	cc	9:cc	Discourse=joint:67->66
9	use	use	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	5	conj	5:conj:and	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(substance-64
11	fume	fume	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-65)
12	extractor	extractor	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=substance-64)
13	while	while	SCONJ	IN	_	14	mark	14:mark	Discourse=circumstance:68->67
14	soldering	solder	VERB	VBG	VerbForm=Ger	9	advcl	9:advcl:while	SpaceAfter=No
15	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_everyday-45
# s_type = imp
# text = Add some heat shrink tubing to the legs for extra pizazz.
# newpar = item (1 s)
1	Add	add	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:69->66
2	some	some	DET	DT	_	5	det	5:det	Entity=(object-66
3	heat	heat	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-67(substance-68)
4	shrink	shrink	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=object-67)
5	tubing	tubing	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-66)
6	to	to	ADP	IN	_	8	case	8:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-52
8	legs	leg	NOUN	NNS	Number=Plur	1	obl	1:obl:to	Entity=object-52)
9	for	for	ADP	IN	_	11	case	11:case	_
10	extra	extra	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(object-69
11	pizazz	pizazz	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=object-69)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_everyday-46
# s_type = sub
# text = You might want to ask a grown up to help you in case there are some things you can't do on your own.
# newpar = item (1 s)
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj|5:nsubj:xsubj	Discourse=joint:70->69|Entity=(person-5)
2	might	might	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	want	want	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	ask	ask	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	_
7	grown	grow	VERB	VBN	Tense=Past|VerbForm=Part	5	obj	5:obj	_
8	up	up	ADP	RP	_	7	compound:prt	7:compound:prt	_
9	to	to	PART	TO	_	10	mark	10:mark	_
10	help	help	VERB	VB	VerbForm=Inf	5	advcl	5:advcl:to	_
11	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	10	obj	10:obj	Entity=(person-5)
12	in	in	SCONJ	IN	_	15	mark	15:mark	Discourse=joint:71->70
13	case	case	NOUN	NN	Number=Sing	12	fixed	12:fixed	Discourse=joint:72->71
14	there	there	PRON	EX	_	15	expl	15:expl	_
15	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:in_case	_
16	some	some	DET	DT	_	17	det	17:det	Entity=(abstract-70
17	things	thing	NOUN	NNS	Number=Plur	15	nsubj	15:nsubj	_
18	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	21	nsubj	21:nsubj	Discourse=elaboration:73->72|Entity=(person-5)
19-20	can't	_	_	_	_	_	_	_	_
19	ca	can	AUX	MD	VerbForm=Fin	21	aux	21:aux	_
20	n't	not	ADV	RB	Polarity=Neg	21	advmod	21:advmod	_
21	do	do	VERB	VB	VerbForm=Inf	17	acl:relcl	17:acl:relcl	_
22	on	on	ADP	IN	_	24	case	24:case	_
23	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	24	nmod:poss	24:nmod:poss	Entity=(person-5)
24	own	own	ADJ	JJ	Degree=Pos	21	obl	21:obl:on	Entity=abstract-70)|SpaceAfter=No
25	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_everyday-47
# s_type = frag
# text = Warnings
# newpar = head (1 s)
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:74->78|Entity=(abstract-71)

# sent_id = AMALGUM_whow_everyday-48
# s_type = imp
# text = Be careful when using a hot-glue gun and soldering iron
# newpar = list type:::"unordered" (1 s)
# newpar1 = item (1 s)
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=preparation:75->78
2	careful	careful	ADJ	JJ	Degree=Pos	0	root	0:root	_
3	when	when	SCONJ	WRB	PronType=Int	4	mark	4:mark	Discourse=circumstance:76->75
4	using	use	VERB	VBG	VerbForm=Ger	2	advcl	2:advcl:when	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(object-72
6	hot-glue	hot-glue	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	gun	gun	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-72)
8	and	and	CCONJ	CC	_	10	cc	10:cc	_
9	soldering	soldering	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(substance-73(animal-74)
10	iron	iron	NOUN	NN	Number=Sing	7	conj	4:obj|7:conj:and	Entity=substance-73)

# sent_id = AMALGUM_whow_everyday-49
# s_type = frag
# text = Things You'll Need
# newpar = head (1 s)
1	Things	thing	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:77->78|Entity=(object-75
2-3	You'll	_	_	_	_	_	_	_	_
2	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-5)
3	'll	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	Need	need	VERB	VB	VerbForm=Inf	1	acl:relcl	1:acl:relcl	Entity=object-75)

# sent_id = AMALGUM_whow_everyday-50
# s_type = frag
# text = 2 LED crystals
# newpar = list type:::"unordered" (7 s)
# newpar1 = item (1 s)
1	2	2	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	Discourse=joint:78->66|Entity=(object-76
2	LED	LED	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(object-13)
3	crystals	crystal	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-76)

# sent_id = AMALGUM_whow_everyday-51
# s_type = frag
# text = 4 Jumbo paperclips
# newpar = item (1 s)
1	4	4	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	Discourse=joint:79->78|Entity=(object-51
2	Jumbo	jumbo	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(person-77)
3	paperclips	paperclip	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-51)

# sent_id = AMALGUM_whow_everyday-52
# s_type = ger
# text = Soldering iron
# newpar = item (1 s)
1	Soldering	solder	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=elaboration:80->79
2	iron	iron	NOUN	NN	Number=Sing	1	flat	1:flat	_

# sent_id = AMALGUM_whow_everyday-53
# s_type = frag
# text = 2 AA batteries
# newpar = item (1 s)
1	2	2	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	Discourse=joint:81->79|Entity=(object-36
2	AA	AA	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(abstract-78)
3	batteries	battery	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-36)

# sent_id = AMALGUM_whow_everyday-54
# s_type = frag
# text = Battery holder
# newpar = item (1 s)
1	Battery	battery	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:82->81|Entity=(object-56(object-34)
2	holder	holder	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-56)

# sent_id = AMALGUM_whow_everyday-55
# s_type = frag
# text = Pager motor (small vibrating motor found in cell-phones)
# newpar = item (1 s)
1	Pager	pager	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:83->82|Entity=(object-55(person-79)
2	motor	motor	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-55)
3	(	(	PUNCT	-LRB-	_	6	punct	6:punct	Discourse=elaboration:84->83|SpaceAfter=No
4	small	small	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(object-55
5	vibrating	vibrate	VERB	VBG	VerbForm=Ger	6	amod	6:amod	_
6	motor	motor	NOUN	NN	Number=Sing	2	appos	2:appos	_
7	found	find	VERB	VBN	Tense=Past|VerbForm=Part	6	acl	6:acl	Discourse=elaboration:85->84
8	in	in	ADP	IN	_	9	case	9:case	_
9	cell-phones	cell-phone	NOUN	NNS	Number=Plur	7	obl	7:obl:in	Entity=object-55)(object-80)|SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_everyday-56
# s_type = frag
# text = 100Ω resistor
# newpar = item (1 s)
1	100Ω	100Ω	NUM	CD	NumForm=Word|NumType=Card	2	nummod	2:nummod	Discourse=joint:86->83|Entity=(abstract-81
2	resistor	resistor	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-81)

