# meta::id = AMALGUM_whow_cars
# meta::title = Drive to Help Someone Follow You
# meta::shortTitle = cars
# meta::type = whow
# meta::dateCollected = 2019-11-06
# meta::dateCreated = 2013-12-20
# meta::dateModified = 2018-07-29
# meta::sourceURL = https://www.wikihow.com/Drive-to-Help-Someone-Follow-You
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_whow_cars
# sent_id = AMALGUM_whow_cars-1
# s_type = imp
# text = Drive to Help Someone Follow You
# newpar = head (1 s)
1	Drive	drive	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->2
2	to	to	PART	TO	_	3	mark	3:mark	_
3	Help	help	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:to	_
4	Someone	someone	NOUN	NN	Number=Sing	3	obj	3:obj|5:nsubj:xsubj	Entity=(person-1)
5	Follow	follow	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	You	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	5	obj	5:obj	Entity=(person-2)|SpaceAfter=No

# sent_id = AMALGUM_whow_cars-2
# s_type = decl
# text = The whole group is going out to eat, and there are enough of you that you'll be in more than one car.
# newpar = p (3 s)
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=ROOT:2|Entity=(person-3
2	whole	whole	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	group	group	NOUN	NN	Number=Sing	5	nsubj	5:nsubj|8:nsubj:xsubj	Entity=person-3)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
5	going	go	VERB	VBG	Tense=Pres|VerbForm=Part	0	root	0:root	_
6	out	out	ADV	RB	_	5	advmod	5:advmod	_
7	to	to	PART	TO	_	8	mark	8:mark	_
8	eat	eat	VERB	VB	VerbForm=Inf	5	xcomp	5:xcomp	SpaceAfter=No
9	,	,	PUNCT	,	_	12	punct	12:punct	_
10	and	and	CCONJ	CC	_	12	cc	12:cc	Discourse=joint:3->2
11	there	there	PRON	EX	Case=Nom	12	expl	12:expl	_
12	are	be	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	conj	5:conj:and	_
13	enough	enough	ADJ	JJ	Degree=Pos	12	nsubj	12:nsubj	_
14	of	of	ADP	IN	_	15	case	15:case	_
15	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	13	nmod	13:nmod:of	Entity=(person-2)
16	that	that	SCONJ	IN	_	24	mark	24:mark	Discourse=elaboration:4->3
17-18	you'll	_	_	_	_	_	_	_	_
17	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	24	nsubj	24:nsubj	Entity=(person-2)
18	'll	will	AUX	MD	VerbForm=Fin	24	aux	24:aux	_
19	be	be	AUX	VB	VerbForm=Inf	24	cop	24:cop	_
20	in	in	ADP	IN	_	24	case	24:case	_
21	more	more	ADV	RBR	Degree=Cmp	23	advmod	23:advmod	Entity=(object-4
22	than	than	ADP	IN	_	21	fixed	21:fixed	_
23	one	one	NUM	CD	NumForm=Word|NumType=Card	24	nummod	24:nummod	_
24	car	car	NOUN	NN	Number=Sing	12	csubj	12:csubj	Entity=object-4)|SpaceAfter=No
25	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_cars-3
# s_type = decl
# text = To get there together, you'll lead the caravan and another car or cars will follow.
1	To	to	PART	TO	_	2	mark	2:mark	Discourse=elaboration:5->3
2	get	get	VERB	VB	VerbForm=Inf	8	advcl	8:advcl:to	_
3	there	there	ADV	RB	PronType=Dem	2	advmod	2:advmod	_
4	together	together	ADV	RB	Degree=Pos	2	advmod	2:advmod	SpaceAfter=No
5	,	,	PUNCT	,	_	2	punct	2:punct	_
6-7	you'll	_	_	_	_	_	_	_	_
6	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	8	nsubj	8:nsubj	Discourse=joint:6->5|Entity=(person-2)
7	'll	will	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
8	lead	lead	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-5
10	caravan	caravan	NOUN	NN	Number=Sing	8	obj	8:obj	Entity=object-5)
11	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:7->6
12	another	another	DET	DT	_	13	det	13:det	Entity=(object-4
13	car	car	NOUN	NN	Number=Sing	17	nsubj	17:nsubj	Entity=object-4)
14	or	or	CCONJ	CC	_	15	cc	15:cc	_
15	cars	car	NOUN	NNS	Number=Plur	13	conj	13:conj:or|17:nsubj	Entity=(object-6)
16	will	will	AUX	MD	VerbForm=Fin	17	aux	17:aux	_
17	follow	follow	VERB	VB	VerbForm=Inf	8	conj	8:conj:and	SpaceAfter=No
18	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_cars-4
# s_type = decl
# text = If you're leading, there are some simple things you can do to help those following to keep up.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:8->9
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-2)|SpaceAfter=No
3	're	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	leading	lead	VERB	VBG	Tense=Pres|VerbForm=Part	7	advcl	7:advcl:if	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	there	there	PRON	EX	_	7	expl	7:expl	Discourse=elaboration:9->3
7	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
8	some	some	DET	DT	_	10	det	10:det	Entity=(abstract-7
9	simple	simple	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	things	thing	NOUN	NNS	Number=Plur	7	nsubj	7:nsubj	_
11	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	13	nsubj	13:nsubj	Discourse=elaboration:10->9|Entity=(person-2)
12	can	can	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
13	do	do	VERB	VB	VerbForm=Inf	10	acl:relcl	10:acl:relcl	Entity=abstract-7)
14	to	to	PART	TO	_	15	mark	15:mark	Discourse=purpose:11->9
15	help	help	VERB	VB	VerbForm=Inf	13	advcl	13:advcl:to	_
16	those	this	PRON	DT	Number=Plur|PronType=Dem	15	obj	15:obj	Entity=(person-3
17	following	follow	VERB	VBG	VerbForm=Ger	16	acl	16:acl	_
18	to	to	PART	TO	_	19	mark	19:mark	_
19	keep	keep	VERB	VB	VerbForm=Inf	17	xcomp	17:xcomp	_
20	up	up	ADP	RP	_	19	compound:prt	19:compound:prt	Entity=person-3)|SpaceAfter=No
21	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_cars-5
# s_type = frag
# text = Steps
# newpar = head (1 s)
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:12->13|Entity=(abstract-8)

# sent_id = AMALGUM_whow_cars-6
# s_type = imp
# text = Prepare for possible separation.
# newpar = list type:::"ordered" (26 s)
# newpar1 = item (8 s)
1	Prepare	prepare	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:13->9
2	for	for	ADP	IN	_	4	case	4:case	_
3	possible	possible	ADJ	JJ	Degree=Pos	4	amod	4:amod	Entity=(event-9
4	separation	separation	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=event-9)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-7
# s_type = imp
# text = Take a count of all of the individuals in the group.
# newpar = list type:::"unordered" (7 s)
# newpar1 = item (3 s)
1	Take	take	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:14->13
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-10
3	count	count	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	all	all	PRON	DT	_	3	nmod	3:nmod:of	Entity=(person-11
6	of	of	ADP	IN	_	8	case	8:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	_
8	individuals	individual	NOUN	NNS	Number=Plur	5	nmod	5:nmod:of	_
9	in	in	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(person-3
11	group	group	NOUN	NN	Number=Sing	8	nmod	8:nmod:in	Entity=abstract-10)person-11)person-3)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-8
# s_type = decl
# text = You will use this again when you get ready to depart from any rest or fuel stops along the way and, again, before you start the return trip home.
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:15->14|Entity=(person-2)
2	will	will	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	use	use	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	this	this	PRON	DT	Number=Sing|PronType=Dem	3	obj	3:obj	Entity=(event-9)
5	again	again	ADV	RB	Degree=Pos	3	advmod	3:advmod	_
6	when	when	SCONJ	WRB	PronType=Int	8	mark	8:mark	Discourse=circumstance:16->15
7	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	8	nsubj	8:nsubj|9:nsubj:xsubj|11:nsubj:xsubj	Entity=(person-2)
8	get	get	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	advcl	3:advcl:when	_
9	ready	ready	ADJ	JJ	Degree=Pos	8	xcomp	8:xcomp	_
10	to	to	PART	TO	_	11	mark	11:mark	_
11	depart	depart	VERB	VB	VerbForm=Inf	9	xcomp	9:xcomp	_
12	from	from	ADP	IN	_	14	case	14:case	_
13	any	any	DET	DT	_	14	det	14:det	Entity=(event-12
14	rest	rest	NOUN	NN	Number=Sing	11	obl	11:obl:from	Entity=event-12)
15	or	or	CCONJ	CC	_	17	cc	17:cc	_
16	fuel	fuel	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(event-13(substance-14)
17	stops	stop	NOUN	NNS	Number=Plur	14	conj	11:obl:from|14:conj:or	_
18	along	along	ADP	IN	_	20	case	20:case	_
19	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	_
20	way	way	NOUN	NN	Number=Sing	17	nmod	17:nmod:along	Entity=event-13)
21	and	and	CCONJ	CC	_	27	cc	27:cc	Discourse=joint:17->16|SpaceAfter=No
22	,	,	PUNCT	,	_	21	punct	21:punct	_
23	again	again	ADV	RB	Degree=Pos	3	advmod	3:advmod	SpaceAfter=No
24	,	,	PUNCT	,	_	27	punct	27:punct	_
25	before	before	SCONJ	IN	_	27	mark	27:mark	Discourse=circumstance:18->17
26	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	27	nsubj	27:nsubj	Entity=(person-2)
27	start	start	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	8	advcl	8:advcl:before	_
28	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(event-15
29	return	return	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(event-16)
30	trip	trip	NOUN	NN	Number=Sing	27	obj	27:obj	Entity=event-15)
31	home	home	ADV	RB	Degree=Pos	27	advmod	27:advmod	SpaceAfter=No
32	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_cars-9
# s_type = decl
# text = The count will help ensure that everybody is on board the caravan before all departures.
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=sequence:19->14|Entity=(abstract-10
2	count	count	NOUN	NN	Number=Sing	4	nsubj	4:nsubj|5:nsubj:xsubj	Entity=abstract-10)
3	will	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	help	help	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	ensure	ensure	VERB	VB	VerbForm=Inf	4	xcomp	4:xcomp	_
6	that	that	SCONJ	IN	_	12	mark	12:mark	_
7	everybody	everybody	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	Entity=(person-17)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	12:cop	_
9	on	on	ADP	IN	_	12	case	12:case	_
10	board	board	NOUN	NN	Number=Sing	9	fixed	9:fixed	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-5
12	caravan	caravan	NOUN	NN	Number=Sing	5	ccomp	5:ccomp	_
13	before	before	ADP	IN	_	15	case	15:case	_
14	all	all	DET	DT	_	15	det	15:det	Entity=(event-18
15	departures	departure	NOUN	NNS	Number=Plur	12	nmod	12:nmod:before	Entity=object-5)event-18)|SpaceAfter=No
16	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_cars-10
# s_type = imp
# text = Before you set out, make sure that a communications coordinator has a way to contact at least one person in each vehicle.
# newpar = item (4 s)
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:20->22
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-2)
3	set	set	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	6	advcl	6:advcl:before	_
4	out	out	ADP	RP	_	3	compound:prt	3:compound:prt	SpaceAfter=No
5	,	,	PUNCT	,	_	3	punct	3:punct	_
6	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:21->22
7	sure	sure	ADJ	JJ	Degree=Pos	6	xcomp	6:xcomp	_
8	that	that	SCONJ	IN	_	12	mark	12:mark	Discourse=sequence:22->19
9	a	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(person-19
10	communications	communication	NOUN	NNS	Number=Plur	11	compound	11:compound	Entity=(abstract-20)
11	coordinator	coordinator	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	Entity=person-19)
12	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	ccomp	7:ccomp	_
13	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(abstract-21
14	way	way	NOUN	NN	Number=Sing	12	obj	12:obj	_
15	to	to	PART	TO	_	16	mark	16:mark	Discourse=elaboration:23->22
16	contact	contact	VERB	VB	VerbForm=Inf	14	acl	14:acl:to	_
17	at	at	ADP	IN	_	18	case	18:case	_
18	least	least	ADJ	JJS	Degree=Sup	19	advmod	19:advmod	Entity=(person-22
19	one	one	NUM	CD	NumForm=Word|NumType=Card	20	nummod	20:nummod	_
20	person	person	NOUN	NN	Number=Sing	16	obj	16:obj	Entity=person-22)
21	in	in	ADP	IN	_	23	case	23:case	_
22	each	each	DET	DT	_	23	det	23:det	Entity=(object-23
23	vehicle	vehicle	NOUN	NN	Number=Sing	16	obl	16:obl:in	Entity=abstract-21)object-23)|SpaceAfter=No
24	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_cars-11
# s_type = decl
# text = Cell phone numbers can be written on a sheet that is passed around or they can be programmed into the coordinator's phone.
1	Cell	cell	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=sequence:24->22|Entity=(person-24(object-25
2	phone	phone	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=object-25)
3	numbers	number	NOUN	NNS	Number=Plur	6	nsubj:pass	6:nsubj:pass	Entity=person-24)
4	can	can	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
5	be	be	AUX	VB	VerbForm=Inf	6	aux:pass	6:aux:pass	_
6	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
7	on	on	ADP	IN	_	9	case	9:case	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-26
9	sheet	sheet	NOUN	NN	Number=Sing	6	obl	6:obl:on|12:nsubj:pass	_
10	that	that	PRON	WDT	PronType=Rel	12	nsubj:pass	9:ref	Discourse=elaboration:25->24
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	12:aux:pass	_
12	passed	pass	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	acl:relcl	9:acl:relcl	_
13	around	around	ADV	RB	Degree=Pos	12	advmod	12:advmod	Entity=object-26)
14	or	or	CCONJ	CC	_	18	cc	18:cc	Discourse=contrast:26->25
15	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	18	nsubj:pass	18:nsubj:pass	Entity=(person-24)
16	can	can	AUX	MD	VerbForm=Fin	18	aux	18:aux	_
17	be	be	AUX	VB	VerbForm=Inf	18	aux:pass	18:aux:pass	_
18	programmed	programme	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	conj	6:conj:or	_
19	into	into	ADP	IN	_	23	case	23:case	_
20	the	the	DET	DT	Definite=Def|PronType=Art	21	det	21:det	Entity=(object-25
21-22	coordinator's	_	_	_	_	_	_	_	_
21	coordinator	coordinator	NOUN	NN	Number=Sing	23	nmod:poss	23:nmod:poss	Entity=(person-19
22	's	's	PART	POS	_	21	case	21:case	Entity=person-19)
23	phone	phone	NOUN	NN	Number=Sing	18	obl	18:obl:into	Entity=object-25)|SpaceAfter=No
24	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_cars-12
# s_type = decl
# text = It is helpful to verify that each number is correct before you leave.
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	expl	3:expl	Discourse=joint:27->24|Entity=(object-25)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	3:cop	_
3	helpful	helpful	ADJ	JJ	Degree=Pos	0	root	0:root	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	verify	verify	VERB	VB	VerbForm=Inf	3	csubj	3:csubj	_
6	that	that	SCONJ	IN	_	10	mark	10:mark	_
7	each	each	DET	DT	_	8	det	8:det	Entity=(abstract-27
8	number	number	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	Entity=abstract-27)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	10:cop	_
10	correct	correct	ADJ	JJ	Degree=Pos	5	ccomp	5:ccomp	_
11	before	before	SCONJ	IN	_	13	mark	13:mark	Discourse=circumstance:28->27
12	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	13	nsubj	13:nsubj	Entity=(person-2)
13	leave	leave	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:before	SpaceAfter=No
14	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_cars-13
# s_type = decl
# text = This process only takes a moment, but can save a lot of grief and aggravation down the road.
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	2:det	Discourse=joint:29->27|Entity=(event-28
2	process	process	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=event-28)
3	only	only	ADV	RB	_	4	advmod	4:advmod	_
4	takes	take	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(time-29
6	moment	moment	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=time-29)|SpaceAfter=No
7	,	,	PUNCT	,	_	10	punct	10:punct	_
8	but	but	CCONJ	CC	_	10	cc	10:cc	Discourse=contrast:30->29
9	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	save	save	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	4	conj	4:conj:but	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-30
12	lot	lot	NOUN	NN	Number=Sing	10	obj	10:obj	_
13	of	of	ADP	IN	_	14	case	14:case	_
14	grief	grief	NOUN	NN	Number=Sing	12	nmod	12:nmod:of	Entity=abstract-30)
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	aggravation	aggravation	NOUN	NN	Number=Sing	14	conj	12:nmod:of|14:conj:and	Entity=(event-31)
17	down	down	ADP	IN	_	19	case	19:case	_
18	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(place-32
19	road	road	NOUN	NN	Number=Sing	10	obl	10:obl:down	Entity=place-32)|SpaceAfter=No
20	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_cars-14
# s_type = imp
# text = Make sure each driver knows where the group is going.
# newpar = item (2 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:31->29
2	sure	sure	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	each	each	DET	DT	_	4	det	4:det	Entity=(person-33
4	driver	driver	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=person-33)
5	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	2:ccomp	_
6	where	where	SCONJ	WRB	PronType=Rel	5	obj	5:obj	Discourse=elaboration:32->31
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(person-3
8	group	group	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	Entity=person-3)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux	10:aux	_
10	going	go	VERB	VBG	Tense=Pres|VerbForm=Part	6	acl:relcl	6:acl:relcl	SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-15
# s_type = imp
# text = Before anyone drives off, discuss the address, the name of the restaurant (or other destination), and the intended route.
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=circumstance:33->34
2	anyone	anyone	NOUN	NN	Number=Sing	3	nsubj	3:nsubj	Entity=(person-34)
3	drives	drive	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	advcl	6:advcl:before	_
4	off	off	ADP	RP	_	3	compound:prt	3:compound:prt	SpaceAfter=No
5	,	,	PUNCT	,	_	3	punct	3:punct	_
6	discuss	discuss	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:34->31
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(place-35
8	address	address	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=place-35)|SpaceAfter=No
9	,	,	PUNCT	,	_	11	punct	11:punct	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-36
11	name	name	NOUN	NN	Number=Sing	8	conj	6:obj|8:conj:and	_
12	of	of	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(place-37
14	restaurant	restaurant	NOUN	NN	Number=Sing	11	nmod	11:nmod:of	Entity=place-37)
15	(	(	PUNCT	-LRB-	_	18	punct	18:punct	Discourse=elaboration:35->34|SpaceAfter=No
16	or	or	CCONJ	CC	_	18	cc	18:cc	_
17	other	other	ADJ	JJ	Degree=Pos	18	amod	18:amod	Entity=(place-38
18	destination	destination	NOUN	NN	Number=Sing	14	conj	11:nmod:of|14:conj:or	Entity=place-38)|SpaceAfter=No
19	)	)	PUNCT	-RRB-	_	18	punct	18:punct	Entity=abstract-36)|SpaceAfter=No
20	,	,	PUNCT	,	_	24	punct	24:punct	_
21	and	and	CCONJ	CC	_	24	cc	24:cc	Discourse=same_unit:36->34
22	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(place-39
23	intended	intend	VERB	VBN	Tense=Past|VerbForm=Part	24	amod	24:amod	_
24	route	route	NOUN	NN	Number=Sing	8	conj	6:obj|8:conj:and	Entity=place-39)|SpaceAfter=No
25	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_cars-16
# s_type = imp
# text = Put someone who knows the way into each car, even if they're not driving.
# newpar = item (2 s)
1	Put	put	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:37->34
2	someone	someone	NOUN	NN	Number=Sing	1	obj	1:obj|4:nsubj	Entity=(person-1
3	who	who	PRON	WP	PronType=Rel	4	nsubj	2:ref	Discourse=elaboration:38->37
4	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	acl:relcl	2:acl:relcl	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-21
6	way	way	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-21)
7	into	into	ADP	IN	_	9	case	9:case	_
8	each	each	DET	DT	_	9	det	9:det	Entity=(object-4
9	car	car	NOUN	NN	Number=Sing	4	obl	4:obl:into	Entity=person-1)object-4)|SpaceAfter=No
10	,	,	PUNCT	,	_	16	punct	16:punct	_
11	even	even	ADV	RB	_	16	advmod	16:advmod	Discourse=concession:39->38
12	if	if	SCONJ	IN	_	16	mark	16:mark	_
13	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	16	nsubj	16:nsubj	Entity=(person-24)|SpaceAfter=No
14	're	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	aux	16:aux	_
15	not	not	ADV	RB	Polarity=Neg	16	advmod	16:advmod	_
16	driving	drive	VERB	VBG	Tense=Pres|VerbForm=Part	1	advcl	1:advcl:if	SpaceAfter=No
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-17
# s_type = imp
# text = Alternatively, make sure there's a map or GPS in each car.
1	Alternatively	alternatively	ADV	RB	Degree=Pos	3	advmod	3:advmod	Discourse=sequence:40->37|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	sure	sure	ADJ	JJ	Degree=Pos	3	xcomp	3:xcomp	_
5-6	there's	_	_	_	_	_	_	_	_
5	there	there	PRON	EX	_	6	expl	6:expl	_
6	's	be	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	4:ccomp	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(object-40
8	map	map	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=object-40)
9	or	or	CCONJ	CC	_	10	cc	10:cc	_
10	GPS	GPS	NOUN	NN	Number=Sing	8	conj	6:nsubj|8:conj:or	Entity=(object-41
11	in	in	ADP	IN	_	13	case	13:case	_
12	each	each	DET	DT	_	13	det	13:det	Entity=(object-4
13	car	car	NOUN	NN	Number=Sing	8	nmod	8:nmod:in	Entity=object-41)object-4)|SpaceAfter=No
14	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_cars-18
# s_type = imp
# text = Allow time while leaving.
# newpar = item (3 s)
1	Allow	allow	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:41->40
2	time	time	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=(time-42)
3	while	while	SCONJ	IN	_	4	mark	4:mark	Discourse=circumstance:42->41
4	leaving	leave	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl:while	SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-19
# s_type = decl
# text = If two or more cars' worth of people have to leave together, there will likely be extra time involved in getting everyone into their respective cars, finding seat belts, and so on.
1	If	if	SCONJ	IN	_	10	mark	10:mark	Discourse=condition:43->44
2	two	2	NUM	CD	NumForm=Digit|NumType=Card	5	nummod	5:nummod	Entity=(object-43(object-6
3	or	or	CCONJ	CC	_	4	cc	4:cc	_
4	more	more	ADJ	JJR	Degree=Cmp	2	conj	2:conj:or|5:nummod	_
5-6	cars'	_	_	_	_	_	_	_	_
5	cars	car	NOUN	NNS	Number=Plur	7	nmod:poss	7:nmod:poss	_
6	'	's	PART	POS	_	5	case	5:case	Entity=object-6)
7	worth	worth	NOUN	NN	Number=Sing	10	nsubj	10:nsubj|12:nsubj:xsubj	_
8	of	of	ADP	IN	_	9	case	9:case	_
9	people	person	NOUN	NNS	Number=Plur	7	nmod	7:nmod:of	Entity=object-43)(abstract-44)
10	have	have	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	advcl	18:advcl:if	_
11	to	to	PART	TO	_	12	mark	12:mark	_
12	leave	leave	VERB	VB	VerbForm=Inf	10	xcomp	10:xcomp	_
13	together	together	ADV	RB	Degree=Pos	12	advmod	12:advmod	SpaceAfter=No
14	,	,	PUNCT	,	_	10	punct	10:punct	_
15	there	there	PRON	EX	_	18	expl	18:expl	Discourse=joint:44->41
16	will	will	AUX	MD	VerbForm=Fin	18	aux	18:aux	_
17	likely	likely	ADV	RB	Degree=Pos	18	advmod	18:advmod	_
18	be	be	VERB	VB	VerbForm=Inf	0	root	0:root	_
19	extra	extra	ADJ	JJ	Degree=Pos	20	amod	20:amod	Entity=(time-42
20	time	time	NOUN	NN	Number=Sing	18	nsubj	18:nsubj	_
21	involved	involve	VERB	VBN	Tense=Past|VerbForm=Part	20	acl	20:acl	Entity=time-42)
22	in	in	SCONJ	IN	_	23	mark	23:mark	Discourse=circumstance:45->44
23	getting	get	VERB	VBG	VerbForm=Ger	21	advcl	21:advcl:in	_
24	everyone	everyone	NOUN	NN	Number=Sing	23	obj	23:obj	Entity=(person-45)
25	into	into	ADP	IN	_	28	case	28:case	_
26	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	28	nmod:poss	28:nmod:poss	Entity=(object-6(person-45)
27	respective	respective	ADJ	JJ	Degree=Pos	28	amod	28:amod	_
28	cars	car	NOUN	NNS	Number=Plur	23	obl	23:obl:into	Entity=object-6)|SpaceAfter=No
29	,	,	PUNCT	,	_	30	punct	30:punct	_
30	finding	find	VERB	VBG	VerbForm=Ger	23	conj	21:advcl:in|23:conj:and	Discourse=elaboration:46->45
31	seat	seat	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=(object-46(object-47)
32	belts	belt	NOUN	NNS	Number=Plur	30	obj	30:obj	Entity=object-46)|SpaceAfter=No
33	,	,	PUNCT	,	_	35	punct	35:punct	_
34	and	and	CCONJ	CC	_	35	cc	35:cc	_
35	so	so	ADV	RB	_	23	conj	21:advcl:in|23:conj:and	_
36	on	on	ADV	RB	Degree=Pos	35	advmod	35:advmod	SpaceAfter=No
37	.	.	PUNCT	.	_	18	punct	18:punct	_

# sent_id = AMALGUM_whow_cars-20
# s_type = imp
# text = Be patient, and don't drive off before the cars following you are ready.
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=joint:47->44
2	patient	patient	ADJ	JJ	Degree=Pos	0	root	0:root	SpaceAfter=No
3	,	,	PUNCT	,	_	7	punct	7:punct	_
4	and	and	CCONJ	CC	_	7	cc	7:cc	Discourse=joint:48->47
5-6	don't	_	_	_	_	_	_	_	_
5	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	7:aux	_
6	n't	not	ADV	RB	Polarity=Neg	7	advmod	7:advmod	_
7	drive	drive	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	2	conj	2:conj:and	_
8	off	off	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
9	before	before	SCONJ	IN	_	15	mark	15:mark	Discourse=circumstance:49->48
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-6
11	cars	car	NOUN	NNS	Number=Plur	15	nsubj	15:nsubj	_
12	following	follow	VERB	VBG	VerbForm=Ger	11	acl	11:acl	Discourse=elaboration:50->49
13	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	12	obj	12:obj	Entity=object-6)(person-2)
14	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	15	cop	15:cop	_
15	ready	ready	ADJ	JJ	Degree=Pos	7	advcl	7:advcl:before	SpaceAfter=No
16	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_cars-21
# s_type = imp
# text = Drive at a moderate speed.
# newpar = item (2 s)
1	Drive	drive	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:51->47
2	at	at	ADP	IN	_	5	case	5:case	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(abstract-48
4	moderate	moderate	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	speed	speed	NOUN	NN	Number=Sing	1	obl	1:obl:at	Entity=abstract-48)|SpaceAfter=No
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-22
# s_type = decl
# text = You don't have to go far below the speed limit, but don't go racing ahead, either.
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj|6:nsubj:xsubj	Discourse=concession:52->53|Entity=(person-2)
2-3	don't	_	_	_	_	_	_	_	_
2	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
3	n't	not	ADV	RB	Polarity=Neg	4	advmod	4:advmod	_
4	have	have	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	to	to	PART	TO	_	6	mark	6:mark	_
6	go	go	VERB	VB	VerbForm=Inf	4	xcomp	4:xcomp	_
7	far	far	ADV	RB	Degree=Pos	6	advmod	6:advmod	_
8	below	below	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-49
10	speed	speed	NOUN	NN	Number=Sing	11	compound	11:compound	_
11	limit	limit	NOUN	NN	Number=Sing	6	obl	6:obl:below	Entity=abstract-49)|SpaceAfter=No
12	,	,	PUNCT	,	_	16	punct	16:punct	_
13	but	but	CCONJ	CC	_	16	cc	16:cc	Discourse=elaboration:53->51
14-15	don't	_	_	_	_	_	_	_	_
14	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	aux	16:aux	_
15	n't	not	ADV	RB	Polarity=Neg	16	advmod	16:advmod	_
16	go	go	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	4	conj	4:conj:but	_
17	racing	race	VERB	VBG	VerbForm=Ger	16	xcomp	16:xcomp	_
18	ahead	ahead	ADV	RB	Degree=Pos	17	advmod	17:advmod	SpaceAfter=No
19	,	,	PUNCT	,	_	20	punct	20:punct	_
20	either	either	ADV	RB	_	16	advmod	16:advmod	SpaceAfter=No
21	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_cars-23
# s_type = imp
# text = Signal your intentions well in advance.
# newpar = item (2 s)
1	Signal	signal	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:54->56
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-50(person-2)
3	intentions	intention	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-50)
4	well	well	ADV	RB	Degree=Pos	1	advmod	1:advmod	_
5	in	in	ADP	IN	_	6	case	6:case	_
6	advance	advance	NOUN	NN	Number=Sing	1	obl	1:obl:in	SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-24
# s_type = imp
# text = Even if you're sometimes lazy about signalling, make sure you use your turn signals for this trip.
1	Even	even	ADV	RB	_	6	advmod	6:advmod	Discourse=condition:55->56
2	if	if	SCONJ	IN	_	6	mark	6:mark	_
3	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	6	nsubj	6:nsubj	Entity=(person-2)|SpaceAfter=No
4	're	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	sometimes	sometimes	ADV	RB	_	6	advmod	6:advmod	_
6	lazy	lazy	ADJ	JJ	Degree=Pos	10	advcl	10:advcl:if	_
7	about	about	SCONJ	IN	_	8	mark	8:mark	_
8	signalling	signal	VERB	VBG	VerbForm=Ger	6	advcl	6:advcl:about	SpaceAfter=No
9	,	,	PUNCT	,	_	6	punct	6:punct	_
10	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:56->53
11	sure	sure	ADJ	JJ	Degree=Pos	10	xcomp	10:xcomp	_
12	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	13	nsubj	13:nsubj	Entity=(person-2)
13	use	use	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	11	ccomp	11:ccomp	_
14	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	16	nmod:poss	16:nmod:poss	Entity=(abstract-51(person-2)
15	turn	turn	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-52)
16	signals	signal	NOUN	NNS	Number=Plur	13	obj	13:obj	Entity=abstract-51)
17	for	for	ADP	IN	_	19	case	19:case	_
18	this	this	DET	DT	Number=Sing|PronType=Dem	19	det	19:det	Entity=(event-15
19	trip	trip	NOUN	NN	Number=Sing	13	obl	13:obl:for	Entity=event-15)|SpaceAfter=No
20	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_whow_cars-25
# s_type = imp
# text = Make lane changes with plenty of time and room to spare.
# newpar = item (1 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:57->56
2	lane	lane	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(abstract-53(place-54)
3	changes	change	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-53)
4	with	with	ADP	IN	_	5	case	5:case	_
5	plenty	plenty	NOUN	NN	Number=Sing	1	obl	1:obl:with	Entity=(place-55
6	of	of	ADP	IN	_	7	case	7:case	_
7	time	time	NOUN	NN	Number=Sing	5	nmod	5:nmod:of	Entity=(time-42)
8	and	and	CCONJ	CC	_	9	cc	9:cc	_
9	room	room	NOUN	NN	Number=Sing	7	conj	5:nmod:of|7:conj:and	Entity=(place-56
10	to	to	PART	TO	_	11	mark	11:mark	Discourse=purpose:58->57
11	spare	spare	VERB	VB	VerbForm=Inf	9	acl	9:acl:to	Entity=place-55)place-56)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-26
# s_type = imp
# text = Anticipate stoplights and stop if you think they will turn red before you or the following cars get through them.
# newpar = item (2 s)
1	Anticipate	anticipate	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:59->57
2	stoplights	stoplight	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=(event-57)
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=joint:60->59
4	stop	stop	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
5	if	if	SCONJ	IN	_	7	mark	7:mark	Discourse=condition:61->62
6	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	7	nsubj	7:nsubj	Entity=(person-2)
7	think	think	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	advcl	4:advcl:if	_
8	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	10	nsubj	10:nsubj	Discourse=same_unit:62->60|Entity=(event-57)
9	will	will	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	turn	turn	VERB	VB	VerbForm=Inf	7	ccomp	7:ccomp	_
11	red	red	ADJ	JJ	Degree=Pos	10	obj	10:obj	_
12	before	before	SCONJ	IN	_	18	mark	18:mark	Discourse=circumstance:63->62
13	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	18	nsubj	18:nsubj	Entity=(person-2)
14	or	or	CCONJ	CC	_	17	cc	17:cc	_
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(object-6
16	following	follow	VERB	VBG	VerbForm=Ger	17	amod	17:amod	_
17	cars	car	NOUN	NNS	Number=Plur	13	conj	13:conj:or|18:nsubj	Entity=object-6)
18	get	get	VERB	VBP	Mood=Ind|Number=Plur|Person=2|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:before	_
19	through	through	ADP	IN	_	20	case	20:case	_
20	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	18	obl	18:obl:through	Entity=(event-57)|SpaceAfter=No
21	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-27
# s_type = decl
# text = Pedestrian countdown timers can give you a good clue about when a light is about turn yellow.
# newpar = list type:::"unordered" (1 s)
# newpar1 = item (1 s)
1	Pedestrian	Pedestrian	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:64->59|Entity=(object-58(place-59(person-60)
2	countdown	countdown	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=place-59)
3	timers	timer	NOUN	NNS	Number=Plur	5	nsubj	5:nsubj	Entity=object-58)
4	can	can	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
5	give	give	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	5	iobj	5:iobj	Entity=(person-2)
7	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(abstract-61
8	good	good	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	clue	clue	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-61)
10	about	about	ADP	IN	_	11	case	11:case	_
11	when	when	SCONJ	WRB	PronType=Rel	9	nmod	9:nmod:about	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(object-62
13	light	light	NOUN	NN	Number=Sing	16	nsubj	16:nsubj|17:nsubj:xsubj	Entity=object-62)
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	aux	16:aux	_
15	about	about	ADV	RB	_	16	advmod	16:advmod	_
16	turn	turn	VERB	VB	VerbForm=Inf	11	acl:relcl	11:acl:relcl	_
17	yellow	yellow	ADJ	JJ	Degree=Pos	16	xcomp	16:xcomp	SpaceAfter=No
18	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_cars-28
# s_type = imp
# text = Watch behind you.
# newpar = item (2 s)
1	Watch	watch	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:65->64
2	behind	behind	ADP	IN	_	3	case	3:case	_
3	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	1	obl	1:obl:behind	Entity=(person-2)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-29
# s_type = imp
# text = Every so often, glance in your mirrors to make sure the car that is following is still there, and that it makes the lane changes and gets through lights when you do.
1	Every	every	PRON	DT	_	3	advmod	3:advmod	Discourse=sequence:66->65
2	so	so	ADV	RB	_	3	advmod	3:advmod	_
3	often	often	ADV	RB	Degree=Pos	5	advmod	5:advmod	SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	glance	glance	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
6	in	in	ADP	IN	_	8	case	8:case	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(object-63(person-2)
8	mirrors	mirror	NOUN	NNS	Number=Plur	5	obl	5:obl:in	Entity=object-63)
9	to	to	PART	TO	_	10	mark	10:mark	Discourse=purpose:67->66
10	make	make	VERB	VB	VerbForm=Inf	5	advcl	5:advcl:to	_
11	sure	sure	ADJ	JJ	Degree=Pos	10	xcomp	10:xcomp	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-4
13	car	car	NOUN	NN	Number=Sing	19	nsubj	16:nsubj|19:nsubj	_
14	that	that	PRON	WDT	PronType=Rel	16	nsubj	13:ref	Discourse=elaboration:68->67
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	aux	16:aux	_
16	following	follow	VERB	VBG	Tense=Pres|VerbForm=Part	13	acl:relcl	13:acl:relcl	Entity=object-4)
17	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	cop	19:cop	_
18	still	still	ADV	RB	Degree=Pos	19	advmod	19:advmod	_
19	there	there	ADV	RB	PronType=Dem	11	ccomp	11:ccomp	SpaceAfter=No
20	,	,	PUNCT	,	_	24	punct	24:punct	_
21	and	and	CCONJ	CC	_	24	cc	24:cc	Discourse=sequence:69->66
22	that	that	SCONJ	IN	_	24	mark	24:mark	_
23	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	24	nsubj	24:nsubj|29:nsubj	Entity=(object-4)
24	makes	make	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	conj	11:ccomp|19:conj:and	_
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	_
26	lane	lane	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(place-54)
27	changes	change	NOUN	NNS	Number=Plur	24	obj	24:obj	_
28	and	and	CCONJ	CC	_	29	cc	29:cc	Discourse=elaboration:70->69
29	gets	get	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	conj	19:conj|24:conj:and	_
30	through	through	ADP	IN	_	31	case	31:case	_
31	lights	light	NOUN	NNS	Number=Plur	29	obl	29:obl:through	Entity=(object-64)
32	when	when	SCONJ	WRB	PronType=Int	34	mark	34:mark	Discourse=circumstance:71->70
33	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	34	nsubj	34:nsubj	Entity=(person-2)
34	do	do	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	29	advcl	29:advcl:when	SpaceAfter=No
35	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_cars-30
# s_type = imp
# text = Pull over and wait.
# newpar = item (2 s)
1	Pull	pull	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:72->66
2	over	over	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=sequence:73->72
4	wait	wait	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-31
# s_type = decl
# text = If you're aware that the car following you is no longer behind you, or if you did end up going through an intersection just as the light turned red, pull over where and when it is safe to do so, and wait for the light to change or for the following car to catch up.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:74->75
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-2)|SpaceAfter=No
3	're	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
4	aware	aware	ADJ	JJ	Degree=Pos	33	advcl	33:advcl:if	_
5	that	that	SCONJ	IN	_	14	mark	14:mark	Discourse=sequence:75->72
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-4
7	car	car	NOUN	NN	Number=Sing	14	nsubj	14:nsubj	_
8	following	follow	VERB	VBG	VerbForm=Ger	7	acl	7:acl	Discourse=elaboration:76->75
9	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	8	obj	8:obj	Entity=object-4)(person-2)
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	14:cop	_
11	no	no	ADV	RB	Degree=Pos|Polarity=Neg	12	advmod	12:advmod	_
12	longer	long	ADV	RBR	Degree=Cmp	14	advmod	14:advmod	Entity=(person-1
13	behind	behind	ADP	IN	_	14	case	14:case	_
14	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	4	ccomp	4:ccomp	Entity=person-1)|SpaceAfter=No
15	,	,	PUNCT	,	_	4	punct	4:punct	_
16	or	or	CCONJ	CC	_	20	cc	20:cc	Discourse=contrast:77->75
17	if	if	SCONJ	IN	_	20	mark	20:mark	_
18	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	20	nsubj	20:nsubj|22:nsubj:xsubj	Entity=(person-2)
19	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=2|Tense=Past|VerbForm=Fin	20	aux	20:aux	_
20	end	end	VERB	VB	VerbForm=Inf	33	conj	33:conj:or	_
21	up	up	ADP	RP	_	20	compound:prt	20:compound:prt	_
22	going	go	VERB	VBG	VerbForm=Ger	20	xcomp	20:xcomp	_
23	through	through	ADP	IN	_	25	case	25:case	_
24	an	a	DET	DT	Definite=Ind|PronType=Art	25	det	25:det	Entity=(place-65
25	intersection	intersection	NOUN	NN	Number=Sing	22	obl	22:obl:through	Entity=place-65)
26	just	just	ADV	RB	_	30	advmod	30:advmod	Discourse=elaboration:78->77
27	as	as	SCONJ	IN	_	30	mark	30:mark	_
28	the	the	DET	DT	Definite=Def|PronType=Art	29	det	29:det	Entity=(object-62
29	light	light	NOUN	NN	Number=Sing	30	nsubj	30:nsubj	Entity=object-62)
30	turned	turn	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	20	advcl	20:advcl:as	_
31	red	red	ADJ	JJ	Degree=Pos	30	obj	30:obj	SpaceAfter=No
32	,	,	PUNCT	,	_	20	punct	20:punct	_
33	pull	pull	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:79->78
34	over	over	ADP	RP	_	33	compound:prt	33:compound:prt	_
35	where	where	SCONJ	WRB	PronType=Int	33	obl	33:obl	Discourse=elaboration:80->79
36	and	and	CCONJ	CC	_	37	cc	37:cc	_
37	when	when	SCONJ	WRB	PronType=Int	35	conj	33:obl|35:conj:and	_
38	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	40	nsubj	40:nsubj|42:nsubj:xsubj	Entity=(abstract-66)
39	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	40	cop	40:cop	_
40	safe	safe	ADJ	JJ	Degree=Pos	33	advcl	33:advcl	_
41	to	to	PART	TO	_	42	mark	42:mark	Entity=(abstract-66
42	do	do	VERB	VB	VerbForm=Inf	40	xcomp	40:xcomp	_
43	so	so	ADV	RB	_	42	advmod	42:advmod	Entity=abstract-66)|SpaceAfter=No
44	,	,	PUNCT	,	_	46	punct	46:punct	_
45	and	and	CCONJ	CC	_	46	cc	46:cc	Discourse=sequence:81->79
46	wait	wait	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	33	conj	33:conj:and	_
47	for	for	SCONJ	IN	_	51	mark	51:mark	_
48	the	the	DET	DT	Definite=Def|PronType=Art	49	det	49:det	Entity=(object-62
49	light	light	NOUN	NN	Number=Sing	51	nsubj	51:nsubj	Entity=object-62)
50	to	to	PART	TO	_	51	mark	51:mark	_
51	change	change	VERB	VB	VerbForm=Inf	46	advcl	46:advcl:for_to	_
52	or	or	CCONJ	CC	_	58	cc	58:cc	Discourse=contrast:82->81
53	for	for	SCONJ	IN	_	56	mark	56:mark	_
54	the	the	DET	DT	Definite=Def|PronType=Art	56	det	56:det	Entity=(object-4
55	following	follow	VERB	VBG	VerbForm=Ger	56	amod	56:amod	_
56	car	car	NOUN	NN	Number=Sing	58	nsubj	58:nsubj	Entity=object-4)
57	to	to	PART	TO	_	58	mark	58:mark	_
58	catch	catch	VERB	VB	VerbForm=Inf	51	conj	46:advcl:for_to|51:conj:or	_
59	up	up	ADP	RP	_	58	compound:prt	58:compound:prt	SpaceAfter=No
60	.	.	PUNCT	.	_	33	punct	33:punct	_

# sent_id = AMALGUM_whow_cars-32
# s_type = frag
# text = Tips
# newpar = head (1 s)
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:83->88|Entity=(abstract-67)

# sent_id = AMALGUM_whow_cars-33
# s_type = imp
# text = Get the app.
# newpar = list type:::"unordered" (2 s)
# newpar1 = item (2 s)
1	Get	get	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:84->88
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-68
3	app	app	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-68)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-34
# s_type = decl
# text = Waze has tools to help keep groups together.
1	Waze	Waze	PROPN	NNP	Number=Sing	2	nsubj	2:nsubj	Discourse=joint:85->84|Entity=(abstract-69)
2	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	tools	tool	NOUN	NNS	Number=Plur	2	obj	2:obj	Entity=(abstract-70
4	to	to	PART	TO	_	5	mark	5:mark	Discourse=purpose:86->85
5	help	help	VERB	VB	VerbForm=Inf	3	acl	3:acl:to	_
6	keep	keep	VERB	VB	VerbForm=Inf	5	xcomp	5:xcomp	_
7	groups	group	NOUN	NNS	Number=Plur	6	obj	6:obj	Entity=(person-71)
8	together	together	ADV	RB	Degree=Pos	6	advmod	6:advmod	Entity=abstract-70)|SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_cars-35
# s_type = frag
# text = Warnings
# newpar = head (1 s)
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:87->88|Entity=(abstract-72)

# sent_id = AMALGUM_whow_cars-36
# s_type = imp
# text = Make sure nobody is left behind.
# newpar = list type:::"unordered" (5 s)
# newpar1 = item (3 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=ROOT:88
2	sure	sure	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	nobody	nobody	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=(person-73)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
5	left	leave	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	2	ccomp	2:ccomp	_
6	behind	behind	ADV	RB	Degree=Pos	5	advmod	5:advmod	SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_cars-37
# s_type = decl
# text = It's easiest if everyone returns to the same car in which they arrived.
1-2	It's	_	_	_	_	_	_	_	_
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	expl	3:expl	Discourse=elaboration:89->88|Entity=(abstract-69)
2	's	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	3:cop	_
3	easiest	easy	ADJ	JJS	Degree=Sup	0	root	0:root	_
4	if	if	SCONJ	IN	_	6	mark	6:mark	Discourse=condition:90->89
5	everyone	everyone	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=(person-45)
6	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	csubj	3:csubj	_
7	to	to	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-4
9	same	same	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	car	car	NOUN	NN	Number=Sing	6	obl	6:obl:to|14:obl:in	_
11	in	in	ADP	IN	_	12	case	12:case	Discourse=elaboration:91->90
12	which	which	PRON	WDT	PronType=Rel	14	obl	10:ref	_
13	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	14	nsubj	14:nsubj	Entity=(person-45)
14	arrived	arrive	VERB	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	10	acl:relcl	10:acl:relcl	Entity=object-4)|SpaceAfter=No
15	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_cars-38
# s_type = imp
# text = If some are switching cars or getting home some other way, make sure to communicate those things clearly.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:92->94
2	some	some	PRON	DT	_	4	nsubj	4:nsubj|7:nsubj	Entity=(person-45)
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	4:aux|7:aux	_
4	switching	switch	VERB	VBG	Tense=Pres|VerbForm=Part	13	advcl	13:advcl:if	_
5	cars	car	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=(object-6)
6	or	or	CCONJ	CC	_	7	cc	7:cc	Discourse=contrast:93->92
7	getting	get	VERB	VBG	VerbForm=Ger	4	conj	4:conj:or|13:advcl:if	_
8	home	home	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
9	some	some	DET	DT	_	11	det	11:det	Entity=(abstract-74
10	other	other	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	way	way	NOUN	NN	Number=Sing	7	obl:tmod	7:obl:tmod	Entity=abstract-74)|SpaceAfter=No
12	,	,	PUNCT	,	_	4	punct	4:punct	_
13	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:94->89
14	sure	sure	ADJ	JJ	Degree=Pos	13	xcomp	13:xcomp	_
15	to	to	PART	TO	_	16	mark	16:mark	_
16	communicate	communicate	VERB	VB	VerbForm=Inf	14	xcomp	14:xcomp	_
17	those	this	DET	DT	Number=Plur|PronType=Dem	18	det	18:det	Entity=(abstract-75
18	things	thing	NOUN	NNS	Number=Plur	16	obj	16:obj	Entity=abstract-75)
19	clearly	clearly	ADV	RB	Degree=Pos	16	advmod	16:advmod	SpaceAfter=No
20	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_whow_cars-39
# s_type = imp
# text = Don't stop or drive too slowly if it's not safe to do so.
# newpar = item (2 s)
1-2	Don't	_	_	_	_	_	_	_	_
1	Do	do	AUX	VB	VerbForm=Inf	3	aux	3:aux|5:aux	Discourse=joint:95->94
2	n't	not	ADV	RB	Polarity=Neg	3	advmod	3:advmod	_
3	stop	stop	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	or	or	CCONJ	CC	_	5	cc	5:cc	_
5	drive	drive	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	3	conj	3:conj:or	_
6	too	too	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
7	slowly	slowly	ADV	RB	Degree=Pos	5	advmod	5:advmod	_
8	if	if	SCONJ	IN	_	12	mark	12:mark	Discourse=condition:96->95
9-10	it's	_	_	_	_	_	_	_	_
9	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	expl	12:expl	Entity=(abstract-74)
10	's	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	12:cop	_
11	not	not	ADV	RB	Polarity=Neg	12	advmod	12:advmod	_
12	safe	safe	ADJ	JJ	Degree=Pos	3	advcl	3:advcl:if	_
13	to	to	PART	TO	_	14	mark	14:mark	_
14	do	do	VERB	VB	VerbForm=Inf	12	csubj	12:csubj	_
15	so	so	ADV	RB	_	14	advmod	14:advmod	SpaceAfter=No
16	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_cars-40
# s_type = sub
# text = If you get separated, you can reconnect later.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:97->98
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj:pass	4:nsubj:pass	Entity=(person-2)
3	get	get	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	separated	separate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	advcl	8:advcl:if	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	8	nsubj	8:nsubj	Discourse=joint:98->95|Entity=(person-2)
7	can	can	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
8	reconnect	reconnect	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	later	late	ADV	RBR	Degree=Cmp	8	advmod	8:advmod	SpaceAfter=No
10	.	.	PUNCT	.	_	8	punct	8:punct	_

