# meta::id = AMALGUM_whow_parameters
# meta::title = Think 'Inside of the Box'
# meta::shortTitle = parameters
# meta::type = whow
# meta::dateCollected = 2019-11-06
# meta::dateCreated = 2008-10-17
# meta::dateModified = 2018-02-07
# meta::sourceURL = https://www.wikihow.com/Think-%27Inside-of-the-Box%27
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_whow_parameters
# sent_id = AMALGUM_whow_parameters-1
# s_type = imp
# text = Think 'Inside of the Box'
# newpar = head (1 s)
1	Think	think	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->5
2	'	'	PUNCT	``	_	3	punct	3:punct	SpaceAfter=No
3	Inside	Inside	PROPN	NNP	Number=Sing	1	ccomp	1:ccomp	Entity=(place-1
4	of	of	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(person-2
6	Box	Box	PROPN	NNP	Number=Sing	3	nmod	3:nmod:of	Entity=place-1)person-2)|SpaceAfter=No
7	'	'	PUNCT	''	_	3	punct	3:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_parameters-2
# s_type = decl
# text = In most real life situations, you are given specific hard parameters that cannot be changed.
# newpar = p (2 s)
1	In	in	ADP	IN	_	5	case	5:case	Discourse=preparation:2->5
2	most	most	ADJ	JJS	Degree=Sup	5	amod	5:amod	Entity=(abstract-3
3	real	real	ADJ	JJ	Degree=Pos	4	amod	4:amod	Entity=(abstract-4
4	life	life	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=abstract-4)
5	situations	situation	NOUN	NNS	Number=Plur	9	obl	9:obl:in	Entity=abstract-3)|SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	9	nsubj:pass	9:nsubj:pass	Entity=(person-5)
8	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	9	aux:pass	9:aux:pass	_
9	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
10	specific	specific	ADJ	JJ	Degree=Pos	12	amod	12:amod	Entity=(abstract-6
11	hard	hard	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	parameters	parameter	NOUN	NNS	Number=Plur	9	obj	9:obj|16:nsubj:pass	_
13	that	that	PRON	WDT	PronType=Rel	16	nsubj:pass	12:ref	Discourse=elaboration:3->2
14	cannot	cannot	AUX	MD	VerbForm=Fin	16	aux	16:aux	_
15	be	be	AUX	VB	VerbForm=Inf	16	aux:pass	16:aux:pass	_
16	changed	change	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	acl:relcl	12:acl:relcl	Entity=abstract-6)|SpaceAfter=No
17	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_whow_parameters-3
# s_type = sub
# text = Creative thinking must involve inclusion of these boundaries.
1	Creative	Creative	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=preparation:4->5|Entity=(abstract-7
2	thinking	thinking	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-7)
3	must	must	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	involve	involve	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	inclusion	inclusion	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=(person-8
6	of	of	ADP	IN	_	8	case	8:case	_
7	these	this	DET	DT	Number=Plur|PronType=Dem	8	det	8:det	Entity=(abstract-9
8	boundaries	boundary	NOUN	NNS	Number=Plur	5	nmod	5:nmod:of	Entity=person-8)abstract-9)|SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_parameters-4
# s_type = sub
# text = Solutions that are created outside of the box cannot be implemented inside of the box.
# newpar = p (2 s)
1	Solutions	solution	NOUN	NNS	Number=Plur	11	nsubj:pass	4:nsubj:pass|11:nsubj:pass	Discourse=ROOT:5|Entity=(abstract-10
2	that	that	PRON	WDT	PronType=Rel	4	nsubj:pass	1:ref	Discourse=elaboration:6->5
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	created	create	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	acl:relcl	1:acl:relcl	_
5	outside	outside	ADV	IN	_	4	advmod	4:advmod	_
6	of	of	ADP	IN	_	8	case	8:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-11
8	box	box	NOUN	NN	Number=Sing	4	obl	4:obl:of	Entity=abstract-10)object-11)
9	cannot	cannot	AUX	MD	VerbForm=Fin	11	aux	11:aux	Discourse=same_unit:7->5
10	be	be	AUX	VB	VerbForm=Inf	11	aux:pass	11:aux:pass	_
11	implemented	implement	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
12	inside	inside	ADP	IN	_	15	case	15:case	_
13	of	of	ADP	IN	_	12	fixed	12:fixed	_
14	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-11
15	box	box	NOUN	NN	Number=Sing	11	obl	11:obl:inside_of	Entity=object-11)|SpaceAfter=No
16	.	.	PUNCT	.	_	11	punct	11:punct	_

# sent_id = AMALGUM_whow_parameters-5
# s_type = decl
# text = Thinking outside of the box is a powerful mental exercise, but it is not practical for solving actual problems.
1	Thinking	think	VERB	VBG	VerbForm=Ger	10	csubj	10:csubj	Discourse=concession:8->9
2	outside	outside	ADV	RB	Degree=Pos	1	advmod	1:advmod	_
3	of	of	ADP	IN	_	5	case	5:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-11
5	box	box	NOUN	NN	Number=Sing	1	obl	1:obl:of	Entity=object-11)
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	10:cop	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(event-12
8	powerful	powerful	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
9	mental	mental	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	exercise	exercise	NOUN	NN	Number=Sing	0	root	0:root	Entity=event-12)|SpaceAfter=No
11	,	,	PUNCT	,	_	16	punct	16:punct	_
12	but	but	CCONJ	CC	_	16	cc	16:cc	Discourse=elaboration:9->5
13	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	16	nsubj	16:nsubj	Entity=(event-12)
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	cop	16:cop	_
15	not	not	ADV	RB	Polarity=Neg	16	advmod	16:advmod	_
16	practical	practical	ADJ	JJ	Degree=Pos	10	conj	10:conj:but	_
17	for	for	SCONJ	IN	_	18	mark	18:mark	Discourse=purpose:10->9
18	solving	solve	VERB	VBG	VerbForm=Ger	16	advcl	16:advcl:for	_
19	actual	actual	ADJ	JJ	Degree=Pos	20	amod	20:amod	Entity=(abstract-13
20	problems	problem	NOUN	NNS	Number=Plur	18	obj	18:obj	Entity=abstract-13)|SpaceAfter=No
21	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_whow_parameters-6
# s_type = frag
# text = Steps
# newpar = head (1 s)
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:11->16|Entity=(abstract-14)

# sent_id = AMALGUM_whow_parameters-7
# s_type = imp
# text = Define your goal.
# newpar = list type:::"ordered" (35 s)
# newpar1 = item (1 s)
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 1.jpg"></figure>
1	Define	define	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:12->16|XML=<ref target:::"https://www.wikihow.com/wiki/Set_Goals">
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-15(person-5)
3	goal	goal	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-15)|SpaceAfter=No|XML=</ref>
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-8
# s_type = imp
# text = Define the problem or obstacle that you will need to address to reach your goal.
# newpar = item (1 s)
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 2.jpg"></figure>
1	Define	define	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:13->16|XML=<ref target:::"https://www.wikihow.com/wiki/Define_a_Problem">
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-16
3	problem	problem	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-16)|XML=</ref>
4	or	or	CCONJ	CC	_	5	cc	5:cc	_
5	obstacle	obstacle	NOUN	NN	Number=Sing	3	conj	1:obj|3:conj:or	Entity=(abstract-17
6	that	that	PRON	WDT	_	11	obj	11:obj	Discourse=elaboration:14->13
7	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	9	nsubj	9:nsubj|11:nsubj:xsubj	Entity=(person-5)
8	will	will	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	need	need	VERB	VB	VerbForm=Inf	3	acl:relcl	3:acl:relcl	_
10	to	to	PART	TO	_	11	mark	11:mark	_
11	address	address	VERB	VB	VerbForm=Inf	9	xcomp	9:xcomp	Entity=abstract-17)
12	to	to	PART	TO	_	13	mark	13:mark	Discourse=purpose:15->14
13	reach	reach	VERB	VB	VerbForm=Inf	11	advcl	11:advcl:to	_
14	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	15	nmod:poss	15:nmod:poss	Entity=(abstract-15(person-5)
15	goal	goal	NOUN	NN	Number=Sing	13	obj	13:obj	Entity=abstract-15)|SpaceAfter=No
16	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-9
# s_type = imp
# text = Divide a complex problem into basic components.
# newpar = item (1 s)
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 3.jpg"></figure>
1	Divide	divide	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:16->5
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-16
3	complex	complex	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	problem	problem	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-16)
5	into	into	ADP	IN	_	7	case	7:case	_
6	basic	basic	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(abstract-18
7	components	component	NOUN	NNS	Number=Plur	1	obl	1:obl:into	Entity=abstract-18)|SpaceAfter=No
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-10
# s_type = imp
# text = Define parameters that frame your goal.
# newpar = item (3 s)
1	Define	define	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:17->19
2	parameters	parameter	NOUN	NNS	Number=Plur	1	obj	1:obj|4:nsubj	Entity=(abstract-6
3	that	that	PRON	WDT	PronType=Rel	4	nsubj	2:ref	Discourse=elaboration:18->17
4	frame	frame	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	acl:relcl	2:acl:relcl	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(abstract-15(person-5)
6	goal	goal	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-6)abstract-15)|SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-11
# s_type = decl
# text = This is the "box" in which you must work your solution.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	5	nsubj	5:nsubj	Discourse=joint:19->16|Entity=(abstract-15)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-15
4	"	''	PUNCT	``	_	5	punct	5:punct	SpaceAfter=No
5	box	box	NOUN	NN	Number=Sing	0	root	0:root|11:obl:in	SpaceAfter=No
6	"	''	PUNCT	''	_	5	punct	5:punct	_
7	in	in	ADP	IN	_	8	case	8:case	Discourse=elaboration:20->19
8	which	which	PRON	WDT	PronType=Rel	11	obl	5:ref	_
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	11	nsubj	11:nsubj	Entity=(person-5)
10	must	must	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
11	work	work	VERB	VB	VerbForm=Inf	5	acl:relcl	5:acl:relcl	_
12	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	13	nmod:poss	13:nmod:poss	Entity=(abstract-19(person-5)
13	solution	solution	NOUN	NN	Number=Sing	11	obj	11:obj	Entity=abstract-15)abstract-19)|SpaceAfter=No
14	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_parameters-12
# s_type = decl
# text = If you are drawing these boundaries, be careful where you draw it, and be aware of what can and cannot be moved, if necessary, about them.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 4.jpg"></figure>
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:21->22
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-5)
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	drawing	draw	VERB	VBG	Tense=Pres|VerbForm=Part	9	advcl	9:advcl:if	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	6:det	Entity=(abstract-9
6	boundaries	boundary	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-9)|SpaceAfter=No
7	,	,	PUNCT	,	_	4	punct	4:punct	_
8	be	be	AUX	VB	VerbForm=Inf	9	cop	9:cop	Discourse=joint:22->19
9	careful	careful	ADJ	JJ	Degree=Pos	0	root	0:root	_
10	where	where	SCONJ	WRB	PronType=Int	12	mark	12:mark	Discourse=elaboration:23->22
11	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	12	nsubj	12:nsubj	Entity=(person-5)
12	draw	draw	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	9	advcl	9:advcl:where	_
13	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	obj	12:obj	Entity=(abstract-19)|SpaceAfter=No
14	,	,	PUNCT	,	_	17	punct	17:punct	_
15	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:24->19
16	be	be	AUX	VB	VerbForm=Inf	17	cop	17:cop	_
17	aware	aware	ADJ	JJ	Degree=Pos	9	conj	9:conj:and	_
18	of	of	ADP	IN	_	19	case	19:case	_
19	what	what	PRON	WP	PronType=Rel	17	obl	17:obl:of	_
20	can	can	AUX	MD	VerbForm=Fin	24	aux	24:aux	_
21	and	and	CCONJ	CC	_	22	cc	22:cc	_
22	cannot	cannot	AUX	MD	VerbForm=Fin	20	conj	20:conj:and|24:aux	_
23	be	be	AUX	VB	VerbForm=Inf	24	aux:pass	24:aux:pass	_
24	moved	move	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	19	acl:relcl	19:acl:relcl	SpaceAfter=No
25	,	,	PUNCT	,	_	27	punct	27:punct	_
26	if	if	SCONJ	IN	_	27	mark	27:mark	Discourse=elaboration:25->24
27	necessary	necessary	ADJ	JJ	Degree=Pos	24	advcl	24:advcl:if	SpaceAfter=No
28	,	,	PUNCT	,	_	30	punct	30:punct	_
29	about	about	ADP	IN	_	30	case	30:case	_
30	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	24	obl	24:obl:about	Entity=(abstract-9)|SpaceAfter=No
31	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_whow_parameters-13
# s_type = imp
# text = Determine a timeline for solving the problem and reaching your goal.
# newpar = item (3 s)
1	Determine	determine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:26->19
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-20
3	timeline	timeline	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	for	for	SCONJ	IN	_	5	mark	5:mark	Discourse=purpose:27->26
5	solving	solve	VERB	VBG	VerbForm=Ger	3	acl	3:acl:for	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-16
7	problem	problem	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-16)
8	and	and	CCONJ	CC	_	9	cc	9:cc	Discourse=joint:28->27
9	reaching	reach	VERB	VBG	VerbForm=Ger	5	conj	3:acl:for|5:conj:and	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(abstract-15(person-5)
11	goal	goal	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=abstract-20)abstract-15)|SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-14
# s_type = q
# text = Can some components of your problem be postponed until later in the project?
1	Can	can	AUX	MD	VerbForm=Fin	8	aux	8:aux	Discourse=joint:29->19
2	some	some	DET	DT	_	3	det	3:det	Entity=(abstract-18
3	components	component	NOUN	NNS	Number=Plur	8	nsubj:pass	8:nsubj:pass	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(abstract-16(person-5)
6	problem	problem	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-18)abstract-16)
7	be	be	AUX	VB	VerbForm=Inf	8	aux:pass	8:aux:pass	_
8	postponed	postpone	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
9	until	until	ADP	IN	_	10	case	10:case	_
10	later	late	ADV	RBR	Degree=Cmp	8	obl	8:obl:until	_
11	in	in	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(abstract-21
13	project	project	NOUN	NN	Number=Sing	8	obl	8:obl:in	Entity=abstract-21)|SpaceAfter=No
14	?	?	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_parameters-15
# s_type = q
# text = Must some of the components be solved before other components can be solved?
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 5.jpg"></figure>
1	Must	must	AUX	MD	VerbForm=Fin	7	aux	7:aux	Discourse=joint:30->19
2	some	some	PRON	DT	_	7	nsubj:pass	7:nsubj:pass	Entity=(abstract-18
3	of	of	ADP	IN	_	5	case	5:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-18
5	components	component	NOUN	NNS	Number=Plur	2	nmod	2:nmod:of	Entity=abstract-18)abstract-18)
6	be	be	AUX	VB	VerbForm=Inf	7	aux:pass	7:aux:pass	_
7	solved	solve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
8	before	before	SCONJ	IN	_	13	mark	13:mark	Discourse=circumstance:31->30
9	other	other	ADJ	JJ	Degree=Pos	10	amod	10:amod	Entity=(abstract-18
10	components	component	NOUN	NNS	Number=Plur	13	nsubj:pass	13:nsubj:pass	Entity=abstract-18)
11	can	can	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
12	be	be	AUX	VB	VerbForm=Inf	13	aux:pass	13:aux:pass	_
13	solved	solve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	advcl	7:advcl:before	SpaceAfter=No
14	?	?	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_parameters-16
# s_type = imp
# text = Make a list of solutions that have been tried unsuccessfully in the past.
# newpar = item (7 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:32->19
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-22
3	list	list	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	solutions	solution	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of|9:nsubj:pass	Entity=(abstract-10
6	that	that	PRON	WDT	PronType=Rel	9	nsubj:pass	5:ref	Discourse=elaboration:33->32
7	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	9:aux	_
8	been	be	AUX	VBN	Tense=Past|VerbForm=Part	9	aux:pass	9:aux:pass	_
9	tried	try	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	acl:relcl	5:acl:relcl	_
10	unsuccessfully	unsuccessfully	ADV	RB	Degree=Pos|Polarity=Neg	9	advmod	9:advmod	_
11	in	in	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(time-23
13	past	past	NOUN	NN	Number=Sing	9	obl	9:obl:in	Entity=abstract-22)abstract-10)time-23)|SpaceAfter=No
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-17
# s_type = imp
# text = Ask yourself why each of these solutions failed.
1	Ask	ask	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:34->35
2	yourself	yourself	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs|Reflex=Yes	1	iobj	1:iobj	Entity=(person-5)
3	why	why	SCONJ	WRB	PronType=Rel	1	obj	1:obj	Discourse=joint:35->19
4	each	each	PRON	DT	_	8	nsubj	8:nsubj	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	these	this	DET	DT	Number=Plur|PronType=Dem	7	det	7:det	Entity=(abstract-10
7	solutions	solution	NOUN	NNS	Number=Plur	4	nmod	4:nmod:of	Entity=abstract-10)
8	failed	fail	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	acl:relcl	3:acl:relcl	SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-18
# s_type = decl
# text = Many times a solution fails because of lack of persistence.
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=joint:36->19|Entity=(time-24
2	times	time	NOUN	NNS	Number=Plur	5	obl:tmod	5:obl:tmod	Entity=time-24)
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-19
4	solution	solution	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=abstract-19)
5	fails	fail	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	because	because	ADP	IN	_	8	case	8:case	_
7	of	of	ADP	IN	_	6	fixed	6:fixed	_
8	lack	lack	NOUN	NN	Number=Sing	5	obl	5:obl:because_of	Entity=(abstract-25
9	of	of	ADP	IN	_	10	case	10:case	_
10	persistence	persistence	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=abstract-25)(abstract-26)|SpaceAfter=No|XML=<ref target:::"https://www.wikihow.com/wiki/Be_Persistent"></ref>
11	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_parameters-19
# s_type = decl
# text = You need to hit a nail more than once before it is driven into place.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 6.jpg"></figure>
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	2	nsubj	2:nsubj|4:nsubj:xsubj	Discourse=elaboration:37->36|Entity=(person-5)
2	need	need	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	hit	hit	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-27
6	nail	nail	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-27)
7	more	more	ADV	RBR	Degree=Cmp	4	advmod	4:advmod	_
8	than	than	ADP	IN	_	9	case	9:case	_
9	once	once	ADV	RB	NumType=Mult	7	nmod	7:nmod:than	_
10	before	before	SCONJ	IN	_	13	mark	13:mark	Discourse=circumstance:38->37
11	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	13	nsubj:pass	13:nsubj:pass	Entity=(object-27)
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
13	driven	drive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	advcl	4:advcl:before	_
14	into	into	ADP	IN	_	15	case	15:case	_
15	place	place	NOUN	NN	Number=Sing	13	obl	13:obl:into	SpaceAfter=No
16	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_parameters-20
# s_type = imp
# text = Before discarding a possible solution that has failed, consider whether your situation is different somehow.
# newpar = list type:::"unordered" (3 s)
# newpar1 = item (3 s)
1	Before	before	SCONJ	IN	_	2	mark	2:mark	Discourse=condition:39->42
2	discarding	discard	VERB	VBG	VerbForm=Ger	10	advcl	10:advcl:before	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(abstract-19
4	possible	possible	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	solution	solution	NOUN	NN	Number=Sing	2	obj	2:obj|8:nsubj	_
6	that	that	PRON	WDT	PronType=Rel	8	nsubj	5:ref	Discourse=elaboration:40->39
7	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	8:aux	_
8	failed	fail	VERB	VBN	Tense=Past|VerbForm=Part	5	acl:relcl	5:acl:relcl	Entity=abstract-19)|SpaceAfter=No
9	,	,	PUNCT	,	_	2	punct	2:punct	_
10	consider	consider	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:41->42
11	whether	whether	SCONJ	IN	_	15	mark	15:mark	Discourse=joint:42->37
12	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	13	nmod:poss	13:nmod:poss	Entity=(abstract-28(person-5)
13	situation	situation	NOUN	NN	Number=Sing	15	nsubj	15:nsubj	Entity=abstract-28)
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	cop	15:cop	_
15	different	different	ADJ	JJ	Degree=Pos	10	ccomp	10:ccomp	_
16	somehow	somehow	ADV	RB	_	15	advmod	15:advmod	SpaceAfter=No
17	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_whow_parameters-21
# s_type = q
# text = Have technologies, attitudes, or conditions changed?
1	Have	have	AUX	VB	VerbForm=Inf	8	aux	8:aux	Discourse=joint:43->19
2	technologies	technology	NOUN	NNS	Number=Plur	8	nsubj	8:nsubj	Entity=(abstract-29)|SpaceAfter=No
3	,	,	PUNCT	,	_	4	punct	4:punct	_
4	attitudes	attitude	NOUN	NNS	Number=Plur	2	conj	2:conj:or|8:nsubj	Entity=(abstract-30)|SpaceAfter=No
5	,	,	PUNCT	,	_	7	punct	7:punct	_
6	or	or	CCONJ	CC	_	7	cc	7:cc	_
7	conditions	condition	NOUN	NNS	Number=Plur	2	conj	2:conj:or|8:nsubj	Entity=(abstract-31)
8	changed	change	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	SpaceAfter=No
9	?	?	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_parameters-22
# s_type = q
# text = Is yours a slightly different problem?
1	Is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	Discourse=preparation:44->45
2	yours	yours	PRON	PRP	Case=Nom	6	nsubj	6:nsubj	Entity=(person-5)
3	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(person-5
4	slightly	slightly	ADV	RB	Degree=Pos	5	advmod	5:advmod	_
5	different	different	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	problem	problem	NOUN	NN	Number=Sing	0	root	0:root	Entity=person-5)|SpaceAfter=No
7	?	?	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_parameters-23
# s_type = imp
# text = Start a list of solutions that have not been tried.
# newpar = item (11 s)
1	Start	start	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:45->19
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-32
3	list	list	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	solutions	solution	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of|10:nsubj:pass	Entity=(abstract-10
6	that	that	PRON	WDT	PronType=Rel	10	nsubj:pass	5:ref	Discourse=elaboration:46->45
7	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux	10:aux	_
8	not	not	ADV	RB	Polarity=Neg	10	advmod	10:advmod	_
9	been	be	AUX	VBN	Tense=Past|VerbForm=Part	10	aux:pass	10:aux:pass	_
10	tried	try	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	acl:relcl	5:acl:relcl	Entity=abstract-32)abstract-10)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-24
# s_type = imp
# text = Write down every idea regardless of merit and filter them later.
1	Write	write	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:47->45
2	down	down	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	every	every	DET	DT	_	4	det	4:det	Entity=(abstract-33
4	idea	idea	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-33)
5	regardless	regardless	ADV	RB	Degree=Pos	1	advmod	1:advmod	Discourse=concession:48->47
6	of	of	ADP	IN	_	7	case	7:case	_
7	merit	merit	NOUN	NN	Number=Sing	5	nmod	5:nmod:of	Entity=(abstract-34)
8	and	and	CCONJ	CC	_	9	cc	9:cc	Discourse=joint:49->48
9	filter	filter	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
10	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	9	obj	9:obj	Entity=(abstract-10)
11	later	late	ADV	RBR	Degree=Cmp	9	advmod	9:advmod	SpaceAfter=No
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-25
# s_type = imp
# text = Remember that it is easier to have too many ideas to choose from than not enough.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 7.jpg"></figure>
1	Remember	remember	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:50->51
2	that	that	SCONJ	IN	_	5	mark	5:mark	Discourse=joint:51->45
3	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	5	expl	5:expl	Entity=(abstract-34)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
5	easier	easy	ADJ	JJR	Degree=Cmp	1	ccomp	1:ccomp	_
6	to	to	PART	TO	_	7	mark	7:mark	_
7	have	have	VERB	VB	VerbForm=Inf	5	csubj	5:csubj	_
8	too	too	ADV	RB	Degree=Pos	9	advmod	9:advmod	Entity=(abstract-35
9	many	many	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	ideas	idea	NOUN	NNS	Number=Plur	7	obj	7:obj	_
11	to	to	PART	TO	_	12	mark	12:mark	Discourse=purpose:52->51
12	choose	choose	VERB	VB	VerbForm=Inf	10	acl	10:acl:to	_
13	from	from	ADP	IN	_	12	obl	12:obl	Entity=abstract-35)
14	than	than	SCONJ	IN	_	16	mark	16:mark	Discourse=antithesis:53->52
15	not	not	ADV	RB	Polarity=Neg	16	advmod	16:advmod	_
16	enough	enough	ADJ	JJ	Degree=Pos	12	advcl	12:advcl:than	SpaceAfter=No
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-26
# s_type = imp
# text = Keep a notebook and pen with you at all times.
# newpar = list type:::"unordered" (8 s)
# newpar1 = item (2 s)
1	Keep	keep	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:54->45|XML=<ref target:::"https://www.wikihow.com/wiki/Keep_a_Notebook">
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-36
3	notebook	notebook	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-36)|XML=</ref>
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	pen	pen	NOUN	NN	Number=Sing	3	conj	1:obj|3:conj:and	Entity=(object-37)|XML=<ref target:::"https://www.wikihow.com/wiki/Choose_a_Pen"></ref>
6	with	with	ADP	IN	_	7	case	7:case	_
7	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	1	obl	1:obl:with	Entity=(person-5)
8	at	at	ADP	IN	_	10	case	10:case	_
9	all	all	DET	DT	_	10	det	10:det	Entity=(time-38
10	times	time	NOUN	NNS	Number=Plur	1	obl	1:obl:at	Entity=time-38)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-27
# s_type = imp
# text = Jot down as many ideas as they come to you, whether or not they are "good".
1	Jot	jot	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:55->45
2	down	down	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	as	as	ADV	RB	_	4	advmod	4:advmod	Entity=(abstract-35
4	many	many	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	ideas	idea	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-35)
6	as	as	SCONJ	IN	_	8	mark	8:mark	Discourse=circumstance:56->55
7	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	8	nsubj	8:nsubj	Entity=(abstract-35)
8	come	come	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:as	_
9	to	to	ADP	IN	_	10	case	10:case	_
10	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	8	obl	8:obl:to	Entity=(person-5)|SpaceAfter=No
11	,	,	PUNCT	,	_	18	punct	18:punct	_
12	whether	whether	SCONJ	IN	_	18	mark	18:mark	Discourse=contrast:57->56
13	or	or	CCONJ	CC	_	14	cc	14:cc	_
14	not	not	ADV	RB	Polarity=Neg	12	conj	12:conj:or|18:mark	_
15	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	18	nsubj	18:nsubj	Entity=(abstract-35)
16	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	18	cop	18:cop	_
17	"	''	PUNCT	``	_	18	punct	18:punct	SpaceAfter=No
18	good	good	ADJ	JJ	Degree=Pos	8	advcl	8:advcl:whether	SpaceAfter=No
19	"	''	PUNCT	''	_	18	punct	18:punct	SpaceAfter=No
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-28
# s_type = imp
# text = Think about your goal and the components of the problem when you have idle time, such as during travel time, exercise, coffee breaks or even routine meetings.
# newpar = item (1 s)
1	Think	think	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:58->45
2	about	about	ADP	IN	_	4	case	4:case	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(abstract-15(person-5)
4	goal	goal	NOUN	NN	Number=Sing	1	obl	1:obl:about	Entity=abstract-15)
5	and	and	CCONJ	CC	_	7	cc	7:cc	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-39
7	components	component	NOUN	NNS	Number=Plur	4	conj	1:obl:about|4:conj:and	_
8	of	of	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-16
10	problem	problem	NOUN	NN	Number=Sing	7	nmod	7:nmod:of	Entity=abstract-39)abstract-16)
11	when	when	SCONJ	WRB	PronType=Int	13	mark	13:mark	Discourse=circumstance:59->58
12	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	13	nsubj	13:nsubj	Entity=(person-5)
13	have	have	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:when	_
14	idle	idle	ADJ	JJ	Degree=Pos	15	amod	15:amod	Entity=(time-40
15	time	time	NOUN	NN	Number=Sing	13	obj	13:obj	SpaceAfter=No
16	,	,	PUNCT	,	_	21	punct	21:punct	_
17	such	such	ADJ	JJ	Degree=Pos	21	case	21:case	_
18	as	as	ADP	IN	_	17	fixed	17:fixed	_
19	during	during	ADP	IN	_	21	case	21:case	_
20	travel	travel	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=(time-40(event-41)
21	time	time	NOUN	NN	Number=Sing	15	nmod	15:nmod:such_during	Entity=time-40)|SpaceAfter=No
22	,	,	PUNCT	,	_	23	punct	23:punct	_
23	exercise	exercise	NOUN	NN	Number=Sing	21	conj	15:nmod:such_during|21:conj:or	Entity=(event-42)|SpaceAfter=No
24	,	,	PUNCT	,	_	26	punct	26:punct	_
25	coffee	coffee	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=(event-43(substance-44)
26	breaks	break	NOUN	NNS	Number=Plur	21	conj	15:nmod:such_during|21:conj:or	Entity=event-43)
27	or	or	CCONJ	CC	_	30	cc	30:cc	_
28	even	even	ADV	RB	_	30	advmod	30:advmod	Entity=(event-45
29	routine	routine	ADJ	JJ	Degree=Pos	30	amod	30:amod	_
30	meetings	meeting	NOUN	NNS	Number=Plur	21	conj	15:nmod:such_during|21:conj:or	Entity=time-40)event-45)|SpaceAfter=No
31	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-29
# s_type = imp
# text = Look to your supervisors, coworkers and companions for input.
# newpar = item (3 s)
1	Look	look	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:60->45
2	to	to	ADP	IN	_	4	case	4:case	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(person-46(person-5)
4	supervisors	supervisor	NOUN	NNS	Number=Plur	1	obl	1:obl:to	Entity=person-46)|SpaceAfter=No
5	,	,	PUNCT	,	_	6	punct	6:punct	_
6	coworkers	coworker	NOUN	NNS	Number=Plur	4	conj	1:obl:to|4:conj:and	Entity=(person-47)
7	and	and	CCONJ	CC	_	8	cc	8:cc	_
8	companions	companion	NOUN	NNS	Number=Plur	4	conj	1:obl:to|4:conj:and	Entity=(person-48)
9	for	for	ADP	IN	_	10	case	10:case	_
10	input	input	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=(abstract-49)|SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-30
# s_type = imp
# text = Accept every suggestion.
1	Accept	accept	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:61->45
2	every	every	DET	DT	_	3	det	3:det	Entity=(abstract-50
3	suggestion	suggestion	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-50)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-31
# s_type = sub
# text = You do not need to create your own solution, but can freely adopt and adapt a solution that has worked for someone else.
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj|6:nsubj:xsubj	Discourse=concession:62->63|Entity=(person-5)
2	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
3	not	not	ADV	RB	Polarity=Neg	4	advmod	4:advmod	_
4	need	need	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	to	to	PART	TO	_	6	mark	6:mark	_
6	create	create	VERB	VB	VerbForm=Inf	4	xcomp	4:xcomp	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(abstract-19(person-5)
8	own	own	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	solution	solution	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=abstract-19)|SpaceAfter=No
10	,	,	PUNCT	,	_	14	punct	14:punct	_
11	but	but	CCONJ	CC	_	14	cc	14:cc	Discourse=elaboration:63->61
12	can	can	AUX	MD	VerbForm=Fin	14	aux	14:aux|16:aux	_
13	freely	freely	ADV	RB	Degree=Pos	14	advmod	14:advmod	_
14	adopt	adopt	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	4	conj	4:conj:but	_
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	adapt	adapt	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	14	conj	4:conj|14:conj:and	_
17	a	a	DET	DT	Definite=Ind|PronType=Art	18	det	18:det	Entity=(abstract-19
18	solution	solution	NOUN	NN	Number=Sing	14	obj	14:obj|16:obj|21:nsubj	_
19	that	that	PRON	WDT	PronType=Rel	21	nsubj	18:ref	Discourse=elaboration:64->63
20	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	aux	21:aux	_
21	worked	work	VERB	VBN	Tense=Past|VerbForm=Part	18	acl:relcl	18:acl:relcl	_
22	for	for	ADP	IN	_	23	case	23:case	_
23	someone	someone	NOUN	NN	Number=Sing	21	obl	21:obl:for	Entity=(person-51
24	else	else	ADV	RB	Degree=Pos	23	advmod	23:advmod	Entity=abstract-19)person-51)|SpaceAfter=No
25	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_parameters-32
# s_type = imp
# text = Work backwards.
# newpar = item (2 s)
1	Work	Work	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:65->45
2	backwards	backwards	ADV	RB	Degree=Pos	1	advmod	1:advmod	SpaceAfter=No
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-33
# s_type = imp
# text = Consider resources or solutions open to you and ask whether and how they could move you toward your goal.
1	Consider	consider	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:66->45
2	resources	resource	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=(abstract-52)
3	or	or	CCONJ	CC	_	4	cc	4:cc	_
4	solutions	solution	NOUN	NNS	Number=Plur	2	conj	1:obj|2:conj:or	Entity=(abstract-10
5	open	open	ADJ	JJ	Degree=Pos	2	acl	2:acl	Discourse=elaboration:67->66
6	to	to	ADP	IN	_	7	case	7:case	_
7	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	5	obl	5:obl:to	Entity=abstract-10)(person-5)
8	and	and	CCONJ	CC	_	9	cc	9:cc	Discourse=attribution:68->69
9	ask	ask	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
10	whether	whether	ADP	IN	_	9	obj	9:obj	Discourse=joint:69->67
11	and	and	CCONJ	CC	_	12	cc	12:cc	_
12	how	how	SCONJ	WRB	PronType=Int	10	conj	9:obj|10:conj:and	_
13	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	15	nsubj	15:nsubj	Entity=(person-48)
14	could	could	AUX	MD	VerbForm=Fin	15	aux	15:aux	_
15	move	move	VERB	VB	VerbForm=Inf	10	acl:relcl	10:acl:relcl	_
16	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	15	obj	15:obj	Entity=(person-5)
17	toward	toward	ADP	IN	_	19	case	19:case	_
18	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	19	nmod:poss	19:nmod:poss	Entity=(abstract-15(person-5)
19	goal	goal	NOUN	NN	Number=Sing	15	obl	15:obl:toward	Entity=abstract-15)|SpaceAfter=No
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-34
# s_type = imp
# text = Make a list of outside resources that would be needed for specific solutions.
# newpar = item (2 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:70->45
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-53
3	list	list	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	outside	outside	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-52
6	resources	resource	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of|10:nsubj:pass	_
7	that	that	PRON	WDT	PronType=Rel	10	nsubj:pass	6:ref	Discourse=elaboration:71->70
8	would	would	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
9	be	be	AUX	VB	VerbForm=Inf	10	aux:pass	10:aux:pass	_
10	needed	need	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	acl:relcl	6:acl:relcl	_
11	for	for	ADP	IN	_	13	case	13:case	_
12	specific	specific	ADJ	JJ	Degree=Pos	13	amod	13:amod	Entity=(abstract-10
13	solutions	solution	NOUN	NNS	Number=Plur	10	obl	10:obl:for	Entity=abstract-53)abstract-52)abstract-10)|SpaceAfter=No
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-35
# s_type = imp
# text = Include estimated budget requirements.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 8.jpg"></figure>
1	Include	include	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:72->45
2	estimated	estimate	VERB	VBN	Tense=Past|VerbForm=Part	4	amod	4:amod	Entity=(abstract-54
3	budget	budget	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-55)
4	requirements	requirement	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-54)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-36
# s_type = imp
# text = Refine your lists.
# newpar = item (3 s)
1	Refine	refine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:73->45
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-56(person-5)
3	lists	list	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-56)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-37
# s_type = imp
# text = Re-write and re-phrase solutions.
1	Re-write	re-write	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:74->45
2	and	and	CCONJ	CC	_	3	cc	3:cc	_
3	re-phrase	re-phrase	NOUN	NN	Number=Sing	1	conj	1:conj:and	_
4	solutions	solution	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=(abstract-10)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-38
# s_type = imp
# text = Organize the list, grouping the most viable solutions together.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 9.jpg"></figure>
1	Organize	organize	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:75->45
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-53
3	list	list	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-53)|SpaceAfter=No
4	,	,	PUNCT	,	_	5	punct	5:punct	_
5	grouping	group	VERB	VBG	VerbForm=Ger	1	advcl	1:advcl	Discourse=elaboration:76->75
6	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-10
7	most	most	ADV	RBS	Degree=Sup	8	advmod	8:advmod	_
8	viable	viable	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	solutions	solution	NOUN	NNS	Number=Plur	5	obj	5:obj	Entity=abstract-10)
10	together	together	ADV	RB	Degree=Pos	5	advmod	5:advmod	SpaceAfter=No
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-39
# s_type = imp
# text = Choose a solution.
# newpar = item (3 s)
1	Choose	choose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:77->45
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-19
3	solution	solution	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-19)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-40
# s_type = imp
# text = Present it.
1	Present	present	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:78->77
2	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	1	obj	1:obj	Entity=(abstract-19)|SpaceAfter=No
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-41
# s_type = imp
# text = Implement it.
# trailing_xml = <figure rend:::"Think 'Inside of the Box' Step 10.jpg"></figure>
1	Implement	implement	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:79->77
2	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	1	obj	1:obj	Entity=(abstract-19)|SpaceAfter=No
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_parameters-42
# s_type = frag
# text = Video
# newpar = head (1 s)
1	Video	video	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:80->45|Entity=(abstract-57)

# sent_id = AMALGUM_whow_parameters-43
# s_type = frag
# text = Tips
# newpar = head (1 s)
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:81->84|Entity=(abstract-58)

# sent_id = AMALGUM_whow_parameters-44
# s_type = imp
# text = Just because you are working within a set of well-defined parameters, doesn't mean you can't exercise your creativity within those parameters or even on those parameters.
# newpar = list type:::"unordered" (3 s)
# newpar1 = item (1 s)
1	Just	just	ADV	RB	_	5	advmod	5:advmod	Discourse=condition:82->84
2	because	because	SCONJ	IN	_	5	mark	5:mark	_
3	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-5)
4	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
5	working	work	VERB	VBG	Tense=Pres|VerbForm=Part	15	advcl	15:advcl:because	_
6	within	within	ADP	IN	_	8	case	8:case	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-59
8	set	set	NOUN	NN	Number=Sing	5	obl	5:obl:within	_
9	of	of	ADP	IN	_	11	case	11:case	_
10	well-defined	well-defined	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	parameters	parameter	NOUN	NNS	Number=Plur	8	nmod	8:nmod:of	Entity=abstract-59)|SpaceAfter=No
12	,	,	PUNCT	,	_	5	punct	5:punct	_
13-14	doesn't	_	_	_	_	_	_	_	_
13	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	aux	15:aux	Discourse=attribution:83->84
14	n't	not	ADV	RB	Polarity=Neg	15	advmod	15:advmod	_
15	mean	mean	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
16	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	19	nsubj	19:nsubj	Discourse=joint:84->45|Entity=(person-5)
17-18	can't	_	_	_	_	_	_	_	_
17	ca	can	AUX	MD	VerbForm=Fin	19	aux	19:aux	_
18	n't	not	ADV	RB	Polarity=Neg	19	advmod	19:advmod	_
19	exercise	exercise	VERB	VB	VerbForm=Inf	15	ccomp	15:ccomp	_
20	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	21	nmod:poss	21:nmod:poss	Entity=(abstract-60(person-5)
21	creativity	creativity	NOUN	NN	Number=Sing	19	obj	19:obj	Entity=abstract-60)
22	within	within	ADP	IN	_	24	case	24:case	_
23	those	this	DET	DT	Number=Plur|PronType=Dem	24	det	24:det	Entity=(abstract-59
24	parameters	parameter	NOUN	NNS	Number=Plur	19	obl	19:obl:within	Entity=abstract-59)
25	or	or	CCONJ	CC	_	29	cc	29:cc	_
26	even	even	ADV	RB	_	29	advmod	29:advmod	Entity=(abstract-59
27	on	on	ADP	IN	_	29	case	29:case	_
28	those	this	DET	DT	Number=Plur|PronType=Dem	29	det	29:det	_
29	parameters	parameter	NOUN	NNS	Number=Plur	22	conj	22:conj:or|24:case	Entity=abstract-59)|SpaceAfter=No
30	.	.	PUNCT	.	_	15	punct	15:punct	_

# sent_id = AMALGUM_whow_parameters-45
# s_type = imp
# text = Be bold and take calculated risks.
# newpar = item (1 s)
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=joint:85->84
2	bold	bold	ADJ	JJ	Degree=Pos	0	root	0:root	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=joint:86->84
4	take	take	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	2	conj	2:conj:and	_
5	calculated	calculate	VERB	VBN	Tense=Past|VerbForm=Part	6	amod	6:amod	Entity=(abstract-61
6	risks	risk	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-61)|SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_parameters-46
# s_type = imp
# text = Maintain a humble attitude, as this will facilitate your receptiveness to solution ideas from others.
# newpar = item (1 s)
1	Maintain	maintain	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:87->84
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-62
3	humble	humble	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	attitude	attitude	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-62)|SpaceAfter=No
5	,	,	PUNCT	,	_	9	punct	9:punct	_
6	as	as	SCONJ	IN	_	9	mark	9:mark	Discourse=manner:88->87
7	this	this	PRON	DT	Number=Sing|PronType=Dem	9	nsubj	9:nsubj	Entity=(abstract-62)
8	will	will	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	facilitate	facilitate	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:as	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(abstract-63(person-5)
11	receptiveness	receptiveness	NOUN	NN	Number=Sing	9	obj	9:obj	_
12	to	to	ADP	IN	_	14	case	14:case	_
13	solution	solution	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(abstract-35(abstract-19)
14	ideas	idea	NOUN	NNS	Number=Plur	11	nmod	11:nmod:to	_
15	from	from	ADP	IN	_	16	case	16:case	_
16	others	other	NOUN	NNS	Number=Plur	14	nmod	14:nmod:from	Entity=abstract-63)abstract-35)(person-64)|SpaceAfter=No
17	.	.	PUNCT	.	_	1	punct	1:punct	_

