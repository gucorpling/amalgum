# s_type = imp
# newdoc id = AMALGUM_whow_machine
# sent_id = AMALGUM_whow_machine-1
# text = Build a Homemade Rube Goldberg Machine
1	Build	build	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->6
2	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-1
3	Homemade	homemade	ADJ	NNP	Number=Sing	6	amod	6:amod	_
4	Rube	Rube	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(person-2
5	Goldberg	Goldberg	PROPN	NNP	Number=Sing	6	compound	6:compound	Entity=person-2)
6	Machine	Machine	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=object-1)

# s_type = decl
# sent_id = AMALGUM_whow_machine-2
# text = Rube Goldberg ( 1883-1970 ) was a scientist and cartoonist who produced satirical work on people ’s overly complex problem solving methods .
1	Rube	Rube	PROPN	NNP	Number=Sing	8	nsubj	8:nsubj|10:nsubj	Discourse=background:2->6|Entity=(person-2
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	1	flat	1:flat	_
3	(	(	PUNCT	-LRB-	_	4	punct	4:punct	Discourse=elaboration:3->2
4	1883-1970	1883-1970	NUM	CD	NumForm=Word|NumType=Card	1	nmod:tmod	1:nmod:tmod	Entity=(time-3)
5	)	)	PUNCT	-RRB-	_	4	punct	4:punct	Entity=person-2)
6	was	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	cop	8:cop	Discourse=same_unit:4->2
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(person-2(person-2
8	scientist	scientist	NOUN	NN	Number=Sing	0	root	0:root|12:nsubj	Entity=person-2)
9	and	and	CCONJ	CC	_	10	cc	10:cc	_
10	cartoonist	cartoonist	NOUN	NN	Number=Sing	8	conj	8:conj:and	Entity=(person-4
11	who	who	PRON	WP	PronType=Rel	12	nsubj	8:ref	Discourse=elaboration:5->4
12	produced	produce	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	acl:relcl	8:acl:relcl	_
13	satirical	satirical	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(abstract-5
14	work	work	NOUN	NN	Number=Sing	12	obj	12:obj	_
15	on	on	ADP	IN	_	22	case	22:case	_
16	people	person	NOUN	NNS	Number=Plur	22	nmod:poss	22:nmod:poss	Entity=(abstract-6(person-7
17	’s	's	PART	POS	_	16	case	16:case	Entity=person-7)
18	overly	overly	ADV	RB	Degree=Pos	19	advmod	19:advmod	_
19	complex	complex	ADJ	JJ	Degree=Pos	22	amod	22:amod	_
20	problem	problem	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=(event-8
21	solving	solving	NOUN	NN	Number=Sing	22	compound	22:compound	Entity=event-8)
22	methods	method	NOUN	NNS	Number=Plur	14	nmod	14:nmod:on	Entity=person-2)person-4)abstract-5)abstract-6)
23	.	.	PUNCT	.	_	8	punct	8:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-3
# text = In his comical cartoons , he linked together chain reactions with simple machines to complete basic tasks , like turning on a lamp or frying an egg .
1	In	in	ADP	IN	_	4	case	4:case	Discourse=ROOT:6
2	his	his	PRON	PRP$	Gender=Masc|Number=Sing|Person=3|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(object-9(person-4)
3	comical	comical	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	cartoons	cartoon	NOUN	NNS	Number=Plur	7	obl	7:obl:in	Entity=object-9)
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	he	he	PRON	PRP	Case=Nom|Gender=Masc|Number=Sing|Person=3|PronType=Prs	7	nsubj	7:nsubj	Entity=(person-4)
7	linked	link	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	0	root	0:root	_
8	together	together	ADP	RP	_	7	compound:prt	7:compound:prt	_
9	chain	chain	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(event-10
10	reactions	reaction	NOUN	NNS	Number=Plur	7	obj	7:obj	_
11	with	with	ADP	IN	_	13	case	13:case	_
12	simple	simple	ADJ	JJ	Degree=Pos	13	amod	13:amod	Entity=(abstract-11
13	machines	machine	NOUN	NNS	Number=Plur	10	nmod	10:nmod:with	Entity=event-10)abstract-11)
14	to	to	PART	TO	_	15	mark	15:mark	Discourse=purpose:7->6
15	complete	complete	VERB	VB	VerbForm=Inf	7	advcl	7:advcl:to	_
16	basic	basic	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(abstract-12
17	tasks	task	NOUN	NNS	Number=Plur	15	obj	15:obj	_
18	,	,	PUNCT	,	_	20	punct	20:punct	_
19	like	like	SCONJ	IN	_	20	mark	20:mark	_
20	turning	turn	VERB	VBG	VerbForm=Ger	17	acl	17:acl:like	_
21	on	on	ADP	RP	_	20	compound:prt	20:compound:prt	_
22	a	a	DET	DT	Definite=Ind|PronType=Art	23	det	23:det	Entity=(object-13
23	lamp	lamp	NOUN	NN	Number=Sing	20	obj	20:obj	Entity=object-13)
24	or	or	CCONJ	CC	_	25	cc	25:cc	Discourse=contrast:8->6
25	frying	fry	VERB	VBG	VerbForm=Ger	20	conj	17:acl:like|20:conj:or	_
26	an	a	DET	DT	Definite=Ind|PronType=Art	27	det	27:det	Entity=(object-14
27	egg	egg	NOUN	NN	Number=Sing	25	obj	25:obj	Entity=abstract-12)object-14)
28	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-4
# text = Designing and building a Rube Goldberg machine requires innovation and patience .
1	Designing	design	VERB	VBG	VerbForm=Ger	8	csubj	8:csubj	Discourse=joint:9->6
2	and	and	CCONJ	CC	_	3	cc	3:cc	_
3	building	build	VERB	VBG	VerbForm=Ger	1	conj	1:conj:and|8:csubj	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(object-1
5	Rube	Rube	PROPN	NNP	Number=Sing	6	compound	6:compound	Entity=(person-2
6	Goldberg	Goldberg	PROPN	NNP	Number=Sing	7	compound	7:compound	Entity=person-2)
7	machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj|3:obj	Entity=object-1)
8	requires	require	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
9	innovation	innovation	NOUN	NN	Number=Sing	8	obj	8:obj	Entity=(abstract-15)
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	patience	patience	NOUN	NN	Number=Sing	9	conj	8:obj|9:conj:and	Entity=(abstract-16)
12	.	.	PUNCT	.	_	8	punct	8:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-5
# text = While every machine is different , many builders include versions of other people 's ideas , tweaking them or linking them in exciting ways .
1	While	while	SCONJ	IN	_	5	mark	5:mark	Discourse=concession:10->11
2	every	every	DET	DT	_	3	det	3:det	Entity=(object-1
3	machine	machine	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=object-1)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
5	different	different	ADJ	JJ	Degree=Pos	9	advcl	9:advcl:while	_
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	many	many	ADJ	JJ	Degree=Pos	8	amod	8:amod	Discourse=elaboration:11->9|Entity=(person-17
8	builders	builder	NOUN	NNS	Number=Plur	9	nsubj	9:nsubj	Entity=person-17)
9	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
10	versions	version	NOUN	NNS	Number=Plur	9	obj	9:obj	Entity=(abstract-18
11	of	of	ADP	IN	_	15	case	15:case	_
12	other	other	ADJ	JJ	Degree=Pos	13	amod	13:amod	Entity=(abstract-19(person-7
13	people	person	NOUN	NNS	Number=Plur	15	nmod:poss	15:nmod:poss	_
14	's	's	PART	POS	_	13	case	13:case	Entity=person-7)
15	ideas	idea	NOUN	NNS	Number=Plur	10	nmod	10:nmod:of	Entity=abstract-18)abstract-19)
16	,	,	PUNCT	,	_	17	punct	17:punct	_
17	tweaking	tweak	VERB	VBG	VerbForm=Ger	9	advcl	9:advcl	Discourse=elaboration:12->11
18	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	17	obj	17:obj	Entity=(abstract-19)
19	or	or	CCONJ	CC	_	20	cc	20:cc	Discourse=contrast:13->12
20	linking	link	VERB	VBG	VerbForm=Ger	17	conj	9:advcl|17:conj:or	_
21	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	20	obj	20:obj	Entity=(abstract-19)
22	in	in	ADP	IN	_	24	case	24:case	_
23	exciting	exciting	ADJ	JJ	Degree=Pos	24	amod	24:amod	Entity=(abstract-20
24	ways	way	NOUN	NNS	Number=Plur	20	obl	20:obl:in	Entity=abstract-20)
25	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-6
# text = Steps
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=joint:14->6|Entity=(abstract-21)

# s_type = ger
# sent_id = AMALGUM_whow_machine-7
# text = Preparing for the Assignment or Competition
1	Preparing	prepare	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=elaboration:15->14
2	for	for	ADP	IN	_	4	case	4:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-22
4	Assignment	assignment	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=abstract-22)
5	or	or	CCONJ	CC	_	6	cc	6:cc	_
6	Competition	Competition	PROPN	NNP	Number=Sing	4	conj	1:obl:for|4:conj:or	Entity=(organization-23)

# s_type = imp
# sent_id = AMALGUM_whow_machine-8
# text = Understand the rules .
1	Understand	understand	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:16->18
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-24
3	rules	rule	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=abstract-24)
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-9
# text = If you ’re building a Rube Goldberg machine for a class or official competition , you will get a packet of information and rules .
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:17->18
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-25)
3	’re	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	building	build	VERB	VBG	Tense=Pres|VerbForm=Part	18	advcl	18:advcl:if	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(object-1
6	Rube	Rube	PROPN	NNP	Number=Sing	7	compound	7:compound	Entity=(person-2
7	Goldberg	Goldberg	PROPN	NNP	Number=Sing	8	compound	8:compound	Entity=person-2)
8	machine	machine	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-1)
9	for	for	ADP	IN	_	11	case	11:case	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(event-26
11	class	class	NOUN	NN	Number=Sing	4	obl	4:obl:for	Entity=event-26)
12	or	or	CCONJ	CC	_	14	cc	14:cc	_
13	official	official	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(organization-23
14	competition	competition	NOUN	NN	Number=Sing	11	conj	4:obl:for|11:conj:or	Entity=organization-23)
15	,	,	PUNCT	,	_	4	punct	4:punct	_
16	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	18	nsubj	18:nsubj	Discourse=elaboration:18->15|Entity=(person-25)
17	will	will	AUX	MD	VerbForm=Fin	18	aux	18:aux	_
18	get	get	VERB	VB	VerbForm=Inf	0	root	0:root	_
19	a	a	DET	DT	Definite=Ind|PronType=Art	20	det	20:det	Entity=(object-27
20	packet	packet	NOUN	NN	Number=Sing	18	obj	18:obj	_
21	of	of	ADP	IN	_	22	case	22:case	_
22	information	information	NOUN	NN	Number=Sing	20	nmod	20:nmod:of	Entity=(abstract-28)
23	and	and	CCONJ	CC	_	24	cc	24:cc	_
24	rules	rule	NOUN	NNS	Number=Plur	22	conj	20:nmod:of|22:conj:and	Entity=object-27)(abstract-24)
25	.	.	PUNCT	.	_	18	punct	18:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-10
# text = Before you plan or build your machine , read through this material carefully .
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:19->20
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj|5:nsubj	Entity=(person-25)
3	plan	plan	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	9	advcl	9:advcl:before	_
4	or	or	CCONJ	CC	_	5	cc	5:cc	_
5	build	build	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	conj	3:conj:or|9:advcl:before	_
6	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=(object-1(person-25)
7	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj|5:obj	Entity=object-1)
8	,	,	PUNCT	,	_	3	punct	3:punct	_
9	read	read	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:20->18
10	through	through	ADP	IN	_	12	case	12:case	_
11	this	this	DET	DT	Number=Sing|PronType=Dem	12	det	12:det	Entity=(abstract-29
12	material	material	NOUN	NN	Number=Sing	9	obl	9:obl:through	Entity=abstract-29)
13	carefully	carefully	ADV	RB	Degree=Pos	9	advmod	9:advmod	_
14	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-11
# text = While you read , identify the goal , requirements , and restrictions .
1	While	while	SCONJ	IN	_	3	mark	3:mark	Discourse=concession:21->22
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	read	read	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	advcl	5:advcl:while	_
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	identify	identify	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:22->20
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-30
7	goal	goal	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-30)
8	,	,	PUNCT	,	_	9	punct	9:punct	_
9	requirements	requirement	NOUN	NNS	Number=Plur	7	conj	5:obj|7:conj:and	Entity=(abstract-31)
10	,	,	PUNCT	,	_	12	punct	12:punct	_
11	and	and	CCONJ	CC	_	12	cc	12:cc	_
12	restrictions	restriction	NOUN	NNS	Number=Plur	7	conj	5:obj|7:conj:and	Entity=(abstract-32)
13	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-12
# text = If the material is unclear , ask your teacher , parent , or an official to clarify .
1	If	if	SCONJ	IN	_	5	mark	5:mark	Discourse=condition:23->24
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-29
3	material	material	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=abstract-29)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
5	unclear	unclear	ADJ	JJ	Degree=Pos|Polarity=Neg	7	advcl	7:advcl:if	_
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	ask	ask	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:24->22
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(person-33(person-25)
9	teacher	teacher	NOUN	NN	Number=Sing	7	obj	7:obj|17:nsubj:xsubj	Entity=person-33)
10	,	,	PUNCT	,	_	11	punct	11:punct	_
11	parent	parent	NOUN	NN	Number=Sing	9	conj	7:nsubj:xsubj|9:conj:or|17:nsubj:xsubj	Entity=(person-34)
12	,	,	PUNCT	,	_	15	punct	15:punct	_
13	or	or	CCONJ	CC	_	15	cc	15:cc	_
14	an	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(person-35
15	official	official	NOUN	NN	Number=Sing	9	conj	7:nsubj:xsubj|9:conj:or|17:nsubj:xsubj	Entity=person-35)
16	to	to	PART	TO	_	17	mark	17:mark	Discourse=purpose:25->24
17	clarify	clarify	VERB	VB	VerbForm=Inf	7	xcomp	7:xcomp	_
18	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-13
# text = If you do n’t follow the rules , you may get a poor grade or be disqualified from the competition .
1	If	if	SCONJ	IN	_	5	mark	5:mark	Discourse=condition:26->27
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-25)
3	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
4	n’t	not	ADV	RB	Polarity=Neg	5	advmod	5:advmod	_
5	follow	follow	VERB	VB	VerbForm=Inf	11	advcl	11:advcl:if	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-24
7	rules	rule	NOUN	NNS	Number=Plur	5	obj	5:obj	Entity=abstract-24)
8	,	,	PUNCT	,	_	5	punct	5:punct	_
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	11	nsubj	11:nsubj|17:nsubj:pass	Discourse=joint:27->24|Entity=(person-25)
10	may	may	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
11	get	get	VERB	VB	VerbForm=Inf	0	root	0:root	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(abstract-36
13	poor	poor	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	grade	grade	NOUN	NN	Number=Sing	11	obj	11:obj	Entity=abstract-36)
15	or	or	CCONJ	CC	_	17	cc	17:cc	Discourse=contrast:28->27
16	be	be	AUX	VB	VerbForm=Inf	17	aux:pass	17:aux:pass	_
17	disqualified	disqualify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	conj	11:conj:or	_
18	from	from	ADP	IN	_	20	case	20:case	_
19	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(organization-23
20	competition	competition	NOUN	NN	Number=Sing	17	obl	17:obl:from	Entity=organization-23)
21	.	.	PUNCT	.	_	11	punct	11:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-14
# text = Select a basic task for your machine to accomplish .
1	Select	select	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:29->27
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-37
3	basic	basic	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	task	task	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	for	for	ADP	IN	_	7	case	7:case	_
6	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=(object-1(person-25)
7	machine	machine	NOUN	NN	Number=Sing	4	nmod	4:nmod:for	Entity=object-1)
8	to	to	PART	TO	_	9	mark	9:mark	Discourse=purpose:30->29
9	accomplish	accomplish	VERB	VB	VerbForm=Inf	4	acl	4:acl:to	Entity=abstract-37)
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-15
# text = Rube Goldberg machines are complex structures that rely on chain reactions to execute one simple task .
1	Rube	Rube	PROPN	NNP	Number=Sing	2	compound	2:compound	Discourse=sequence:31->29|Entity=(abstract-11(person-2
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	3	compound	3:compound	Entity=person-2)
3	machines	machine	NOUN	NNS	Number=Plur	6	nsubj	6:nsubj	Entity=abstract-11)
4	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	complex	complex	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-11
6	structures	structure	NOUN	NNS	Number=Plur	0	root	0:root|8:nsubj	_
7	that	that	PRON	WDT	PronType=Rel	8	nsubj	6:ref	Discourse=elaboration:32->31
8	rely	rely	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	acl:relcl	6:acl:relcl	_
9	on	on	ADP	IN	_	11	case	11:case	_
10	chain	chain	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(event-10(abstract-38)
11	reactions	reaction	NOUN	NNS	Number=Plur	8	obl	8:obl:on	Entity=abstract-11)event-10)
12	to	to	PART	TO	_	13	mark	13:mark	Discourse=purpose:33->32
13	execute	execute	VERB	VB	VerbForm=Inf	8	advcl	8:advcl:to	_
14	one	one	NUM	CD	NumForm=Word|NumType=Card	16	nummod	16:nummod	Entity=(abstract-37
15	simple	simple	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	task	task	NOUN	NN	Number=Sing	13	obj	13:obj	Entity=abstract-37)
17	.	.	PUNCT	.	_	6	punct	6:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-16
# text = Before you design your machine , determine what you want the machine to do .
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:34->35
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	design	design	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	7	advcl	7:advcl:before	Entity=(abstract-39)
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-1(person-25)
5	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-1)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	determine	determine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:35->31
8	what	what	PRON	WP	PronType=Rel	7	obj	7:obj	_
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Entity=(person-25)
10	want	want	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	8	acl:relcl	8:acl:relcl	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-1
12	machine	machine	NOUN	NN	Number=Sing	10	obj	10:obj|14:nsubj:xsubj	Entity=object-1)
13	to	to	PART	TO	_	14	mark	14:mark	_
14	do	do	VERB	VB	VerbForm=Inf	10	xcomp	10:xcomp	_
15	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_machine-17
# text = If you are competing in a Rube Goldberg competition or completing an assignment for school , you may not have the freedom to choose this task .
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:36->38
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj|11:nsubj	Entity=(person-25)
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux|11:aux	_
4	competing	compet	VERB	VBG	Tense=Pres|VerbForm=Part	20	advcl	20:advcl:if	_
5	in	in	ADP	IN	_	9	case	9:case	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(organization-23
7	Rube	Rube	PROPN	NNP	Number=Sing	9	compound	9:compound	Entity=(person-2)
8	Goldberg	Goldberg	PROPN	NNP	Number=Sing	9	compound	9:compound	Entity=(person-2)
9	competition	competition	NOUN	NN	Number=Sing	4	obl	4:obl:in	Entity=organization-23)
10	or	or	CCONJ	CC	_	11	cc	11:cc	Discourse=contrast:37->36
11	completing	complete	VERB	VBG	VerbForm=Ger	4	conj	4:conj:or|20:advcl:if	_
12	an	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(event-40
13	assignment	assignment	NOUN	NN	Number=Sing	11	obj	11:obj	Entity=event-40)
14	for	for	ADP	IN	_	15	case	15:case	_
15	school	school	NOUN	NN	Number=Sing	11	obl	11:obl:for	Entity=(organization-41)
16	,	,	PUNCT	,	_	4	punct	4:punct	_
17	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	20	nsubj	20:nsubj	Discourse=joint:38->35|Entity=(person-25)
18	may	may	AUX	MD	VerbForm=Fin	20	aux	20:aux	_
19	not	not	ADV	RB	Polarity=Neg	20	advmod	20:advmod	_
20	have	have	VERB	VB	VerbForm=Inf	0	root	0:root	_
21	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-42
22	freedom	freedom	NOUN	NN	Number=Sing	20	obj	20:obj	_
23	to	to	PART	TO	_	24	mark	24:mark	Discourse=purpose:39->38
24	choose	choose	VERB	VB	VerbForm=Inf	22	acl	22:acl:to	_
25	this	this	DET	DT	Number=Sing|PronType=Dem	26	det	26:det	Entity=(abstract-37
26	task	task	NOUN	NN	Number=Sing	24	obj	24:obj	Entity=abstract-42)abstract-37)
27	.	.	PUNCT	.	_	20	punct	20:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-18
# text = If can pick , consider some of the following options :
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:40->41
2	can	can	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	pick	pick	VERB	VB	VerbForm=Inf	5	advcl	5:advcl:if	_
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	consider	consider	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=condition:41->42
6	some	some	PRON	DT	_	5	obj	5:obj	Entity=(abstract-11
7	of	of	ADP	IN	_	10	case	10:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-43
9	following	follow	VERB	VBG	VerbForm=Ger	10	amod	10:amod	_
10	options	option	NOUN	NNS	Number=Plur	6	nmod	6:nmod:of	Entity=abstract-11)abstract-43)
11	:	:	PUNCT	:	_	5	punct	5:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-19
# text = Open or close a door
1	Open	Open	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=contrast:42->38
2	or	or	CCONJ	CC	_	3	cc	3:cc	_
3	close	close	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:or	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(object-44
5	door	door	NOUN	NN	Number=Sing	1	obj	1:obj|3:obj	Entity=object-44)

# s_type = inf
# sent_id = AMALGUM_whow_machine-20
# text = Turn on a light
1	Turn	turn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:43->42
2	on	on	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-45
4	light	light	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-45)

# s_type = inf
# sent_id = AMALGUM_whow_machine-21
# text = Turn off an alarm
1	Turn	turn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:44->43
2	off	off	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	an	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-46
4	alarm	alarm	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-46)

# s_type = imp
# sent_id = AMALGUM_whow_machine-22
# text = Pour a bowl of cereal
1	Pour	pour	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:45->44
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-47
3	bowl	bowl	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	cereal	cereal	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=object-47)(object-48)

# s_type = inf
# sent_id = AMALGUM_whow_machine-23
# text = Turn on a faucet
1	Turn	turn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:46->45
2	on	on	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-49
4	faucet	faucet	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-49)

# s_type = imp
# sent_id = AMALGUM_whow_machine-24
# text = Look for inspiration .
1	Look	look	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:47->46
2	for	for	ADP	IN	_	3	case	3:case	_
3	inspiration	inspiration	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=(abstract-50)
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-25
# text = Developing a zany , complex machine is not an easy task .
1	Developing	Develop	VERB	VBG	VerbForm=Ger	11	csubj	11:csubj	Discourse=elaboration:48->47
2	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-1
3	zany	zany	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	complex	complex	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-1)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	11:cop	_
8	not	not	ADV	RB	Polarity=Neg	11	advmod	11:advmod	_
9	an	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(abstract-37
10	easy	easy	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	task	task	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-37)
12	.	.	PUNCT	.	_	11	punct	11:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-26
# text = Before you create your own Rube Goldberg machine , you may find it helpful to see some examples .
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:49->50
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	create	create	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	12	advcl	12:advcl:before	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(object-1(person-25)
5	own	own	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
6	Rube	Rube	PROPN	NNP	Number=Sing	7	compound	7:compound	Entity=(person-2
7	Goldberg	Goldberg	PROPN	NNP	Number=Sing	8	compound	8:compound	Entity=person-2)
8	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-1)
9	,	,	PUNCT	,	_	3	punct	3:punct	_
10	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	12	nsubj	12:nsubj	Discourse=joint:50->48|Entity=(person-25)
11	may	may	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
12	find	find	VERB	VB	VerbForm=Inf	0	root	0:root	_
13	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	obj	12:obj|14:nsubj:xsubj	Entity=(object-1)
14	helpful	helpful	ADJ	JJ	Degree=Pos	12	xcomp	12:xcomp	_
15	to	to	PART	TO	_	16	mark	16:mark	_
16	see	see	VERB	VB	VerbForm=Inf	14	xcomp	14:xcomp	_
17	some	some	DET	DT	_	18	det	18:det	Entity=(abstract-51
18	examples	example	NOUN	NNS	Number=Plur	16	obj	16:obj	Entity=abstract-51)
19	.	.	PUNCT	.	_	12	punct	12:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-27
# text = While you should use these examples as a source of inspiration and direction , do not copy someone else ’s machine .
1	While	while	SCONJ	IN	_	4	mark	4:mark	Discourse=concession:51->52
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-25)
3	should	should	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	use	use	VERB	VB	VerbForm=Inf	17	advcl	17:advcl:while	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	6:det	Entity=(abstract-51
6	examples	example	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-51)
7	as	as	ADP	IN	_	9	case	9:case	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(abstract-52
9	source	source	NOUN	NN	Number=Sing	4	obl	4:obl:as	_
10	of	of	ADP	IN	_	11	case	11:case	_
11	inspiration	inspiration	NOUN	NN	Number=Sing	9	nmod	9:nmod:of	Entity=(abstract-50)
12	and	and	CCONJ	CC	_	13	cc	13:cc	_
13	direction	direction	NOUN	NN	Number=Sing	11	conj	9:nmod:of|11:conj:and	Entity=abstract-52)(abstract-53)
14	,	,	PUNCT	,	_	4	punct	4:punct	_
15	do	do	AUX	VB	VerbForm=Inf	17	aux	17:aux	Discourse=contrast:52->50
16	not	not	ADV	RB	Polarity=Neg	17	advmod	17:advmod	_
17	copy	copy	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
18	someone	someone	NOUN	NN	Number=Sing	21	nmod:poss	21:nmod:poss	Entity=(object-1(person-54
19	else	else	ADV	RB	Degree=Pos	18	case	18:case	_
20	’s	's	PART	POS	_	18	case	18:case	Entity=person-54)
21	machine	machine	NOUN	NN	Number=Sing	17	obj	17:obj	Entity=object-1)
22	.	.	PUNCT	.	_	17	punct	17:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-28
# text = Instead of replicating these machines , make it your goal to improve , alter , or modernize them .
1	Instead	instead	SCONJ	RB	Degree=Pos	3	mark	3:mark	Discourse=antithesis:53->54
2	of	of	ADP	IN	_	1	fixed	1:fixed	_
3	replicating	replicate	VERB	VBG	VerbForm=Ger	7	advcl	7:advcl:instead_of	_
4	these	this	DET	DT	Number=Plur|PronType=Dem	5	det	5:det	Entity=(abstract-11
5	machines	machine	NOUN	NNS	Number=Plur	3	obj	3:obj	Entity=abstract-11)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:54->52
8	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	7	obj	7:obj|10:nsubj:xsubj	Entity=(object-1)
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(person-25)
10	goal	goal	NOUN	NN	Number=Sing	7	xcomp	7:xcomp	_
11	to	to	PART	TO	_	12	mark	12:mark	Discourse=purpose:55->54
12	improve	improve	VERB	VB	VerbForm=Inf	10	acl	10:acl:to	_
13	,	,	PUNCT	,	_	14	punct	14:punct	_
14	alter	alter	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	12	conj	10:acl:to|12:conj:or	_
15	,	,	PUNCT	,	_	17	punct	17:punct	_
16	or	or	CCONJ	CC	_	17	cc	17:cc	_
17	modernize	modernize	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	12	conj	10:acl:to|12:conj:or	_
18	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	12	obj	12:obj|14:obj|17:obj	Entity=(abstract-11)
19	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-29
# text = Potential sources of inspiration include :
1	Potential	Potential	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=preparation:56->57|Entity=(abstract-55
2	sources	source	NOUN	NNS	Number=Plur	5	nsubj	5:nsubj	_
3	of	of	ADP	IN	_	4	case	4:case	_
4	inspiration	inspiration	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-55)(abstract-50)
5	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	:	:	PUNCT	:	_	5	punct	5:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-30
# text = Rube Goldberg ’s original cartoons
1	Rube	Rube	PROPN	NNP	Number=Sing	5	nmod:poss	5:nmod:poss	Discourse=joint:57->15|Entity=(object-56(person-2
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	1	flat	1:flat	_
3	’s	's	PART	POS	_	1	case	1:case	Entity=person-2)
4	original	original	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	cartoons	cartoon	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-56)

# s_type = frag
# sent_id = AMALGUM_whow_machine-31
# text = Rube Goldberg Competition submissions
1	Rube	Rube	PROPN	NNP	Number=Sing	3	compound	3:compound	Discourse=joint:58->57|Entity=(event-57(organization-23(person-2
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	1	flat	1:flat	Entity=person-2)
3	Competition	Competition	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=organization-23)
4	submissions	submission	NOUN	NNS	Number=Plur	0	root	0:root	Entity=event-57)

# s_type = frag
# sent_id = AMALGUM_whow_machine-32
# text = YouTube videos of functioning Rube Goldberg machines
1	YouTube	YouTube	PROPN	NNP	Number=Sing	2	compound	2:compound	Discourse=elaboration:59->58|Entity=(abstract-58(place-59)
2	videos	video	NOUN	NNS	Number=Plur	0	root	0:root	_
3	of	of	ADP	IN	_	7	case	7:case	_
4	functioning	function	VERB	VBG	VerbForm=Ger	7	amod	7:amod	Entity=(abstract-11
5	Rube	Rube	PROPN	NNP	Number=Sing	6	compound	6:compound	Entity=(person-2
6	Goldberg	Goldberg	PROPN	NNP	Number=Sing	7	compound	7:compound	Entity=person-2)
7	machines	machine	NOUN	NNS	Number=Plur	2	nmod	2:nmod:of	Entity=abstract-58)abstract-11)

# s_type = ger
# sent_id = AMALGUM_whow_machine-33
# text = Designing Your Machine
1	Designing	design	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=elaboration:60->59
2	Your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-1(person-25)
3	Machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-1)

# s_type = imp
# sent_id = AMALGUM_whow_machine-34
# text = Collect your materials .
1	Collect	collect	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:61->62
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(substance-60(person-25)
3	materials	material	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=substance-60)
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-35
# text = Rube Goldberg machines transform traditional building materials , everyday items , and unique objects into functional pieces of equipment that work together to execute a simple task .
1	Rube	Rube	PROPN	NNP	Number=Sing	2	compound	2:compound	Discourse=joint:62->60|Entity=(abstract-11(person-2
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	3	compound	3:compound	Entity=person-2)
3	machines	machine	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=abstract-11)
4	transform	transform	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	traditional	traditional	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(substance-60(substance-60
6	building	building	NOUN	NN	Number=Sing	7	compound	7:compound	_
7	materials	material	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=substance-60)
8	,	,	PUNCT	,	_	10	punct	10:punct	_
9	everyday	everyday	ADJ	JJ	Degree=Pos	10	amod	10:amod	Entity=(object-61
10	items	item	NOUN	NNS	Number=Plur	7	conj	4:obj|7:conj:and	Entity=object-61)
11	,	,	PUNCT	,	_	14	punct	14:punct	_
12	and	and	CCONJ	CC	_	14	cc	14:cc	_
13	unique	unique	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(object-62
14	objects	object	NOUN	NNS	Number=Plur	7	conj	4:obj|7:conj:and	Entity=substance-60)object-62)
15	into	into	ADP	IN	_	17	case	17:case	_
16	functional	functional	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(object-63
17	pieces	piece	NOUN	NNS	Number=Plur	4	obl	4:obl:into	_
18	of	of	ADP	IN	_	19	case	19:case	_
19	equipment	equipment	NOUN	NN	Number=Sing	17	nmod	17:nmod:of|21:nsubj	Entity=(object-64
20	that	that	PRON	WDT	PronType=Rel	21	nsubj	19:ref	Discourse=elaboration:63->62
21	work	work	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	acl:relcl	19:acl:relcl	Entity=(abstract-65)
22	together	together	ADV	RB	Degree=Pos	21	advmod	21:advmod	Entity=object-63)object-64)
23	to	to	PART	TO	_	24	mark	24:mark	Discourse=purpose:64->63
24	execute	execute	VERB	VB	VerbForm=Inf	21	advcl	21:advcl:to	_
25	a	a	DET	DT	Definite=Ind|PronType=Art	27	det	27:det	Entity=(abstract-37
26	simple	simple	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	task	task	NOUN	NN	Number=Sing	24	obj	24:obj	Entity=abstract-37)
28	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-36
# text = Spend time gathering items from around your house , purchasing materials from stores , and/or hunting for unique objects at flea markets .
1	Spend	spend	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:65->62
2	time	time	NOUN	NN	Number=Sing	1	obj	1:obj|3:nsubj:xsubj|10:nsubj:xsubj|16:nsubj:xsubj	Entity=(time-66)
3	gathering	gather	VERB	VBG	VerbForm=Ger	1	xcomp	1:xcomp	_
4	items	item	NOUN	NNS	Number=Plur	3	obj	3:obj	Entity=(object-61)
5	from	from	ADP	IN	_	8	case	8:case	_
6	around	around	ADP	IN	_	8	case	8:case	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(place-67(person-25)
8	house	house	NOUN	NN	Number=Sing	3	obl	3:obl:from_around	Entity=place-67)
9	,	,	PUNCT	,	_	10	punct	10:punct	_
10	purchasing	purchase	VERB	VBG	VerbForm=Ger	3	conj	1:xcomp|3:conj:and/or	Discourse=elaboration:66->65
11	materials	material	NOUN	NNS	Number=Plur	10	obj	10:obj	Entity=(substance-60)
12	from	from	ADP	IN	_	13	case	13:case	_
13	stores	store	NOUN	NNS	Number=Plur	10	obl	10:obl:from	Entity=(place-68)
14	,	,	PUNCT	,	_	16	punct	16:punct	_
15	and/or	and/or	CCONJ	CC	_	16	cc	16:cc	Discourse=joint:67->66
16	hunting	hunting	NOUN	NN	Number=Sing	3	conj	1:xcomp|3:conj:and/or	_
17	for	for	ADP	IN	_	19	case	19:case	_
18	unique	unique	ADJ	JJ	Degree=Pos	19	amod	19:amod	Entity=(object-62
19	objects	object	NOUN	NNS	Number=Plur	16	obl	16:obl:for	Entity=object-62)
20	at	at	ADP	IN	_	22	case	22:case	_
21	flea	flea	NOUN	NN	Number=Sing	22	compound	22:compound	Entity=(place-69(place-70)
22	markets	market	NOUN	NNS	Number=Plur	16	obl	16:obl:at	Entity=place-69)
23	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-37
# text = Possible building materials include :
1	Possible	Possible	ADJ	JJ	Degree=Pos	3	amod	3:amod	Discourse=preparation:68->84|Entity=(substance-60
2	building	building	NOUN	NN	Number=Sing	3	compound	3:compound	_
3	materials	material	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=substance-60)
4	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	:	:	PUNCT	:	_	4	punct	4:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-38
# text = Dominos
1	Dominos	Dominos	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=preparation:69->84|Entity=(organization-71)

# s_type = frag
# sent_id = AMALGUM_whow_machine-39
# text = Wooden boards
1	Wooden	Wooden	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=preparation:70->84|Entity=(object-72
2	boards	board	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-72)

# s_type = frag
# sent_id = AMALGUM_whow_machine-40
# text = Toilet paper rolls
1	Toilet	Toilet	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:71->84|Entity=(object-73(substance-74
2	paper	paper	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=substance-74)
3	rolls	roll	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-73)

# s_type = frag
# sent_id = AMALGUM_whow_machine-41
# text = CDs or floppy discs
1	CDs	CD	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:72->84|Entity=(object-75)
2	or	or	CCONJ	CC	_	4	cc	4:cc	_
3	floppy	floppy	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-76
4	discs	disc	NOUN	NNS	Number=Plur	1	conj	1:conj:or	Entity=object-76)

# s_type = frag
# sent_id = AMALGUM_whow_machine-42
# text = Fans
1	Fans	fan	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:73->84|Entity=(person-77)

# s_type = frag
# sent_id = AMALGUM_whow_machine-43
# text = Toy cars
1	Toy	toy	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:74->84|Entity=(object-78(person-79)
2	cars	car	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-78)

# s_type = frag
# sent_id = AMALGUM_whow_machine-44
# text = Skateboards
1	Skateboards	skateboard	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:75->84|Entity=(abstract-80)

# s_type = frag
# sent_id = AMALGUM_whow_machine-45
# text = Action figures
1	Action	Action	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:76->84|Entity=(abstract-81(person-82)
2	figures	figure	NOUN	NNS	Number=Plur	0	root	0:root	Entity=abstract-81)

# s_type = frag
# sent_id = AMALGUM_whow_machine-46
# text = PVC pipe
1	PVC	PVC	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:77->84|Entity=(object-83(object-84)
2	pipe	pipe	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-83)

# s_type = frag
# sent_id = AMALGUM_whow_machine-47
# text = Duct Tape
1	Duct	duct	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:78->84|Entity=(object-85(abstract-86)
2	Tape	tape	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-85)

# s_type = frag
# sent_id = AMALGUM_whow_machine-48
# text = Peg boards
1	Peg	Peg	PROPN	NNP	Number=Sing	2	compound	2:compound	Discourse=preparation:79->84|Entity=(object-72(person-87)
2	boards	board	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-72)

# s_type = frag
# sent_id = AMALGUM_whow_machine-49
# text = Zip Ties
1	Zip	Zip	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=preparation:80->84|Entity=(object-88(person-89)
2	Ties	tie	NOUN	NNS	Number=Plur	0	root	0:root	Entity=object-88)

# s_type = frag
# sent_id = AMALGUM_whow_machine-50
# text = Magnets
1	Magnets	magnet	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:81->84|Entity=(object-90)

# s_type = frag
# sent_id = AMALGUM_whow_machine-51
# text = Marbles
1	Marbles	Marbles	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:82->84|Entity=(person-91)

# s_type = frag
# sent_id = AMALGUM_whow_machine-52
# text = String
1	String	string	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:83->84|Entity=(abstract-92)

# s_type = imp
# sent_id = AMALGUM_whow_machine-53
# text = Get creative !
1	Get	get	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:84->65
2	creative	creative	ADJ	JJ	Degree=Pos	1	xcomp	1:xcomp	_
3	!	!	PUNCT	.	_	2	punct	2:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-54
# text = Experiment with the materials .
1	Experiment	experiment	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:85->84
2	with	with	ADP	IN	_	4	case	4:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(substance-60
4	materials	material	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=substance-60)
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-55
# text = Lay out all of your materials on your work surface .
1	Lay	lay	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:86->85
2	out	out	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	all	all	PRON	DT	_	1	obj	1:obj	Entity=(substance-60
4	of	of	ADP	IN	_	6	case	6:case	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(person-25)
6	materials	material	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of	Entity=substance-60)
7	on	on	ADP	IN	_	10	case	10:case	_
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(object-93(abstract-65(person-25)
9	work	work	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=abstract-65)
10	surface	surface	NOUN	NN	Number=Sing	1	obl	1:obl:on	Entity=object-93)
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-56
# text = Once you ’re organized , start playing with the items .
1	Once	once	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:87->88
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj:pass	4:nsubj:pass	Entity=(person-25)
3	’re	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	organized	organize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	advcl	6:advcl:once	_
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	start	start	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:88->86
7	playing	play	VERB	VBG	VerbForm=Ger	6	xcomp	6:xcomp	_
8	with	with	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-61
10	items	item	NOUN	NNS	Number=Plur	7	obl	7:obl:with	Entity=object-61)
11	.	.	PUNCT	.	_	6	punct	6:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-57
# text = As you experiment , combine the materials in unexpected ways to form chain reactions .
1	As	as	SCONJ	IN	_	3	mark	3:mark	Discourse=circumstance:89->90
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	experiment	experiment	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	advcl	5:advcl:as	_
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	combine	combine	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	Discourse=joint:90->88
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(substance-60
7	materials	material	NOUN	NNS	Number=Plur	5	obj	5:obj	Entity=substance-60)
8	in	in	ADP	IN	_	10	case	10:case	_
9	unexpected	unexpected	ADJ	JJ	Degree=Pos|Polarity=Neg	10	amod	10:amod	Entity=(abstract-94
10	ways	way	NOUN	NNS	Number=Plur	5	obl	5:obl:in	Entity=abstract-94)
11	to	to	PART	TO	_	12	mark	12:mark	Discourse=purpose:91->90
12	form	form	VERB	VB	VerbForm=Inf	5	advcl	5:advcl:to	_
13	chain	chain	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(event-95(abstract-96)
14	reactions	reaction	NOUN	NNS	Number=Plur	12	obj	12:obj	Entity=event-95)
15	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-58
# text = While you work , keep a record of what combinations worked .
1	While	while	SCONJ	IN	_	3	mark	3:mark	Discourse=concession:92->93
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	work	work	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	5	advcl	5:advcl:while	_
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	keep	keep	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:93->90
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(abstract-97
7	record	record	NOUN	NN	Number=Sing	5	obj	5:obj	_
8	of	of	ADP	IN	_	11	case	11:case	_
9	what	what	DET	WDT	PronType=Int	10	det	10:det	Entity=(abstract-98
10	combinations	combination	NOUN	NNS	Number=Plur	11	nsubj	11:nsubj	Entity=abstract-98)
11	worked	work	VERB	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	7	acl	7:acl	Entity=abstract-97)
12	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-59
# text = Ask yourself questions throughout the process .
1	Ask	ask	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:94->93
2	yourself	yourself	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs|Reflex=Yes	1	iobj	1:iobj	Entity=(person-25)
3	questions	question	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=(abstract-99)
4	throughout	throughout	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(event-100
6	process	process	NOUN	NN	Number=Sing	1	obl	1:obl:throughout	Entity=event-100)
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = wh
# sent_id = AMALGUM_whow_machine-60
# text = What object can you use to send a car down a wooden ramp ?
1	What	what	DET	WDT	PronType=Int	2	det	2:det	Discourse=joint:95->94|Entity=(object-101
2	object	object	NOUN	NN	Number=Sing	5	obj	5:obj|7:nsubj:xsubj	Entity=object-101)
3	can	can	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
4	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-25)
5	use	use	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	to	to	PART	TO	_	7	mark	7:mark	Discourse=purpose:96->95
7	send	send	VERB	VB	VerbForm=Inf	5	xcomp	5:xcomp	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-102
9	car	car	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-102)
10	down	down	ADP	IN	_	13	case	13:case	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(object-103
12	wooden	wooden	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
13	ramp	ramp	NOUN	NN	Number=Sing	7	obl	7:obl:down	Entity=object-103)
14	?	?	PUNCT	.	_	5	punct	5:punct	_

# s_type = wh
# sent_id = AMALGUM_whow_machine-61
# text = What materials will you need to make a pendulum ?
1	What	what	DET	WDT	PronType=Int	2	det	2:det	Discourse=joint:97->95|Entity=(substance-60
2	materials	material	NOUN	NNS	Number=Plur	5	obj	5:obj|7:nsubj:xsubj	Entity=substance-60)
3	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
4	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-25)
5	need	need	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	to	to	PART	TO	_	7	mark	7:mark	Discourse=purpose:98->97
7	make	make	VERB	VB	VerbForm=Inf	5	xcomp	5:xcomp	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-104
9	pendulum	pendulum	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-104)
10	?	?	PUNCT	.	_	5	punct	5:punct	_

# s_type = wh
# sent_id = AMALGUM_whow_machine-62
# text = What can you make with a lever , a marble , and an action figure ?
1	What	what	PRON	WP	PronType=Int	4	obj	4:obj	Discourse=question:99->100
2	can	can	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
3	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-25)
4	make	make	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	with	with	ADP	IN	_	7	case	7:case	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(object-105
7	lever	lever	NOUN	NN	Number=Sing	4	obl	4:obl:with	Entity=object-105)
8	,	,	PUNCT	,	_	10	punct	10:punct	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(object-106
10	marble	marble	NOUN	NN	Number=Sing	7	conj	4:obl:with|7:conj:and	Entity=object-106)
11	,	,	PUNCT	,	_	15	punct	15:punct	_
12	and	and	CCONJ	CC	_	15	cc	15:cc	_
13	an	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(object-107
14	action	action	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(event-108)
15	figure	figure	NOUN	NN	Number=Sing	7	conj	4:obl:with|7:conj:and	Entity=object-107)
16	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-63
# text = Develop a building plan .
1	Develop	develop	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:100->97
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-109
3	building	building	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(place-110)
4	plan	plan	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-109)
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-64
# text = Rube Goldberg machines complete a simple task with a complex chain reaction .
1	Rube	Rube	PROPN	NNP	Number=Sing	3	compound	3:compound	Discourse=joint:101->100|Entity=(object-111(person-2)
2	Goldberg	Goldberg	PROPN	NNP	Number=Sing	3	compound	3:compound	Entity=(person-2)
3	machines	machine	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=object-111)
4	complete	complete	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(abstract-112
6	simple	simple	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	task	task	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-112)
8	with	with	ADP	IN	_	12	case	12:case	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(event-113
10	complex	complex	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
11	chain	chain	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-96)
12	reaction	reaction	NOUN	NN	Number=Sing	4	obl	4:obl:with	Entity=event-113)
13	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-65
# text = You can break down the chain reaction into several different steps , or phases .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=joint:102->101|Entity=(person-25)
2	can	can	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	break	break	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	down	down	ADP	RP	_	3	compound:prt	3:compound:prt	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(event-113
6	chain	chain	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-96)
7	reaction	reaction	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=event-113)
8	into	into	ADP	IN	_	11	case	11:case	_
9	several	several	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(abstract-114
10	different	different	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	steps	step	NOUN	NNS	Number=Plur	3	obl	3:obl:into	Entity=abstract-114)
12	,	,	PUNCT	,	_	14	punct	14:punct	_
13	or	or	CCONJ	CC	_	14	cc	14:cc	_
14	phases	phase	NOUN	NNS	Number=Plur	11	conj	3:obl:into|11:conj:or	Entity=(abstract-115)
15	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-66
# text = The steps are connected together by a link .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:103->102|Entity=(abstract-114
2	steps	step	NOUN	NNS	Number=Plur	4	nsubj:pass	4:nsubj:pass	Entity=abstract-114)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	connected	connect	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
5	together	together	ADV	RB	Degree=Pos	4	advmod	4:advmod	_
6	by	by	ADP	IN	_	8	case	8:case	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-116
8	link	link	NOUN	NN	Number=Sing	4	obl	4:obl:by	Entity=abstract-116)
9	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-67
# text = When you design the machine , it is helpful to start with the last step and work your way to the first step .
1	When	when	SCONJ	WRB	PronType=Int	3	mark	3:mark	Discourse=circumstance:104->105
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	design	design	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	9	advcl	9:advcl:when	Entity=(abstract-39)
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-117
5	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-117)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	9	expl	9:expl	Discourse=joint:105->103|Entity=(object-117)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	9:cop	_
9	helpful	helpful	ADJ	JJ	Degree=Pos	0	root	0:root	_
10	to	to	PART	TO	_	11	mark	11:mark	_
11	start	start	VERB	VB	VerbForm=Inf	9	csubj	9:csubj	_
12	with	with	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(event-118
14	last	last	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	step	step	NOUN	NN	Number=Sing	11	obl	11:obl:with	Entity=event-118)
16	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:106->105
17	work	work	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	11	conj	9:csubj|11:conj:and	_
18	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	19	nmod:poss	19:nmod:poss	Entity=(abstract-119(person-25)
19	way	way	NOUN	NN	Number=Sing	17	obj	17:obj	Entity=abstract-119)
20	to	to	ADP	IN	_	23	case	23:case	_
21	the	the	DET	DT	Definite=Def|PronType=Art	23	det	23:det	Entity=(abstract-120
22	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	23	amod	23:amod	_
23	step	step	NOUN	NN	Number=Sing	17	obl	17:obl:to	Entity=abstract-120)
24	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_machine-68
# text = You can create the building plan by listing these steps or drawing the machine .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:107->105|Entity=(person-25)
2	can	can	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	create	create	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-109
5	building	building	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(place-110)
6	plan	plan	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=abstract-109)
7	by	by	SCONJ	IN	_	8	mark	8:mark	Discourse=means:108->107
8	listing	list	VERB	VBG	VerbForm=Ger	3	advcl	3:advcl:by	_
9	these	this	DET	DT	Number=Plur|PronType=Dem	10	det	10:det	Entity=(abstract-114
10	steps	step	NOUN	NNS	Number=Plur	8	obj	8:obj	Entity=abstract-114)
11	or	or	CCONJ	CC	_	12	cc	12:cc	Discourse=contrast:109->108
12	drawing	draw	VERB	VBG	VerbForm=Ger	8	conj	3:advcl:by|8:conj:or	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(object-117
14	machine	machine	NOUN	NN	Number=Sing	12	obj	12:obj	Entity=object-117)
15	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-69
# text = For example :
1	For	for	ADP	IN	_	2	case	2:case	Discourse=preparation:110->112
2	example	example	NOUN	NN	Number=Sing	0	root	0:root	_
3	:	:	PUNCT	:	_	2	punct	2:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-70
# text = Task : Pop a balloon .
1	Task	task	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:111->112|Entity=(abstract-112)
2	:	:	PUNCT	:	_	3	punct	3:punct	_
3	Pop	pop	VERB	VB	VerbForm=Inf	1	dep	1:dep	Discourse=joint:112->107
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(object-121
5	balloon	balloon	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-121)
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-71
# text = Step 3 : A tack will pop the balloon .
1	Step	step	NOUN	NN	Number=Sing	7	vocative	7:vocative	Discourse=preparation:113->114|Entity=(abstract-120
2	3	3	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-120)
3	:	:	PUNCT	:	_	1	punct	1:punct	_
4	A	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Discourse=joint:114->112|Entity=(object-122
5	tack	tack	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=object-122)
6	will	will	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
7	pop	pop	VERB	VB	VerbForm=Inf	0	root	0:root	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-121
9	balloon	balloon	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-121)
10	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-72
# text = The tack will be attached to the front of a toy car .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=elaboration:115->114|Entity=(object-122
2	tack	tack	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=object-122)
3	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
4	be	be	AUX	VB	VerbForm=Inf	5	aux:pass	5:aux:pass	_
5	attached	attach	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	to	to	ADP	IN	_	8	case	8:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-123
8	front	front	NOUN	NN	Number=Sing	5	obl	5:obl:to	_
9	of	of	ADP	IN	_	12	case	12:case	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(object-102
11	toy	toy	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(object-124)
12	car	car	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=object-123)object-102)
13	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-73
# text = Link 1 : The toy car will slide down a wooden ramp .
1	Link	link	NOUN	NN	Number=Sing	0	root	0:root	Discourse=elaboration:116->115|Entity=(abstract-116
2	1	1	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-116)
3	:	:	PUNCT	:	_	8	punct	8:punct	_
4	The	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Discourse=elaboration:117->116|Entity=(object-102
5	toy	toy	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(object-124)
6	car	car	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-102)
7	will	will	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
8	slide	slide	VERB	VB	VerbForm=Inf	1	parataxis	1:parataxis	_
9	down	down	ADP	IN	_	12	case	12:case	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(object-103
11	wooden	wooden	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	ramp	ramp	NOUN	NN	Number=Sing	8	obl	8:obl:down	Entity=object-103)
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-74
# text = Step 2 : A pendulum will swing into the car and push it down the wooden ramp .
1	Step	step	NOUN	NN	Number=Sing	0	root	0:root	Discourse=preparation:118->119|Entity=(abstract-120
2	2	2	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-120)
3	:	:	PUNCT	:	_	7	punct	7:punct	_
4	A	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Discourse=joint:119->94|Entity=(object-104
5	pendulum	pendulum	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=object-104)
6	will	will	AUX	MD	VerbForm=Fin	7	aux	7:aux|12:aux	_
7	swing	swe	VERB	VB	VerbForm=Inf	1	parataxis	1:parataxis	_
8	into	into	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-102
10	car	car	NOUN	NN	Number=Sing	7	obl	7:obl:into	Entity=object-102)
11	and	and	CCONJ	CC	_	12	cc	12:cc	Discourse=joint:120->119
12	push	push	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	7	conj	7:conj:and	_
13	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	obj	12:obj	Entity=(object-103)
14	down	down	ADP	IN	_	17	case	17:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(object-103
16	wooden	wooden	ADJ	JJ	Degree=Pos	17	amod	17:amod	_
17	ramp	ramp	NOUN	NN	Number=Sing	12	obl	12:obl:down	Entity=object-103)
18	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-75
# text = Step 1 : I will send the pendulum towards the car at the top of the wooden ramp .
1	Step	step	NOUN	NN	Number=Sing	6	vocative	6:vocative	Discourse=preparation:121->122|Entity=(abstract-120
2	1	1	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-120)
3	:	:	PUNCT	:	_	1	punct	1:punct	_
4	I	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	6	nsubj	6:nsubj	Discourse=joint:122->119|Entity=(person-125)
5	will	will	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
6	send	send	VERB	VB	VerbForm=Inf	0	root	0:root	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-104
8	pendulum	pendulum	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=object-104)
9	towards	towards	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-102
11	car	car	NOUN	NN	Number=Sing	6	obl	6:obl:towards	_
12	at	at	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(place-126
14	top	top	NOUN	NN	Number=Sing	11	nmod	11:nmod:at	_
15	of	of	ADP	IN	_	18	case	18:case	_
16	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(object-103
17	wooden	wooden	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	ramp	ramp	NOUN	NN	Number=Sing	14	nmod	14:nmod:of	Entity=object-102)place-126)object-103)
19	.	.	PUNCT	.	_	6	punct	6:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-76
# text = Build a prototype .
1	Build	build	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:123->122
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-127
3	prototype	prototype	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-127)
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-77
# text = Sit down at your workspace with your notes and building plan .
1	Sit	sit	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:124->123
2	down	down	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	at	at	ADP	IN	_	5	case	5:case	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(abstract-128(person-25)
5	workspace	workspace	NOUN	NN	Number=Sing	1	obl	1:obl:at	Entity=abstract-128)
6	with	with	ADP	IN	_	8	case	8:case	_
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(abstract-129(person-25)
8	notes	note	NOUN	NNS	Number=Plur	1	obl	1:obl:with	Entity=abstract-129)
9	and	and	CCONJ	CC	_	11	cc	11:cc	_
10	building	building	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-109(place-110)
11	plan	plan	NOUN	NN	Number=Sing	8	conj	1:obl:with|8:conj:and	Entity=abstract-109)
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-78
# text = Quickly construct a prototype of your Rube Goldberg machine .
1	Quickly	quickly	ADV	RB	Degree=Pos	2	advmod	2:advmod	Discourse=joint:125->124
2	construct	construct	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-127
4	prototype	prototype	NOUN	NN	Number=Sing	2	obj	2:obj	_
5	of	of	ADP	IN	_	9	case	9:case	_
6	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(object-117(person-25)
7	Rube	Rube	PROPN	NNP	Number=Sing	8	compound	8:compound	Entity=(person-2
8	Goldberg	Goldberg	PROPN	NNP	Number=Sing	9	compound	9:compound	Entity=person-2)
9	machine	machine	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=object-127)object-117)
10	.	.	PUNCT	.	_	2	punct	2:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-79
# text = This version of your machine does n’t have to be perfect .
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	2:det	Discourse=joint:126->125|Entity=(abstract-130
2	version	version	NOUN	NN	Number=Sing	8	nsubj	8:nsubj|11:nsubj:xsubj	_
3	of	of	ADP	IN	_	5	case	5:case	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-117(person-25)
5	machine	machine	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-130)object-117)
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	8:aux	_
7	n’t	not	ADV	RB	Polarity=Neg	8	advmod	8:advmod	_
8	have	have	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	to	to	PART	TO	_	11	mark	11:mark	_
10	be	be	AUX	VB	VerbForm=Inf	11	cop	11:cop	_
11	perfect	perfect	ADJ	JJ	Degree=Pos	8	xcomp	8:xcomp	_
12	.	.	PUNCT	.	_	8	punct	8:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_machine-80
# text = You ’ll build a final product later after you test it .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=joint:127->126|Entity=(person-25)
2	’ll	will	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	build	build	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-131
5	final	final	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	product	product	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-131)
7	later	late	ADV	RBR	Degree=Cmp	3	advmod	3:advmod	_
8	after	after	SCONJ	IN	_	10	mark	10:mark	Discourse=circumstance:128->127
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Entity=(person-25)
10	test	test	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	advcl	3:advcl:after	Entity=(abstract-132)
11	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	10	obj	10:obj	Entity=(object-131)
12	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-81
# text = If you run into an issue , do n’t panic .
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:129->130
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	run	run	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:if	_
4	into	into	ADP	IN	_	6	case	6:case	_
5	an	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(abstract-133
6	issue	issue	NOUN	NN	Number=Sing	3	obl	3:obl:into	Entity=abstract-133)
7	,	,	PUNCT	,	_	3	punct	3:punct	_
8	do	do	AUX	VB	VerbForm=Inf	10	aux	10:aux	Discourse=joint:130->127
9	n’t	not	ADV	RB	Polarity=Neg	10	advmod	10:advmod	_
10	panic	panic	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
11	.	.	PUNCT	.	_	10	punct	10:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-82
# text = Return to your notes and see if you can combine the materials in a different way .
1	Return	return	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:131->130
2	to	to	ADP	IN	_	4	case	4:case	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(abstract-129(person-25)
4	notes	note	NOUN	NNS	Number=Plur	1	obl	1:obl:to	Entity=abstract-129)
5	and	and	CCONJ	CC	_	6	cc	6:cc	Discourse=attribution:132->131
6	see	see	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
7	if	if	SCONJ	IN	_	10	mark	10:mark	Discourse=condition:133->132
8	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Entity=(person-25)
9	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	combine	combine	VERB	VB	VerbForm=Inf	6	ccomp	6:ccomp	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(substance-134
12	materials	material	NOUN	NNS	Number=Plur	10	obj	10:obj	Entity=substance-134)
13	in	in	ADP	IN	_	16	case	16:case	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	16	det	16:det	Entity=(abstract-119
15	different	different	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	way	way	NOUN	NN	Number=Sing	10	obl	10:obl:in	Entity=abstract-119)
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-83
# text = If you are using tools , ask an adult for help .
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:134->135
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-25)
3	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	7	advcl	7:advcl:if	_
5	tools	tool	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=(object-135)
6	,	,	PUNCT	,	_	4	punct	4:punct	_
7	ask	ask	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:135->131
8	an	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(person-136
9	adult	adult	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=person-136)
10	for	for	ADP	IN	_	11	case	11:case	_
11	help	help	NOUN	NN	Number=Sing	7	obl	7:obl:for	Entity=(abstract-137)
12	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = ger
# sent_id = AMALGUM_whow_machine-84
# text = Testing and Revising Your Machine
1	Testing	test	VERB	VBG	VerbForm=Ger	0	root	0:root	Discourse=elaboration:136->135
2	and	and	CCONJ	CC	_	3	cc	3:cc	_
3	Revising	revise	VERB	VBG	VerbForm=Ger	1	conj	1:conj:and	_
4	Your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-117(person-25)
5	Machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj|3:obj	Entity=object-117)

# s_type = imp
# sent_id = AMALGUM_whow_machine-85
# text = Test your machine for feasibility .
1	Test	test	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:137->135
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-117(person-25)
3	machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-117)
4	for	for	ADP	IN	_	5	case	5:case	_
5	feasibility	feasibility	NOUN	NN	Number=Sing	1	obl	1:obl:for	Entity=(abstract-138)
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-86
# text = Once your prototype is complete , test the machine .
1	Once	once	SCONJ	IN	_	5	mark	5:mark	Discourse=joint:138->137
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-127(person-25)
3	prototype	prototype	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=object-127)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
5	complete	complete	ADJ	JJ	Degree=Pos	7	advcl	7:advcl:once	_
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	test	test	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:139->138|Entity=(abstract-132)
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-117
9	machine	machine	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-117)
10	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-87
# text = This first test is to determine if your machine works .
1	This	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Discourse=joint:140->139|Entity=(abstract-132
2	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	3	amod	3:amod	_
3	test	test	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=abstract-132)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	to	to	PART	TO	_	6	mark	6:mark	_
6	determine	determine	VERB	VB	VerbForm=Inf	0	root	0:root	_
7	if	if	SCONJ	IN	_	10	mark	10:mark	_
8	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(object-117(person-25)
9	machine	machine	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	Entity=object-117)
10	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	6:ccomp	_
11	.	.	PUNCT	.	_	6	punct	6:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-88
# text = If the machine completes the task , proceed to the next step .
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:141->142
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-117
3	machine	machine	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=object-117)
4	completes	complete	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	advcl	8:advcl:if	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-112
6	task	task	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-112)
7	,	,	PUNCT	,	_	4	punct	4:punct	_
8	proceed	proceed	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:142->140
9	to	to	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(event-139
11	next	next	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	step	step	NOUN	NN	Number=Sing	8	obl	8:obl:to	Entity=event-139)
13	.	.	PUNCT	.	_	8	punct	8:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-89
# text = If the machine does n’t complete the task , rethink — do n’t scrap — your design .
1	If	if	SCONJ	IN	_	6	mark	6:mark	Discourse=condition:143->144
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-117
3	machine	machine	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=object-117)
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	6:aux	_
5	n’t	not	ADV	RB	Polarity=Neg	6	advmod	6:advmod	_
6	complete	complete	VERB	VB	VerbForm=Inf	10	advcl	10:advcl:if	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-112
8	task	task	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=abstract-112)
9	,	,	PUNCT	,	_	6	punct	6:punct	_
10	rethink	rethenk	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:144->142
11	—	—	PUNCT	:	_	14	punct	14:punct	Discourse=elaboration:145->144
12	do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux	14:aux	Discourse=elaboration:146->145
13	n’t	not	ADV	RB	Polarity=Neg	14	advmod	14:advmod	_
14	scrap	scrap	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	10	parataxis	10:parataxis	_
15	—	—	PUNCT	:	_	17	punct	17:punct	_
16	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	17	nmod:poss	17:nmod:poss	Entity=(abstract-39(person-25)
17	design	design	NOUN	NN	Number=Sing	10	obj	10:obj	Entity=abstract-39)
18	.	.	PUNCT	.	_	10	punct	10:punct	_

# s_type = q
# sent_id = AMALGUM_whow_machine-90
# text = Can you quickly fix the problem ?
1	Can	can	AUX	MD	VerbForm=Fin	4	aux	4:aux	Discourse=joint:147->144
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-25)
3	quickly	quickly	ADV	RB	Degree=Pos	4	advmod	4:advmod	_
4	fix	fix	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-140
6	problem	problem	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-140)
7	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = q
# sent_id = AMALGUM_whow_machine-91
# text = Do you need to replace an entire step ?
1	Do	do	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	aux	3:aux	Discourse=question:148->149
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj|5:nsubj:xsubj	Entity=(person-25)
3	need	need	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	replace	replace	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	an	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(event-139
7	entire	entire	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	step	step	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=event-139)
9	?	?	PUNCT	.	_	3	punct	3:punct	_

# s_type = q
# sent_id = AMALGUM_whow_machine-92
# text = Are you using the best materials ?
1	Are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	aux	3:aux	Discourse=question:149->150
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(substance-134
5	best	good	ADJ	JJS	Degree=Sup	6	amod	6:amod	_
6	materials	material	NOUN	NNS	Number=Plur	3	obj	3:obj	Entity=substance-134)
7	?	?	PUNCT	.	_	3	punct	3:punct	_

# s_type = q
# sent_id = AMALGUM_whow_machine-93
# text = Is your task possible to achieve ?
1	Is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	Discourse=joint:150->147
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-112(person-25)
3	task	task	NOUN	NN	Number=Sing	4	nsubj	4:nsubj|6:nsubj:xsubj	Entity=abstract-112)
4	possible	possible	ADJ	JJ	Degree=Pos	0	root	0:root	_
5	to	to	PART	TO	_	6	mark	6:mark	_
6	achieve	achieve	VERB	VB	VerbForm=Inf	4	xcomp	4:xcomp	_
7	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-94
# text = Build your final product and test is repeatability .
1	Build	build	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:151->150
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(object-131(person-25)
3	final	final	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	product	product	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-131)
5	and	and	CCONJ	CC	_	6	cc	6:cc	Discourse=joint:152->151
6	test	test	NOUN	NN	Number=Sing	1	conj	1:conj:and	Entity=(abstract-132
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
8	repeatability	repeatability	NOUN	NN	Number=Sing	6	acl	6:acl	Entity=abstract-132)(abstract-141)
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_machine-95
# text = When your machine has passed the feasibility test , you can construct a sturdier version of your Rube Goldberg machine .
1	When	when	SCONJ	WRB	PronType=Int	5	mark	5:mark	Discourse=condition:153->154
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-117(person-25)
3	machine	machine	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=object-117)
4	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
5	passed	pass	VERB	VBN	Tense=Past|VerbForm=Part	12	advcl	12:advcl:when	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-132
7	feasibility	feasibility	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(abstract-138)
8	test	test	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-132)
9	,	,	PUNCT	,	_	5	punct	5:punct	_
10	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	12	nsubj	12:nsubj	Discourse=joint:154->151|Entity=(person-25)
11	can	can	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
12	construct	construct	VERB	VB	VerbForm=Inf	0	root	0:root	_
13	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(object-142
14	sturdier	sturdy	ADJ	JJR	Degree=Cmp	15	amod	15:amod	_
15	version	version	NOUN	NN	Number=Sing	12	obj	12:obj	_
16	of	of	ADP	IN	_	20	case	20:case	_
17	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	20	nmod:poss	20:nmod:poss	Entity=(object-117(person-25)
18	Rube	Rube	PROPN	NNP	Number=Sing	19	compound	19:compound	Entity=(person-2
19	Goldberg	Goldberg	PROPN	NNP	Number=Sing	20	compound	20:compound	Entity=person-2)
20	machine	machine	NOUN	NN	Number=Sing	15	nmod	15:nmod:of	Entity=object-142)object-117)
21	.	.	PUNCT	.	_	12	punct	12:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-96
# text = Assess the machine ’s repeatability — its ability to complete the task several times in a row .
1	Assess	assess	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:155->157
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-141
3	machine	machine	NOUN	NN	Number=Sing	5	nmod:poss	5:nmod:poss	Entity=(object-117
4	’s	's	PART	POS	_	3	case	3:case	Entity=object-117)
5	repeatability	repeatability	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-141)
6	—	—	PUNCT	:	_	8	punct	8:punct	_
7	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Discourse=elaboration:156->155|Entity=(abstract-141(object-131)
8	ability	ability	NOUN	NN	Number=Sing	5	appos	5:appos	_
9	to	to	PART	TO	_	10	mark	10:mark	_
10	complete	complete	VERB	VB	VerbForm=Inf	8	acl	8:acl:to	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-112
12	task	task	NOUN	NN	Number=Sing	10	obj	10:obj	Entity=abstract-112)
13	several	several	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(time-143
14	times	time	NOUN	NNS	Number=Plur	10	obl:npmod	10:obl:npmod	Entity=time-143)
15	in	in	ADP	IN	_	17	case	17:case	_
16	a	a	DET	DT	Definite=Ind|PronType=Art	17	det	17:det	Entity=(abstract-144
17	row	row	NOUN	NN	Number=Sing	10	obl	10:obl:in	Entity=abstract-141)abstract-144)
18	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-97
# text = A test is successful if the machine operates on its own .
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	2:det	Discourse=joint:157->154|Entity=(abstract-132
2	test	test	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-132)
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
4	successful	successful	ADJ	JJ	Degree=Pos	0	root	0:root	_
5	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:158->157
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-117
7	machine	machine	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=object-117)
8	operates	operate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	advcl	4:advcl:if	_
9	on	on	ADP	IN	_	11	case	11:case	_
10	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(abstract-132)
11	own	own	ADJ	JJ	Degree=Pos	8	obl	8:obl:on	_
12	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-98
# text = Test and adjust the machine until it completes the task five times .
1	Test	test	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:159->157
2	and	and	CCONJ	CC	_	3	cc	3:cc	_
3	adjust	adjust	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-117
5	machine	machine	NOUN	NN	Number=Sing	1	obj	1:obj|3:obj	Entity=object-117)
6	until	until	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:160->159
7	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	8	nsubj	8:nsubj	Entity=(abstract-132)
8	completes	complete	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:until	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-112
10	task	task	NOUN	NN	Number=Sing	8	obj	8:obj	Entity=abstract-112)
11	five	5	NUM	CD	NumForm=Digit|NumType=Card	12	nummod	12:nummod	Entity=(time-145
12	times	time	NOUN	NNS	Number=Plur	8	obl:npmod	8:obl:npmod	Entity=time-145)
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-99
# text = If the test is successful , make minor alterations and continue on to the final test .
1	If	if	SCONJ	IN	_	5	mark	5:mark	Discourse=condition:161->162
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-132
3	test	test	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=abstract-132)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
5	successful	successful	ADJ	JJ	Degree=Pos	7	advcl	7:advcl:if	_
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:162->159
8	minor	minor	ADJ	JJ	Degree=Pos	9	amod	9:amod	Entity=(abstract-146
9	alterations	alteration	NOUN	NNS	Number=Plur	7	obj	7:obj	Entity=abstract-146)
10	and	and	CCONJ	CC	_	11	cc	11:cc	Discourse=joint:163->162
11	continue	continue	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	7	conj	7:conj:and	_
12	on	on	ADV	RB	Degree=Pos	11	advmod	11:advmod	_
13	to	to	ADP	IN	_	16	case	16:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(abstract-132
15	final	final	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	test	test	NOUN	NN	Number=Sing	11	obl	11:obl:to	Entity=abstract-132)
17	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-100
# text = If you the machine does n’t produce five successful tests within an hour , redesign your machine .
1	If	if	SCONJ	IN	_	7	mark	7:mark	Discourse=condition:164->165
2	you	you	PRON	PRP	Case=Acc|Number=Sing|Person=2|PronType=Prs	4	reparandum	4:reparandum	Entity=(object-117(person-25)
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
4	machine	machine	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=object-117)
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	7:aux	_
6	n’t	not	ADV	RB	Polarity=Neg	7	advmod	7:advmod	_
7	produce	produce	VERB	VB	VerbForm=Inf	15	advcl	15:advcl:if	_
8	five	5	NUM	CD	NumForm=Digit|NumType=Card	10	nummod	10:nummod	Entity=(event-147
9	successful	successful	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	tests	test	NOUN	NNS	Number=Plur	7	obj	7:obj	Entity=event-147)
11	within	within	ADP	IN	_	13	case	13:case	_
12	an	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(time-148
13	hour	hour	NOUN	NN	Number=Sing	7	obl	7:obl:within	Entity=time-148)
14	,	,	PUNCT	,	_	7	punct	7:punct	_
15	redesign	redesign	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:165->163
16	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	17	nmod:poss	17:nmod:poss	Entity=(object-117(person-25)
17	machine	machine	NOUN	NN	Number=Sing	15	obj	15:obj	Entity=object-117)
18	.	.	PUNCT	.	_	15	punct	15:punct	_

# s_type = wh
# sent_id = AMALGUM_whow_machine-101
# text = What steps are working ?
1	What	what	DET	WDT	PronType=Int	2	det	2:det	Discourse=joint:166->165|Entity=(abstract-149
2	steps	step	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=abstract-149)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	working	work	VERB	VBG	Tense=Pres|VerbForm=Part	0	root	0:root	_
5	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = wh
# sent_id = AMALGUM_whow_machine-102
# text = What steps are preventing the machine from working ?
1	What	what	DET	WDT	PronType=Int	2	det	2:det	Discourse=joint:167->166|Entity=(abstract-149
2	steps	step	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=abstract-149)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux	4:aux	_
4	preventing	prevent	VERB	VBG	Tense=Pres|VerbForm=Part	0	root	0:root	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(object-117
6	machine	machine	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-117)
7	from	from	SCONJ	IN	_	8	mark	8:mark	_
8	working	work	VERB	VBG	VerbForm=Ger	4	advcl	4:advcl:from	_
9	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = q
# sent_id = AMALGUM_whow_machine-103
# text = Is your task achievable ?
1	Is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	Discourse=joint:168->167
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(abstract-112(person-25)
3	task	task	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-112)
4	achievable	achievable	ADJ	JJ	Degree=Pos	0	root	0:root	_
5	?	?	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-104
# text = Test the machine ’s reliability .
1	Test	test	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:169->168
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-150
3	machine	machine	NOUN	NN	Number=Sing	5	nmod:poss	5:nmod:poss	Entity=(object-117
4	’s	's	PART	POS	_	3	case	3:case	Entity=object-117)
5	reliability	reliability	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-150)
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-105
# text = After your machine passes the repeatability test , determine if it is reliable .
1	After	after	SCONJ	IN	_	4	mark	4:mark	Discourse=circumstance:170->171
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-117(person-25)
3	machine	machine	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=object-117)
4	passes	pass	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	advcl	9:advcl:after	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-132
6	repeatability	repeatability	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-141)
7	test	test	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-132)
8	,	,	PUNCT	,	_	4	punct	4:punct	_
9	determine	determine	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:171->169
10	if	if	SCONJ	IN	_	13	mark	13:mark	Discourse=condition:172->171
11	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	13	nsubj	13:nsubj	Entity=(abstract-132)
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	13:cop	_
13	reliable	reliable	ADJ	JJ	Degree=Pos	9	ccomp	9:ccomp	_
14	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-106
# text = You will test the machine a total of four times .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=joint:173->171|Entity=(person-25)
2	will	will	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	test	test	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-117
5	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-117)
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(time-151
7	total	total	NOUN	NN	Number=Sing	3	obl:npmod	3:obl:npmod	_
8	of	of	ADP	IN	_	10	case	10:case	_
9	four	4	NUM	CD	NumForm=Digit|NumType=Card	10	nummod	10:nummod	_
10	times	time	NOUN	NNS	Number=Plur	7	nmod	7:nmod:of	Entity=time-151)
11	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-107
# text = A reliable machine will complete the task at least three out of four times .
1	A	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Discourse=joint:174->173|Entity=(object-117
2	reliable	reliable	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	machine	machine	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	Entity=object-117)
4	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
5	complete	complete	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-112
7	task	task	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-112)
8	at	at	ADP	IN	_	9	case	9:case	_
9	least	least	ADJ	JJS	Degree=Sup	10	advmod	10:advmod	Entity=(time-152
10	three	3	NUM	CD	NumForm=Digit|NumType=Card	14	nummod	14:nummod	_
11	out	out	ADP	IN	_	14	case	14:case	_
12	of	of	ADP	IN	_	11	fixed	11:fixed	_
13	four	4	NUM	CD	NumForm=Digit|NumType=Card	10	nmod	10:nmod	_
14	times	time	NOUN	NNS	Number=Plur	5	obl:tmod	5:obl:tmod	Entity=time-152)
15	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_machine-108
# text = If your machine passes this test , you ’ve created a working Rube Goldberg machine .
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:175->176
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-117(person-25)
3	machine	machine	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=object-117)
4	passes	pass	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:if	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	6:det	Entity=(abstract-132
6	test	test	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-132)
7	,	,	PUNCT	,	_	4	punct	4:punct	_
8	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Discourse=elaboration:176->174|Entity=(person-25)
9	’ve	have	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	10	aux	10:aux	_
10	created	create	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(object-117
12	working	work	VERB	VBG	VerbForm=Ger	15	amod	15:amod	_
13	Rube	Rube	PROPN	NNP	Number=Sing	14	compound	14:compound	Entity=(person-2
14	Goldberg	Goldberg	PROPN	NNP	Number=Sing	15	compound	15:compound	Entity=person-2)
15	machine	machine	NOUN	NN	Number=Sing	10	obj	10:obj	Entity=object-117)
16	.	.	PUNCT	.	_	10	punct	10:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_machine-109
# text = Before you present the machine , practice taking it apart and putting it back together several times .
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=circumstance:177->176
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	present	present	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	7	advcl	7:advcl:before	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-117
5	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-117)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	practice	practice	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:178->179
8	taking	take	VERB	VBG	VerbForm=Ger	7	xcomp	7:xcomp	Discourse=joint:179->177
9	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	8	obj	8:obj	Entity=(abstract-132)
10	apart	apart	ADV	RB	Degree=Pos	8	advmod	8:advmod	_
11	and	and	CCONJ	CC	_	12	cc	12:cc	Discourse=joint:180->179
12	putting	put	VERB	VBG	VerbForm=Ger	8	conj	7:xcomp|8:conj:and	_
13	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	obj	12:obj	Entity=(abstract-132)
14	back	back	ADV	RB	Degree=Pos	12	advmod	12:advmod	_
15	together	together	ADV	RB	Degree=Pos	12	advmod	12:advmod	_
16	several	several	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(time-153
17	times	time	NOUN	NNS	Number=Plur	12	obl:tmod	12:obl:tmod	Entity=time-153)
18	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-110
# text = Tips
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:181->182|Entity=(abstract-154)

# s_type = imp
# sent_id = AMALGUM_whow_machine-111
# text = Use materials that you can easily adjust , like peg boards , building blocks , etc.
1	Use	use	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:182->6
2	materials	material	NOUN	NNS	Number=Plur	1	obj	1:obj|7:obj	Entity=(substance-134
3	that	that	PRON	WDT	PronType=Rel	7	obj	2:ref	Discourse=elaboration:183->182
4	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	7	nsubj	7:nsubj	Entity=(person-25)
5	can	can	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
6	easily	easily	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
7	adjust	adjust	VERB	VB	VerbForm=Inf	2	acl:relcl	2:acl:relcl	_
8	,	,	PUNCT	,	_	11	punct	11:punct	_
9	like	like	ADP	IN	_	11	case	11:case	_
10	peg	peg	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(object-155(object-156)
11	boards	board	NOUN	NNS	Number=Plur	2	nmod	2:nmod:like	Entity=object-155)
12	,	,	PUNCT	,	_	14	punct	14:punct	_
13	building	building	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(object-157(place-158)
14	blocks	block	NOUN	NNS	Number=Plur	11	conj	2:nmod:like|11:conj	Entity=object-157)
15	,	,	PUNCT	,	_	16	punct	16:punct	_
16	etc.	etc.	ADJ	JJ	Abbr=Yes|Degree=Pos	11	conj	2:nmod:like|11:conj	Entity=substance-134)

# s_type = sub
# sent_id = AMALGUM_whow_machine-112
# text = Before you construct your entire machine , you may want to test each step and link .
1	Before	before	SCONJ	IN	_	3	mark	3:mark	Discourse=sequence:184->182
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-25)
3	construct	construct	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	10	advcl	10:advcl:before	_
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(object-117(person-25)
5	entire	entire	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	machine	machine	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-117)
7	,	,	PUNCT	,	_	3	punct	3:punct	_
8	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj|12:nsubj:xsubj	Discourse=joint:185->184|Entity=(person-25)
9	may	may	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	want	want	VERB	VB	VerbForm=Inf	0	root	0:root	_
11	to	to	PART	TO	_	12	mark	12:mark	_
12	test	test	VERB	VB	VerbForm=Inf	10	xcomp	10:xcomp	_
13	each	each	DET	DT	_	14	det	14:det	Entity=(abstract-159
14	step	step	NOUN	NN	Number=Sing	12	obj	12:obj	Entity=abstract-159)
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	link	link	NOUN	NN	Number=Sing	14	conj	12:obj|14:conj:and	Entity=(abstract-160)
17	.	.	PUNCT	.	_	10	punct	10:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-113
# text = Warnings
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:186->187|Entity=(abstract-161)

# s_type = imp
# sent_id = AMALGUM_whow_machine-114
# text = Be cautious and work under adult supervision if you are using potentially dangerous items .
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=joint:187->182
2	cautious	cautious	ADJ	JJ	Degree=Pos	0	root	0:root	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=joint:188->187
4	work	work	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	2	conj	2:conj:and	_
5	under	under	ADP	IN	_	7	case	7:case	_
6	adult	adult	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(abstract-162
7	supervision	supervision	NOUN	NN	Number=Sing	4	obl	4:obl:under	Entity=abstract-162)
8	if	if	SCONJ	IN	_	11	mark	11:mark	Discourse=condition:189->188
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	11	nsubj	11:nsubj	Entity=(person-25)
10	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	11	aux	11:aux	_
11	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	4	advcl	4:advcl:if	_
12	potentially	potentially	ADV	RB	Degree=Pos	13	advmod	13:advmod	Entity=(object-163
13	dangerous	dangerous	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	items	item	NOUN	NNS	Number=Plur	11	obj	11:obj	Entity=object-163)
15	.	.	PUNCT	.	_	2	punct	2:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_machine-115
# text = Quick Summary
1	Quick	Quick	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=evaluation:190->187|Entity=(abstract-164
2	Summary	summary	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-164)

