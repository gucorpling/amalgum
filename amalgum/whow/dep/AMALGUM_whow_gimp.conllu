# s_type = imp
# newdoc id = AMALGUM_whow_gimp
# sent_id = AMALGUM_whow_gimp-1
# text = Make a Spiral Styled Gimp
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->2
2	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(object-1
3	Spiral	spiral	ADJ	NNP	Number=Sing	4	amod	4:amod	_
4	Styled	style	VERB	VBN	Tense=Past|VerbForm=Part	5	amod	5:amod	_
5	Gimp	Gimp	PROPN	NNP	Number=Sing	1	obj	1:obj	Entity=object-1)

# s_type = decl
# sent_id = AMALGUM_whow_gimp-2
# text = Gimp , also called a boondoggle , or a lanyard , is woven from plastic lacing and turned into bracelets , keychains , pulleys , and even bookmarks .
1	Gimp	Gimp	PROPN	NNP	Number=Sing	13	nsubj:pass	13:nsubj:pass|18:nsubj:pass	Discourse=ROOT:2|Entity=(object-1
2	,	,	PUNCT	,	_	4	punct	4:punct	_
3	also	also	ADV	RB	_	4	advmod	4:advmod	_
4	called	call	VERB	VBN	Tense=Past|VerbForm=Part	1	acl	1:acl	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-2
6	boondoggle	boondoggle	NOUN	NN	Number=Sing	4	xcomp	4:xcomp	Entity=object-2)
7	,	,	PUNCT	,	_	10	punct	10:punct	_
8	or	or	CCONJ	CC	_	10	cc	10:cc	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(object-3
10	lanyard	lanyard	NOUN	NN	Number=Sing	6	conj	4:xcomp|6:conj:or	Entity=object-1)object-3)
11	,	,	PUNCT	,	_	1	punct	1:punct	_
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass|18:aux:pass	Discourse=same_unit:3->2
13	woven	wove	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
14	from	from	ADP	IN	_	16	case	16:case	_
15	plastic	plastic	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(object-4
16	lacing	lacing	NOUN	NN	Number=Sing	13	obl	13:obl:from	Entity=object-4)
17	and	and	CCONJ	CC	_	18	cc	18:cc	Discourse=joint:4->3
18	turned	turn	VERB	VBN	Tense=Past|VerbForm=Part	13	conj	13:conj:and	_
19	into	into	ADP	IN	_	20	case	20:case	_
20	bracelets	bracelet	NOUN	NNS	Number=Plur	18	obl	18:obl:into	Entity=(object-5)
21	,	,	PUNCT	,	_	22	punct	22:punct	_
22	keychains	keychain	NOUN	NNS	Number=Plur	20	conj	18:obl:into|20:conj:and	Entity=(object-6)
23	,	,	PUNCT	,	_	24	punct	24:punct	_
24	pulleys	pulley	NOUN	NNS	Number=Plur	20	conj	18:obl:into|20:conj:and	Entity=(object-7)
25	,	,	PUNCT	,	_	28	punct	28:punct	_
26	and	and	CCONJ	CC	_	28	cc	28:cc	_
27	even	even	ADV	RB	_	28	advmod	28:advmod	Entity=(object-8
28	bookmarks	bookmark	NOUN	NNS	Number=Plur	20	conj	18:obl:into|20:conj:and	Entity=object-8)
29	.	.	PUNCT	.	_	13	punct	13:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-3
# text = Also called guimpe or guipure , gimp plaiting creates a square shape , but you can create spiral-shapes if you follow these instructions .
1	Also	also	ADV	RB	_	2	advmod	2:advmod	Discourse=concession:5->6
2	called	call	VERB	VBN	Tense=Past|VerbForm=Part	9	advcl	9:advcl	_
3	guimpe	guimpe	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=(abstract-9)
4	or	or	CCONJ	CC	_	5	cc	5:cc	_
5	guipure	guipure	NOUN	NN	Number=Sing	3	conj	2:obj|3:conj:or	Entity=(abstract-10)
6	,	,	PUNCT	,	_	2	punct	2:punct	_
7	gimp	gimp	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-11(person-12)
8	plaiting	plaiting	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	Entity=object-11)
9	creates	create	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-13
11	square	square	NOUN	NN	Number=Sing	12	compound	12:compound	_
12	shape	shape	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=abstract-13)
13	,	,	PUNCT	,	_	17	punct	17:punct	_
14	but	but	CCONJ	CC	_	17	cc	17:cc	Discourse=preparation:6->8
15	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	17	nsubj	17:nsubj	Entity=(person-14)
16	can	can	AUX	MD	VerbForm=Fin	17	aux	17:aux	_
17	create	create	VERB	VB	VerbForm=Inf	9	conj	9:conj:but	_
18	spiral-shapes	spiral-shape	NOUN	NNS	Number=Plur	17	obj	17:obj	Entity=(abstract-15)
19	if	if	SCONJ	IN	_	21	mark	21:mark	Discourse=condition:7->6
20	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	21	nsubj	21:nsubj	Entity=(person-14)
21	follow	follow	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	17	advcl	17:advcl:if	_
22	these	this	DET	DT	Number=Plur|PronType=Dem	23	det	23:det	Entity=(abstract-16
23	instructions	instruction	NOUN	NNS	Number=Plur	21	obj	21:obj	Entity=abstract-16)
24	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-4
# text = For the sake of clarity , we will use one red lace and one green lace .
1	For	for	ADP	IN	_	3	case	3:case	Discourse=joint:8->2
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-17
3	sake	sake	NOUN	NN	Number=Sing	9	obl	9:obl:for	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	clarity	clarity	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-17)(abstract-18)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	9	nsubj	9:nsubj	Entity=(person-19)
8	will	will	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	use	use	VERB	VB	VerbForm=Inf	0	root	0:root	_
10	one	one	NUM	CD	NumForm=Word|NumType=Card	12	nummod	12:nummod	Entity=(object-20
11	red	red	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	lace	lace	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=object-20)
13	and	and	CCONJ	CC	_	16	cc	16:cc	_
14	one	one	NUM	CD	NumForm=Word|NumType=Card	16	nummod	16:nummod	Entity=(object-21
15	green	green	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	lace	lace	NOUN	NN	Number=Sing	12	conj	9:obj|12:conj:and	Entity=object-21)
17	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-5
# text = Steps
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:9->10|Entity=(abstract-22)

# s_type = imp
# sent_id = AMALGUM_whow_gimp-6
# text = Start with two pieces of lacing .
1	Start	start	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:10->8
2	with	with	ADP	IN	_	4	case	4:case	_
3	two	2	NUM	CD	NumForm=Digit|NumType=Card	4	nummod	4:nummod	Entity=(object-23
4	pieces	piece	NOUN	NNS	Number=Plur	1	obl	1:obl:with	_
5	of	of	ADP	IN	_	6	case	6:case	_
6	lacing	lacing	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=object-23)(object-4)
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-7
# text = Find the center of each length of lacing .
1	Find	find	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:11->10
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(place-24
3	center	center	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	each	each	DET	DT	_	6	det	6:det	Entity=(abstract-25
6	length	length	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	_
7	of	of	ADP	IN	_	8	case	8:case	_
8	lacing	lacing	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=place-24)abstract-25)(object-4)
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-8
# text = We use green and red , but you can use any other two colors you like .
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	nsubj	2:nsubj	Discourse=concession:12->13|Entity=(person-19)
2	use	use	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	green	green	ADJ	JJ	Degree=Pos	2	obj	2:obj	_
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	red	red	ADJ	JJ	Degree=Pos	3	conj	2:obj|3:conj:and	_
6	,	,	PUNCT	,	_	10	punct	10:punct	_
7	but	but	CCONJ	CC	_	10	cc	10:cc	Discourse=sequence:13->11
8	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Entity=(person-14)
9	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	use	use	VERB	VB	VerbForm=Inf	2	conj	2:conj:but	_
11	any	any	DET	DT	_	14	det	14:det	Entity=(abstract-26
12	other	other	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
13	two	2	NUM	CD	NumForm=Digit|NumType=Card	14	nummod	14:nummod	_
14	colors	color	NOUN	NNS	Number=Plur	10	obj	10:obj	_
15	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	16	nsubj	16:nsubj	Discourse=elaboration:14->13|Entity=(person-14)
16	like	like	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	14	acl:relcl	14:acl:relcl	Entity=abstract-26)
17	.	.	PUNCT	.	_	2	punct	2:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-9
# text = Cross the laces .
1	Cross	Cross	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:15->13
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-27
3	laces	lace	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-27)
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-10
# text = Lay the center of the green lace across the center of the red lace in a perpendicular fashion .
1	Lay	lay	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:16->15
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(place-28
3	center	center	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-21
6	green	green	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=place-28)object-21)
8	across	across	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(place-29
10	center	center	NOUN	NN	Number=Sing	1	obl	1:obl:across	_
11	of	of	ADP	IN	_	14	case	14:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(object-20
13	red	red	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	lace	lace	NOUN	NN	Number=Sing	10	nmod	10:nmod:of	Entity=place-29)object-20)
15	in	in	ADP	IN	_	18	case	18:case	_
16	a	a	DET	DT	Definite=Ind|PronType=Art	18	det	18:det	Entity=(abstract-30
17	perpendicular	perpendicular	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	fashion	fashion	NOUN	NN	Number=Sing	1	obl	1:obl:in	Entity=abstract-30)
19	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_gimp-11
# text = Your project should look like a plus sign .
1	Your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	2	nmod:poss	2:nmod:poss	Discourse=elaboration:17->16|Entity=(abstract-31(person-14)
2	project	project	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-31)
3	should	should	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	look	look	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	like	like	ADP	IN	_	8	case	8:case	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-32
7	plus	plus	CCONJ	CC	_	8	compound	8:compound	_
8	sign	sign	NOUN	NN	Number=Sing	4	obl	4:obl:like	Entity=abstract-32)
9	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-12
# text = Start the weaving process .
1	Start	start	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:18->16
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-33
3	weaving	weaving	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-34)
4	process	process	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-33)
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-13
# text = Fold the ends of the red lace across the green lace , as if they are arms hugging the green lace .
1	Fold	fold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:19->18
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-35
3	ends	end	NOUN	NNS	Number=Plur	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-20
6	red	red	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=object-35)object-20)
8	across	across	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-21
10	green	green	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	lace	lace	NOUN	NN	Number=Sing	1	obl	1:obl:across	Entity=object-21)
12	,	,	PUNCT	,	_	17	punct	17:punct	_
13	as	as	SCONJ	IN	_	17	mark	17:mark	Discourse=manner:20->19
14	if	if	SCONJ	IN	_	17	mark	17:mark	_
15	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	17	nsubj	17:nsubj	Entity=(object-35)
16	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	17	cop	17:cop	_
17	arms	arm	NOUN	NNS	Number=Plur	1	advcl	1:advcl:as_if	Entity=(object-35
18	hugging	hug	VERB	VBG	VerbForm=Ger	17	acl	17:acl	_
19	the	the	DET	DT	Definite=Def|PronType=Art	21	det	21:det	Entity=(object-21
20	green	green	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
21	lace	lace	NOUN	NN	Number=Sing	18	obj	18:obj	Entity=object-35)object-21)
22	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-14
# text = Hold in place .
1	Hold	hold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:21->19
2	in	in	ADP	IN	_	3	case	3:case	_
3	place	place	NOUN	NN	Number=Sing	1	obl	1:obl:in	_
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-15
# text = The red lace now seems to be wrapped around the green lace .
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=sequence:22->21|Entity=(object-20
2	red	red	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	lace	lace	NOUN	NN	Number=Sing	5	nsubj	5:nsubj|8:nsubj:xsubj	Entity=object-20)
4	now	now	ADV	RB	_	5	advmod	5:advmod	_
5	seems	seem	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	to	to	PART	TO	_	8	mark	8:mark	_
7	be	be	AUX	VB	VerbForm=Inf	8	aux:pass	8:aux:pass	_
8	wrapped	wrap	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	xcomp	5:xcomp	_
9	around	around	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-21
11	green	green	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	lace	lace	NOUN	NN	Number=Sing	8	obl	8:obl:around	Entity=object-21)
13	.	.	PUNCT	.	_	5	punct	5:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-16
# text = Make the first layer .
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:23->22
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-36
3	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	4	amod	4:amod	_
4	layer	layer	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-36)
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-17
# text = Pass one end of the green lace over the first fold in the red lace .
1	Pass	pass	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:24->22
2	one	one	NUM	CD	NumForm=Word|NumType=Card	3	nummod	3:nummod	Entity=(object-37
3	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-21
6	green	green	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=object-37)object-21)
8	over	over	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-38
10	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	11	amod	11:amod	_
11	fold	fold	NOUN	NN	Number=Sing	1	obl	1:obl:over	_
12	in	in	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-20
14	red	red	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	lace	lace	NOUN	NN	Number=Sing	11	nmod	11:nmod:in	Entity=object-38)object-20)
16	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-18
# text = Insert the green lace into the loop formed by the second fold of the red lace .
1	Insert	insert	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:25->24
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-21
3	green	green	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	lace	lace	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-21)
5	into	into	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-39
7	loop	loop	NOUN	NN	Number=Sing	1	obl	1:obl:into	_
8	formed	form	VERB	VBN	Tense=Past|VerbForm=Part	7	acl	7:acl	Discourse=elaboration:26->25
9	by	by	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-40
11	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	12	amod	12:amod	_
12	fold	fold	NOUN	NN	Number=Sing	8	obl	8:obl:by	_
13	of	of	ADP	IN	_	16	case	16:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(object-20
15	red	red	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	lace	lace	NOUN	NN	Number=Sing	12	nmod	12:nmod:of	Entity=object-39)object-40)object-20)
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-19
# text = Hold in place .
1	Hold	hold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:27->25
2	in	in	ADP	IN	_	3	case	3:case	_
3	place	place	NOUN	NN	Number=Sing	1	obl	1:obl:in	_
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-20
# text = Pass the other end of the green lace over the first fold in the red lace .
1	Pass	pass	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:28->27
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(place-41
3	other	other	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-21
7	green	green	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	lace	lace	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=place-41)object-21)
9	over	over	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-38
11	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	12	amod	12:amod	_
12	fold	fold	NOUN	NN	Number=Sing	1	obl	1:obl:over	_
13	in	in	ADP	IN	_	16	case	16:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(object-20
15	red	red	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	lace	lace	NOUN	NN	Number=Sing	12	nmod	12:nmod:in	Entity=object-38)object-20)
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-21
# text = Insert the end of the green lace into the loop formed by the second fold of the red lace .
1	Insert	insert	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:29->28
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(event-42
3	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-21
6	green	green	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=event-42)object-21)
8	into	into	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-39
10	loop	loop	NOUN	NN	Number=Sing	1	obl	1:obl:into	_
11	formed	form	VERB	VBN	Tense=Past|VerbForm=Part	10	acl	10:acl	Discourse=elaboration:30->29
12	by	by	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-40
14	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	15	amod	15:amod	_
15	fold	fold	NOUN	NN	Number=Sing	11	obl	11:obl:by	_
16	of	of	ADP	IN	_	19	case	19:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(object-20
18	red	red	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
19	lace	lace	NOUN	NN	Number=Sing	15	nmod	15:nmod:of	Entity=object-39)object-40)object-20)
20	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-22
# text = Pull gently to tighten lace .
1	Pull	pull	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:31->29
2	gently	gently	ADV	RB	Degree=Pos	1	advmod	1:advmod	_
3	to	to	PART	TO	_	4	mark	4:mark	Discourse=purpose:32->31
4	tighten	tighten	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:to	_
5	lace	lace	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=(object-20)
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-23
# text = You have completed the first layer .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=sequence:33->31|Entity=(person-14)
2	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	aux	3:aux	_
3	completed	complete	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-36
5	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	6	amod	6:amod	_
6	layer	layer	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=abstract-36)
7	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_gimp-24
# text = It should hold itself in place now .
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:34->33|Entity=(abstract-36)
2	should	should	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	hold	hold	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	itself	itself	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	3	obj	3:obj	Entity=(abstract-36)
5	in	in	ADP	IN	_	6	case	6:case	_
6	place	place	NOUN	NN	Number=Sing	3	obl	3:obl:in	_
7	now	now	ADV	RB	_	3	advmod	3:advmod	_
8	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-25
# text = Fold both ends of the red lace across your project .
1	Fold	fold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:35->33
2	both	both	DET	DT	_	3	det	3:det	Entity=(object-43
3	ends	end	NOUN	NNS	Number=Plur	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-20
6	red	red	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=object-43)object-20)
8	across	across	ADP	IN	_	10	case	10:case	_
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(abstract-31(person-14)
10	project	project	NOUN	NN	Number=Sing	1	obl	1:obl:across	Entity=abstract-31)
11	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-26
# text = Instead of folding directly across , position them at a diagonal .
1	Instead	instead	SCONJ	RB	Degree=Pos	3	mark	3:mark	Discourse=antithesis:36->37
2	of	of	ADP	IN	_	1	fixed	1:fixed	_
3	folding	fold	VERB	VBG	VerbForm=Ger	7	advcl	7:advcl:instead_of	_
4	directly	directly	ADV	RB	Degree=Pos	3	advmod	3:advmod	_
5	across	across	ADV	RB	Degree=Pos	3	advmod	3:advmod	_
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	position	position	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:37->35
8	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	7	obj	7:obj	Entity=(object-43)
9	at	at	ADP	IN	_	11	case	11:case	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(abstract-44
11	diagonal	diagonal	NOUN	NN	Number=Sing	7	obl	7:obl:at	Entity=abstract-44)
12	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-27
# text = Hold in place .
1	Hold	hold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:38->37
2	in	in	ADP	IN	_	3	case	3:case	_
3	place	place	NOUN	NN	Number=Sing	1	obl	1:obl:in	_
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-28
# text = Pass one end of the green lace over the fold in the red lace .
1	Pass	pass	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:39->38
2	one	one	NUM	CD	NumForm=Word|NumType=Card	3	nummod	3:nummod	Entity=(object-37
3	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-21
6	green	green	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=object-37)object-21)
8	over	over	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-40
10	fold	fold	NOUN	NN	Number=Sing	1	obl	1:obl:over	_
11	in	in	ADP	IN	_	14	case	14:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(object-20
13	red	red	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	lace	lace	NOUN	NN	Number=Sing	10	nmod	10:nmod:in	Entity=object-40)object-20)
15	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-29
# text = Insert the green lace into the loop formed by the fold of the red lace .
1	Insert	insert	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:40->39
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(object-21
3	green	green	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	lace	lace	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-21)
5	into	into	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-39
7	loop	loop	NOUN	NN	Number=Sing	1	obl	1:obl:into	_
8	formed	form	VERB	VBN	Tense=Past|VerbForm=Part	7	acl	7:acl	Discourse=elaboration:41->40
9	by	by	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-38
11	fold	fold	NOUN	NN	Number=Sing	8	obl	8:obl:by	_
12	of	of	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-20
14	red	red	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	lace	lace	NOUN	NN	Number=Sing	11	nmod	11:nmod:of	Entity=object-39)object-38)object-20)
16	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-30
# text = Hold in place .
1	Hold	hold	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:42->40
2	in	in	ADP	IN	_	3	case	3:case	_
3	place	place	NOUN	NN	Number=Sing	1	obl	1:obl:in	_
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-31
# text = Pass the other end of the green lace over the fold in the red lace .
1	Pass	pass	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:43->42
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(place-41
3	other	other	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(object-21
7	green	green	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	lace	lace	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=place-41)object-21)
9	over	over	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(object-38
11	fold	fold	NOUN	NN	Number=Sing	1	obl	1:obl:over	_
12	in	in	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(object-20
14	red	red	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	lace	lace	NOUN	NN	Number=Sing	11	nmod	11:nmod:in	Entity=object-38)object-20)
16	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-32
# text = Insert the end of the green lace into the loop formed by the fold of the red lace .
1	Insert	insert	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:44->43
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(event-42
3	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-21
6	green	green	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	lace	lace	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=event-42)object-21)
8	into	into	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(object-39
10	loop	loop	NOUN	NN	Number=Sing	1	obl	1:obl:into	_
11	formed	form	VERB	VBN	Tense=Past|VerbForm=Part	10	acl	10:acl	Discourse=elaboration:45->44
12	by	by	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(object-45
14	fold	fold	NOUN	NN	Number=Sing	11	obl	11:obl:by	_
15	of	of	ADP	IN	_	18	case	18:case	_
16	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(object-20
17	red	red	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	lace	lace	NOUN	NN	Number=Sing	14	nmod	14:nmod:of	Entity=object-39)object-45)object-20)
19	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-33
# text = Pull gently to tighten .
1	Pull	pull	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:46->44
2	gently	gently	ADV	RB	Degree=Pos	1	advmod	1:advmod	_
3	to	to	PART	TO	_	4	mark	4:mark	Discourse=purpose:47->46
4	tighten	tighten	VERB	VB	VerbForm=Inf	1	xcomp	1:xcomp	_
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-34
# text = You have completed the first diagonal layer .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=sequence:48->46|Entity=(person-14)
2	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	3	aux	3:aux	_
3	completed	complete	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-36
5	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	7	amod	7:amod	_
6	diagonal	diagonal	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	layer	layer	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=abstract-36)
8	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = sub
# sent_id = AMALGUM_whow_gimp-35
# text = It should hold itself in place now .
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:49->48|Entity=(abstract-36)
2	should	should	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	hold	hold	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	itself	itself	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	3	obj	3:obj	Entity=(abstract-36)
5	in	in	ADP	IN	_	6	case	6:case	_
6	place	place	NOUN	NN	Number=Sing	3	obl	3:obl:in	_
7	now	now	ADV	RB	_	3	advmod	3:advmod	_
8	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-36
# text = Repeat the steps for diagonal plaiting until you finish your project .
1	Repeat	repeat	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:50->48
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-46
3	steps	step	NOUN	NNS	Number=Plur	1	obj	1:obj	_
4	for	for	ADP	IN	_	6	case	6:case	_
5	diagonal	diagonal	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-47
6	plaiting	plaiting	NOUN	NN	Number=Sing	3	nmod	3:nmod:for	Entity=abstract-46)abstract-47)
7	until	until	SCONJ	IN	_	9	mark	9:mark	Discourse=condition:51->50
8	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	9	nsubj	9:nsubj	Entity=(person-14)
9	finish	finish	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	1	advcl	1:advcl:until	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(abstract-31(person-14)
11	project	project	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=abstract-31)
12	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-37
# text = Consistently form your diagonal plait and your project will form a spiral with each successive layer .
1	Consistently	consistently	ADV	RB	Degree=Pos	2	advmod	2:advmod	Discourse=sequence:52->50
2	form	form	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(object-48(person-14)
4	diagonal	diagonal	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	plait	plait	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=object-48)
6	and	and	CCONJ	CC	_	10	cc	10:cc	Discourse=joint:53->52
7	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(abstract-31(person-14)
8	project	project	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	Entity=abstract-31)
9	will	will	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	form	form	VERB	VB	VerbForm=Inf	2	conj	2:conj:and	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-49
12	spiral	spiral	NOUN	NN	Number=Sing	10	obj	10:obj	Entity=abstract-49)
13	with	with	ADP	IN	_	16	case	16:case	_
14	each	each	DET	DT	_	16	det	16:det	Entity=(abstract-36
15	successive	successive	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	layer	layer	NOUN	NN	Number=Sing	10	obl	10:obl:with	Entity=abstract-36)
17	.	.	PUNCT	.	_	2	punct	2:punct	_

# s_type = imp
# sent_id = AMALGUM_whow_gimp-38
# text = Melt the end of the gimp with a match when you are finished .
1	Melt	meel	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:54->52
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(event-50
3	end	end	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(person-51
6	gimp	gimp	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=event-50)person-51)
7	with	with	ADP	IN	_	9	case	9:case	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(event-52
9	match	match	NOUN	NN	Number=Sing	1	obl	1:obl:with	Entity=event-52)
10	when	when	SCONJ	WRB	PronType=Int	13	mark	13:mark	Discourse=circumstance:55->54
11	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	13	nsubj	13:nsubj	Entity=(person-14)
12	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	13	cop	13:cop	_
13	finished	finished	ADJ	JJ	Degree=Pos	1	advcl	1:advcl:when	_
14	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-39
# text = Otherwise it will unravel or become loose .
1	Otherwise	otherwise	ADV	RB	Degree=Pos	4	advmod	4:advmod	Discourse=sequence:56->54
2	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	4	nsubj	4:nsubj	Entity=(event-52)
3	will	will	AUX	MD	VerbForm=Fin	4	aux	4:aux|6:aux	_
4	unravel	unravel	VERB	VB	VerbForm=Inf	0	root	0:root	_
5	or	or	CCONJ	CC	_	6	cc	6:cc	_
6	become	become	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	4	conj	4:conj:or	_
7	loose	loose	ADJ	JJ	Degree=Pos	6	xcomp	6:xcomp	_
8	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-40
# text = Finished .
1	Finished	Finished	ADJ	JJ	Degree=Pos	0	root	0:root	Discourse=sequence:57->56
2	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-41
# text = Tips
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:58->59|Entity=(abstract-53)

# s_type = imp
# sent_id = AMALGUM_whow_gimp-42
# text = Check that the gimp has not twisted after you do a stitch .
1	Check	check	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:59->10
2	that	that	SCONJ	IN	_	7	mark	7:mark	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(person-51
4	gimp	gimp	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=person-51)
5	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	7:aux	_
6	not	not	ADV	RB	Polarity=Neg	7	advmod	7:advmod	_
7	twisted	twist	VERB	VBN	Tense=Past|VerbForm=Part	1	ccomp	1:ccomp	_
8	after	after	SCONJ	IN	_	10	mark	10:mark	Discourse=circumstance:60->59
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	10	nsubj	10:nsubj	Entity=(person-14)
10	do	do	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	7	advcl	7:advcl:after	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(object-54
12	stitch	stitch	NOUN	NN	Number=Sing	10	obj	10:obj	Entity=object-54)
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = multiple
# sent_id = AMALGUM_whow_gimp-43
# text = Pull tight or the stitch will unravel .
1	Pull	pull	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:61->59
2	tight	tight	ADJ	JJ	Degree=Pos	1	advmod	1:advmod	_
3	or	or	CCONJ	CC	_	7	cc	7:cc	Discourse=contrast:62->61
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-54
5	stitch	stitch	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=object-54)
6	will	will	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
7	unravel	unravel	VERB	VB	VerbForm=Inf	1	conj	1:conj:or	_
8	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-44
# text = Use gimp of the the same thickness for both strands or it will affect the desired shape .
1	Use	use	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:63->61
2	gimp	gimp	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=(abstract-55
3	of	of	ADP	IN	_	7	case	7:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-56
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	_
6	same	same	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	thickness	thickness	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	_
8	for	for	ADP	IN	_	10	case	10:case	_
9	both	both	DET	DT	_	10	det	10:det	Entity=(object-57
10	strands	strand	NOUN	NNS	Number=Plur	7	nmod	7:nmod:for	Entity=abstract-55)abstract-56)object-57)
11	or	or	CCONJ	CC	_	14	cc	14:cc	Discourse=contrast:64->63
12	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	14	nsubj	14:nsubj	Entity=(object-54)
13	will	will	AUX	MD	VerbForm=Fin	14	aux	14:aux	_
14	affect	affect	VERB	VB	VerbForm=Inf	1	conj	1:conj:or	_
15	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(abstract-58
16	desired	desire	VERB	VBN	Tense=Past|VerbForm=Part	17	amod	17:amod	_
17	shape	shape	NOUN	NN	Number=Sing	14	obj	14:obj	Entity=abstract-58)
18	.	.	PUNCT	.	_	1	punct	1:punct	_

# s_type = decl
# sent_id = AMALGUM_whow_gimp-45
# text = You can make this without plastic .
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=joint:65->63|Entity=(person-14)
2	can	can	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	make	make	VERB	VB	VerbForm=Inf	0	root	0:root	_
4	this	this	PRON	DT	Number=Sing|PronType=Dem	3	obj	3:obj	Entity=(object-54)
5	without	without	ADP	IN	_	6	case	6:case	_
6	plastic	plastic	NOUN	NN	Number=Sing	3	obl	3:obl:without	Entity=(substance-59)
7	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-46
# text = Warnings
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:66->67|Entity=(abstract-60)

# s_type = imp
# sent_id = AMALGUM_whow_gimp-47
# text = Be careful when using things such as matches and super glue during this project .
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=joint:67->59
2	careful	careful	ADJ	JJ	Degree=Pos	0	root	0:root	_
3	when	when	SCONJ	WRB	PronType=Int	4	mark	4:mark	Discourse=circumstance:68->67
4	using	use	VERB	VBG	VerbForm=Ger	2	advcl	2:advcl:when	_
5	things	thing	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=(object-61
6	such	such	ADJ	JJ	Degree=Pos	8	case	8:case	_
7	as	as	ADP	IN	_	6	fixed	6:fixed	_
8	matches	match	NOUN	NNS	Number=Plur	5	nmod	5:nmod:such_as	Entity=(object-62)
9	and	and	CCONJ	CC	_	11	cc	11:cc	_
10	super	super	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(substance-63
11	glue	glue	NOUN	NN	Number=Sing	8	conj	5:nmod:such_as|8:conj:and	Entity=object-61)substance-63)
12	during	during	ADP	IN	_	14	case	14:case	_
13	this	this	DET	DT	Number=Sing|PronType=Dem	14	det	14:det	Entity=(abstract-31
14	project	project	NOUN	NN	Number=Sing	4	obl	4:obl:during	Entity=abstract-31)
15	.	.	PUNCT	.	_	2	punct	2:punct	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-48
# text = Things You 'll Need
1	Things	thing	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:69->70|Entity=(object-61
2	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-14)
3	'll	will	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	Need	need	VERB	VB	VerbForm=Inf	1	acl:relcl	1:acl:relcl	Entity=object-61)

# s_type = ger
# sent_id = AMALGUM_whow_gimp-49
# text = Gimp lacing
1	Gimp	Gimp	PROPN	NNP	Number=Sing	2	compound	2:compound	Discourse=joint:70->67|Entity=(person-51)
2	lacing	lace	VERB	VBG	VerbForm=Ger	0	root	0:root	_

# s_type = frag
# sent_id = AMALGUM_whow_gimp-50
# text = Scissors
1	Scissors	scissor	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:71->72|Entity=(person-64)

# s_type = frag
# sent_id = AMALGUM_whow_gimp-51
# text = Matches
1	Matches	match	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=joint:72->70|Entity=(object-62)

