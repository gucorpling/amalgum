# meta::id = AMALGUM_whow_reassemble
# meta::title = Disassemble, Transport, and Reassemble a PC
# meta::shortTitle = reassemble
# meta::type = whow
# meta::dateCollected = 2019-11-06
# meta::dateCreated = 2007-02-07
# meta::dateModified = 2018-10-13
# meta::sourceURL = https://www.wikihow.com/Disassemble%2C-Transport%2C-and-Reassemble-a-PC
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_whow_reassemble
# sent_id = AMALGUM_whow_reassemble-1
# s_type = imp
# text = Disassemble, Transport, and Reassemble a PC
# newpar = head (1 s)
1	Disassemble	disassemble	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:1->3|SpaceAfter=No
2	,	,	PUNCT	,	_	3	punct	3:punct	_
3	Transport	Transport	PROPN	NNP	Number=Sing	1	conj	1:conj:and	Entity=(event-1)|SpaceAfter=No
4	,	,	PUNCT	,	_	6	punct	6:punct	_
5	and	and	CCONJ	CC	_	6	cc	6:cc	_
6	Reassemble	reassemble	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(object-2
8	PC	PC	PROPN	NNP	Abbr=Yes|Number=Sing	1	obj	1:obj|6:obj	Entity=object-2)|SpaceAfter=No

# sent_id = AMALGUM_whow_reassemble-2
# s_type = decl
# text = Moving in itself can be an overwhelming endeavor...
# newpar = p (2 s)
1	Moving	move	VERB	VBG	VerbForm=Ger	8	csubj	8:csubj	Discourse=preparation:2->3
2	in	in	ADP	IN	_	3	case	3:case	_
3	itself	itself	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	1	obl	1:obl:in	Entity=(event-1)
4	can	can	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
5	be	be	AUX	VB	VerbForm=Inf	8	cop	8:cop	_
6	an	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(place-3
7	overwhelming	overwhelming	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	endeavor	endeavor	NOUN	NN	Number=Sing	0	root	0:root	Entity=place-3)|SpaceAfter=No
9	...	â€¦	PUNCT	:	_	8	punct	8:punct	SpaceAfter=No

# sent_id = AMALGUM_whow_reassemble-3
# s_type = sub
# text = add a home computer to the mix and things can get frustrating.
1	add	add	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=ROOT:3
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-4
3	home	home	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(place-5)
4	computer	computer	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
5	to	to	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-6
7	mix	mix	NOUN	NN	Number=Sing	1	obl	1:obl:to	Entity=abstract-6)
8	and	and	CCONJ	CC	_	11	cc	11:cc	Discourse=sequence:4->3
9	things	thing	NOUN	NNS	Number=Plur	11	nsubj	11:nsubj|12:nsubj:xsubj	Entity=(abstract-7)
10	can	can	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
11	get	get	VERB	VB	VerbForm=Inf	1	conj	1:conj:and	_
12	frustrating	frustrating	ADJ	JJ	Degree=Pos	11	xcomp	11:xcomp	SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-4
# s_type = frag
# text = Steps
# newpar = head (1 s)
1	Steps	step	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:5->6|Entity=(abstract-8)

# sent_id = AMALGUM_whow_reassemble-5
# s_type = imp
# text = Turn the computer off, including all power strips.
# newpar = list type:::"ordered" (32 s)
# newpar1 = item (6 s)
1	Turn	turn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:6->3
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-4
3	computer	computer	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
4	off	off	ADP	RP	_	1	compound:prt	1:compound:prt	SpaceAfter=No
5	,	,	PUNCT	,	_	9	punct	9:punct	_
6	including	include	VERB	VBG	VerbForm=Ger	9	case	9:case	Discourse=elaboration:7->6
7	all	all	DET	DT	_	9	det	9:det	Entity=(object-9
8	power	power	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-10)
9	strips	strip	NOUN	NNS	Number=Plur	1	obl	1:obl:including	Entity=object-9)|SpaceAfter=No
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-6
# s_type = imp
# text = Shut your computer down first from software (Start Menu->Shut Down, or issue "halt" from a root terminal in Linux), turn off the power strip, and unplug it from the wall.
1	Shut	shut	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:8->6
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-4(person-11)
3	computer	computer	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
4	down	down	ADP	RP	_	1	compound:prt	1:compound:prt	_
5	first	first	ADV	RB	Degree=Pos|NumType=Ord	1	advmod	1:advmod	_
6	from	from	ADP	IN	_	7	case	7:case	_
7	software	software	NOUN	NN	Number=Sing	1	obl	1:obl:from	Entity=(abstract-12)
8	(	(	PUNCT	-LRB-	_	10	punct	10:punct	Discourse=elaboration:9->8|SpaceAfter=No
9	Start	start	PROPN	NNP	Number=Sing	10	compound	10:compound	Entity=(abstract-13(person-14)
10	Menu->Shut	Menu->Shut	PROPN	NNP	Number=Sing	1	parataxis	1:parataxis	_
11	Down	down	ADP	RP	_	10	compound:prt	10:compound:prt	Entity=abstract-13)|SpaceAfter=No
12	,	,	PUNCT	,	_	14	punct	14:punct	_
13	or	or	CCONJ	CC	_	14	cc	14:cc	Discourse=contrast:10->9
14	issue	issue	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	10	conj	10:conj:or	_
15	"	''	PUNCT	``	_	16	punct	16:punct	SpaceAfter=No
16	halt	halt	NOUN	NN	Number=Sing	14	obj	14:obj	Entity=(event-15)|SpaceAfter=No
17	"	''	PUNCT	''	_	16	punct	16:punct	_
18	from	from	ADP	IN	_	21	case	21:case	_
19	a	a	DET	DT	Definite=Ind|PronType=Art	21	det	21:det	Entity=(object-16
20	root	root	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=(object-17)
21	terminal	terminal	NOUN	NN	Number=Sing	14	obl	14:obl:from	_
22	in	in	ADP	IN	_	23	case	23:case	_
23	Linux	Linux	PROPN	NNP	Number=Sing	21	nmod	21:nmod:in	Entity=object-16)(abstract-18)|SpaceAfter=No
24	)	)	PUNCT	-RRB-	_	10	punct	10:punct	SpaceAfter=No
25	,	,	PUNCT	,	_	26	punct	26:punct	_
26	turn	turn	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	Discourse=sequence:11->6
27	off	off	ADP	RP	_	26	compound:prt	26:compound:prt	_
28	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(object-19
29	power	power	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-10)
30	strip	strip	NOUN	NN	Number=Sing	26	obj	26:obj	Entity=object-19)|SpaceAfter=No
31	,	,	PUNCT	,	_	33	punct	33:punct	_
32	and	and	CCONJ	CC	_	33	cc	33:cc	Discourse=sequence:12->6
33	unplug	unplug	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
34	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	33	obj	33:obj	Entity=(event-15)
35	from	from	ADP	IN	_	37	case	37:case	_
36	the	the	DET	DT	Definite=Def|PronType=Art	37	det	37:det	Entity=(object-20
37	wall	wall	NOUN	NN	Number=Sing	33	obl	33:obl:from	Entity=object-20)|SpaceAfter=No
38	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-7
# s_type = imp
# text = If you have an uninterruptible power supply, disconnect that too.
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:13->14
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-11)
3	have	have	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	9	advcl	9:advcl:if	_
4	an	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(object-21
5	uninterruptible	uninterruptible	ADJ	JJ	Degree=Pos|Polarity=Neg	7	amod	7:amod	_
6	power	power	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-10)
7	supply	supply	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-21)|SpaceAfter=No
8	,	,	PUNCT	,	_	3	punct	3:punct	_
9	disconnect	disconnect	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:14->12
10	that	that	PRON	DT	Number=Sing|PronType=Dem	9	obj	9:obj	Entity=(object-21)
11	too	too	ADV	RB	Degree=Pos	9	advmod	9:advmod	SpaceAfter=No
12	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_whow_reassemble-8
# s_type = sub
# text = When you're done, there should be no connect between your hardware and any power source.
1	When	when	SCONJ	WRB	PronType=Int	4	mark	4:mark	Discourse=condition:15->16
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj:pass	4:nsubj:pass	Entity=(abstract-22(person-11)|SpaceAfter=No
3	're	be	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	4	aux:pass	4:aux:pass	_
4	done	do	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	acl	10:acl:when	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	there	there	PRON	EX	_	10	expl	10:expl	Discourse=elaboration:16->14
7	should	should	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
8	be	be	AUX	VB	VerbForm=Inf	10	cop	10:cop	_
9	no	no	DET	DT	Polarity=Neg	10	det	10:det	_
10	connect	connect	NOUN	NN	Number=Sing	0	root	0:root	_
11	between	between	ADP	IN	_	13	case	13:case	_
12	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	13	nmod:poss	13:nmod:poss	Entity=(object-23(person-11)
13	hardware	hardware	NOUN	NN	Number=Sing	10	nmod	10:nmod:between	Entity=object-23)
14	and	and	CCONJ	CC	_	17	cc	17:cc	_
15	any	any	DET	DT	_	17	det	17:det	Entity=(abstract-24
16	power	power	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(abstract-10)
17	source	source	NOUN	NN	Number=Sing	13	conj	10:nmod:between|13:conj:and	Entity=abstract-22)abstract-24)|SpaceAfter=No
18	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_whow_reassemble-9
# s_type = decl
# text = Most towers have a small light somewhere that will go off when you have disconnected its power cable.
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	2:amod	Discourse=elaboration:17->16|Entity=(object-25
2	towers	tower	NOUN	NNS	Number=Plur	3	nsubj	3:nsubj	Entity=object-25)
3	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(object-26
5	small	small	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	light	light	NOUN	NN	Number=Sing	3	obj	3:obj|10:nsubj	_
7	somewhere	somewhere	ADV	RB	_	6	advmod	6:advmod	_
8	that	that	PRON	WDT	PronType=Rel	10	nsubj	6:ref	Discourse=elaboration:18->17
9	will	will	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	go	go	VERB	VB	VerbForm=Inf	6	acl:relcl	6:acl:relcl	_
11	off	off	ADP	RP	_	10	compound:prt	10:compound:prt	Entity=object-26)
12	when	when	SCONJ	WRB	PronType=Int	15	mark	15:mark	Discourse=circumstance:19->17
13	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	15	nsubj	15:nsubj	Entity=(person-11)
14	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	15	aux	15:aux	_
15	disconnected	disconnect	VERB	VBN	Tense=Past|VerbForm=Part	10	advcl	10:advcl:when	_
16	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	18	nmod:poss	18:nmod:poss	Entity=(object-27(object-26)
17	power	power	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-10)
18	cable	cable	NOUN	NN	Number=Sing	15	obj	15:obj	Entity=object-27)|SpaceAfter=No
19	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_whow_reassemble-10
# s_type = decl
# text = This is an important step because some ports can be damaged by unplugging them while power remains.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 1.jpg"></figure>
1	This	this	PRON	DT	Number=Sing|PronType=Dem	5	nsubj	5:nsubj	Discourse=evaluation:20->17|Entity=(object-27)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	cop	5:cop	_
3	an	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(object-27
4	important	important	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	step	step	NOUN	NN	Number=Sing	0	root	0:root	_
6	because	because	SCONJ	IN	_	11	mark	11:mark	Discourse=cause:21->20
7	some	some	DET	DT	_	8	det	8:det	Entity=(object-28
8	ports	port	NOUN	NNS	Number=Plur	11	nsubj:pass	11:nsubj:pass	Entity=object-28)
9	can	can	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
10	be	be	AUX	VB	VerbForm=Inf	11	aux:pass	11:aux:pass	_
11	damaged	damage	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	acl	5:acl:because	Entity=object-27)
12	by	by	SCONJ	IN	_	13	mark	13:mark	Discourse=means:22->21
13	unplugging	unplugg	VERB	VBG	VerbForm=Ger	11	advcl	11:advcl:by	_
14	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	13	obj	13:obj	Entity=(object-28)
15	while	while	SCONJ	IN	_	17	mark	17:mark	Discourse=circumstance:23->22
16	power	power	NOUN	NN	Number=Sing	17	nsubj	17:nsubj	Entity=(abstract-10)
17	remains	remain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	advcl	13:advcl:while	SpaceAfter=No
18	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_reassemble-11
# s_type = imp
# text = Make a diagram of the cabling between parts, and draw out the ports on each.
# newpar = item (3 s)
1	Make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:24->6
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-29
3	diagram	diagram	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(object-30
6	cabling	cabling	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	_
7	between	between	ADP	IN	_	8	case	8:case	_
8	parts	part	NOUN	NNS	Number=Plur	6	nmod	6:nmod:between	Entity=abstract-29)object-30)(object-31)|SpaceAfter=No
9	,	,	PUNCT	,	_	11	punct	11:punct	_
10	and	and	CCONJ	CC	_	11	cc	11:cc	Discourse=sequence:25->6
11	draw	draw	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
12	out	out	ADP	RP	_	11	compound:prt	11:compound:prt	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(object-28
14	ports	port	NOUN	NNS	Number=Plur	11	obj	11:obj	_
15	on	on	ADP	IN	_	16	case	16:case	_
16	each	each	PRON	DT	_	14	nmod	14:nmod:on	Entity=object-28)|SpaceAfter=No
17	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-12
# s_type = decl
# text = The point here is not photorealism but rather to know later that there's a cable from the second port over on the monitor to the second port down on the tower.
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=sequence:26->6|Entity=(abstract-32
2	point	point	NOUN	NN	Number=Sing	6	nsubj	6:nsubj	Entity=abstract-32)
3	here	here	ADV	RB	PronType=Dem	6	advmod	6:advmod	_
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	not	not	ADV	RB	Polarity=Neg	6	advmod	6:advmod	_
6	photorealism	photorealism	NOUN	NN	Number=Sing	0	root	0:root	Entity=(abstract-33)
7	but	but	CCONJ	CC	_	10	cc	10:cc	Discourse=attribution:27->28
8	rather	rather	ADV	RB	_	10	advmod	10:advmod	_
9	to	to	PART	TO	_	10	mark	10:mark	_
10	know	know	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	6	conj	6:conj:but	_
11	later	late	ADV	RBR	Degree=Cmp	10	advmod	10:advmod	_
12	that	that	SCONJ	IN	_	14	mark	14:mark	Discourse=contrast:28->26
13-14	there's	_	_	_	_	_	_	_	_
13	there	there	PRON	EX	_	14	expl	14:expl	_
14	's	be	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	ccomp	10:ccomp	_
15	a	a	DET	DT	Definite=Ind|PronType=Art	16	det	16:det	Entity=(object-27
16	cable	cable	NOUN	NN	Number=Sing	14	nsubj	14:nsubj	_
17	from	from	ADP	IN	_	20	case	20:case	_
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(object-34
19	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	20	amod	20:amod	_
20	port	port	NOUN	NN	Number=Sing	16	nmod	16:nmod:from	_
21	over	over	ADV	RB	_	20	advmod	20:advmod	_
22	on	on	ADP	IN	_	24	case	24:case	_
23	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(object-35
24	monitor	monitor	NOUN	NN	Number=Sing	20	nmod	20:nmod:on	Entity=object-34)object-35)
25	to	to	ADP	IN	_	28	case	28:case	_
26	the	the	DET	DT	Definite=Def|PronType=Art	28	det	28:det	Entity=(place-36
27	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	28	amod	28:amod	_
28	port	port	NOUN	NN	Number=Sing	16	nmod	16:nmod:to	_
29	down	down	ADV	RB	Degree=Pos	28	advmod	28:advmod	_
30	on	on	ADP	IN	_	32	case	32:case	_
31	the	the	DET	DT	Definite=Def|PronType=Art	32	det	32:det	Entity=(place-37
32	tower	tower	NOUN	NN	Number=Sing	28	nmod	28:nmod:on	Entity=object-27)place-36)place-37)|SpaceAfter=No
33	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_reassemble-13
# s_type = imp
# text = So trace each of your cables, figure out what it plugs into, and where.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 2.jpg"></figure>
1	So	so	ADV	RB	_	2	advmod	2:advmod	Discourse=sequence:29->6
2	trace	trace	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	each	each	PRON	DT	_	2	obj	2:obj	Entity=(object-35
4	of	of	ADP	IN	_	6	case	6:case	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(object-38(person-11)
6	cables	cable	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of	Entity=object-35)object-38)|SpaceAfter=No
7	,	,	PUNCT	,	_	8	punct	8:punct	_
8	figure	figure	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	2	parataxis	2:parataxis	Discourse=sequence:30->6
9	out	out	ADP	RP	_	8	compound:prt	8:compound:prt	_
10	what	what	PRON	WP	PronType=Rel	8	obj	8:obj	_
11	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	12	nsubj	12:nsubj	Entity=(object-35)
12	plugs	plug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	acl:relcl	10:acl:relcl	_
13	into	into	ADP	IN	_	10	case	10:case	SpaceAfter=No
14	,	,	PUNCT	,	_	16	punct	16:punct	_
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	where	where	SCONJ	WRB	PronType=Int	12	conj	10:acl:relcl|12:conj:and	SpaceAfter=No
17	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-14
# s_type = imp
# text = Label your cables.
# newpar = item (4 s)
1	Label	label	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:31->6
2	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	3	nmod:poss	3:nmod:poss	Entity=(object-38(person-11)
3	cables	cable	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-38)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-15
# s_type = decl
# text = I like to wrap masking tape around the cable so that a big long strip hangs off, and then double that over to make a tag.
1	I	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	2	nsubj	2:nsubj|4:nsubj:xsubj|21:nsubj:xsubj	Discourse=joint:32->31|Entity=(person-39)
2	like	like	VERB	VBP	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	wrap	wrap	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	_
5	masking	masking	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(object-40
6	tape	tape	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-40)
7	around	around	ADP	IN	_	9	case	9:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-27
9	cable	cable	NOUN	NN	Number=Sing	4	obl	4:obl:around	Entity=object-27)
10	so	so	SCONJ	IN	_	16	mark	16:mark	Discourse=purpose:33->32
11	that	that	ADP	IN	_	10	fixed	10:fixed	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(object-19
13	big	big	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
14	long	long	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	strip	strip	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=object-19)
16	hangs	hang	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	advcl	4:advcl:so_that	_
17	off	off	ADP	RP	_	16	compound:prt	16:compound:prt	SpaceAfter=No
18	,	,	PUNCT	,	_	21	punct	21:punct	_
19	and	and	CCONJ	CC	_	21	cc	21:cc	Discourse=sequence:34->33
20	then	then	ADV	RB	PronType=Dem	21	advmod	21:advmod	_
21	double	double	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	4	conj	2:xcomp|4:conj:and	_
22	that	that	PRON	DT	Number=Sing|PronType=Dem	21	obj	21:obj	Entity=(object-19)
23	over	over	ADV	RB	_	21	advmod	21:advmod	_
24	to	to	PART	TO	_	25	mark	25:mark	Discourse=purpose:35->34
25	make	make	VERB	VB	VerbForm=Inf	21	advcl	21:advcl:to	_
26	a	a	DET	DT	Definite=Ind|PronType=Art	27	det	27:det	Entity=(object-41
27	tag	tag	NOUN	NN	Number=Sing	25	obj	25:obj	Entity=object-41)|SpaceAfter=No
28	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-16
# s_type = imp
# text = Label where each end of the cable goes.
1	Label	label	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:36->32
2	where	where	SCONJ	WRB	PronType=Rel	1	obj	1:obj	_
3	each	each	DET	DT	_	4	det	4:det	Entity=(abstract-42
4	end	end	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(object-27
7	cable	cable	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=abstract-42)object-27)
8	goes	go	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	acl:relcl	2:acl:relcl	SpaceAfter=No
9	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-17
# s_type = decl
# text = Some cables cannot be reversed (for example, your camera's USB cable probably has a big end for the computer and a smaller end for the camera).
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 3.jpg"></figure>
1	Some	some	DET	DT	_	2	det	2:det	Discourse=sequence:37->32|Entity=(object-38
2	cables	cable	NOUN	NNS	Number=Plur	5	nsubj:pass	5:nsubj:pass	Entity=object-38)
3	cannot	cannot	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
4	be	be	AUX	VB	VerbForm=Inf	5	aux:pass	5:aux:pass	_
5	reversed	reverse	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	(	(	PUNCT	-LRB-	_	16	punct	16:punct	Discourse=elaboration:38->37|SpaceAfter=No
7	for	for	ADP	IN	_	8	case	8:case	_
8	example	example	NOUN	NN	Number=Sing	16	obl	16:obl:for	SpaceAfter=No
9	,	,	PUNCT	,	_	8	punct	8:punct	_
10	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	11	nmod:poss	11:nmod:poss	Entity=(object-27(object-43(person-11)
11-12	camera's	_	_	_	_	_	_	_	_
11	camera	camera	NOUN	NN	Number=Sing	14	nmod:poss	14:nmod:poss	_
12	's	's	PART	POS	_	11	case	11:case	Entity=object-43)
13	USB	USB	PROPN	NNP	Number=Sing	14	compound	14:compound	Entity=(object-44)
14	cable	cable	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=object-27)
15	probably	probably	ADV	RB	Degree=Pos	16	advmod	16:advmod	_
16	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	parataxis	5:parataxis	_
17	a	a	DET	DT	Definite=Ind|PronType=Art	19	det	19:det	Entity=(abstract-42
18	big	big	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
19	end	end	NOUN	NN	Number=Sing	16	obj	16:obj	_
20	for	for	ADP	IN	_	22	case	22:case	_
21	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(object-4
22	computer	computer	NOUN	NN	Number=Sing	19	nmod	19:nmod:for	Entity=abstract-42)object-4)
23	and	and	CCONJ	CC	_	26	cc	26:cc	_
24	a	a	DET	DT	Definite=Ind|PronType=Art	26	det	26:det	Entity=(abstract-42
25	smaller	small	ADJ	JJR	Degree=Cmp	26	amod	26:amod	_
26	end	end	NOUN	NN	Number=Sing	19	conj	16:obj|19:conj:and	_
27	for	for	ADP	IN	_	29	case	29:case	_
28	the	the	DET	DT	Definite=Def|PronType=Art	29	det	29:det	Entity=(object-43
29	camera	camera	NOUN	NN	Number=Sing	26	nmod	26:nmod:for	Entity=abstract-42)object-43)|SpaceAfter=No
30	)	)	PUNCT	-RRB-	_	16	punct	16:punct	SpaceAfter=No
31	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_reassemble-18
# s_type = imp
# text = Unplug all the cables.
# newpar = item (3 s)
1	Unplug	unplug	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:39->32
2	all	all	PRON	PDT	_	4	det:predet	4:det:predet	Entity=(object-38
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
4	cables	cable	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-38)|SpaceAfter=No
5	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-19
# s_type = multiple
# text = If possible, unplug them at both ends; if a cable is wrenched in a detachable port during shipping, the port might be ruined.
1	If	if	SCONJ	IN	_	2	mark	2:mark	Discourse=condition:40->41
2	possible	possible	ADJ	JJ	Degree=Pos	4	advcl	4:advcl:if	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	unplug	unplug	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:41->39
5	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	4	obj	4:obj	Entity=(object-38)
6	at	at	ADP	IN	_	8	case	8:case	_
7	both	both	DET	DT	_	8	det	8:det	Entity=(place-45
8	ends	end	NOUN	NNS	Number=Plur	4	obl	4:obl:at	Entity=place-45)|SpaceAfter=No
9	;	;	PUNCT	:	_	26	punct	26:punct	_
10	if	if	SCONJ	IN	_	14	mark	14:mark	Discourse=condition:42->43
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(object-27
12	cable	cable	NOUN	NN	Number=Sing	14	nsubj:pass	14:nsubj:pass	Entity=object-27)
13	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	14:aux:pass	_
14	wrenched	wrench	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	26	advcl	26:advcl:if	_
15	in	in	ADP	IN	_	18	case	18:case	_
16	a	a	DET	DT	Definite=Ind|PronType=Art	18	det	18:det	Entity=(object-34
17	detachable	detachable	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	port	port	NOUN	NN	Number=Sing	14	obl	14:obl:in	Entity=object-34)
19	during	during	ADP	IN	_	20	case	20:case	_
20	shipping	shipping	NOUN	NN	Number=Sing	14	obl	14:obl:during	Entity=(event-46)|SpaceAfter=No
21	,	,	PUNCT	,	_	14	punct	14:punct	_
22	the	the	DET	DT	Definite=Def|PronType=Art	23	det	23:det	Discourse=same_unit:43->41|Entity=(object-34
23	port	port	NOUN	NN	Number=Sing	26	nsubj:pass	26:nsubj:pass	Entity=object-34)
24	might	might	AUX	MD	VerbForm=Fin	26	aux	26:aux	_
25	be	be	AUX	VB	VerbForm=Inf	26	aux:pass	26:aux:pass	_
26	ruined	ruin	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	parataxis	4:parataxis	SpaceAfter=No
27	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_reassemble-20
# s_type = imp
# text = Either loop them in figure-eights secured with a zip or twist tie in the middle, or in a circle as if around an invisible spool, secured by wrapping one end in a spiral around the curve of the loop.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 4.jpg"></figure>
1	Either	either	CCONJ	CC	_	2	cc:preconj	2:cc:preconj	Discourse=joint:44->39
2	loop	loop	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	2	obj	2:obj	Entity=(object-38)
4	in	in	ADP	IN	_	5	case	5:case	_
5	figure-eights	figure-eight	NOUN	NNS	Number=Plur	2	obl	2:obl:in	Entity=(abstract-47
6	secured	secure	VERB	VBN	Tense=Past|VerbForm=Part	5	acl	5:acl	Discourse=elaboration:45->44
7	with	with	ADP	IN	_	9	case	9:case	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-48
9	zip	zip	NOUN	NN	Number=Sing	6	obl	6:obl:with	Entity=object-48)
10	or	or	CCONJ	CC	_	12	cc	12:cc	_
11	twist	twist	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(object-49(abstract-50)
12	tie	tie	NOUN	NN	Number=Sing	9	conj	6:obl:with|9:conj:or	_
13	in	in	ADP	IN	_	15	case	15:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(organization-51
15	middle	middle	NOUN	NN	Number=Sing	12	nmod	12:nmod:in	Entity=abstract-47)object-49)organization-51)|SpaceAfter=No
16	,	,	PUNCT	,	_	20	punct	20:punct	_
17	or	or	CCONJ	CC	_	20	cc	20:cc	Discourse=contrast:46->44
18	in	in	ADP	IN	_	20	case	20:case	_
19	a	a	DET	DT	Definite=Ind|PronType=Art	20	det	20:det	Entity=(abstract-52
20	circle	circle	NOUN	NN	Number=Sing	7	conj	7:conj:or|9:case	_
21	as	as	SCONJ	IN	_	26	mark	26:mark	Discourse=manner:47->46
22	if	if	ADP	IN	_	21	fixed	21:fixed	_
23	around	around	ADP	IN	_	26	case	26:case	_
24	an	a	DET	DT	Definite=Ind|PronType=Art	26	det	26:det	Entity=(object-53
25	invisible	invisible	ADJ	JJ	Degree=Pos	26	amod	26:amod	_
26	spool	spool	NOUN	NN	Number=Sing	20	nmod	20:nmod:around	Entity=object-53)|SpaceAfter=No
27	,	,	PUNCT	,	_	28	punct	28:punct	_
28	secured	secure	VERB	VBN	Tense=Past|VerbForm=Part	20	acl	20:acl	Discourse=elaboration:48->47|Entity=abstract-52)
29	by	by	SCONJ	IN	_	30	mark	30:mark	_
30	wrapping	wrapp	VERB	VBG	VerbForm=Ger	28	advcl	28:advcl:by	_
31	one	one	NUM	CD	NumForm=Word|NumType=Card	32	nummod	32:nummod	Entity=(abstract-42
32	end	end	NOUN	NN	Number=Sing	30	obj	30:obj	Entity=abstract-42)
33	in	in	ADP	IN	_	35	case	35:case	_
34	a	a	DET	DT	Definite=Ind|PronType=Art	35	det	35:det	Entity=(object-54
35	spiral	spiral	NOUN	NN	Number=Sing	30	obl	30:obl:in	Entity=object-54)
36	around	around	ADP	IN	_	38	case	38:case	_
37	the	the	DET	DT	Definite=Def|PronType=Art	38	det	38:det	Entity=(abstract-55
38	curve	curve	NOUN	NN	Number=Sing	30	obl	30:obl:around	_
39	of	of	ADP	IN	_	41	case	41:case	_
40	the	the	DET	DT	Definite=Def|PronType=Art	41	det	41:det	Entity=(object-56
41	loop	loop	NOUN	NN	Number=Sing	38	nmod	38:nmod:of	Entity=abstract-55)object-56)|SpaceAfter=No
42	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-21
# s_type = imp
# text = Tape the cables to their peripherals.
# newpar = item (4 s)
1	Tape	tape	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:49->39
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(object-38
3	cables	cable	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-38)
4	to	to	ADP	IN	_	6	case	6:case	_
5	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	6	nmod:poss	6:nmod:poss	Entity=(object-57(person-58)
6	peripherals	peripheral	NOUN	NNS	Number=Plur	1	obl	1:obl:to	Entity=object-57)|SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-22
# s_type = decl
# text = If you look at your cabling diagram, you'll notice that just about everything has a three-pronged power cable into the wall or power strip, and an odder-looking data cable into the tower.
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:50->52
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-11)
3	look	look	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	11	advcl	11:advcl:if	_
4	at	at	ADP	IN	_	7	case	7:case	_
5	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	7	nmod:poss	7:nmod:poss	Entity=(abstract-29(person-11)
6	cabling	cabling	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(object-30)
7	diagram	diagram	NOUN	NN	Number=Sing	3	obl	3:obl:at	Entity=abstract-29)|SpaceAfter=No
8	,	,	PUNCT	,	_	3	punct	3:punct	_
9-10	you'll	_	_	_	_	_	_	_	_
9	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	11	nsubj	11:nsubj	Discourse=attribution:51->52|Entity=(person-11)
10	'll	will	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
11	notice	notice	VERB	VB	VerbForm=Inf	0	root	0:root	_
12	that	that	SCONJ	IN	_	16	mark	16:mark	Discourse=sequence:52->49
13	just	just	ADV	RB	_	16	advmod	16:advmod	_
14	about	about	ADP	IN	_	13	fixed	13:fixed	_
15	everything	everything	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=(object-59)
16	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	ccomp	11:ccomp	_
17	a	a	DET	DT	Definite=Ind|PronType=Art	20	det	20:det	Entity=(object-27
18	three-pronged	three-pronged	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
19	power	power	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-10)
20	cable	cable	NOUN	NN	Number=Sing	16	obj	16:obj	_
21	into	into	ADP	IN	_	23	case	23:case	_
22	the	the	DET	DT	Definite=Def|PronType=Art	23	det	23:det	Entity=(object-20
23	wall	wall	NOUN	NN	Number=Sing	20	nmod	20:nmod:into	Entity=object-20)
24	or	or	CCONJ	CC	_	26	cc	26:cc	_
25	power	power	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=(object-19(abstract-10)
26	strip	strip	NOUN	NN	Number=Sing	23	conj	20:nmod:into|23:conj:or	Entity=object-27)object-19)|SpaceAfter=No
27	,	,	PUNCT	,	_	32	punct	32:punct	_
28	and	and	CCONJ	CC	_	32	cc	32:cc	Discourse=joint:53->52
29	an	a	DET	DT	Definite=Ind|PronType=Art	32	det	32:det	Entity=(object-27
30	odder-looking	odder-looking	ADJ	JJ	Degree=Pos	32	amod	32:amod	_
31	data	datum	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=(abstract-60)
32	cable	cable	NOUN	NN	Number=Sing	20	conj	16:obj|20:conj:and	_
33	into	into	ADP	IN	_	35	case	35:case	_
34	the	the	DET	DT	Definite=Def|PronType=Art	35	det	35:det	Entity=(place-37
35	tower	tower	NOUN	NN	Number=Sing	32	nmod	32:nmod:into	Entity=object-27)place-37)|SpaceAfter=No
36	.	.	PUNCT	.	_	11	punct	11:punct	_

# sent_id = AMALGUM_whow_reassemble-23
# s_type = decl
# text = So the tower is at the center and everything else is at the periphery, hence the name peripherals to refer collectively to monitor, keyboard, etc. Taping each cable to its peripheral prevents them from getting lost or mixed up.
1	So	so	ADV	RB	_	7	advmod	7:advmod	Discourse=sequence:54->49
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(place-37
3	tower	tower	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=place-37)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	7:cop	_
5	at	at	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(place-61
7	center	center	NOUN	NN	Number=Sing	0	root	0:root	Entity=place-61)
8	and	and	CCONJ	CC	_	11	cc	11:cc	Discourse=sequence:55->49
9	everything	everything	NOUN	NN	Number=Sing	11	nsubj	11:nsubj	Entity=(object-59
10	else	else	ADV	RB	Degree=Pos	9	advmod	9:advmod	Entity=object-59)
11	is	be	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	conj	7:conj:and	_
12	at	at	ADP	IN	_	14	case	14:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(place-62
14	periphery	periphery	NOUN	NN	Number=Sing	11	obl	11:obl:at	Entity=place-62)|SpaceAfter=No
15	,	,	PUNCT	,	_	16	punct	16:punct	_
16	hence	hence	ADV	RB	Degree=Pos	7	advmod	7:advmod	Discourse=sequence:56->49
17	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(object-57(abstract-63
18	name	name	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	_
19	peripherals	peripheral	NOUN	NNS	Number=Plur	18	appos	18:appos	_
20	to	to	PART	TO	_	21	mark	21:mark	Discourse=purpose:57->56
21	refer	refer	VERB	VB	VerbForm=Inf	18	acl	18:acl:to	_
22	collectively	collectively	ADV	RB	Degree=Pos	21	advmod	21:advmod	_
23	to	to	ADP	IN	_	24	case	24:case	_
24	monitor	monitor	NOUN	NN	Number=Sing	21	obl	21:obl:to	Entity=(object-35)|SpaceAfter=No
25	,	,	PUNCT	,	_	26	punct	26:punct	_
26	keyboard	keyboard	NOUN	NN	Number=Sing	24	conj	21:obl:to|24:conj	Entity=(object-64)|SpaceAfter=No
27	,	,	PUNCT	,	_	28	punct	28:punct	_
28	etc.	etc.	PROPN	NNP	Abbr=Yes|Number=Sing	24	conj	21:obl:to|24:conj	Entity=abstract-63)object-57)
29	Taping	tape	VERB	VBG	VerbForm=Ger	35	csubj	35:csubj	_
30	each	each	DET	DT	_	31	det	31:det	Entity=(object-27
31	cable	cable	NOUN	NN	Number=Sing	29	obj	29:obj	Entity=object-27)
32	to	to	ADP	IN	_	34	case	34:case	_
33	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	34	nmod:poss	34:nmod:poss	Entity=(object-65(object-27)
34	peripheral	peripheral	NOUN	NN	Number=Sing	29	obl	29:obl:to	Entity=object-65)
35	prevents	prevent	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	parataxis	7:parataxis	_
36	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	35	obj	35:obj	Entity=(person-58)
37	from	from	SCONJ	IN	_	39	mark	39:mark	_
38	getting	get	VERB	VBG	VerbForm=Ger	35	advcl	35:advcl	_
39	lost	lose	VERB	VBN	Tense=Past|VerbForm=Part	38	xcomp	38:xcomp	_
40	or	or	CCONJ	CC	_	41	cc	41:cc	_
41	mixed	mix	VERB	VBN	Tense=Past|VerbForm=Part	39	conj	38:xcomp|39:conj:or	_
42	up	up	ADP	RP	_	41	compound:prt	41:compound:prt	SpaceAfter=No
43	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_whow_reassemble-24
# s_type = decl
# text = Power cables in particular can look alike.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 5.jpg"></figure>
1	Power	Power	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:58->56|Entity=(object-38(person-66)
2	cables	cable	NOUN	NNS	Number=Plur	6	nsubj	6:nsubj	_
3	in	in	ADP	IN	_	4	case	4:case	_
4	particular	particular	ADJ	JJ	Degree=Pos	2	nmod	2:nmod:in	Entity=object-38)
5	can	can	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
6	look	look	VERB	VB	VerbForm=Inf	0	root	0:root	_
7	alike	alike	ADJ	JJ	Degree=Pos	6	advmod	6:advmod	SpaceAfter=No
8	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_reassemble-25
# s_type = imp
# text = Move everything over.
# newpar = item (5 s)
1	Move	move	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:59->61
2	everything	everything	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=(object-59)
3	over	over	ADP	RP	_	1	compound:prt	1:compound:prt	SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-26
# s_type = imp
# text = If you can get it all driven to the destination, make sure everything is secured.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:60->61
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-11)
3	can	can	AUX	MD	VerbForm=Fin	4	aux	4:aux	_
4	get	get	VERB	VB	VerbForm=Inf	12	advcl	12:advcl:if	_
5	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	4	obj	4:obj|7:nsubj:xsubj	Entity=(object-59
6	all	all	DET	DT	_	5	det	5:det	Entity=object-59)
7	driven	drive	VERB	VBN	Tense=Past|VerbForm=Part	4	xcomp	4:xcomp	_
8	to	to	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(place-67
10	destination	destination	NOUN	NN	Number=Sing	7	obl	7:obl:to	Entity=place-67)|SpaceAfter=No
11	,	,	PUNCT	,	_	4	punct	4:punct	_
12	make	make	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:61->58
13	sure	sure	ADJ	JJ	Degree=Pos	12	xcomp	12:xcomp	_
14	everything	everything	NOUN	NN	Number=Sing	16	nsubj:pass	16:nsubj:pass	Entity=(object-59)
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	aux:pass	16:aux:pass	_
16	secured	secure	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	ccomp	13:ccomp	SpaceAfter=No
17	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_whow_reassemble-27
# s_type = imp
# text = At the very least, wedge the tower in the passenger-side footwell rather than letting it rattle around in the trunk, and put the monitor in a box so nothing stabs into the screen.
1	At	at	ADP	IN	_	4	case	4:case	Discourse=joint:62->61
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
3	very	very	ADV	RB	_	4	amod	4:amod	_
4	least	least	ADJ	JJS	Degree=Sup	6	obl	6:obl:at	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	wedge	wedge	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(place-37
8	tower	tower	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=place-37)
9	in	in	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(object-68
11	passenger-side	passenger-side	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-69)
12	footwell	footwell	NOUN	NN	Number=Sing	6	obl	6:obl:in	Entity=object-68)
13	rather	rather	ADV	RB	_	15	cc	15:cc	Discourse=antithesis:63->62
14	than	than	ADP	IN	_	13	fixed	13:fixed	_
15	letting	let	VERB	VBG	VerbForm=Ger	6	conj	6:conj:rather_than	_
16	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	15	obj	15:obj|17:nsubj:xsubj	Entity=(place-37)
17	rattle	rattle	VERB	VB	VerbForm=Inf	15	xcomp	15:xcomp	_
18	around	around	ADV	RB	Degree=Pos	17	advmod	17:advmod	_
19	in	in	ADP	IN	_	21	case	21:case	_
20	the	the	DET	DT	Definite=Def|PronType=Art	21	det	21:det	Entity=(object-70
21	trunk	trunk	NOUN	NN	Number=Sing	17	obl	17:obl:in	Entity=object-70)|SpaceAfter=No
22	,	,	PUNCT	,	_	24	punct	24:punct	_
23	and	and	CCONJ	CC	_	24	cc	24:cc	Discourse=sequence:64->62
24	put	put	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	6	conj	6:conj:and	_
25	the	the	DET	DT	Definite=Def|PronType=Art	26	det	26:det	Entity=(object-35
26	monitor	monitor	NOUN	NN	Number=Sing	24	obj	24:obj	Entity=object-35)
27	in	in	ADP	IN	_	29	case	29:case	_
28	a	a	DET	DT	Definite=Ind|PronType=Art	29	det	29:det	Entity=(object-71
29	box	box	NOUN	NN	Number=Sing	24	obl	24:obl:in	Entity=object-71)
30	so	so	SCONJ	IN	_	32	mark	32:mark	Discourse=result:65->64
31	nothing	nothing	NOUN	NN	Number=Sing|Polarity=Neg	32	nsubj	32:nsubj	Entity=(object-72)
32	stabs	stab	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	advcl	24:advcl:so	_
33	into	into	ADP	IN	_	35	case	35:case	_
34	the	the	DET	DT	Definite=Def|PronType=Art	35	det	35:det	Entity=(object-73
35	screen	screen	NOUN	NN	Number=Sing	32	obl	32:obl:into	Entity=object-73)|SpaceAfter=No
36	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_reassemble-28
# s_type = imp
# text = If you need to ship it, consult your shipper of choice about appropriate packing protocol.
1	If	if	SCONJ	IN	_	3	mark	3:mark	Discourse=condition:66->67
2	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj|5:nsubj:xsubj	Entity=(person-11)
3	need	need	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	8	advcl	8:advcl:if	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	ship	ship	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	5	obj	5:obj	Entity=(object-72)|SpaceAfter=No
7	,	,	PUNCT	,	_	3	punct	3:punct	_
8	consult	consult	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:67->62
9	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	10	nmod:poss	10:nmod:poss	Entity=(object-74(person-11)
10	shipper	shipper	NOUN	NN	Number=Sing	8	obj	8:obj	_
11	of	of	ADP	IN	_	12	case	12:case	_
12	choice	choice	NOUN	NN	Number=Sing	10	nmod	10:nmod:of	Entity=object-74)
13	about	about	ADP	IN	_	16	case	16:case	_
14	appropriate	appropriate	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(abstract-75
15	packing	packing	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-76)
16	protocol	protocol	NOUN	NN	Number=Sing	8	obl	8:obl:about	Entity=abstract-75)|SpaceAfter=No
17	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_reassemble-29
# s_type = decl
# text = Your own homebrew methods may be either subpar, or unacceptable for insurance purposes (and if you ship a computer, you need insurance).
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 6.jpg"></figure>
1	Your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Discourse=joint:68->67|Entity=(abstract-77(person-11)
2	own	own	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
3	homebrew	homebrew	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-78)
4	methods	method	NOUN	NNS	Number=Plur	8	nsubj	8:nsubj|11:nsubj	Entity=abstract-77)
5	may	may	AUX	MD	VerbForm=Fin	8	aux	8:aux	_
6	be	be	AUX	VB	VerbForm=Inf	8	cop	8:cop	_
7	either	either	CCONJ	CC	_	8	cc:preconj	8:cc:preconj	_
8	subpar	subpar	ADJ	JJ	Degree=Pos	0	root	0:root	SpaceAfter=No
9	,	,	PUNCT	,	_	11	punct	11:punct	_
10	or	or	CCONJ	CC	_	11	cc	11:cc	_
11	unacceptable	unacceptable	ADJ	JJ	Degree=Pos|Polarity=Neg	8	conj	8:conj:or	_
12	for	for	ADP	IN	_	14	case	14:case	_
13	insurance	insurance	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(abstract-79(abstract-80)
14	purposes	purpose	NOUN	NNS	Number=Plur	11	obl	11:obl:for	Entity=abstract-79)
15	(	(	PUNCT	-LRB-	_	24	punct	24:punct	Discourse=condition:69->70|SpaceAfter=No
16	and	and	CCONJ	CC	_	24	cc	24:cc	_
17	if	if	SCONJ	IN	_	19	mark	19:mark	_
18	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	19	nsubj	19:nsubj	Entity=(person-11)
19	ship	ship	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	24	advcl	24:advcl:if	_
20	a	a	DET	DT	Definite=Ind|PronType=Art	21	det	21:det	Entity=(object-4
21	computer	computer	NOUN	NN	Number=Sing	19	obj	19:obj	Entity=object-4)|SpaceAfter=No
22	,	,	PUNCT	,	_	19	punct	19:punct	_
23	you	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	24	nsubj	24:nsubj	Discourse=elaboration:70->68|Entity=(person-11)
24	need	need	VERB	VBP	Mood=Ind|Number=Sing|Person=2|Tense=Pres|VerbForm=Fin	8	conj	8:conj:and	XML=<hi rend:::"italic"></hi>
25	insurance	insurance	NOUN	NN	Number=Sing	24	obj	24:obj	Entity=(abstract-80)|SpaceAfter=No
26	)	)	PUNCT	-RRB-	_	24	punct	24:punct	SpaceAfter=No
27	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_whow_reassemble-30
# s_type = imp
# text = Reverse the disassembly.
# newpar = item (4 s)
1	Reverse	reverse	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:71->68
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(event-81
3	disassembly	disassembly	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=event-81)|SpaceAfter=No
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-31
# s_type = decl
# text = The very cautious will want to plug cables in at the less expensive end first.
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:72->71
2	very	very	ADV	RB	_	3	advmod	3:advmod	_
3	cautious	cautious	ADJ	JJ	Degree=Pos	5	nsubj	5:nsubj|7:nsubj:xsubj	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	5:aux	_
5	want	want	VERB	VB	VerbForm=Inf	0	root	0:root	_
6	to	to	PART	TO	_	7	mark	7:mark	_
7	plug	plug	VERB	VB	VerbForm=Inf	5	xcomp	5:xcomp	_
8	cables	cable	NOUN	NNS	Number=Plur	7	obj	7:obj	Entity=(object-38)
9	in	in	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
10	at	at	ADP	IN	_	14	case	14:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-42
12	less	less	ADV	RBR	Degree=Cmp	13	advmod	13:advmod	_
13	expensive	expensive	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	end	end	NOUN	NN	Number=Sing	7	obl	7:obl:at	Entity=abstract-42)
15	first	first	ADV	RB	Degree=Pos|NumType=Ord	7	advmod	7:advmod	SpaceAfter=No
16	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_reassemble-32
# s_type = decl
# text = Once in a blue moon, even when neither end is connected to a power source, a spark will jump, and when that happens it could burn stuff out.
1	Once	once	ADV	RB	NumType=Mult	21	advmod	21:advmod	Discourse=circumstance:73->75
2	in	in	ADP	IN	_	5	case	5:case	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(place-82
4	blue	blue	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	moon	moon	NOUN	NN	Number=Sing	21	obl	21:obl:in	Entity=place-82)|SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	even	even	ADV	RB	_	12	advmod	12:advmod	Discourse=concession:74->75
8	when	when	SCONJ	WRB	PronType=Int	12	mark	12:mark	_
9	neither	neither	DET	DT	_	10	det	10:det	Entity=(abstract-42
10	end	end	NOUN	NN	Number=Sing	12	nsubj:pass	12:nsubj:pass	Entity=abstract-42)
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	12:aux:pass	_
12	connected	connect	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	advcl	21:advcl:when	_
13	to	to	ADP	IN	_	16	case	16:case	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	16	det	16:det	Entity=(object-83
15	power	power	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-10)
16	source	source	NOUN	NN	Number=Sing	12	obl	12:obl:to	Entity=object-83)|SpaceAfter=No
17	,	,	PUNCT	,	_	12	punct	12:punct	_
18	a	a	DET	DT	Definite=Ind|PronType=Art	19	det	19:det	Discourse=joint:75->71|Entity=(object-84
19	spark	spark	NOUN	NN	Number=Sing	21	nsubj	21:nsubj	Entity=object-84)
20	will	will	AUX	MD	VerbForm=Fin	21	aux	21:aux	_
21	jump	jump	VERB	VB	VerbForm=Inf	0	root	0:root	SpaceAfter=No
22	,	,	PUNCT	,	_	29	punct	29:punct	_
23	and	and	CCONJ	CC	_	29	cc	29:cc	Discourse=joint:76->75
24	when	when	SCONJ	WRB	PronType=Int	26	mark	26:mark	Discourse=circumstance:77->78
25	that	that	PRON	DT	Number=Sing|PronType=Dem	26	nsubj	26:nsubj	Entity=(object-84)
26	happens	happen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	advcl	29:advcl:when	_
27	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	29	nsubj	29:nsubj	Discourse=same_unit:78->76|Entity=(object-84)
28	could	could	AUX	MD	VerbForm=Fin	29	aux	29:aux	_
29	burn	burn	VERB	VB	VerbForm=Inf	21	conj	21:conj:and	_
30	stuff	stuff	NOUN	NN	Number=Sing	29	obj	29:obj	Entity=(substance-85)
31	out	out	ADP	RP	_	29	compound:prt	29:compound:prt	SpaceAfter=No
32	.	.	PUNCT	.	_	21	punct	21:punct	_

# sent_id = AMALGUM_whow_reassemble-33
# s_type = decl
# text = Besides which, the less expensive end is almost always the peripheral, so this also means only one trip under the desk.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 7.jpg"></figure>
1	Besides	besides	ADP	IN	_	2	case	2:case	Discourse=elaboration:79->75
2	which	which	PRON	WDT	PronType=Int	12	nmod	12:nmod:besides	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-42
5	less	less	ADV	RBR	Degree=Cmp	6	advmod	6:advmod	_
6	expensive	expensive	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	end	end	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	Entity=abstract-42)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	12:cop	_
9	almost	almost	ADV	RB	Degree=Pos	12	advmod	12:advmod	_
10	always	always	ADV	RB	_	12	advmod	12:advmod	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	_
12	peripheral	peripheral	ADJ	JJ	Degree=Pos	0	root	0:root	SpaceAfter=No
13	,	,	PUNCT	,	_	17	punct	17:punct	_
14	so	so	ADV	RB	_	17	advmod	17:advmod	Discourse=result:80->79
15	this	this	PRON	DT	Number=Sing|PronType=Dem	17	nsubj	17:nsubj	Entity=(place-82)
16	also	also	ADV	RB	_	17	advmod	17:advmod	_
17	means	mean	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	parataxis	12:parataxis	_
18	only	only	ADV	RB	_	19	advmod	19:advmod	Entity=(event-86
19	one	one	NUM	CD	NumForm=Word|NumType=Card	20	nummod	20:nummod	_
20	trip	trip	NOUN	NN	Number=Sing	17	obj	17:obj	_
21	under	under	ADP	IN	_	23	case	23:case	_
22	the	the	DET	DT	Definite=Def|PronType=Art	23	det	23:det	Entity=(object-87
23	desk	desk	NOUN	NN	Number=Sing	20	nmod	20:nmod:under	Entity=event-86)object-87)|SpaceAfter=No
24	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_whow_reassemble-34
# s_type = imp
# text = Plug in the power cables.
# newpar = item (3 s)
1	Plug	plug	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:81->82
2	in	in	ADP	RP	_	1	compound:prt	1:compound:prt	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(object-38
4	power	power	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-10)
5	cables	cable	NOUN	NNS	Number=Plur	1	obj	1:obj	Entity=object-38)|SpaceAfter=No
6	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-35
# s_type = imp
# text = Always leave power to last.
1	Always	Always	ADV	RB	Degree=Pos	2	advmod	2:advmod	Discourse=joint:82->79
2	leave	leave	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	power	power	NOUN	NN	Number=Sing	2	obj	2:obj|5:nsubj:xsubj	Entity=(abstract-10)
4	to	to	PART	TO	_	5	mark	5:mark	_
5	last	last	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-36
# s_type = multiple
# text = Note that only your monitor and tower should plug into the UPS---additional peripherals will reduce its discharge time dramatically.
# trailing_xml = <figure rend:::"Disassemble, Transport, and Reassemble a PC Step 8.jpg"></figure>
1	Note	note	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:83->84
2	that	that	SCONJ	IN	_	9	mark	9:mark	Discourse=joint:84->82
3	only	only	ADV	RB	_	5	advmod	5:advmod	Entity=(object-35
4	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	5	nmod:poss	5:nmod:poss	Entity=(person-11)
5	monitor	monitor	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	Entity=object-35)
6	and	and	CCONJ	CC	_	7	cc	7:cc	_
7	tower	tower	NOUN	NN	Number=Sing	5	conj	5:conj:and|9:nsubj	Entity=(place-37)
8	should	should	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	plug	plug	VERB	VB	VerbForm=Inf	1	ccomp	1:ccomp	_
10	into	into	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(organization-88
12	UPS	UPS	NOUN	NN	Number=Sing	9	obl	9:obl:into	Entity=organization-88)|SpaceAfter=No
13	--	-	PUNCT	:	_	17	punct	17:punct	SpaceAfter=No
14	-additional	-additional	ADJ	JJ	Degree=Pos	15	advmod	15:advmod	Entity=(object-57
15	peripherals	peripheral	NOUN	NNS	Number=Plur	17	nsubj	17:nsubj	Entity=object-57)
16	will	will	AUX	MD	VerbForm=Fin	17	aux	17:aux	_
17	reduce	reduce	VERB	VB	VerbForm=Inf	1	parataxis	1:parataxis	_
18	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	20	nmod:poss	20:nmod:poss	Entity=(time-89(object-35)
19	discharge	discharge	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-90)
20	time	time	NOUN	NN	Number=Sing	17	obj	17:obj	Entity=time-89)
21	dramatically	dramatically	ADV	RB	Degree=Pos	17	advmod	17:advmod	SpaceAfter=No
22	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_whow_reassemble-37
# s_type = frag
# text = Tips
# newpar = head (1 s)
1	Tips	tip	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:85->86|Entity=(abstract-91)

# sent_id = AMALGUM_whow_reassemble-38
# s_type = decl
# text = Most jack plugs are now color-coded along with the outlet on the back of the computer hard drive.
# newpar = list type:::"unordered" (3 s)
# newpar1 = item (2 s)
1	Most	most	ADJ	JJS	Degree=Sup	3	amod	3:amod	Discourse=joint:86->6|Entity=(object-92
2	jack	jack	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(object-93)
3	plugs	plug	NOUN	NNS	Number=Plur	6	nsubj:pass	6:nsubj:pass	Entity=object-92)
4	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	6:aux:pass	_
5	now	now	ADV	RB	_	6	advmod	6:advmod	_
6	color-coded	color-cod	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
7	along	along	ADV	RB	Degree=Pos	10	advmod	10:advmod	Entity=(object-94
8	with	with	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	_
10	outlet	outlet	NOUN	NN	Number=Sing	6	obl	6:obl:with	_
11	on	on	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(place-95
13	back	back	NOUN	NN	Number=Sing	10	nmod	10:nmod:on	_
14	of	of	ADP	IN	_	18	case	18:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(object-96
16	computer	computer	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(object-4)
17	hard	hard	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	drive	drive	NOUN	NN	Number=Sing	13	nmod	13:nmod:of	Entity=object-94)place-95)object-96)|SpaceAfter=No
19	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_whow_reassemble-39
# s_type = sub
# text = If it isn't, however, a small picture on the back of your hard drive should indicate whether the outlet belongs to the mouse, keyboard, etc.
1	If	if	SCONJ	IN	_	4	mark	4:mark	Discourse=condition:87->88
2	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	4	nsubj	4:nsubj	Entity=(object-96)
3-4	isn't	_	_	_	_	_	_	_	SpaceAfter=No
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	4:cop	_
4	n't	not	ADV	RB	Polarity=Neg	19	advcl	19:advcl:if	_
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	however	however	ADV	RB	_	19	advmod	19:advmod	SpaceAfter=No
7	,	,	PUNCT	,	_	6	punct	6:punct	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Discourse=joint:88->86|Entity=(abstract-97
9	small	small	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	picture	picture	NOUN	NN	Number=Sing	19	nsubj	19:nsubj	_
11	on	on	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-98
13	back	back	NOUN	NN	Number=Sing	10	nmod	10:nmod:on	_
14	of	of	ADP	IN	_	17	case	17:case	_
15	your	your	PRON	PRP$	Person=2|Poss=Yes|PronType=Prs	17	nmod:poss	17:nmod:poss	Entity=(object-96(person-11)
16	hard	hard	ADJ	JJ	Degree=Pos	17	amod	17:amod	_
17	drive	drive	NOUN	NN	Number=Sing	13	nmod	13:nmod:of	Entity=abstract-97)object-98)object-96)
18	should	should	AUX	MD	VerbForm=Fin	19	aux	19:aux	_
19	indicate	indicate	VERB	VB	VerbForm=Inf	0	root	0:root	_
20	whether	whether	SCONJ	IN	_	23	mark	23:mark	Discourse=elaboration:89->88
21	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(object-94
22	outlet	outlet	NOUN	NN	Number=Sing	23	nsubj	23:nsubj	Entity=object-94)
23	belongs	belong	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	ccomp	19:ccomp	_
24	to	to	ADP	IN	_	26	case	26:case	_
25	the	the	DET	DT	Definite=Def|PronType=Art	26	det	26:det	Entity=(object-99
26	mouse	mouse	NOUN	NN	Number=Sing	23	obl	23:obl:to	Entity=object-99)|SpaceAfter=No
27	,	,	PUNCT	,	_	28	punct	28:punct	_
28	keyboard	keyboard	NOUN	NN	Number=Sing	26	conj	23:obl:to|26:conj	Entity=(object-64)|SpaceAfter=No
29	,	,	PUNCT	,	_	30	punct	30:punct	_
30	etc.	etc.	ADJ	JJ	Abbr=Yes|Degree=Pos	26	conj	23:obl:to|26:conj	_

# sent_id = AMALGUM_whow_reassemble-40
# s_type = decl
# text = Using a variety of multicolored marking pens will make the task of re-assembling quick and easy.
# newpar = item (1 s)
1	Using	use	VERB	VBG	VerbForm=Ger	9	csubj	9:csubj	Discourse=joint:90->86
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-100
3	variety	variety	NOUN	NN	Number=Sing	1	obj	1:obj	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	multicolored	multicolored	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(object-101
6	marking	marking	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-102)
7	pens	pen	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of	Entity=abstract-100)object-101)
8	will	will	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	make	make	VERB	VB	VerbForm=Inf	0	root	0:root	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-103
11	task	task	NOUN	NN	Number=Sing	9	obj	9:obj	_
12	of	of	SCONJ	IN	_	13	mark	13:mark	_
13	re-assembling	re-assemble	VERB	VBG	VerbForm=Ger	11	acl	11:acl:of	_
14	quick	quick	ADJ	JJ	Degree=Pos	13	xcomp	13:xcomp	_
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	easy	easy	ADJ	JJ	Degree=Pos	14	conj	13:xcomp|14:conj:and	Entity=abstract-103)|SpaceAfter=No
17	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_whow_reassemble-41
# s_type = frag
# text = Warnings
# newpar = head (1 s)
1	Warnings	warning	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:91->92|Entity=(abstract-104)

# sent_id = AMALGUM_whow_reassemble-42
# s_type = imp
# text = Be sure to use care when moving the computer not to disrupt components inside the unit.
# newpar = list type:::"unordered" (4 s)
# newpar1 = item (1 s)
1	Be	be	AUX	VB	VerbForm=Inf	2	cop	2:cop	Discourse=joint:92->86
2	sure	sure	ADJ	JJ	Degree=Pos	0	root	0:root	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	use	use	VERB	VB	VerbForm=Inf	2	xcomp	2:xcomp	_
5	care	care	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=(abstract-105)
6	when	when	SCONJ	WRB	PronType=Int	7	mark	7:mark	Discourse=circumstance:93->92
7	moving	move	VERB	VBG	VerbForm=Ger	4	advcl	4:advcl:when	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-4
9	computer	computer	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=object-4)
10	not	not	ADV	RB	Polarity=Neg	12	advmod	12:advmod	Discourse=elaboration:94->93
11	to	to	PART	TO	_	12	mark	12:mark	_
12	disrupt	disrupt	VERB	VB	VerbForm=Inf	4	advcl	4:advcl:to	_
13	components	component	NOUN	NNS	Number=Plur	12	obj	12:obj	Entity=(object-106
14	inside	inside	ADP	IN	_	16	case	16:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(place-107
16	unit	unit	NOUN	NN	Number=Sing	13	nmod	13:nmod:inside	Entity=object-106)place-107)|SpaceAfter=No
17	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-43
# s_type = decl
# text = Handling a computer involves electrical equipment.
# newpar = item (2 s)
1	Handling	handle	VERB	VBG	VerbForm=Ger	4	csubj	4:csubj	Discourse=joint:95->92
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(object-4
3	computer	computer	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-4)
4	involves	involve	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	electrical	electrical	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(object-108
6	equipment	equipment	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=object-108)|SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_whow_reassemble-44
# s_type = imp
# text = Always use caution with electrical outlets, components, and cords to reduce the risk of electrical shock.
1	Always	Always	ADV	RB	Degree=Pos	2	advmod	2:advmod	Discourse=joint:96->92
2	use	use	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	caution	caution	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=(abstract-109)
4	with	with	ADP	IN	_	6	case	6:case	_
5	electrical	electrical	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(object-110
6	outlets	outlet	NOUN	NNS	Number=Plur	2	obl	2:obl:with	Entity=object-110)|SpaceAfter=No
7	,	,	PUNCT	,	_	8	punct	8:punct	_
8	components	component	NOUN	NNS	Number=Plur	6	conj	2:obl:with|6:conj:and	Entity=(object-106)|SpaceAfter=No
9	,	,	PUNCT	,	_	11	punct	11:punct	_
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	cords	cord	NOUN	NNS	Number=Plur	6	conj	2:obl:with|6:conj:and	Entity=(object-111)
12	to	to	PART	TO	_	13	mark	13:mark	Discourse=purpose:97->96
13	reduce	reduce	VERB	VB	VerbForm=Inf	2	advcl	2:advcl:to	_
14	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(abstract-112
15	risk	risk	NOUN	NN	Number=Sing	13	obj	13:obj	_
16	of	of	ADP	IN	_	18	case	18:case	_
17	electrical	electrical	ADJ	JJ	Degree=Pos	18	amod	18:amod	Entity=(event-113
18	shock	shock	NOUN	NN	Number=Sing	15	nmod	15:nmod:of	Entity=abstract-112)event-113)|SpaceAfter=No
19	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_whow_reassemble-45
# s_type = decl
# text = Moving a computer monitor requires heavy lifting.
# newpar = item (1 s)
1	Moving	move	VERB	VBG	VerbForm=Ger	5	csubj	5:csubj	Discourse=elaboration:98->96
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(object-35
3	computer	computer	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-4)
4	monitor	monitor	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=object-35)
5	requires	require	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	heavy	heavy	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(event-114
7	lifting	lifting	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=event-114)|SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_whow_reassemble-46
# s_type = frag
# text = Things
# newpar = head (2 s)
1	Things	thing	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=joint:99->98|Entity=(object-115)

# sent_id = AMALGUM_whow_reassemble-47
# s_type = decl
# text = You'll Need
1-2	You'll	_	_	_	_	_	_	_	_
1	You	you	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:100->99|Entity=(person-11)
2	'll	will	AUX	MD	VerbForm=Fin	3	aux	3:aux	_
3	Need	need	VERB	VB	VerbForm=Inf	0	root	0:root	_

# sent_id = AMALGUM_whow_reassemble-48
# s_type = frag
# text = A laundry basket or a suitable sized plastic tub/bin
# newpar = list type:::"unordered" (6 s)
# newpar1 = item (1 s)
1	A	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Discourse=preparation:101->104|Entity=(object-116
2	laundry	laundry	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(object-117)
3	basket	basket	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-116)
4	or	or	CCONJ	CC	_	9	cc	9:cc	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(object-118
6	suitable	suitable	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
7	sized	sized	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
8	plastic	plastic	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(substance-119)
9	tub/bin	tub/bin	NOUN	NN	Number=Sing	3	conj	3:conj:or	Entity=object-118)

# sent_id = AMALGUM_whow_reassemble-49
# s_type = frag
# text = Zip-ties or Large Twist-ties
# newpar = item (1 s)
1	Zip-ties	zip-ty	NOUN	NNS	Number=Plur	0	root	0:root	Discourse=preparation:102->104|Entity=(abstract-120)
2	or	or	CCONJ	CC	_	4	cc	4:cc	_
3	Large	large	ADJ	JJ	Degree=Pos	4	amod	4:amod	Entity=(abstract-121
4	Twist-ties	Twist-ty	PROPN	NNP	Number=Sing	1	conj	1:conj:or	Entity=abstract-121)

# sent_id = AMALGUM_whow_reassemble-50
# s_type = frag
# text = Small shoe box or plastic tub
# newpar = item (1 s)
1	Small	small	ADJ	JJ	Degree=Pos	3	amod	3:amod	Discourse=preparation:103->104|Entity=(object-122
2	shoe	shoe	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(object-123)
3	box	box	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-122)
4	or	or	CCONJ	CC	_	6	cc	6:cc	_
5	plastic	plastic	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(object-124
6	tub	tub	NOUN	NN	Number=Sing	3	conj	3:conj:or	Entity=object-124)

# sent_id = AMALGUM_whow_reassemble-51
# s_type = frag
# text = Blanket, bubble wrap, or other cushioning
# newpar = item (1 s)
1	Blanket	blanket	NOUN	NN	Number=Sing	0	root	0:root	Discourse=elaboration:104->99|Entity=(object-125)|SpaceAfter=No
2	,	,	PUNCT	,	_	4	punct	4:punct	_
3	bubble	bubble	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(object-126
4	wrap	wrap	NOUN	NN	Number=Sing	1	conj	1:conj:or	Entity=object-126)|SpaceAfter=No
5	,	,	PUNCT	,	_	8	punct	8:punct	_
6	or	or	CCONJ	CC	_	8	cc	8:cc	_
7	other	other	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=(abstract-127
8	cushioning	cushioning	NOUN	NN	Number=Sing	1	conj	1:conj:or	Entity=abstract-127)

# sent_id = AMALGUM_whow_reassemble-52
# s_type = frag
# text = Packaging Tape
# newpar = item (1 s)
1	Packaging	packaging	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:105->104|Entity=(object-128(abstract-129)
2	Tape	tape	NOUN	NN	Number=Sing	0	root	0:root	Entity=object-128)

# sent_id = AMALGUM_whow_reassemble-53
# s_type = frag
# text = Sharpie or other marking pen
# newpar = item (1 s)
1	Sharpie	sharpie	NOUN	NN	Number=Sing	0	root	0:root	Discourse=contrast:106->105|Entity=(object-130)
2	or	or	CCONJ	CC	_	5	cc	5:cc	_
3	other	other	ADJ	JJ	Degree=Pos	5	amod	5:amod	Entity=(object-131
4	marking	marking	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-102)
5	pen	pen	NOUN	NN	Number=Sing	1	conj	1:conj:or	Entity=object-131)

