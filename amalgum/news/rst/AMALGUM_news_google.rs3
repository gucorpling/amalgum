<rst>
<header>
	<relations>
			<rel name="purpose" type="rst"/>
			<rel name="elaboration" type="rst"/>
			<rel name="preparation" type="rst"/>
			<rel name="means" type="rst"/>
			<rel name="attribution" type="rst"/>
			<rel name="restatement" type="rst"/>
			<rel name="circumstance" type="rst"/>
			<rel name="contrast" type="multinuc"/>
			<rel name="joint" type="multinuc"/>
			<rel name="sequence" type="multinuc"/>
			<rel name="same_unit" type="multinuc"/>
		</relations>
</header>
<body>
<segment id="1" parent="1001" relname="preparation">Google performs first successful collision attack on SHA-1 security algorithm</segment>
<segment id="2" parent="1002" relname="preparation">Saturday , February 25 , 2017</segment>
<segment id="3" parent="1004" relname="attribution">This Thursday , Google announced</segment>
<segment id="4" parent="1004" relname="span">that it had performed a successful collision attack on the popular SHA-1 cryptographic hash function for the first time</segment>
<segment id="5" parent="1005" relname="span">â€”</segment>
<segment id="6" parent="5" relname="elaboration">that they know of .</segment>
<segment id="7" parent="1008" relname="span">The collision attack demonstrated an algorithm</segment>
<segment id="8" parent="7" relname="elaboration">for making two distinct inputs map to the same hash output ,</segment>
<segment id="9" parent="1009" relname="span">putting at risk the usage of SHA-1</segment>
<segment id="10" parent="9" relname="elaboration">for verifying data integrity .</segment>
<segment id="11" parent="1002" relname="joint">Google published a blog post</segment>
<segment id="12" parent="1002" relname="joint">and made a website about the collision attack .</segment>
<segment id="13" parent="1013" relname="span">An unofficial icon for group SHA1 , SHA2 , SHA3 family .</segment>
<segment id="14" parent="15" relname="preparation">Image :</segment>
<segment id="15" parent="1014" relname="span">Krauss .</segment>
<segment id="16" parent="1018" relname="span">A successful attacker would be able to add a malicious file to the system</segment>
<segment id="17" parent="16" relname="purpose">to damage a backup</segment>
<segment id="18" parent="1018" relname="elaboration">relying on SHA-1</segment>
<segment id="19" parent="1019" relname="joint">for checking data integrity ,</segment>
<segment id="20" parent="1020" relname="span">deliver a malicious update to clients</segment>
<segment id="21" parent="1022" relname="span">using SHA-1</segment>
<segment id="22" parent="21" relname="purpose">to verify the update file ,</segment>
<segment id="23" parent="1024" relname="span">attack and decrypt an encrypted connection to a website</segment>
<segment id="24" parent="1025" relname="span">where the user 's browser is using SHA-1</segment>
<segment id="25" parent="24" relname="purpose">to identify the connection certificate ,</segment>
<segment id="26" parent="1026" relname="span">replace a file revision history</segment>
<segment id="27" parent="1028" relname="span">using SHA-1</segment>
<segment id="28" parent="27" relname="purpose">to identify commits ,</segment>
<segment id="29" parent="1030" relname="span">and perform other actions</segment>
<segment id="30" parent="29" relname="elaboration">that would substitute for valuable files with something seemingly identical</segment>
<segment id="31" parent="1029" relname="contrast">but misleading or malicious in practice .</segment>
<segment id="32" parent="1033" relname="span">Similar systems</segment>
<segment id="33" parent="32" relname="elaboration">not using SHA-1 would not be affected .</segment>
<segment id="34" parent="1034" relname="joint">To demonstrate the success of the algorithm ,</segment>
<segment id="35" parent="1036" relname="span">Google published two distinct Portable Document Format</segment>
<segment id="36" parent="35" relname="restatement">( PDF )</segment>
<segment id="37" parent="1035" relname="same_unit">files with identical SHA-1 hash .</segment>
<segment id="38" parent="1038" relname="span">Google recommended everyone</segment>
<segment id="39" parent="38" relname="elaboration">who uses SHA-1 to switch to SHA-256 or SHA-3 , stronger cryptographic hash functions .</segment>
<segment id="40" parent="1041" relname="span">The group started with a paper</segment>
<segment id="41" parent="40" relname="elaboration">published by Marc Stevens in 2013</segment>
<segment id="42" parent="1041" relname="elaboration">in which the authors proposed a theoretical algorithm for the collision attack .</segment>
<segment id="43" parent="1043" relname="joint">They chose PDF files as the basis for their attack .</segment>
<segment id="44" parent="1044" relname="span">They wrote a PDF file prefix on both files and PDF contents</segment>
<segment id="45" parent="44" relname="elaboration">which hashed to the same SHA-1 digest .</segment>
<segment id="46" parent="1047" relname="span">Then they used the Google computing infrastructure</segment>
<segment id="47" parent="1048" relname="span">to perform more than nine quintillion</segment>
<segment id="48" parent="47" relname="elaboration">( upwards of 9,223,372,036,854,775,808 )</segment>
<segment id="49" parent="1046" relname="same_unit">SHA1 computations .</segment>
<segment id="50" parent="1051" relname="span">They described this as 6,500 years of CPU time</segment>
<segment id="51" parent="50" relname="elaboration">distributed in the first phase ,</segment>
<segment id="52" parent="1053" relname="span">then 110 years of graphics processing unit</segment>
<segment id="53" parent="52" relname="restatement">( GPU )</segment>
<segment id="54" parent="1054" relname="span">time total in the second phase of the attack</segment>
<segment id="55" parent="54" relname="elaboration">to reach full collision .</segment>
<segment id="56" parent="1057" relname="attribution">They said</segment>
<segment id="57" parent="1057" relname="span">this new algorithm was 100,000 times faster than the brute-force attack and 50 times faster than a collision attack algorithm</segment>
<segment id="58" parent="57" relname="elaboration">proposed in 2005 .</segment>
<segment id="59" parent="1060" relname="span">The cryptology group at the Centrum Wiskunde &amp; Informatica</segment>
<segment id="60" parent="59" relname="restatement">( CWI )</segment>
<segment id="61" parent="1061" relname="span">institute , Netherlands , collaborated with the Google Research Security , Privacy and Anti-abuse Group</segment>
<segment id="62" parent="61" relname="purpose">to achieve the collision .</segment>
<segment id="63" parent="1065" relname="attribution">According to a press release ,</segment>
<segment id="64" parent="1065" relname="span">Marc Stevens and Elie Bursztein were the initial leaders of the initiative ,</segment>
<segment id="65" parent="1066" relname="span">Ange Albertini developed the PDF attack code ,</segment>
<segment id="66" parent="1067" relname="span">Pierre Karpman developed the cryptoanalysis ,</segment>
<segment id="67" parent="1069" relname="span">Yarik Markov and Pierre Karpman developed the distributed graphical processing unit</segment>
<segment id="68" parent="67" relname="restatement">( GPU )</segment>
<segment id="69" parent="1070" relname="joint">code ,</segment>
<segment id="70" parent="1070" relname="joint">and Clement Baisse checked the reliability of the programs .</segment>
<segment id="71" parent="1071" relname="span">Google also provided a collision detector online ,</segment>
<segment id="72" parent="1072" relname="span">where users can upload a PDF file</segment>
<segment id="73" parent="1074" relname="attribution">to test</segment>
<segment id="74" parent="1074" relname="span">whether it was tampered with</segment>
<segment id="75" parent="74" relname="purpose">for reaching a collision .</segment>
<segment id="76" parent="1045" relname="joint">Alex Petit Bianco developed the online file collision detector .</segment>
<segment id="77" parent="78" relname="circumstance">Following its security policy ,</segment>
<segment id="78" parent="1077" relname="span">Google set a 90-day delay before the release of the source code for the attack .</segment>
<segment id="79" parent="1079" relname="span">Operating systems and software rely on SHA-1</segment>
<segment id="80" parent="1080" relname="span">for verifying the file integrity</segment>
<segment id="81" parent="80" relname="circumstance">when distributing updates to its users and in ISO checksums .</segment>
<segment id="82" parent="1082" relname="span">Developers use SHA-1 in their file revision control systems , such as git ,</segment>
<segment id="83" parent="82" relname="purpose">to verify the files ' integrity .</segment>
<segment id="84" parent="1085" relname="span">Many people install programs</segment>
<segment id="85" parent="84" relname="elaboration">that use SHA-1</segment>
<segment id="86" parent="1086" relname="joint">for detecting duplicate files on storage media</segment>
<segment id="87" parent="1086" relname="joint">and for verifying backups ' integrity .</segment>
<segment id="88" parent="1089" relname="span">People surfing the web see SHA-1</segment>
<segment id="89" parent="88" relname="elaboration">used for verifying the integrity of HTTPS certificates</segment>
<segment id="90" parent="1089" relname="purpose">to verify the users ' connection with the website is not subject to a man-in-the-middle attack .</segment>
<segment id="91" parent="1045" relname="joint">People also use SHA-1 in email PGP / GPG signatures .</segment>
<segment id="92" parent="1045" relname="joint">Since January , Google Chrome does not trust SHA-1 certificates .</segment>
<segment id="93" parent="1045" relname="joint">Mozilla Firefox stopped trusting them yesterday .</segment>
<segment id="94" parent="1045" relname="joint">SHA-1 was introduced more than twenty years ago .</segment>
<group id="1000" type="span" />
<group id="1001" type="span" parent="1000" relname="span"/>
<group id="1002" type="multinuc" parent="1001" relname="span"/>
<group id="1003" type="span" parent="1002" relname="joint"/>
<group id="1004" type="span" parent="1003" relname="span"/>
<group id="1005" type="span" parent="4" relname="elaboration"/>
<group id="1007" type="multinuc" parent="1002" relname="joint"/>
<group id="1008" type="span" parent="1007" relname="same_unit"/>
<group id="1009" type="span" parent="1007" relname="same_unit"/>
<group id="1013" type="span" parent="1002" relname="joint"/>
<group id="1014" type="span" parent="13" relname="attribution"/>
<group id="1016" type="span" parent="1002" relname="joint"/>
<group id="1017" type="span" parent="1016" relname="span"/>
<group id="1018" type="span" parent="1017" relname="span"/>
<group id="1019" type="multinuc" parent="1017" relname="purpose"/>
<group id="1020" type="span" parent="1019" relname="joint"/>
<group id="1021" type="multinuc" parent="20" relname="means"/>
<group id="1022" type="span" parent="1021" relname="joint"/>
<group id="1023" type="multinuc" parent="1021" relname="joint"/>
<group id="1024" type="span" parent="1023" relname="sequence"/>
<group id="1025" type="span" parent="23" relname="elaboration"/>
<group id="1026" type="span" parent="1023" relname="sequence"/>
<group id="1027" type="multinuc" parent="26" relname="means"/>
<group id="1028" type="span" parent="1027" relname="joint"/>
<group id="1029" type="multinuc" parent="1027" relname="joint"/>
<group id="1030" type="span" parent="1029" relname="contrast"/>
<group id="1032" type="span" parent="1002" relname="joint"/>
<group id="1033" type="span" parent="1032" relname="span"/>
<group id="1034" type="multinuc" parent="1033" relname="purpose"/>
<group id="1035" type="multinuc" parent="1034" relname="joint"/>
<group id="1036" type="span" parent="1035" relname="same_unit"/>
<group id="1038" type="span" parent="1002" relname="joint"/>
<group id="1040" type="span" parent="1002" relname="joint"/>
<group id="1041" type="span" parent="1040" relname="span"/>
<group id="1042" type="multinuc" parent="1002" relname="joint"/>
<group id="1043" type="multinuc" parent="1042" relname="sequence"/>
<group id="1044" type="span" parent="1043" relname="joint"/>
<group id="1045" type="multinuc" parent="1042" relname="sequence"/>
<group id="1046" type="multinuc" parent="1045" relname="joint"/>
<group id="1047" type="span" parent="1046" relname="same_unit"/>
<group id="1048" type="span" parent="46" relname="purpose"/>
<group id="1050" type="multinuc" parent="1045" relname="joint"/>
<group id="1051" type="span" parent="1050" relname="same_unit"/>
<group id="1052" type="multinuc" parent="1050" relname="same_unit"/>
<group id="1053" type="span" parent="1052" relname="same_unit"/>
<group id="1054" type="span" parent="1052" relname="same_unit"/>
<group id="1056" type="span" parent="1045" relname="joint"/>
<group id="1057" type="span" parent="1056" relname="span"/>
<group id="1059" type="multinuc" parent="1045" relname="joint"/>
<group id="1060" type="span" parent="1059" relname="same_unit"/>
<group id="1061" type="span" parent="1059" relname="same_unit"/>
<group id="1064" type="span" parent="1045" relname="joint"/>
<group id="1065" type="span" parent="1064" relname="span"/>
<group id="1066" type="span" parent="64" relname="elaboration"/>
<group id="1067" type="span" parent="65" relname="elaboration"/>
<group id="1068" type="multinuc" parent="66" relname="elaboration"/>
<group id="1069" type="span" parent="1068" relname="same_unit"/>
<group id="1070" type="multinuc" parent="1068" relname="same_unit"/>
<group id="1071" type="span" parent="1045" relname="joint"/>
<group id="1072" type="span" parent="71" relname="elaboration"/>
<group id="1073" type="span" parent="72" relname="purpose"/>
<group id="1074" type="span" parent="1073" relname="span"/>
<group id="1077" type="span" parent="1045" relname="joint"/>
<group id="1079" type="span" parent="1045" relname="joint"/>
<group id="1080" type="span" parent="79" relname="elaboration"/>
<group id="1082" type="span" parent="1045" relname="joint"/>
<group id="1084" type="span" parent="1045" relname="joint"/>
<group id="1085" type="span" parent="1084" relname="span"/>
<group id="1086" type="multinuc" parent="1085" relname="purpose"/>
<group id="1088" type="span" parent="1045" relname="joint"/>
<group id="1089" type="span" parent="1088" relname="span"/>
	</body>
</rst>
