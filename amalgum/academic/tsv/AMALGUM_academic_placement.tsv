#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=1. Introduction
1-1	0-2	1.	_	_	_	_
1-2	3-15	Introduction	abstract	new	_	_

#Text=Microservice architecture is a new trend rising fast for application development , as it enhances flexibility to incorporate different technologies , it reduces complexity by using lightweight and modular services , and it improves overall scalability and resilience of the system .
2-1	16-28	Microservice	abstract|abstract[3]	new|new[3]	coref|coref	2-4[4_3]|3-11
2-2	29-41	architecture	abstract[3]	new[3]	_	_
2-3	42-44	is	_	_	_	_
2-4	45-46	a	abstract[4]	giv[4]	coref	5-6[37_4]
2-5	47-50	new	abstract[4]	giv[4]	_	_
2-6	51-56	trend	abstract[4]	giv[4]	_	_
2-7	57-63	rising	abstract[4]	giv[4]	_	_
2-8	64-68	fast	abstract[4]	giv[4]	_	_
2-9	69-72	for	abstract[4]	giv[4]	_	_
2-10	73-84	application	abstract[4]|abstract|abstract[6]	giv[4]|new|new[6]	ana|coref	2-14[0_6]|3-19[23_0]
2-11	85-96	development	abstract[4]|abstract[6]	giv[4]|new[6]	_	_
2-12	97-98	,	_	_	_	_
2-13	99-101	as	_	_	_	_
2-14	102-104	it	abstract	giv	ana	2-22
2-15	105-113	enhances	_	_	_	_
2-16	114-125	flexibility	abstract	new	_	_
2-17	126-128	to	_	_	_	_
2-18	129-140	incorporate	_	_	_	_
2-19	141-150	different	abstract[9]	new[9]	_	_
2-20	151-163	technologies	abstract[9]	new[9]	_	_
2-21	164-165	,	_	_	_	_
2-22	166-168	it	abstract	giv	ana	2-33
2-23	169-176	reduces	_	_	_	_
2-24	177-187	complexity	abstract	new	_	_
2-25	188-190	by	_	_	_	_
2-26	191-196	using	_	_	_	_
2-27	197-208	lightweight	abstract[12]	new[12]	coref	3-26[25_12]
2-28	209-212	and	abstract[12]	new[12]	_	_
2-29	213-220	modular	abstract[12]	new[12]	_	_
2-30	221-229	services	abstract[12]	new[12]	_	_
2-31	230-231	,	_	_	_	_
2-32	232-235	and	_	_	_	_
2-33	236-238	it	abstract	giv	_	_
2-34	239-247	improves	_	_	_	_
2-35	248-255	overall	abstract[14]	new[14]	_	_
2-36	256-267	scalability	abstract[14]	new[14]	_	_
2-37	268-271	and	_	_	_	_
2-38	272-282	resilience	abstract[15]	new[15]	_	_
2-39	283-285	of	abstract[15]	new[15]	_	_
2-40	286-289	the	abstract[15]|abstract[16]	new[15]|new[16]	ana	3-32[0_16]
2-41	290-296	system	abstract[15]|abstract[16]	new[15]|new[16]	_	_
2-42	297-298	.	_	_	_	_

#Text=In the definition ( Microservices : https://martinfowler.com/tags/microservices.html ) , the microservice architectural style is an approach to develop a single application as a suite of small services , each running in its own process and communicating with lightweight mechanisms ( e.g. , HTTP resource API ) .
3-1	299-301	In	_	_	_	_
3-2	302-305	the	abstract[17]	new[17]	appos	3-5[0_17]
3-3	306-316	definition	abstract[17]	new[17]	_	_
3-4	317-318	(	_	_	_	_
3-5	319-332	Microservices	abstract	giv	coref	5-6
3-6	333-334	:	_	_	_	_
3-7	335-383	https://martinfowler.com/tags/microservices.html	abstract	new	_	_
3-8	384-385	)	_	_	_	_
3-9	386-387	,	_	_	_	_
3-10	388-391	the	abstract[21]	new[21]	coref	3-15[22_21]
3-11	392-404	microservice	abstract|abstract[21]	giv|new[21]	_	_
3-12	405-418	architectural	abstract[21]	new[21]	_	_
3-13	419-424	style	abstract[21]	new[21]	_	_
3-14	425-427	is	_	_	_	_
3-15	428-430	an	abstract[22]	giv[22]	_	_
3-16	431-439	approach	abstract[22]	giv[22]	_	_
3-17	440-442	to	abstract[22]	giv[22]	_	_
3-18	443-450	develop	abstract[22]	giv[22]	_	_
3-19	451-452	a	abstract[22]|abstract[23]	giv[22]|giv[23]	coref	4-1[31_23]
3-20	453-459	single	abstract[22]|abstract[23]	giv[22]|giv[23]	_	_
3-21	460-471	application	abstract[22]|abstract[23]	giv[22]|giv[23]	_	_
3-22	472-474	as	abstract[22]	giv[22]	_	_
3-23	475-476	a	abstract[22]|abstract[24]	giv[22]|new[24]	_	_
3-24	477-482	suite	abstract[22]|abstract[24]	giv[22]|new[24]	_	_
3-25	483-485	of	abstract[22]|abstract[24]	giv[22]|new[24]	_	_
3-26	486-491	small	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	coref	4-7[32_25]
3-27	492-500	services	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-28	501-502	,	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-29	503-507	each	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-30	508-515	running	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-31	516-518	in	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-32	519-522	its	abstract[22]|abstract[24]|abstract[25]|abstract|abstract[27]	giv[22]|new[24]|giv[25]|giv|new[27]	_	_
3-33	523-526	own	abstract[22]|abstract[24]|abstract[25]|abstract[27]	giv[22]|new[24]|giv[25]|new[27]	_	_
3-34	527-534	process	abstract[22]|abstract[24]|abstract[25]|abstract[27]	giv[22]|new[24]|giv[25]|new[27]	_	_
3-35	535-538	and	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-36	539-552	communicating	abstract[22]|abstract[24]|abstract[25]	giv[22]|new[24]|giv[25]	_	_
3-37	553-557	with	_	_	_	_
3-38	558-569	lightweight	abstract[28]	new[28]	_	_
3-39	570-580	mechanisms	abstract[28]	new[28]	_	_
3-40	581-582	(	_	_	_	_
3-41	583-587	e.g.	_	_	_	_
3-42	588-589	,	_	_	_	_
3-43	590-594	HTTP	object	new	_	_
3-44	595-603	resource	abstract	new	coref	8-22
3-45	604-607	API	_	_	_	_
3-46	608-609	)	_	_	_	_
3-47	610-611	.	_	_	_	_

#Text=The application then is composed of a number of services ( service-based application ) that work cohesively to provide complex functionalities .
4-1	612-615	The	abstract[31]	giv[31]	coref	6-4[42_31]
4-2	616-627	application	abstract[31]	giv[31]	_	_
4-3	628-632	then	_	_	_	_
4-4	633-635	is	_	_	_	_
4-5	636-644	composed	_	_	_	_
4-6	645-647	of	_	_	_	_
4-7	648-649	a	abstract[32]	giv[32]	appos	4-12[33_32]
4-8	650-656	number	abstract[32]	giv[32]	_	_
4-9	657-659	of	abstract[32]	giv[32]	_	_
4-10	660-668	services	abstract[32]	giv[32]	_	_
4-11	669-670	(	_	_	_	_
4-12	671-684	service-based	abstract[33]	giv[33]	coref	9-7[65_33]
4-13	685-696	application	abstract[33]	giv[33]	_	_
4-14	697-698	)	_	_	_	_
4-15	699-703	that	_	_	_	_
4-16	704-708	work	_	_	_	_
4-17	709-719	cohesively	_	_	_	_
4-18	720-722	to	_	_	_	_
4-19	723-730	provide	_	_	_	_
4-20	731-738	complex	abstract[34]	new[34]	coref	16-19[126_34]
4-21	739-754	functionalities	abstract[34]	new[34]	_	_
4-22	755-756	.	_	_	_	_

#Text=Due to the advantages of microservices architecture , many developers intend to transform traditional monolithic applications into service-based applications .
5-1	757-760	Due	_	_	_	_
5-2	761-763	to	_	_	_	_
5-3	764-767	the	abstract[35]	new[35]	_	_
5-4	768-778	advantages	abstract[35]	new[35]	_	_
5-5	779-781	of	abstract[35]	new[35]	_	_
5-6	782-795	microservices	abstract[35]|abstract|abstract[37]	new[35]|giv|giv[37]	_	_
5-7	796-808	architecture	abstract[35]|abstract[37]	new[35]|giv[37]	_	_
5-8	809-810	,	_	_	_	_
5-9	811-815	many	person[38]	new[38]	_	_
5-10	816-826	developers	person[38]	new[38]	_	_
5-11	827-833	intend	_	_	_	_
5-12	834-836	to	_	_	_	_
5-13	837-846	transform	_	_	_	_
5-14	847-858	traditional	abstract[39]	new[39]	_	_
5-15	859-869	monolithic	abstract[39]	new[39]	_	_
5-16	870-882	applications	abstract[39]	new[39]	_	_
5-17	883-887	into	_	_	_	_
5-18	888-901	service-based	abstract[40]	new[40]	coref	10-6[74_40]
5-19	902-914	applications	abstract[40]	new[40]	_	_
5-20	915-916	.	_	_	_	_

#Text=For instance , an online shopping application could be basically divided into product service , cart service , and order service , which can greatly improve the productivity , agility , and resilience of the application .
6-1	917-920	For	_	_	_	_
6-2	921-929	instance	_	_	_	_
6-3	930-931	,	_	_	_	_
6-4	932-934	an	abstract[42]	giv[42]	coref	6-35[52_42]
6-5	935-941	online	event[41]|abstract[42]	new[41]|giv[42]	_	_
6-6	942-950	shopping	event[41]|abstract[42]	new[41]|giv[42]	_	_
6-7	951-962	application	abstract[42]	giv[42]	_	_
6-8	963-968	could	_	_	_	_
6-9	969-971	be	_	_	_	_
6-10	972-981	basically	_	_	_	_
6-11	982-989	divided	_	_	_	_
6-12	990-994	into	_	_	_	_
6-13	995-1002	product	abstract|abstract[44]	new|new[44]	_	_
6-14	1003-1010	service	abstract[44]	new[44]	_	_
6-15	1011-1012	,	_	_	_	_
6-16	1013-1017	cart	object|abstract[46]	new|new[46]	_	_
6-17	1018-1025	service	abstract[46]	new[46]	_	_
6-18	1026-1027	,	_	_	_	_
6-19	1028-1031	and	_	_	_	_
6-20	1032-1037	order	abstract|object[48]	new|new[48]	coref	8-15[58_48]
6-21	1038-1045	service	object[48]	new[48]	_	_
6-22	1046-1047	,	object[48]	new[48]	_	_
6-23	1048-1053	which	object[48]	new[48]	_	_
6-24	1054-1057	can	object[48]	new[48]	_	_
6-25	1058-1065	greatly	object[48]	new[48]	_	_
6-26	1066-1073	improve	object[48]	new[48]	_	_
6-27	1074-1077	the	object[48]|abstract[49]	new[48]|new[49]	_	_
6-28	1078-1090	productivity	object[48]|abstract[49]	new[48]|new[49]	_	_
6-29	1091-1092	,	object[48]	new[48]	_	_
6-30	1093-1100	agility	object[48]|abstract	new[48]|new	_	_
6-31	1101-1102	,	object[48]	new[48]	_	_
6-32	1103-1106	and	object[48]	new[48]	_	_
6-33	1107-1117	resilience	object[48]|abstract[51]	new[48]|new[51]	_	_
6-34	1118-1120	of	object[48]|abstract[51]	new[48]|new[51]	_	_
6-35	1121-1124	the	object[48]|abstract[51]|abstract[52]	new[48]|new[51]|giv[52]	ana	7-3[0_52]
6-36	1125-1136	application	object[48]|abstract[51]|abstract[52]	new[48]|new[51]|giv[52]	_	_
6-37	1137-1138	.	_	_	_	_

#Text=However , it also brings challenges .
7-1	1139-1146	However	_	_	_	_
7-2	1147-1148	,	_	_	_	_
7-3	1149-1151	it	abstract	giv	coref	8-3[55_0]
7-4	1152-1156	also	_	_	_	_
7-5	1157-1163	brings	_	_	_	_
7-6	1164-1174	challenges	abstract	new	_	_
7-7	1175-1176	.	_	_	_	_

#Text=When deploying a service-based application in clouds , the scheduler has to carefully schedule each service , which may have diverse resource demands , on distributed compute clusters .
8-1	1177-1181	When	_	_	_	_
8-2	1182-1191	deploying	_	_	_	_
8-3	1192-1193	a	abstract[55]	giv[55]	coref	14-3[112_55]
8-4	1194-1207	service-based	abstract[55]	giv[55]	_	_
8-5	1208-1219	application	abstract[55]	giv[55]	_	_
8-6	1220-1222	in	_	_	_	_
8-7	1223-1229	clouds	abstract	new	coref	13-32
8-8	1230-1231	,	_	_	_	_
8-9	1232-1235	the	abstract[57]	new[57]	_	_
8-10	1236-1245	scheduler	abstract[57]	new[57]	_	_
8-11	1246-1249	has	_	_	_	_
8-12	1250-1252	to	_	_	_	_
8-13	1253-1262	carefully	_	_	_	_
8-14	1263-1271	schedule	_	_	_	_
8-15	1272-1276	each	object[58]	giv[58]	coref	9-24[0_58]
8-16	1277-1284	service	object[58]	giv[58]	_	_
8-17	1285-1286	,	object[58]	giv[58]	_	_
8-18	1287-1292	which	object[58]	giv[58]	_	_
8-19	1293-1296	may	object[58]	giv[58]	_	_
8-20	1297-1301	have	object[58]	giv[58]	_	_
8-21	1302-1309	diverse	object[58]|abstract[60]	giv[58]|new[60]	coref	15-10[118_60]
8-22	1310-1318	resource	object[58]|abstract|abstract[60]	giv[58]|giv|new[60]	coref	15-11
8-23	1319-1326	demands	object[58]|abstract[60]	giv[58]|new[60]	_	_
8-24	1327-1328	,	_	_	_	_
8-25	1329-1331	on	_	_	_	_
8-26	1332-1343	distributed	abstract[62]	new[62]	coref	26-14[205_62]
8-27	1344-1351	compute	abstract|abstract[62]	new|new[62]	_	_
8-28	1352-1360	clusters	abstract[62]	new[62]	_	_
8-29	1361-1362	.	_	_	_	_

#Text=Furthermore , the network communication between different services needs to be handled well , as the communication conditions significantly influence the quality of service ( e.g. , the response time of a service ) .
9-1	1363-1374	Furthermore	_	_	_	_
9-2	1375-1376	,	_	_	_	_
9-3	1377-1380	the	abstract[64]	new[64]	coref	9-17[0_64]
9-4	1381-1388	network	abstract|abstract[64]	new|new[64]	coref	10-11
9-5	1389-1402	communication	abstract[64]	new[64]	_	_
9-6	1403-1410	between	abstract[64]	new[64]	_	_
9-7	1411-1420	different	abstract[64]|abstract[65]	new[64]|giv[65]	coref	10-14[77_65]
9-8	1421-1429	services	abstract[64]|abstract[65]	new[64]|giv[65]	_	_
9-9	1430-1435	needs	_	_	_	_
9-10	1436-1438	to	_	_	_	_
9-11	1439-1441	be	_	_	_	_
9-12	1442-1449	handled	_	_	_	_
9-13	1450-1454	well	_	_	_	_
9-14	1455-1456	,	_	_	_	_
9-15	1457-1459	as	_	_	_	_
9-16	1460-1463	the	abstract[67]	new[67]	_	_
9-17	1464-1477	communication	abstract|abstract[67]	giv|new[67]	coref	18-16[139_0]
9-18	1478-1488	conditions	abstract[67]	new[67]	_	_
9-19	1489-1502	significantly	_	_	_	_
9-20	1503-1512	influence	_	_	_	_
9-21	1513-1516	the	abstract[68]	new[68]	_	_
9-22	1517-1524	quality	abstract[68]	new[68]	_	_
9-23	1525-1527	of	abstract[68]	new[68]	_	_
9-24	1528-1535	service	abstract[68]|object	new[68]|giv	coref	9-32[72_0]
9-25	1536-1537	(	_	_	_	_
9-26	1538-1542	e.g.	time[71]	new[71]	coref	16-15[125_71]
9-27	1543-1544	,	time[71]	new[71]	_	_
9-28	1545-1548	the	time[71]	new[71]	_	_
9-29	1549-1557	response	abstract|time[71]	new|new[71]	coref	19-16
9-30	1558-1562	time	time[71]	new[71]	_	_
9-31	1563-1565	of	time[71]	new[71]	_	_
9-32	1566-1567	a	time[71]|object[72]	new[71]|giv[72]	coref	16-11[124_72]
9-33	1568-1575	service	time[71]|object[72]	new[71]|giv[72]	_	_
9-34	1576-1577	)	_	_	_	_
9-35	1578-1579	.	_	_	_	_

#Text=Ensuring the desired performance of service-based applications , especially the network performance between the involved services , becomes increasingly important .
10-1	1580-1588	Ensuring	_	_	_	_
10-2	1589-1592	the	abstract[73]	new[73]	appos	10-9[76_73]
10-3	1593-1600	desired	abstract[73]	new[73]	_	_
10-4	1601-1612	performance	abstract[73]	new[73]	_	_
10-5	1613-1615	of	abstract[73]	new[73]	_	_
10-6	1616-1629	service-based	abstract[73]|abstract[74]	new[73]|giv[74]	coref	11-4[78_74]
10-7	1630-1642	applications	abstract[73]|abstract[74]	new[73]|giv[74]	_	_
10-8	1643-1644	,	_	_	_	_
10-9	1645-1655	especially	abstract[76]	giv[76]	coref	19-11[0_76]
10-10	1656-1659	the	abstract[76]	giv[76]	_	_
10-11	1660-1667	network	abstract|abstract[76]	giv|giv[76]	coref	30-24
10-12	1668-1679	performance	abstract[76]	giv[76]	_	_
10-13	1680-1687	between	abstract[76]	giv[76]	_	_
10-14	1688-1691	the	abstract[76]|abstract[77]	giv[76]|giv[77]	coref	11-7[79_77]
10-15	1692-1700	involved	abstract[76]|abstract[77]	giv[76]|giv[77]	_	_
10-16	1701-1709	services	abstract[76]|abstract[77]	giv[76]|giv[77]	_	_
10-17	1710-1711	,	_	_	_	_
10-18	1712-1719	becomes	_	_	_	_
10-19	1720-1732	increasingly	_	_	_	_
10-20	1733-1742	important	_	_	_	_
10-21	1743-1744	.	_	_	_	_

#Text=In general , service-based applications involve numerous distributed and complex services which usually require more computing resources beyond single machine capability .
11-1	1745-1747	In	_	_	_	_
11-2	1748-1755	general	_	_	_	_
11-3	1756-1757	,	_	_	_	_
11-4	1758-1771	service-based	abstract[78]	giv[78]	coref	12-50[100_78]
11-5	1772-1784	applications	abstract[78]	giv[78]	_	_
11-6	1785-1792	involve	_	_	_	_
11-7	1793-1801	numerous	abstract[79]	giv[79]	coref	13-20[0_79]
11-8	1802-1813	distributed	abstract[79]	giv[79]	_	_
11-9	1814-1817	and	abstract[79]	giv[79]	_	_
11-10	1818-1825	complex	abstract[79]	giv[79]	_	_
11-11	1826-1834	services	abstract[79]	giv[79]	_	_
11-12	1835-1840	which	abstract[79]	giv[79]	_	_
11-13	1841-1848	usually	abstract[79]	giv[79]	_	_
11-14	1849-1856	require	abstract[79]	giv[79]	_	_
11-15	1857-1861	more	abstract[79]|abstract[81]	giv[79]|new[81]	coref	16-7[123_81]
11-16	1862-1871	computing	abstract[79]|abstract|abstract[81]	giv[79]|new|new[81]	coref	12-9[86_0]
11-17	1872-1881	resources	abstract[79]|abstract[81]	giv[79]|new[81]	_	_
11-18	1882-1888	beyond	abstract[79]|abstract[81]	giv[79]|new[81]	_	_
11-19	1889-1895	single	abstract[79]|abstract[81]|object[82]|abstract[83]	giv[79]|new[81]|new[82]|new[83]	coref	16-1[122_82]
11-20	1896-1903	machine	abstract[79]|abstract[81]|object[82]|abstract[83]	giv[79]|new[81]|new[82]|new[83]	_	_
11-21	1904-1914	capability	abstract[79]|abstract[81]|abstract[83]	giv[79]|new[81]|new[83]	_	_
11-22	1915-1916	.	_	_	_	_

#Text=Therefore , a cluster of networked machines or cloud computing platforms ( e.g. , Amazon EC2 ( Amazon EC2 : https://aws.amazon.com ) , Microsoft Azure ( Microsoft Azure : https://azure.microsoft.com ) , or Google Cloud Platform ( Google Cloud Platform : https://cloud.google.com ) ) are generally leveraged to run service-based applications .
12-1	1917-1926	Therefore	_	_	_	_
12-2	1927-1928	,	_	_	_	_
12-3	1929-1930	a	abstract[84]	new[84]	coref	17-16[131_84]
12-4	1931-1938	cluster	abstract[84]	new[84]	_	_
12-5	1939-1941	of	abstract[84]	new[84]	_	_
12-6	1942-1951	networked	abstract[84]|object[85]	new[84]|new[85]	coref	17-20[132_85]
12-7	1952-1960	machines	abstract[84]|object[85]	new[84]|new[85]	_	_
12-8	1961-1963	or	abstract[84]	new[84]	_	_
12-9	1964-1969	cloud	abstract[84]|abstract[86]|abstract[87]	new[84]|giv[86]|new[87]	appos	12-34[95_87]
12-10	1970-1979	computing	abstract[84]|abstract[86]|abstract[87]	new[84]|giv[86]|new[87]	_	_
12-11	1980-1989	platforms	abstract[84]|abstract[87]	new[84]|new[87]	_	_
12-12	1990-1991	(	_	_	_	_
12-13	1992-1996	e.g.	organization[89]	new[89]	appos	12-18[90_89]
12-14	1997-1998	,	organization[89]	new[89]	_	_
12-15	1999-2005	Amazon	person|organization[89]	new|new[89]	_	_
12-16	2006-2009	EC2	organization[89]	new[89]	_	_
12-17	2010-2011	(	_	_	_	_
12-18	2012-2018	Amazon	organization[90]	giv[90]	_	_
12-19	2019-2022	EC2	organization[90]	giv[90]	_	_
12-20	2023-2024	:	_	_	_	_
12-21	2025-2047	https://aws.amazon.com	_	_	_	_
12-22	2048-2049	)	_	_	_	_
12-23	2050-2051	,	_	_	_	_
12-24	2052-2061	Microsoft	organization[91]	new[91]	coref	12-27[92_91]
12-25	2062-2067	Azure	organization[91]	new[91]	_	_
12-26	2068-2069	(	_	_	_	_
12-27	2070-2079	Microsoft	organization[92]	giv[92]	_	_
12-28	2080-2085	Azure	organization[92]	giv[92]	_	_
12-29	2086-2087	:	_	_	_	_
12-30	2088-2115	https://azure.microsoft.com	_	_	_	_
12-31	2116-2117	)	_	_	_	_
12-32	2118-2119	,	_	_	_	_
12-33	2120-2122	or	_	_	_	_
12-34	2123-2129	Google	organization|abstract[95]	new|giv[95]	coref|appos	12-38|12-38[98_95]
12-35	2130-2135	Cloud	person|abstract[95]	new|giv[95]	coref	12-39
12-36	2136-2144	Platform	abstract[95]	giv[95]	_	_
12-37	2145-2146	(	_	_	_	_
12-38	2147-2153	Google	organization|abstract[98]	giv|giv[98]	appos	12-42[0_98]
12-39	2154-2159	Cloud	person|abstract[98]	giv|giv[98]	_	_
12-40	2160-2168	Platform	abstract[98]	giv[98]	_	_
12-41	2169-2170	:	_	_	_	_
12-42	2171-2195	https://cloud.google.com	abstract	giv	_	_
12-43	2196-2197	)	_	_	_	_
12-44	2198-2199	)	_	_	_	_
12-45	2200-2203	are	_	_	_	_
12-46	2204-2213	generally	_	_	_	_
12-47	2214-2223	leveraged	_	_	_	_
12-48	2224-2226	to	_	_	_	_
12-49	2227-2230	run	_	_	_	_
12-50	2231-2244	service-based	abstract[100]	giv[100]	coref	13-30[0_100]
12-51	2245-2257	applications	abstract[100]	giv[100]	_	_
12-52	2258-2259	.	_	_	_	_

#Text=More importantly , containers are emerging as the disruptive technology for effectively encapsulating runtime contexts of software components and services , which significantly improves portability and efficiency of deploying applications in clouds .
13-1	2260-2264	More	_	_	_	_
13-2	2265-2276	importantly	_	_	_	_
13-3	2277-2278	,	_	_	_	_
13-4	2279-2289	containers	object	new	_	_
13-5	2290-2293	are	_	_	_	_
13-6	2294-2302	emerging	_	_	_	_
13-7	2303-2305	as	_	_	_	_
13-8	2306-2309	the	abstract[102]	new[102]	_	_
13-9	2310-2320	disruptive	abstract[102]	new[102]	_	_
13-10	2321-2331	technology	abstract[102]	new[102]	_	_
13-11	2332-2335	for	abstract[102]	new[102]	_	_
13-12	2336-2347	effectively	abstract[102]	new[102]	_	_
13-13	2348-2361	encapsulating	abstract[102]	new[102]	_	_
13-14	2362-2369	runtime	abstract[102]|time|abstract[104]	new[102]|new|new[104]	coref	19-15[147_0]
13-15	2370-2378	contexts	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-16	2379-2381	of	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-17	2382-2390	software	abstract[102]|abstract[104]|object|abstract[106]	new[102]|new[104]|new|new[106]	coref	29-7[229_106]
13-18	2391-2401	components	abstract[102]|abstract[104]|abstract[106]	new[102]|new[104]|new[106]	_	_
13-19	2402-2405	and	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-20	2406-2414	services	abstract[102]|abstract[104]|abstract	new[102]|new[104]|giv	coref	15-3[115_0]
13-21	2415-2416	,	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-22	2417-2422	which	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-23	2423-2436	significantly	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-24	2437-2445	improves	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-25	2446-2457	portability	abstract[102]|abstract[104]|abstract	new[102]|new[104]|new	_	_
13-26	2458-2461	and	abstract[102]|abstract[104]	new[102]|new[104]	_	_
13-27	2462-2472	efficiency	abstract[102]|abstract[104]|abstract[109]	new[102]|new[104]|new[109]	coref	24-8[185_109]
13-28	2473-2475	of	abstract[102]|abstract[104]|abstract[109]	new[102]|new[104]|new[109]	_	_
13-29	2476-2485	deploying	abstract[102]|abstract[104]|abstract[109]	new[102]|new[104]|new[109]	_	_
13-30	2486-2498	applications	abstract[102]|abstract[104]|abstract[109]|abstract	new[102]|new[104]|new[109]|giv	coref	22-5[167_0]
13-31	2499-2501	in	abstract[102]|abstract[104]|abstract[109]	new[102]|new[104]|new[109]	_	_
13-32	2502-2508	clouds	abstract[102]|abstract[104]|abstract[109]|abstract	new[102]|new[104]|new[109]|giv	coref	14-7
13-33	2509-2510	.	_	_	_	_

#Text=When deploying a service-based application in clouds , several essential aspects have to be taken into account .
14-1	2511-2515	When	_	_	_	_
14-2	2516-2525	deploying	_	_	_	_
14-3	2526-2527	a	abstract[112]	giv[112]	coref	15-6[116_112]
14-4	2528-2541	service-based	abstract[112]	giv[112]	_	_
14-5	2542-2553	application	abstract[112]	giv[112]	_	_
14-6	2554-2556	in	_	_	_	_
14-7	2557-2563	clouds	abstract	giv	coref	22-11
14-8	2564-2565	,	_	_	_	_
14-9	2566-2573	several	abstract[114]	new[114]	_	_
14-10	2574-2583	essential	abstract[114]	new[114]	_	_
14-11	2584-2591	aspects	abstract[114]	new[114]	_	_
14-12	2592-2596	have	_	_	_	_
14-13	2597-2599	to	_	_	_	_
14-14	2600-2602	be	_	_	_	_
14-15	2603-2608	taken	_	_	_	_
14-16	2609-2613	into	_	_	_	_
14-17	2614-2621	account	_	_	_	_
14-18	2622-2623	.	_	_	_	_

#Text=First , services involved in the application often have diverse resource demands , such as CPU , memory and disk .
15-1	2624-2629	First	_	_	_	_
15-2	2630-2631	,	_	_	_	_
15-3	2632-2640	services	abstract[115]	giv[115]	coref	18-3[133_115]
15-4	2641-2649	involved	abstract[115]	giv[115]	_	_
15-5	2650-2652	in	abstract[115]	giv[115]	_	_
15-6	2653-2656	the	abstract[115]|abstract[116]	giv[115]|giv[116]	coref	18-6[134_116]
15-7	2657-2668	application	abstract[115]|abstract[116]	giv[115]|giv[116]	_	_
15-8	2669-2674	often	_	_	_	_
15-9	2675-2679	have	_	_	_	_
15-10	2680-2687	diverse	abstract[118]	giv[118]	coref	18-10[136_118]
15-11	2688-2696	resource	abstract|abstract[118]	giv|giv[118]	coref	17-2
15-12	2697-2704	demands	abstract[118]	giv[118]	_	_
15-13	2705-2706	,	abstract[118]	giv[118]	_	_
15-14	2707-2711	such	abstract[118]	giv[118]	_	_
15-15	2712-2714	as	abstract[118]	giv[118]	_	_
15-16	2715-2718	CPU	abstract[118]|abstract	giv[118]|new	_	_
15-17	2719-2720	,	abstract[118]	giv[118]	_	_
15-18	2721-2727	memory	abstract[118]|abstract	giv[118]|new	_	_
15-19	2728-2731	and	abstract[118]	giv[118]	_	_
15-20	2732-2736	disk	abstract[118]|object	giv[118]|new	_	_
15-21	2737-2738	.	_	_	_	_

#Text=The underlying machine has to ensure sufficient resources to run each service and at the same time provide cohesive functionalities .
16-1	2739-2742	The	object[122]	giv[122]	coref	20-22[159_122]
16-2	2743-2753	underlying	object[122]	giv[122]	_	_
16-3	2754-2761	machine	object[122]	giv[122]	_	_
16-4	2762-2765	has	_	_	_	_
16-5	2766-2768	to	_	_	_	_
16-6	2769-2775	ensure	_	_	_	_
16-7	2776-2786	sufficient	abstract[123]	giv[123]	_	_
16-8	2787-2796	resources	abstract[123]	giv[123]	_	_
16-9	2797-2799	to	abstract[123]	giv[123]	_	_
16-10	2800-2803	run	abstract[123]	giv[123]	_	_
16-11	2804-2808	each	abstract[123]|object[124]	giv[123]|giv[124]	coref	17-5[129_124]
16-12	2809-2816	service	abstract[123]|object[124]	giv[123]|giv[124]	_	_
16-13	2817-2820	and	abstract[123]	giv[123]	_	_
16-14	2821-2823	at	abstract[123]	giv[123]	_	_
16-15	2824-2827	the	abstract[123]|time[125]	giv[123]|giv[125]	_	_
16-16	2828-2832	same	abstract[123]|time[125]	giv[123]|giv[125]	_	_
16-17	2833-2837	time	abstract[123]|time[125]	giv[123]|giv[125]	_	_
16-18	2838-2845	provide	abstract[123]	giv[123]	_	_
16-19	2846-2854	cohesive	abstract[123]|abstract[126]	giv[123]|giv[126]	_	_
16-20	2855-2870	functionalities	abstract[123]|abstract[126]	giv[123]|giv[126]	_	_
16-21	2871-2872	.	_	_	_	_

#Text=Efficient resource allocation to each service is difficult , while it becomes more challenging when the cluster consists of heterogeneous machines .
17-1	2873-2882	Efficient	abstract[128]	new[128]	_	_
17-2	2883-2891	resource	abstract|abstract[128]	giv|new[128]	coref	21-15
17-3	2892-2902	allocation	abstract[128]	new[128]	_	_
17-4	2903-2905	to	abstract[128]	new[128]	_	_
17-5	2906-2910	each	abstract[128]|object[129]	new[128]|giv[129]	ana	17-11[0_129]
17-6	2911-2918	service	abstract[128]|object[129]	new[128]|giv[129]	_	_
17-7	2919-2921	is	_	_	_	_
17-8	2922-2931	difficult	_	_	_	_
17-9	2932-2933	,	_	_	_	_
17-10	2934-2939	while	_	_	_	_
17-11	2940-2942	it	object	giv	coref	19-19[148_0]
17-12	2943-2950	becomes	_	_	_	_
17-13	2951-2955	more	_	_	_	_
17-14	2956-2967	challenging	_	_	_	_
17-15	2968-2972	when	_	_	_	_
17-16	2973-2976	the	abstract[131]	giv[131]	coref	23-13[0_131]
17-17	2977-2984	cluster	abstract[131]	giv[131]	_	_
17-18	2985-2993	consists	_	_	_	_
17-19	2994-2996	of	_	_	_	_
17-20	2997-3010	heterogeneous	object[132]	giv[132]	ana	18-13[0_132]
17-21	3011-3019	machines	object[132]	giv[132]	_	_
17-22	3020-3021	.	_	_	_	_

#Text=Second , services involved in the application often have traffic demands among them due to data communication , which require meticulous treatment .
18-1	3022-3028	Second	_	_	_	_
18-2	3029-3030	,	_	_	_	_
18-3	3031-3039	services	abstract[133]	giv[133]	coref	20-12[155_133]
18-4	3040-3048	involved	abstract[133]	giv[133]	_	_
18-5	3049-3051	in	abstract[133]	giv[133]	_	_
18-6	3052-3055	the	abstract[133]|abstract[134]	giv[133]|giv[134]	coref	23-9[170_134]
18-7	3056-3067	application	abstract[133]|abstract[134]	giv[133]|giv[134]	_	_
18-8	3068-3073	often	_	_	_	_
18-9	3074-3078	have	_	_	_	_
18-10	3079-3086	traffic	abstract|abstract[136]	new|giv[136]	coref|coref	19-5|19-4[143_136]
18-11	3087-3094	demands	abstract[136]	giv[136]	_	_
18-12	3095-3100	among	_	_	_	_
18-13	3101-3105	them	object	giv	_	_
18-14	3106-3109	due	_	_	_	_
18-15	3110-3112	to	_	_	_	_
18-16	3113-3117	data	abstract|abstract[139]	new|giv[139]	coref	20-29[160_139]
18-17	3118-3131	communication	abstract[139]	giv[139]	_	_
18-18	3132-3133	,	abstract[139]	giv[139]	_	_
18-19	3134-3139	which	abstract[139]	giv[139]	_	_
18-20	3140-3147	require	abstract[139]	giv[139]	_	_
18-21	3148-3158	meticulous	abstract[139]|event[140]	giv[139]|new[140]	_	_
18-22	3159-3168	treatment	abstract[139]|event[140]	giv[139]|new[140]	_	_
18-23	3169-3170	.	_	_	_	_

#Text=Poor handling of the traffic demands can result in severe performance degradation , as the response time of a service is directly affected by its traffic situation .
19-1	3171-3175	Poor	abstract[141]	new[141]	_	_
19-2	3176-3184	handling	abstract[141]	new[141]	_	_
19-3	3185-3187	of	abstract[141]	new[141]	_	_
19-4	3188-3191	the	abstract[141]|abstract[143]	new[141]|giv[143]	coref	20-2[153_143]
19-5	3192-3199	traffic	abstract[141]|abstract|abstract[143]	new[141]|giv|giv[143]	coref	19-26
19-6	3200-3207	demands	abstract[141]|abstract[143]	new[141]|giv[143]	_	_
19-7	3208-3211	can	_	_	_	_
19-8	3212-3218	result	_	_	_	_
19-9	3219-3221	in	_	_	_	_
19-10	3222-3228	severe	abstract[145]	new[145]	_	_
19-11	3229-3240	performance	abstract|abstract[145]	giv|new[145]	_	_
19-12	3241-3252	degradation	abstract[145]	new[145]	_	_
19-13	3253-3254	,	_	_	_	_
19-14	3255-3257	as	_	_	_	_
19-15	3258-3261	the	time[147]	giv[147]	_	_
19-16	3262-3270	response	abstract|time[147]	giv|giv[147]	_	_
19-17	3271-3275	time	time[147]	giv[147]	_	_
19-18	3276-3278	of	time[147]	giv[147]	_	_
19-19	3279-3280	a	time[147]|object[148]	giv[147]|giv[148]	ana	19-25[0_148]
19-20	3281-3288	service	time[147]|object[148]	giv[147]|giv[148]	_	_
19-21	3289-3291	is	_	_	_	_
19-22	3292-3300	directly	_	_	_	_
19-23	3301-3309	affected	_	_	_	_
19-24	3310-3312	by	_	_	_	_
19-25	3313-3316	its	object|abstract[151]	giv|new[151]	coref	23-19[173_0]
19-26	3317-3324	traffic	abstract|abstract[151]	giv|new[151]	coref	20-3
19-27	3325-3334	situation	abstract[151]	new[151]	_	_
19-28	3335-3336	.	_	_	_	_

#Text=Considering the traffic demands , an intuitive solution is to place the services that have large traffic demands among them on the same machine , which can achieve intra-machine communication and reduce inter-machine traffic .
20-1	3337-3348	Considering	_	_	_	_
20-2	3349-3352	the	abstract[153]	giv[153]	coref	20-16[157_153]
20-3	3353-3360	traffic	abstract|abstract[153]	giv|giv[153]	coref	20-17
20-4	3361-3368	demands	abstract[153]	giv[153]	_	_
20-5	3369-3370	,	_	_	_	_
20-6	3371-3373	an	abstract[154]	new[154]	_	_
20-7	3374-3383	intuitive	abstract[154]	new[154]	_	_
20-8	3384-3392	solution	abstract[154]	new[154]	_	_
20-9	3393-3395	is	_	_	_	_
20-10	3396-3398	to	_	_	_	_
20-11	3399-3404	place	_	_	_	_
20-12	3405-3408	the	abstract[155]	giv[155]	ana	20-20[0_155]
20-13	3409-3417	services	abstract[155]	giv[155]	_	_
20-14	3418-3422	that	abstract[155]	giv[155]	_	_
20-15	3423-3427	have	abstract[155]	giv[155]	_	_
20-16	3428-3433	large	abstract[155]|abstract[157]	giv[155]|giv[157]	coref	23-27[176_157]
20-17	3434-3441	traffic	abstract[155]|abstract|abstract[157]	giv[155]|giv|giv[157]	coref	20-33[161_0]
20-18	3442-3449	demands	abstract[155]|abstract[157]	giv[155]|giv[157]	_	_
20-19	3450-3455	among	abstract[155]	giv[155]	_	_
20-20	3456-3460	them	abstract[155]|abstract	giv[155]|giv	coref	21-3[162_0]
20-21	3461-3463	on	abstract[155]	giv[155]	_	_
20-22	3464-3467	the	abstract[155]|object[159]	giv[155]|giv[159]	coref	21-10[163_159]
20-23	3468-3472	same	abstract[155]|object[159]	giv[155]|giv[159]	_	_
20-24	3473-3480	machine	abstract[155]|object[159]	giv[155]|giv[159]	_	_
20-25	3481-3482	,	abstract[155]	giv[155]	_	_
20-26	3483-3488	which	abstract[155]	giv[155]	_	_
20-27	3489-3492	can	abstract[155]	giv[155]	_	_
20-28	3493-3500	achieve	abstract[155]	giv[155]	_	_
20-29	3501-3514	intra-machine	abstract[155]|abstract[160]	giv[155]|giv[160]	_	_
20-30	3515-3528	communication	abstract[155]|abstract[160]	giv[155]|giv[160]	_	_
20-31	3529-3532	and	abstract[155]	giv[155]	_	_
20-32	3533-3539	reduce	abstract[155]	giv[155]	_	_
20-33	3540-3553	inter-machine	abstract[155]|abstract[161]	giv[155]|giv[161]	coref	23-31[0_161]
20-34	3554-3561	traffic	abstract[155]|abstract[161]	giv[155]|giv[161]	_	_
20-35	3562-3563	.	_	_	_	_

#Text=However , such services cannot all be co-located on one machine due to limited resource capacities .
21-1	3564-3571	However	_	_	_	_
21-2	3572-3573	,	_	_	_	_
21-3	3574-3578	such	abstract[162]	giv[162]	_	_
21-4	3579-3587	services	abstract[162]	giv[162]	_	_
21-5	3588-3594	cannot	_	_	_	_
21-6	3595-3598	all	_	_	_	_
21-7	3599-3601	be	_	_	_	_
21-8	3602-3612	co-located	_	_	_	_
21-9	3613-3615	on	_	_	_	_
21-10	3616-3619	one	object[163]	giv[163]	coref	30-12[235_163]
21-11	3620-3627	machine	object[163]	giv[163]	_	_
21-12	3628-3631	due	_	_	_	_
21-13	3632-3634	to	_	_	_	_
21-14	3635-3642	limited	abstract[165]	new[165]	_	_
21-15	3643-3651	resource	abstract|abstract[165]	giv|new[165]	coref	23-28
21-16	3652-3662	capacities	abstract[165]	new[165]	_	_
21-17	3663-3664	.	_	_	_	_

#Text=Hence , placement of service-based applications is quite complicated in clouds .
22-1	3665-3670	Hence	_	_	_	_
22-2	3671-3672	,	_	_	_	_
22-3	3673-3682	placement	abstract[166]	new[166]	coref	26-11[0_166]
22-4	3683-3685	of	abstract[166]	new[166]	_	_
22-5	3686-3699	service-based	abstract[166]|abstract[167]	new[166]|giv[167]	coref	27-10[211_167]
22-6	3700-3712	applications	abstract[166]|abstract[167]	new[166]|giv[167]	_	_
22-7	3713-3715	is	_	_	_	_
22-8	3716-3721	quite	_	_	_	_
22-9	3722-3733	complicated	_	_	_	_
22-10	3734-3736	in	_	_	_	_
22-11	3737-3743	clouds	abstract	giv	_	_
22-12	3744-3745	.	_	_	_	_

#Text=In order to achieve a desired performance of a service-based application , cluster schedulers have to carefully place each service of the application with respect to the resource demands and traffic demands .
23-1	3746-3748	In	_	_	_	_
23-2	3749-3754	order	_	_	_	_
23-3	3755-3757	to	_	_	_	_
23-4	3758-3765	achieve	_	_	_	_
23-5	3766-3767	a	abstract[169]	new[169]	_	_
23-6	3768-3775	desired	abstract[169]	new[169]	_	_
23-7	3776-3787	performance	abstract[169]	new[169]	_	_
23-8	3788-3790	of	abstract[169]	new[169]	_	_
23-9	3791-3792	a	abstract[169]|abstract[170]	new[169]|giv[170]	coref	23-22[174_170]
23-10	3793-3806	service-based	abstract[169]|abstract[170]	new[169]|giv[170]	_	_
23-11	3807-3818	application	abstract[169]|abstract[170]	new[169]|giv[170]	_	_
23-12	3819-3820	,	_	_	_	_
23-13	3821-3828	cluster	abstract|abstract[172]	giv|new[172]	coref|coref	24-2|31-13[247_172]
23-14	3829-3839	schedulers	abstract[172]	new[172]	_	_
23-15	3840-3844	have	_	_	_	_
23-16	3845-3847	to	_	_	_	_
23-17	3848-3857	carefully	_	_	_	_
23-18	3858-3863	place	_	_	_	_
23-19	3864-3868	each	object[173]	giv[173]	coref	28-10[220_173]
23-20	3869-3876	service	object[173]	giv[173]	_	_
23-21	3877-3879	of	object[173]	giv[173]	_	_
23-22	3880-3883	the	object[173]|abstract[174]	giv[173]|giv[174]	coref	29-15[0_174]
23-23	3884-3895	application	object[173]|abstract[174]	giv[173]|giv[174]	_	_
23-24	3896-3900	with	_	_	_	_
23-25	3901-3908	respect	_	_	_	_
23-26	3909-3911	to	_	_	_	_
23-27	3912-3915	the	abstract[176]|abstract[177]	giv[176]|giv[177]	coref|coref	23-27[177_176]|23-31[179_177]
23-28	3916-3924	resource	abstract|abstract[176]|abstract[177]	giv|giv[176]|giv[177]	coref	24-10
23-29	3925-3932	demands	abstract[176]|abstract[177]	giv[176]|giv[177]	_	_
23-30	3933-3936	and	abstract[177]	giv[177]	_	_
23-31	3937-3944	traffic	abstract[177]|abstract|abstract[179]	giv[177]|giv|giv[179]	coref|coref	27-17|27-16[214_179]
23-32	3945-3952	demands	abstract[177]|abstract[179]	giv[177]|giv[179]	_	_
23-33	3953-3954	.	_	_	_	_

#Text=Recent cluster scheduling methods mainly focus on the cluster resource efficiency or job completion time of batch workloads .
24-1	3955-3961	Recent	abstract[182]	new[182]	_	_
24-2	3962-3969	cluster	abstract|abstract[181]|abstract[182]	giv|new[181]|new[182]	coref|coref	24-9|30-2[232_181]
24-3	3970-3980	scheduling	abstract[181]|abstract[182]	new[181]|new[182]	_	_
24-4	3981-3988	methods	abstract[182]	new[182]	_	_
24-5	3989-3995	mainly	_	_	_	_
24-6	3996-4001	focus	_	_	_	_
24-7	4002-4004	on	_	_	_	_
24-8	4005-4008	the	abstract[185]	giv[185]	_	_
24-9	4009-4016	cluster	abstract|abstract[185]	giv|giv[185]	coref	25-8
24-10	4017-4025	resource	abstract|abstract[185]	giv|giv[185]	coref	30-25
24-11	4026-4036	efficiency	abstract[185]	giv[185]	_	_
24-12	4037-4039	or	_	_	_	_
24-13	4040-4043	job	abstract|time[188]	new|new[188]	_	_
24-14	4044-4054	completion	event|time[188]	new|new[188]	_	_
24-15	4055-4059	time	time[188]	new[188]	_	_
24-16	4060-4062	of	time[188]	new[188]	_	_
24-17	4063-4068	batch	time[188]|abstract|abstract[190]	new[188]|new|new[190]	_	_
24-18	4069-4078	workloads	time[188]|abstract[190]	new[188]|new[190]	_	_
24-19	4079-4080	.	_	_	_	_

#Text=For instance , Tetris , a multi-resource cluster scheduler , adapts heuristics for the multi-dimensional bin packing problem to efficiently pack tasks on multi-resource cluster .
25-1	4081-4084	For	_	_	_	_
25-2	4085-4093	instance	_	_	_	_
25-3	4094-4095	,	_	_	_	_
25-4	4096-4102	Tetris	abstract	new	appos	25-6[193_0]
25-5	4103-4104	,	_	_	_	_
25-6	4105-4106	a	abstract[193]	giv[193]	_	_
25-7	4107-4121	multi-resource	abstract[193]	giv[193]	_	_
25-8	4122-4129	cluster	abstract|abstract[193]	giv|giv[193]	coref	25-24[199_0]
25-9	4130-4139	scheduler	abstract[193]	giv[193]	_	_
25-10	4140-4141	,	_	_	_	_
25-11	4142-4148	adapts	_	_	_	_
25-12	4149-4159	heuristics	person[194]	new[194]	ana	27-14[0_194]
25-13	4160-4163	for	person[194]	new[194]	_	_
25-14	4164-4167	the	person[194]|abstract[197]	new[194]|new[197]	coref	28-7[223_197]
25-15	4168-4185	multi-dimensional	person[194]|abstract[197]	new[194]|new[197]	_	_
25-16	4186-4189	bin	person[194]|place|abstract[196]|abstract[197]	new[194]|new|new[196]|new[197]	_	_
25-17	4190-4197	packing	person[194]|abstract[196]|abstract[197]	new[194]|new[196]|new[197]	_	_
25-18	4198-4205	problem	person[194]|abstract[197]	new[194]|new[197]	_	_
25-19	4206-4208	to	_	_	_	_
25-20	4209-4220	efficiently	_	_	_	_
25-21	4221-4225	pack	_	_	_	_
25-22	4226-4231	tasks	abstract	new	_	_
25-23	4232-4234	on	_	_	_	_
25-24	4235-4249	multi-resource	abstract[199]	giv[199]	coref	26-5[0_199]
25-25	4250-4257	cluster	abstract[199]	giv[199]	_	_
25-26	4258-4259	.	_	_	_	_

#Text=Firmament , a centralized cluster scheduler , can make high-quality placement decisions on large-scale clusters via a min-cost max-flow optimization .
26-1	4260-4269	Firmament	abstract	new	appos	26-3[202_0]
26-2	4270-4271	,	_	_	_	_
26-3	4272-4273	a	abstract[202]	giv[202]	_	_
26-4	4274-4285	centralized	abstract[202]	giv[202]	_	_
26-5	4286-4293	cluster	abstract|abstract[202]	giv|giv[202]	coref	30-28[242_0]
26-6	4294-4303	scheduler	abstract[202]	giv[202]	_	_
26-7	4304-4305	,	_	_	_	_
26-8	4306-4309	can	_	_	_	_
26-9	4310-4314	make	_	_	_	_
26-10	4315-4327	high-quality	abstract[204]	new[204]	coref	27-21[216_204]
26-11	4328-4337	placement	abstract|abstract[204]	giv|new[204]	coref	27-21
26-12	4338-4347	decisions	abstract[204]	new[204]	_	_
26-13	4348-4350	on	_	_	_	_
26-14	4351-4362	large-scale	abstract[205]	giv[205]	_	_
26-15	4363-4371	clusters	abstract[205]	giv[205]	_	_
26-16	4372-4375	via	_	_	_	_
26-17	4376-4377	a	abstract[208]	new[208]	_	_
26-18	4378-4386	min-cost	object|abstract[208]	new|new[208]	_	_
26-19	4387-4395	max-flow	object|abstract[208]	new|new[208]	_	_
26-20	4396-4408	optimization	abstract[208]	new[208]	_	_
26-21	4409-4410	.	_	_	_	_

#Text=Unfortunately , these solutions would face difficulties for handling service-based applications , as they ignore the traffic demands when making placement decisions .
27-1	4411-4424	Unfortunately	_	_	_	_
27-2	4425-4426	,	_	_	_	_
27-3	4427-4432	these	abstract[209]	new[209]	coref	30-5[234_209]
27-4	4433-4442	solutions	abstract[209]	new[209]	_	_
27-5	4443-4448	would	_	_	_	_
27-6	4449-4453	face	_	_	_	_
27-7	4454-4466	difficulties	abstract	new	_	_
27-8	4467-4470	for	_	_	_	_
27-9	4471-4479	handling	_	_	_	_
27-10	4480-4493	service-based	abstract[211]	giv[211]	_	_
27-11	4494-4506	applications	abstract[211]	giv[211]	_	_
27-12	4507-4508	,	_	_	_	_
27-13	4509-4511	as	_	_	_	_
27-14	4512-4516	they	person	giv	ana	29-3
27-15	4517-4523	ignore	_	_	_	_
27-16	4524-4527	the	abstract[214]	giv[214]	_	_
27-17	4528-4535	traffic	abstract|abstract[214]	giv|giv[214]	_	_
27-18	4536-4543	demands	abstract[214]	giv[214]	_	_
27-19	4544-4548	when	_	_	_	_
27-20	4549-4555	making	_	_	_	_
27-21	4556-4565	placement	abstract|abstract[216]	giv|giv[216]	coref	28-15
27-22	4566-4575	decisions	abstract[216]	giv[216]	_	_
27-23	4576-4577	.	_	_	_	_

#Text=Some other research works concentrate on composite Software as a service ( SaaS ) placement problem , which try to minimize the total execution time for composite SaaS .
28-1	4578-4582	Some	abstract[218]	new[218]	_	_
28-2	4583-4588	other	abstract[218]	new[218]	_	_
28-3	4589-4597	research	abstract|abstract[218]	new|new[218]	coref	30-6
28-4	4598-4603	works	abstract[218]	new[218]	_	_
28-5	4604-4615	concentrate	_	_	_	_
28-6	4616-4618	on	_	_	_	_
28-7	4619-4628	composite	abstract[219]|abstract[223]	new[219]|giv[223]	appos|coref	28-13[0_219]|30-12[238_223]
28-8	4629-4637	Software	abstract[219]|abstract[223]	new[219]|giv[223]	_	_
28-9	4638-4640	as	abstract[219]|abstract[223]	new[219]|giv[223]	_	_
28-10	4641-4642	a	abstract[219]|object[220]|abstract[223]	new[219]|giv[220]|giv[223]	coref	29-11[0_220]
28-11	4643-4650	service	abstract[219]|object[220]|abstract[223]	new[219]|giv[220]|giv[223]	_	_
28-12	4651-4652	(	abstract[223]	giv[223]	_	_
28-13	4653-4657	SaaS	abstract|abstract[223]	giv|giv[223]	coref	28-27[226_0]
28-14	4658-4659	)	abstract[223]	giv[223]	_	_
28-15	4660-4669	placement	abstract|abstract[223]	giv|giv[223]	coref	29-14[231_0]
28-16	4670-4677	problem	abstract[223]	giv[223]	_	_
28-17	4678-4679	,	abstract[223]	giv[223]	_	_
28-18	4680-4685	which	abstract[223]	giv[223]	_	_
28-19	4686-4689	try	abstract[223]	giv[223]	_	_
28-20	4690-4692	to	abstract[223]	giv[223]	_	_
28-21	4693-4701	minimize	abstract[223]	giv[223]	_	_
28-22	4702-4705	the	abstract[223]|time[225]	giv[223]|new[225]	_	_
28-23	4706-4711	total	abstract[223]|time[225]	giv[223]|new[225]	_	_
28-24	4712-4721	execution	abstract[223]|abstract|time[225]	giv[223]|new|new[225]	_	_
28-25	4722-4726	time	abstract[223]|time[225]	giv[223]|new[225]	_	_
28-26	4727-4730	for	abstract[223]|time[225]	giv[223]|new[225]	_	_
28-27	4731-4740	composite	abstract[223]|time[225]|abstract[226]	giv[223]|new[225]|giv[226]	_	_
28-28	4741-4745	SaaS	abstract[223]|time[225]|abstract[226]	giv[223]|new[225]|giv[226]	_	_
28-29	4746-4747	.	_	_	_	_

#Text=However , they only focus on a set of predefined service components for the application placement .
29-1	4748-4755	However	_	_	_	_
29-2	4756-4757	,	_	_	_	_
29-3	4758-4762	they	person	giv	_	_
29-4	4763-4767	only	_	_	_	_
29-5	4768-4773	focus	_	_	_	_
29-6	4774-4776	on	_	_	_	_
29-7	4777-4778	a	abstract[229]	giv[229]	_	_
29-8	4779-4782	set	abstract[229]	giv[229]	_	_
29-9	4783-4785	of	abstract[229]	giv[229]	_	_
29-10	4786-4796	predefined	abstract[229]	giv[229]	_	_
29-11	4797-4804	service	object|abstract[229]	giv|giv[229]	_	_
29-12	4805-4815	components	abstract[229]	giv[229]	_	_
29-13	4816-4819	for	abstract[229]	giv[229]	_	_
29-14	4820-4823	the	abstract[229]|abstract[231]	giv[229]|giv[231]	coref	30-17[0_231]
29-15	4824-4835	application	abstract[229]|abstract|abstract[231]	giv[229]|giv|giv[231]	coref	32-15[254_0]
29-16	4836-4845	placement	abstract[229]|abstract[231]	giv[229]|giv[231]	_	_
29-17	4846-4847	.	_	_	_	_

#Text=For traffic-aware scheduling , relevant research solutions are proposed to handle virtual machine ( VM ) placement problem , which aims to optimize network resource usage over the cluster .
30-1	4848-4851	For	_	_	_	_
30-2	4852-4865	traffic-aware	abstract[232]	giv[232]	_	_
30-3	4866-4876	scheduling	abstract[232]	giv[232]	_	_
30-4	4877-4878	,	_	_	_	_
30-5	4879-4887	relevant	abstract[234]	giv[234]	coref	31-3[243_234]
30-6	4888-4896	research	abstract|abstract[234]	giv|giv[234]	_	_
30-7	4897-4906	solutions	abstract[234]	giv[234]	_	_
30-8	4907-4910	are	_	_	_	_
30-9	4911-4919	proposed	_	_	_	_
30-10	4920-4922	to	_	_	_	_
30-11	4923-4929	handle	_	_	_	_
30-12	4930-4937	virtual	object[235]|abstract[238]	giv[235]|giv[238]	_	_
30-13	4938-4945	machine	object[235]|abstract[238]	giv[235]|giv[238]	_	_
30-14	4946-4947	(	abstract[238]	giv[238]	_	_
30-15	4948-4950	VM	abstract|abstract[238]	new|giv[238]	_	_
30-16	4951-4952	)	abstract[238]	giv[238]	_	_
30-17	4953-4962	placement	abstract|abstract[238]	giv|giv[238]	_	_
30-18	4963-4970	problem	abstract[238]	giv[238]	_	_
30-19	4971-4972	,	abstract[238]	giv[238]	_	_
30-20	4973-4978	which	abstract[238]	giv[238]	_	_
30-21	4979-4983	aims	abstract[238]	giv[238]	_	_
30-22	4984-4986	to	abstract[238]	giv[238]	_	_
30-23	4987-4995	optimize	abstract[238]	giv[238]	_	_
30-24	4996-5003	network	abstract[238]|abstract|abstract[241]	giv[238]|giv|new[241]	coref	31-9
30-25	5004-5012	resource	abstract[238]|abstract|abstract[241]	giv[238]|giv|new[241]	_	_
30-26	5013-5018	usage	abstract[238]|abstract[241]	giv[238]|new[241]	_	_
30-27	5019-5023	over	_	_	_	_
30-28	5024-5027	the	abstract[242]	giv[242]	coref	31-16[0_242]
30-29	5028-5035	cluster	abstract[242]	giv[242]	_	_
30-30	5036-5037	.	_	_	_	_

#Text=However , these solutions rely on a certain network topology , while most of existing cluster schedulers are agnostic to network topology .
31-1	5038-5045	However	_	_	_	_
31-2	5046-5047	,	_	_	_	_
31-3	5048-5053	these	abstract[243]	giv[243]	_	_
31-4	5054-5063	solutions	abstract[243]	giv[243]	_	_
31-5	5064-5068	rely	_	_	_	_
31-6	5069-5071	on	_	_	_	_
31-7	5072-5073	a	abstract[245]	new[245]	coref	31-21[249_245]
31-8	5074-5081	certain	abstract[245]	new[245]	_	_
31-9	5082-5089	network	abstract|abstract[245]	giv|new[245]	coref	31-21
31-10	5090-5098	topology	abstract[245]	new[245]	_	_
31-11	5099-5100	,	_	_	_	_
31-12	5101-5106	while	_	_	_	_
31-13	5107-5111	most	abstract[247]	giv[247]	_	_
31-14	5112-5114	of	abstract[247]	giv[247]	_	_
31-15	5115-5123	existing	abstract[247]	giv[247]	_	_
31-16	5124-5131	cluster	abstract|abstract[247]	giv|giv[247]	_	_
31-17	5132-5142	schedulers	abstract[247]	giv[247]	_	_
31-18	5143-5146	are	_	_	_	_
31-19	5147-5155	agnostic	_	_	_	_
31-20	5156-5158	to	_	_	_	_
31-21	5159-5166	network	abstract|abstract[249]	giv|giv[249]	ana|coref	32-4[0_249]|32-10
31-22	5167-5175	topology	abstract[249]	giv[249]	_	_
31-23	5176-5177	.	_	_	_	_

#Text=In particular , it is hard to get the network topology information when deploying a service-based application on a virtual infrastructure .
32-1	5178-5180	In	_	_	_	_
32-2	5181-5191	particular	_	_	_	_
32-3	5192-5193	,	_	_	_	_
32-4	5194-5196	it	abstract	giv	coref	32-11
32-5	5197-5199	is	_	_	_	_
32-6	5200-5204	hard	_	_	_	_
32-7	5205-5207	to	_	_	_	_
32-8	5208-5211	get	_	_	_	_
32-9	5212-5215	the	abstract[253]	new[253]	_	_
32-10	5216-5223	network	abstract|abstract[253]	giv|new[253]	_	_
32-11	5224-5232	topology	abstract|abstract[253]	giv|new[253]	_	_
32-12	5233-5244	information	abstract[253]	new[253]	_	_
32-13	5245-5249	when	_	_	_	_
32-14	5250-5259	deploying	_	_	_	_
32-15	5260-5261	a	abstract[254]	giv[254]	_	_
32-16	5262-5275	service-based	abstract[254]	giv[254]	_	_
32-17	5276-5287	application	abstract[254]	giv[254]	_	_
32-18	5288-5290	on	_	_	_	_
32-19	5291-5292	a	abstract[255]	new[255]	_	_
32-20	5293-5300	virtual	abstract[255]	new[255]	_	_
32-21	5301-5315	infrastructure	abstract[255]	new[255]	_	_
32-22	5316-5317	.	_	_	_	_
