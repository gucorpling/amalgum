#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Referent|entity|infstat
#T_RL=webanno.custom.Coref|type|BT_webanno.custom.Referent


#Text=3. Accurate and Approximate Adders
1-1	0-2	3.	_	_	_	_
1-2	3-11	Accurate	abstract[1]	new[1]	coref	2-13[6_1]
1-3	12-15	and	abstract[1]	new[1]	_	_
1-4	16-27	Approximate	abstract[1]	new[1]	_	_
1-5	28-34	Adders	abstract[1]	new[1]	_	_

#Text=The architecture of an N-bit accurate adder and the generic architectures of N-bit approximate adders are shown in
2-1	35-38	The	abstract[2]	new[2]	_	_
2-2	39-51	architecture	abstract[2]	new[2]	_	_
2-3	52-54	of	abstract[2]	new[2]	_	_
2-4	55-57	an	abstract[2]|abstract[4]	new[2]|new[4]	coref	9-6[0_4]
2-5	58-63	N-bit	abstract[2]|object|abstract[4]	new[2]|new|new[4]	_	_
2-6	64-72	accurate	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-7	73-78	adder	abstract[2]|abstract[4]	new[2]|new[4]	_	_
2-8	79-82	and	_	_	_	_
2-9	83-86	the	abstract[5]	new[5]	_	_
2-10	87-94	generic	abstract[5]	new[5]	_	_
2-11	95-108	architectures	abstract[5]	new[5]	_	_
2-12	109-111	of	abstract[5]	new[5]	_	_
2-13	112-117	N-bit	abstract[5]|abstract[6]	new[5]|giv[6]	coref	5-2[8_6]
2-14	118-129	approximate	abstract[5]|abstract[6]	new[5]|giv[6]	_	_
2-15	130-136	adders	abstract[5]|abstract[6]	new[5]|giv[6]	_	_
2-16	137-140	are	_	_	_	_
2-17	141-146	shown	_	_	_	_
2-18	147-149	in	_	_	_	_

#Text=Figure 1
3-1	150-156	Figure	abstract[7]	new[7]	coref	7-1[21_7]
3-2	157-158	1	abstract[7]	new[7]	_	_

#Text=.
4-1	159-160	.	_	_	_	_

#Text=For the approximate adders , we define the size of the least significant inaccurate sub-adder to be K-bits , and hence the size of the more significant accurate sub-adder will be ( N – K)-bits .
5-1	161-164	For	_	_	_	_
5-2	165-168	the	abstract[8]	giv[8]	coref	10-31[44_8]
5-3	169-180	approximate	abstract[8]	giv[8]	_	_
5-4	181-187	adders	abstract[8]	giv[8]	_	_
5-5	188-189	,	_	_	_	_
5-6	190-192	we	person	acc	ana	11-1
5-7	193-199	define	_	_	_	_
5-8	200-203	the	abstract[10]	new[10]	_	_
5-9	204-208	size	abstract[10]	new[10]	_	_
5-10	209-211	of	abstract[10]	new[10]	_	_
5-11	212-215	the	abstract[10]|abstract[11]	new[10]|new[11]	coref	10-21[41_11]
5-12	216-221	least	abstract[10]|abstract[11]	new[10]|new[11]	_	_
5-13	222-233	significant	abstract[10]|abstract[11]	new[10]|new[11]	_	_
5-14	234-244	inaccurate	abstract[10]|abstract[11]	new[10]|new[11]	_	_
5-15	245-254	sub-adder	abstract[10]|abstract[11]	new[10]|new[11]	_	_
5-16	255-257	to	_	_	_	_
5-17	258-260	be	_	_	_	_
5-18	261-267	K-bits	abstract	new	_	_
5-19	268-269	,	_	_	_	_
5-20	270-273	and	_	_	_	_
5-21	274-279	hence	_	_	_	_
5-22	280-283	the	abstract[13]	new[13]	_	_
5-23	284-288	size	abstract[13]	new[13]	_	_
5-24	289-291	of	abstract[13]	new[13]	_	_
5-25	292-295	the	abstract[13]|abstract[14]	new[13]|new[14]	coref	10-10[38_14]
5-26	296-300	more	abstract[13]|abstract[14]	new[13]|new[14]	_	_
5-27	301-312	significant	abstract[13]|abstract[14]	new[13]|new[14]	_	_
5-28	313-321	accurate	abstract[13]|abstract[14]	new[13]|new[14]	_	_
5-29	322-331	sub-adder	abstract[13]|abstract[14]	new[13]|new[14]	_	_
5-30	332-336	will	_	_	_	_
5-31	337-339	be	_	_	_	_
5-32	340-341	(	_	_	_	_
5-33	342-343	N	abstract[15]	new[15]	_	_
5-34	344-345	–	abstract[15]	new[15]	_	_
5-35	346-353	K)-bits	abstract[15]|abstract	new[15]|new	_	_
5-36	354-355	.	_	_	_	_

#Text=A and B represent the adder inputs in
6-1	356-357	A	abstract	new	_	_
6-2	358-361	and	_	_	_	_
6-3	362-363	B	place	new	_	_
6-4	364-373	represent	_	_	_	_
6-5	374-377	the	abstract[20]	new[20]	coref	9-5[30_20]
6-6	378-383	adder	person|abstract[20]	new|new[20]	_	_
6-7	384-390	inputs	abstract[20]	new[20]	_	_
6-8	391-393	in	_	_	_	_

#Text=Figure 1
7-1	394-400	Figure	abstract[21]	giv[21]	coref	13-1[61_21]
7-2	401-402	1	abstract[21]	giv[21]	_	_

#Text=, while SUM denotes the sum output , which includes a carry overflow bit .
8-1	403-404	,	_	_	_	_
8-2	405-410	while	_	_	_	_
8-3	411-414	SUM	abstract	new	_	_
8-4	415-422	denotes	_	_	_	_
8-5	423-426	the	abstract[24]	new[24]	_	_
8-6	427-430	sum	abstract|abstract[24]	new|new[24]	coref	10-7
8-7	431-437	output	abstract[24]	new[24]	_	_
8-8	438-439	,	abstract[24]	new[24]	_	_
8-9	440-445	which	abstract[24]	new[24]	_	_
8-10	446-454	includes	abstract[24]	new[24]	_	_
8-11	455-456	a	abstract[24]|abstract[27]	new[24]|new[27]	coref	9-13[0_27]
8-12	457-462	carry	abstract[24]|abstract|abstract[27]	new[24]|new|new[27]	coref	10-37
8-13	463-471	overflow	abstract[24]|event|abstract[27]	new[24]|new|new[27]	coref	10-36[46_0]
8-14	472-475	bit	abstract[24]|abstract[27]	new[24]|new[27]	_	_
8-15	476-477	.	_	_	_	_

#Text=The subscripts associated with the adder inputs and outputs denote the corresponding bit positions .
9-1	478-481	The	abstract[28]	new[28]	_	_
9-2	482-492	subscripts	abstract[28]	new[28]	_	_
9-3	493-503	associated	abstract[28]	new[28]	_	_
9-4	504-508	with	abstract[28]	new[28]	_	_
9-5	509-512	the	abstract[28]|abstract[30]|abstract[31]	new[28]|giv[30]|giv[31]	coref	9-5[31_30]
9-6	513-518	adder	abstract[28]|abstract|abstract[30]|abstract[31]	new[28]|giv|giv[30]|giv[31]	coref	12-1[60_0]
9-7	519-525	inputs	abstract[28]|abstract[30]|abstract[31]	new[28]|giv[30]|giv[31]	_	_
9-8	526-529	and	abstract[28]|abstract[31]	new[28]|giv[31]	_	_
9-9	530-537	outputs	abstract[28]|abstract[31]|abstract	new[28]|giv[31]|new	_	_
9-10	538-544	denote	_	_	_	_
9-11	545-548	the	abstract[34]	new[34]	_	_
9-12	549-562	corresponding	abstract[34]	new[34]	_	_
9-13	563-566	bit	abstract|abstract[34]	giv|new[34]	coref	27-32
9-14	567-576	positions	abstract[34]	new[34]	_	_
9-15	577-578	.	_	_	_	_

#Text=The ( N – K ) sum bits of the accurate sub-adder are combined with the K sum bits of the inaccurate sub-adder to produce the N sum bits of approximate adders , which includes the carry overflow .
10-1	579-582	The	abstract[37]	new[37]	_	_
10-2	583-584	(	abstract[37]	new[37]	_	_
10-3	585-586	N	abstract[37]	new[37]	_	_
10-4	587-588	–	abstract[37]	new[37]	_	_
10-5	589-590	K	abstract|abstract[37]	new|new[37]	_	_
10-6	591-592	)	abstract[37]	new[37]	_	_
10-7	593-596	sum	abstract|abstract[37]	giv|new[37]	coref	10-18
10-8	597-601	bits	abstract[37]	new[37]	_	_
10-9	602-604	of	abstract[37]	new[37]	_	_
10-10	605-608	the	abstract[37]|abstract[38]	new[37]|giv[38]	coref	23-21[96_38]
10-11	609-617	accurate	abstract[37]|abstract[38]	new[37]|giv[38]	_	_
10-12	618-627	sub-adder	abstract[37]|abstract[38]	new[37]|giv[38]	_	_
10-13	628-631	are	_	_	_	_
10-14	632-640	combined	_	_	_	_
10-15	641-645	with	_	_	_	_
10-16	646-649	the	abstract[40]	new[40]	_	_
10-17	650-651	K	abstract[40]	new[40]	_	_
10-18	652-655	sum	abstract|abstract[40]	giv|new[40]	coref	10-28
10-19	656-660	bits	abstract[40]	new[40]	_	_
10-20	661-663	of	abstract[40]	new[40]	_	_
10-21	664-667	the	abstract[40]|abstract[41]	new[40]|giv[41]	coref	18-10[71_41]
10-22	668-678	inaccurate	abstract[40]|abstract[41]	new[40]|giv[41]	_	_
10-23	679-688	sub-adder	abstract[40]|abstract[41]	new[40]|giv[41]	_	_
10-24	689-691	to	_	_	_	_
10-25	692-699	produce	_	_	_	_
10-26	700-703	the	abstract[43]	new[43]	coref	18-18[73_43]
10-27	704-705	N	abstract[43]	new[43]	_	_
10-28	706-709	sum	abstract|abstract[43]	giv|new[43]	coref	18-20
10-29	710-714	bits	abstract[43]	new[43]	_	_
10-30	715-717	of	abstract[43]	new[43]	_	_
10-31	718-729	approximate	abstract[43]|abstract[44]	new[43]|giv[44]	coref	11-7[49_44]
10-32	730-736	adders	abstract[43]|abstract[44]	new[43]|giv[44]	_	_
10-33	737-738	,	abstract[43]	new[43]	_	_
10-34	739-744	which	abstract[43]	new[43]	_	_
10-35	745-753	includes	abstract[43]	new[43]	_	_
10-36	754-757	the	abstract[43]|event[46]	new[43]|giv[46]	_	_
10-37	758-763	carry	abstract[43]|abstract|event[46]	new[43]|giv|giv[46]	coref	19-24
10-38	764-772	overflow	abstract[43]|event[46]	new[43]|giv[46]	_	_
10-39	773-774	.	_	_	_	_

#Text=We shall use some legends for the approximate adders for the ease of referencing ; some of the legends are defined by the authors in their respective works while the remaining are defined by us in this work for referencing .
11-1	775-777	We	person	giv	ana	11-35
11-2	778-783	shall	_	_	_	_
11-3	784-787	use	_	_	_	_
11-4	788-792	some	abstract[48]	new[48]	coref	11-18[52_48]
11-5	793-800	legends	abstract[48]	new[48]	_	_
11-6	801-804	for	abstract[48]	new[48]	_	_
11-7	805-808	the	abstract[48]|abstract[49]	new[48]|giv[49]	ana	11-16[51_49]
11-8	809-820	approximate	abstract[48]|abstract[49]	new[48]|giv[49]	_	_
11-9	821-827	adders	abstract[48]|abstract[49]	new[48]|giv[49]	_	_
11-10	828-831	for	_	_	_	_
11-11	832-835	the	abstract[50]	new[50]	_	_
11-12	836-840	ease	abstract[50]	new[50]	_	_
11-13	841-843	of	abstract[50]	new[50]	_	_
11-14	844-855	referencing	abstract[50]	new[50]	_	_
11-15	856-857	;	_	_	_	_
11-16	858-862	some	abstract[51]	giv[51]	coref	31-26[136_51]
11-17	863-865	of	abstract[51]	giv[51]	_	_
11-18	866-869	the	abstract[51]|abstract[52]	giv[51]|giv[52]	_	_
11-19	870-877	legends	abstract[51]|abstract[52]	giv[51]|giv[52]	_	_
11-20	878-881	are	_	_	_	_
11-21	882-889	defined	_	_	_	_
11-22	890-892	by	_	_	_	_
11-23	893-896	the	person[53]	new[53]	ana	11-26[0_53]
11-24	897-904	authors	person[53]	new[53]	_	_
11-25	905-907	in	_	_	_	_
11-26	908-913	their	person|abstract[55]	giv|new[55]	_	_
11-27	914-924	respective	abstract[55]	new[55]	_	_
11-28	925-930	works	abstract[55]	new[55]	_	_
11-29	931-936	while	_	_	_	_
11-30	937-940	the	abstract[56]	new[56]	_	_
11-31	941-950	remaining	abstract[56]	new[56]	_	_
11-32	951-954	are	_	_	_	_
11-33	955-962	defined	_	_	_	_
11-34	963-965	by	_	_	_	_
11-35	966-968	us	person	giv	ana	31-2
11-36	969-971	in	_	_	_	_
11-37	972-976	this	abstract[58]	new[58]	_	_
11-38	977-981	work	abstract[58]	new[58]	_	_
11-39	982-985	for	_	_	_	_
11-40	986-997	referencing	abstract	new	_	_
11-41	998-999	.	_	_	_	_

#Text=The accurate adder is shown in
12-1	1000-1003	The	abstract[60]	giv[60]	coref	15-1[62_60]
12-2	1004-1012	accurate	abstract[60]	giv[60]	_	_
12-3	1013-1018	adder	abstract[60]	giv[60]	_	_
12-4	1019-1021	is	_	_	_	_
12-5	1022-1027	shown	_	_	_	_
12-6	1028-1030	in	_	_	_	_

#Text=Figure 1
13-1	1031-1037	Figure	abstract[61]	giv[61]	coref	16-1[66_61]
13-2	1038-1039	1	abstract[61]	giv[61]	_	_

#Text=a.
14-1	1040-1042	a.	_	_	_	_

#Text=The approximate adder of Reference , called the lower-part OR adder ( LOA ) , is shown in
15-1	1043-1046	The	abstract[62]	giv[62]	coref	15-11[0_62]
15-2	1047-1058	approximate	abstract[62]	giv[62]	_	_
15-3	1059-1064	adder	abstract[62]	giv[62]	_	_
15-4	1065-1067	of	abstract[62]	giv[62]	_	_
15-5	1068-1077	Reference	abstract[62]|abstract	giv[62]|new	coref	20-5
15-6	1078-1079	,	abstract[62]	giv[62]	_	_
15-7	1080-1086	called	abstract[62]	giv[62]	_	_
15-8	1087-1090	the	abstract[62]	giv[62]	_	_
15-9	1091-1101	lower-part	abstract[62]	giv[62]	_	_
15-10	1102-1104	OR	abstract[62]	giv[62]	_	_
15-11	1105-1110	adder	abstract[62]|abstract	giv[62]|giv	appos	15-13
15-12	1111-1112	(	_	_	_	_
15-13	1113-1116	LOA	abstract	giv	coref	18-2[68_0]
15-14	1117-1118	)	_	_	_	_
15-15	1119-1120	,	_	_	_	_
15-16	1121-1123	is	_	_	_	_
15-17	1124-1129	shown	_	_	_	_
15-18	1130-1132	in	_	_	_	_

#Text=Figure 1
16-1	1133-1139	Figure	abstract[66]	giv[66]	coref	22-1[89_66]
16-2	1140-1141	1	abstract[66]	giv[66]	_	_

#Text=b.
17-1	1142-1144	b.	animal	new	_	_

#Text=In the LOA , the K input bit-pairs of the inaccurate sub-adder are respectively OR-ed to produce the K sum bits .
18-1	1145-1147	In	_	_	_	_
18-2	1148-1151	the	abstract[68]	giv[68]	coref	32-7[0_68]
18-3	1152-1155	LOA	abstract[68]	giv[68]	_	_
18-4	1156-1157	,	_	_	_	_
18-5	1158-1161	the	abstract[70]	new[70]	_	_
18-6	1162-1163	K	abstract[70]	new[70]	_	_
18-7	1164-1169	input	abstract|abstract[70]	new|new[70]	coref	19-23[79_0]
18-8	1170-1179	bit-pairs	abstract[70]	new[70]	_	_
18-9	1180-1182	of	abstract[70]	new[70]	_	_
18-10	1183-1186	the	abstract[70]|abstract[71]	new[70]|giv[71]	coref	19-6[75_71]
18-11	1187-1197	inaccurate	abstract[70]|abstract[71]	new[70]|giv[71]	_	_
18-12	1198-1207	sub-adder	abstract[70]|abstract[71]	new[70]|giv[71]	_	_
18-13	1208-1211	are	_	_	_	_
18-14	1212-1224	respectively	_	_	_	_
18-15	1225-1230	OR-ed	_	_	_	_
18-16	1231-1233	to	_	_	_	_
18-17	1234-1241	produce	_	_	_	_
18-18	1242-1245	the	abstract[73]	giv[73]	_	_
18-19	1246-1247	K	abstract[73]	giv[73]	_	_
18-20	1248-1251	sum	abstract|abstract[73]	giv|giv[73]	coref	27-2
18-21	1252-1256	bits	abstract[73]	giv[73]	_	_
18-22	1257-1258	.	_	_	_	_

#Text=The most significant bit-pair of the inaccurate sub-adder viz. AK – 1 and BK – 1 is alone AND-ed and given as the carry input for the accurate sub-adder .
19-1	1259-1262	The	abstract[74]	new[74]	coref	34-5[152_74]
19-2	1263-1267	most	abstract[74]	new[74]	_	_
19-3	1268-1279	significant	abstract[74]	new[74]	_	_
19-4	1280-1288	bit-pair	abstract[74]	new[74]	_	_
19-5	1289-1291	of	abstract[74]	new[74]	_	_
19-6	1292-1295	the	abstract[74]|abstract[75]	new[74]|giv[75]	coref	24-16[101_75]
19-7	1296-1306	inaccurate	abstract[74]|abstract[75]	new[74]|giv[75]	_	_
19-8	1307-1316	sub-adder	abstract[74]|abstract[75]	new[74]|giv[75]	_	_
19-9	1317-1321	viz.	_	_	_	_
19-10	1322-1324	AK	abstract[76]	new[76]	_	_
19-11	1325-1326	–	abstract[76]	new[76]	_	_
19-12	1327-1328	1	abstract[76]	new[76]	_	_
19-13	1329-1332	and	_	_	_	_
19-14	1333-1335	BK	abstract[77]	new[77]	_	_
19-15	1336-1337	–	abstract[77]	new[77]	_	_
19-16	1338-1339	1	abstract[77]	new[77]	_	_
19-17	1340-1342	is	_	_	_	_
19-18	1343-1348	alone	_	_	_	_
19-19	1349-1355	AND-ed	_	_	_	_
19-20	1356-1359	and	_	_	_	_
19-21	1360-1365	given	_	_	_	_
19-22	1366-1368	as	_	_	_	_
19-23	1369-1372	the	abstract[79]	giv[79]	coref	23-17[95_79]
19-24	1373-1378	carry	abstract|abstract[79]	giv|giv[79]	coref	23-18
19-25	1379-1384	input	abstract[79]	giv[79]	_	_
19-26	1385-1388	for	abstract[79]	giv[79]	_	_
19-27	1389-1392	the	abstract[79]|person[80]	giv[79]|new[80]	_	_
19-28	1393-1401	accurate	abstract[79]|person[80]	giv[79]|new[80]	_	_
19-29	1402-1411	sub-adder	abstract[79]|person[80]	giv[79]|new[80]	_	_
19-30	1412-1413	.	_	_	_	_

#Text=The approximate adder of Reference shall be referred to as LOAWA ( i.e. , LOA without the 2-input AND function ) .
20-1	1414-1417	The	abstract[81]	new[81]	coref	24-1[98_81]
20-2	1418-1429	approximate	abstract[81]	new[81]	_	_
20-3	1430-1435	adder	abstract[81]	new[81]	_	_
20-4	1436-1438	of	abstract[81]	new[81]	_	_
20-5	1439-1448	Reference	abstract[81]|abstract	new[81]|giv	coref	23-10
20-6	1449-1454	shall	_	_	_	_
20-7	1455-1457	be	_	_	_	_
20-8	1458-1466	referred	_	_	_	_
20-9	1467-1469	to	_	_	_	_
20-10	1470-1472	as	_	_	_	_
20-11	1473-1478	LOAWA	abstract	new	appos	20-13[84_0]
20-12	1479-1480	(	_	_	_	_
20-13	1481-1485	i.e.	abstract[84]	giv[84]	coref	21-1[0_84]
20-14	1486-1487	,	abstract[84]	giv[84]	_	_
20-15	1488-1491	LOA	abstract[84]	giv[84]	_	_
20-16	1492-1499	without	abstract[84]	giv[84]	_	_
20-17	1500-1503	the	abstract[84]|abstract[85]|abstract[86]	giv[84]|new[85]|new[86]	coref|coref	33-16[146_85]|33-16[147_86]
20-18	1504-1511	2-input	abstract[84]|abstract[85]|abstract[86]	giv[84]|new[85]|new[86]	_	_
20-19	1512-1515	AND	abstract[84]|abstract[86]	giv[84]|new[86]	_	_
20-20	1516-1524	function	abstract[84]|abstract[86]|abstract	giv[84]|new[86]|new	_	_
20-21	1525-1526	)	_	_	_	_
20-22	1527-1528	.	_	_	_	_

#Text=LOAWA is shown in
21-1	1529-1534	LOAWA	abstract	giv	coref	23-8[91_0]
21-2	1535-1537	is	_	_	_	_
21-3	1538-1543	shown	_	_	_	_
21-4	1544-1546	in	_	_	_	_

#Text=Figure 1
22-1	1547-1553	Figure	abstract[89]	giv[89]	coref	25-1[102_89]
22-2	1554-1555	1	abstract[89]	giv[89]	_	_

#Text=c , which is nearly identical to LOA of Reference ; the only exception being that the carry input of the accurate sub-adder is set to a constant 0 .
23-1	1556-1557	c	abstract	new	_	_
23-2	1558-1559	,	_	_	_	_
23-3	1560-1565	which	_	_	_	_
23-4	1566-1568	is	_	_	_	_
23-5	1569-1575	nearly	_	_	_	_
23-6	1576-1585	identical	_	_	_	_
23-7	1586-1588	to	_	_	_	_
23-8	1589-1592	LOA	abstract[91]	giv[91]	coref	43-20[0_91]
23-9	1593-1595	of	abstract[91]	giv[91]	_	_
23-10	1596-1605	Reference	abstract[91]|abstract	giv[91]|giv	coref	29-7
23-11	1606-1607	;	_	_	_	_
23-12	1608-1611	the	abstract[93]	new[93]	_	_
23-13	1612-1616	only	abstract[93]	new[93]	_	_
23-14	1617-1626	exception	abstract[93]	new[93]	_	_
23-15	1627-1632	being	_	_	_	_
23-16	1633-1637	that	_	_	_	_
23-17	1638-1641	the	abstract[95]	giv[95]	coref	27-17[0_95]
23-18	1642-1647	carry	abstract|abstract[95]	giv|giv[95]	coref	28-2
23-19	1648-1653	input	abstract[95]	giv[95]	_	_
23-20	1654-1656	of	abstract[95]	giv[95]	_	_
23-21	1657-1660	the	abstract[95]|abstract[96]	giv[95]|giv[96]	coref	28-5[119_96]
23-22	1661-1669	accurate	abstract[95]|abstract[96]	giv[95]|giv[96]	_	_
23-23	1670-1679	sub-adder	abstract[95]|abstract[96]	giv[95]|giv[96]	_	_
23-24	1680-1682	is	_	_	_	_
23-25	1683-1686	set	_	_	_	_
23-26	1687-1689	to	_	_	_	_
23-27	1690-1691	a	_	_	_	_
23-28	1692-1700	constant	_	_	_	_
23-29	1701-1702	0	abstract	new	coref	34-23[156_0]
23-30	1703-1704	.	_	_	_	_

#Text=The approximate adder of , which uses the type 5 approximate full adder for realizing the inaccurate sub-adder is shown in
24-1	1705-1708	The	abstract[98]	giv[98]	coref	24-8[100_98]
24-2	1709-1720	approximate	abstract[98]	giv[98]	_	_
24-3	1721-1726	adder	abstract[98]	giv[98]	_	_
24-4	1727-1729	of	abstract[98]	giv[98]	_	_
24-5	1730-1731	,	abstract[98]	giv[98]	_	_
24-6	1732-1737	which	abstract[98]	giv[98]	_	_
24-7	1738-1742	uses	abstract[98]	giv[98]	_	_
24-8	1743-1746	the	abstract[98]|abstract[100]	giv[98]|giv[100]	coref	26-2[103_100]
24-9	1747-1751	type	abstract[98]|abstract[99]|abstract[100]	giv[98]|new[99]|giv[100]	_	_
24-10	1752-1753	5	abstract[98]|abstract[99]|abstract[100]	giv[98]|new[99]|giv[100]	_	_
24-11	1754-1765	approximate	abstract[98]|abstract[100]	giv[98]|giv[100]	_	_
24-12	1766-1770	full	abstract[98]|abstract[100]	giv[98]|giv[100]	_	_
24-13	1771-1776	adder	abstract[98]|abstract[100]	giv[98]|giv[100]	_	_
24-14	1777-1780	for	_	_	_	_
24-15	1781-1790	realizing	_	_	_	_
24-16	1791-1794	the	abstract[101]	giv[101]	coref	27-5[107_101]
24-17	1795-1805	inaccurate	abstract[101]	giv[101]	_	_
24-18	1806-1815	sub-adder	abstract[101]	giv[101]	_	_
24-19	1816-1818	is	_	_	_	_
24-20	1819-1824	shown	_	_	_	_
24-21	1825-1827	in	_	_	_	_

#Text=Figure 1
25-1	1828-1834	Figure	abstract[102]	giv[102]	coref	30-1[126_102]
25-2	1835-1836	1	abstract[102]	giv[102]	_	_

#Text=d. This approximate adder shall be referred to as APPROX5 .
26-1	1837-1839	d.	_	_	_	_
26-2	1840-1844	This	abstract[103]	giv[103]	coref	29-1[123_103]
26-3	1845-1856	approximate	abstract[103]	giv[103]	_	_
26-4	1857-1862	adder	abstract[103]	giv[103]	_	_
26-5	1863-1868	shall	_	_	_	_
26-6	1869-1871	be	_	_	_	_
26-7	1872-1880	referred	_	_	_	_
26-8	1881-1883	to	_	_	_	_
26-9	1884-1886	as	_	_	_	_
26-10	1887-1894	APPROX5	abstract	new	coref	43-22
26-11	1895-1896	.	_	_	_	_

#Text=The sum bits of the inaccurate sub-adder are the same as one set of the corresponding input bits , i.e. , SUM i = B i , where i denotes a bit position .
27-1	1897-1900	The	abstract[106]	new[106]	coref	27-15[110_106]
27-2	1901-1904	sum	abstract|abstract[106]	giv|new[106]	coref	39-6
27-3	1905-1909	bits	abstract[106]	new[106]	_	_
27-4	1910-1912	of	abstract[106]	new[106]	_	_
27-5	1913-1916	the	abstract[106]|abstract[107]	new[106]|giv[107]	coref	28-16[122_107]
27-6	1917-1927	inaccurate	abstract[106]|abstract[107]	new[106]|giv[107]	_	_
27-7	1928-1937	sub-adder	abstract[106]|abstract[107]	new[106]|giv[107]	_	_
27-8	1938-1941	are	_	_	_	_
27-9	1942-1945	the	_	_	_	_
27-10	1946-1950	same	_	_	_	_
27-11	1951-1953	as	_	_	_	_
27-12	1954-1957	one	abstract[108]	new[108]	appos	27-20[111_108]
27-13	1958-1961	set	abstract[108]	new[108]	_	_
27-14	1962-1964	of	abstract[108]	new[108]	_	_
27-15	1965-1968	the	abstract[108]|abstract[110]	new[108]|giv[110]	coref	39-5[180_110]
27-16	1969-1982	corresponding	abstract[108]|abstract[110]	new[108]|giv[110]	_	_
27-17	1983-1988	input	abstract[108]|abstract|abstract[110]	new[108]|giv|giv[110]	coref	28-1[118_0]
27-18	1989-1993	bits	abstract[108]|abstract[110]	new[108]|giv[110]	_	_
27-19	1994-1995	,	_	_	_	_
27-20	1996-2000	i.e.	abstract[111]	giv[111]	ana	27-23[0_111]
27-21	2001-2002	,	abstract[111]	giv[111]	_	_
27-22	2003-2006	SUM	abstract[111]	giv[111]	_	_
27-23	2007-2008	i	abstract[111]|abstract	giv[111]|giv	coref	27-29
27-24	2009-2010	=	abstract[111]	giv[111]	_	_
27-25	2011-2012	B	abstract[111]|abstract[113]	giv[111]|new[113]	_	_
27-26	2013-2014	i	abstract[111]|abstract[113]	giv[111]|new[113]	_	_
27-27	2015-2016	,	abstract[111]	giv[111]	_	_
27-28	2017-2022	where	abstract[111]	giv[111]	_	_
27-29	2023-2024	i	abstract[111]|abstract	giv[111]|giv	_	_
27-30	2025-2032	denotes	abstract[111]	giv[111]	_	_
27-31	2033-2034	a	abstract[111]|abstract[116]	giv[111]|new[116]	_	_
27-32	2035-2038	bit	abstract[111]|abstract|abstract[116]	giv[111]|giv|new[116]	_	_
27-33	2039-2047	position	abstract[111]|abstract[116]	giv[111]|new[116]	_	_
27-34	2048-2049	.	_	_	_	_

#Text=The carry input for the accurate sub-adder is a most significant input bit belonging to the inaccurate sub-adder viz. AK – 1 .
28-1	2050-2053	The	abstract[118]	giv[118]	coref	28-12[0_118]
28-2	2054-2059	carry	abstract|abstract[118]	giv|giv[118]	coref	35-26
28-3	2060-2065	input	abstract[118]	giv[118]	_	_
28-4	2066-2069	for	abstract[118]	giv[118]	_	_
28-5	2070-2073	the	abstract[118]|abstract[119]	giv[118]|giv[119]	coref	35-29[167_119]
28-6	2074-2082	accurate	abstract[118]|abstract[119]	giv[118]|giv[119]	_	_
28-7	2083-2092	sub-adder	abstract[118]|abstract[119]	giv[118]|giv[119]	_	_
28-8	2093-2095	is	_	_	_	_
28-9	2096-2097	a	abstract[121]	giv[121]	coref|coref	28-9[121_0]|34-8[0_121]
28-10	2098-2102	most	abstract[121]	giv[121]	_	_
28-11	2103-2114	significant	abstract[121]	giv[121]	_	_
28-12	2115-2120	input	abstract|abstract[121]	giv|giv[121]	_	_
28-13	2121-2124	bit	abstract[121]	giv[121]	_	_
28-14	2125-2134	belonging	abstract[121]	giv[121]	_	_
28-15	2135-2137	to	abstract[121]	giv[121]	_	_
28-16	2138-2141	the	abstract[121]|abstract[122]	giv[121]|giv[122]	coref	33-10[145_122]
28-17	2142-2152	inaccurate	abstract[121]|abstract[122]	giv[121]|giv[122]	_	_
28-18	2153-2162	sub-adder	abstract[121]|abstract[122]	giv[121]|giv[122]	_	_
28-19	2163-2167	viz.	_	_	_	_
28-20	2168-2170	AK	_	_	_	_
28-21	2171-2172	–	_	_	_	_
28-22	2173-2174	1	_	_	_	_
28-23	2175-2176	.	_	_	_	_

#Text=The hardware-efficient approximate adder presented in Reference shall be called HEAA , which is shown in
29-1	2177-2180	The	abstract[123]	giv[123]	coref	43-13[216_123]
29-2	2181-2199	hardware-efficient	abstract[123]	giv[123]	_	_
29-3	2200-2211	approximate	abstract[123]	giv[123]	_	_
29-4	2212-2217	adder	abstract[123]	giv[123]	_	_
29-5	2218-2227	presented	abstract[123]	giv[123]	_	_
29-6	2228-2230	in	abstract[123]	giv[123]	_	_
29-7	2231-2240	Reference	abstract[123]|abstract	giv[123]|giv	coref	36-8
29-8	2241-2246	shall	_	_	_	_
29-9	2247-2249	be	_	_	_	_
29-10	2250-2256	called	_	_	_	_
29-11	2257-2261	HEAA	abstract[125]	new[125]	coref	31-5[0_125]
29-12	2262-2263	,	abstract[125]	new[125]	_	_
29-13	2264-2269	which	abstract[125]	new[125]	_	_
29-14	2270-2272	is	abstract[125]	new[125]	_	_
29-15	2273-2278	shown	abstract[125]	new[125]	_	_
29-16	2279-2281	in	abstract[125]	new[125]	_	_

#Text=Figure 1
30-1	2282-2288	Figure	abstract[126]	giv[126]	coref	37-1[172_126]
30-2	2289-2290	1	abstract[126]	giv[126]	_	_

#Text=e. We observe that HEAA consumes less FPGA resources compared to the accurate FPGA adder and consumes either the same FPGA resources as that of some approximate adders or more FPGA resources in comparison with other approximate adders .
31-1	2291-2293	e.	_	_	_	_
31-2	2294-2296	We	person	giv	_	_
31-3	2297-2304	observe	_	_	_	_
31-4	2305-2309	that	_	_	_	_
31-5	2310-2314	HEAA	abstract	giv	coref	32-1
31-6	2315-2323	consumes	_	_	_	_
31-7	2324-2328	less	abstract[130]	new[130]	coref	31-18[134_130]
31-8	2329-2333	FPGA	abstract|abstract[130]	new|new[130]	coref	31-14
31-9	2334-2343	resources	abstract[130]	new[130]	_	_
31-10	2344-2352	compared	_	_	_	_
31-11	2353-2355	to	_	_	_	_
31-12	2356-2359	the	person[132]	new[132]	_	_
31-13	2360-2368	accurate	person[132]	new[132]	_	_
31-14	2369-2373	FPGA	abstract|person[132]	giv|new[132]	coref	31-21
31-15	2374-2379	adder	person[132]	new[132]	_	_
31-16	2380-2383	and	_	_	_	_
31-17	2384-2392	consumes	_	_	_	_
31-18	2393-2399	either	abstract[134]|abstract[135]	giv[134]|giv[135]	coref|coref	31-18[135_134]|43-8[214_135]
31-19	2400-2403	the	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-20	2404-2408	same	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-21	2409-2413	FPGA	abstract|abstract[134]|abstract[135]	giv|giv[134]|giv[135]	coref	31-31
31-22	2414-2423	resources	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-23	2424-2426	as	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-24	2427-2431	that	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-25	2432-2434	of	abstract[134]|abstract[135]	giv[134]|giv[135]	_	_
31-26	2435-2439	some	abstract[134]|abstract[135]|abstract[136]	giv[134]|giv[135]|giv[136]	coref	31-36[139_136]
31-27	2440-2451	approximate	abstract[134]|abstract[135]|abstract[136]	giv[134]|giv[135]|giv[136]	_	_
31-28	2452-2458	adders	abstract[134]|abstract[135]|abstract[136]	giv[134]|giv[135]|giv[136]	_	_
31-29	2459-2461	or	abstract[135]	giv[135]	_	_
31-30	2462-2466	more	abstract[135]|abstract[138]	giv[135]|new[138]	_	_
31-31	2467-2471	FPGA	abstract[135]|abstract|abstract[138]	giv[135]|giv|new[138]	coref	43-9
31-32	2472-2481	resources	abstract[135]|abstract[138]	giv[135]|new[138]	_	_
31-33	2482-2484	in	_	_	_	_
31-34	2485-2495	comparison	_	_	_	_
31-35	2496-2500	with	_	_	_	_
31-36	2501-2506	other	abstract[139]	giv[139]	_	_
31-37	2507-2518	approximate	abstract[139]	giv[139]	_	_
31-38	2519-2525	adders	abstract[139]	giv[139]	_	_
31-39	2526-2527	.	_	_	_	_

#Text=HEAA is almost structurally similar to LOA ; however , there exists a difference .
32-1	2528-2532	HEAA	abstract	giv	coref	43-25[220_0]
32-2	2533-2535	is	_	_	_	_
32-3	2536-2542	almost	_	_	_	_
32-4	2543-2555	structurally	_	_	_	_
32-5	2556-2563	similar	_	_	_	_
32-6	2564-2566	to	_	_	_	_
32-7	2567-2570	LOA	abstract	giv	coref	36-5[169_0]
32-8	2571-2572	;	_	_	_	_
32-9	2573-2580	however	_	_	_	_
32-10	2581-2582	,	_	_	_	_
32-11	2583-2588	there	_	_	_	_
32-12	2589-2595	exists	_	_	_	_
32-13	2596-2597	a	abstract[142]	new[142]	_	_
32-14	2598-2608	difference	abstract[142]	new[142]	_	_
32-15	2609-2610	.	_	_	_	_

#Text=A 2-to-1 multiplexer ( MUX21 ) is used in the inaccurate sub-adder in addition to the 2-input OR functions .
33-1	2611-2612	A	abstract[143]	new[143]	appos	33-5[0_143]
33-2	2613-2619	2-to-1	abstract[143]	new[143]	_	_
33-3	2620-2631	multiplexer	abstract[143]	new[143]	_	_
33-4	2632-2633	(	_	_	_	_
33-5	2634-2639	MUX21	abstract	giv	coref	34-20
33-6	2640-2641	)	_	_	_	_
33-7	2642-2644	is	_	_	_	_
33-8	2645-2649	used	_	_	_	_
33-9	2650-2652	in	_	_	_	_
33-10	2653-2656	the	abstract[145]	giv[145]	coref	34-11[153_145]
33-11	2657-2667	inaccurate	abstract[145]	giv[145]	_	_
33-12	2668-2677	sub-adder	abstract[145]	giv[145]	_	_
33-13	2678-2680	in	_	_	_	_
33-14	2681-2689	addition	_	_	_	_
33-15	2690-2692	to	_	_	_	_
33-16	2693-2696	the	abstract[146]|abstract[147]	giv[146]|giv[147]	_	_
33-17	2697-2704	2-input	abstract[146]|abstract[147]	giv[146]|giv[147]	_	_
33-18	2705-2707	OR	abstract[147]	giv[147]	_	_
33-19	2708-2717	functions	abstract[147]|abstract	giv[147]|new	_	_
33-20	2718-2719	.	_	_	_	_

#Text=The OR-ed output of the most significant input bit-pair in the inaccurate sub-adder is given to the 0-input of MUX21 , and a constant 0 is given to the 1-input of MUX21 .
34-1	2720-2723	The	abstract[150]	new[150]	coref	39-7[0_150]
34-2	2724-2729	OR-ed	abstract|abstract[150]	new|new[150]	_	_
34-3	2730-2736	output	abstract[150]	new[150]	_	_
34-4	2737-2739	of	abstract[150]	new[150]	_	_
34-5	2740-2743	the	abstract[150]|abstract[152]	new[150]|giv[152]	coref	35-4[161_152]
34-6	2744-2748	most	abstract[150]|abstract[152]	new[150]|giv[152]	_	_
34-7	2749-2760	significant	abstract[150]|abstract[152]	new[150]|giv[152]	_	_
34-8	2761-2766	input	abstract[150]|abstract|abstract[152]	new[150]|giv|giv[152]	coref	35-7
34-9	2767-2775	bit-pair	abstract[150]|abstract[152]	new[150]|giv[152]	_	_
34-10	2776-2778	in	abstract[150]|abstract[152]	new[150]|giv[152]	_	_
34-11	2779-2782	the	abstract[150]|abstract[152]|abstract[153]	new[150]|giv[152]|giv[153]	coref	35-11[162_153]
34-12	2783-2793	inaccurate	abstract[150]|abstract[152]|abstract[153]	new[150]|giv[152]|giv[153]	_	_
34-13	2794-2803	sub-adder	abstract[150]|abstract[152]|abstract[153]	new[150]|giv[152]|giv[153]	_	_
34-14	2804-2806	is	_	_	_	_
34-15	2807-2812	given	_	_	_	_
34-16	2813-2815	to	_	_	_	_
34-17	2816-2819	the	abstract[154]	new[154]	_	_
34-18	2820-2827	0-input	abstract[154]	new[154]	_	_
34-19	2828-2830	of	abstract[154]	new[154]	_	_
34-20	2831-2836	MUX21	abstract[154]|abstract	new[154]|giv	coref	34-32
34-21	2837-2838	,	_	_	_	_
34-22	2839-2842	and	_	_	_	_
34-23	2843-2844	a	abstract[156]	giv[156]	_	_
34-24	2845-2853	constant	abstract[156]	giv[156]	_	_
34-25	2854-2855	0	abstract[156]	giv[156]	_	_
34-26	2856-2858	is	_	_	_	_
34-27	2859-2864	given	_	_	_	_
34-28	2865-2867	to	_	_	_	_
34-29	2868-2871	the	abstract[157]	new[157]	_	_
34-30	2872-2879	1-input	abstract[157]	new[157]	_	_
34-31	2880-2882	of	abstract[157]	new[157]	_	_
34-32	2883-2888	MUX21	abstract[157]|abstract	new[157]|giv	coref	35-20
34-33	2889-2890	.	_	_	_	_

#Text=The AND of the most significant input bit-pair corresponding to the inaccurate sub-adder serves as the select input of MUX21 , besides serving as the carry input for the accurate sub-adder .
35-1	2891-2894	The	abstract[159]	new[159]	_	_
35-2	2895-2898	AND	abstract[159]	new[159]	_	_
35-3	2899-2901	of	abstract[159]	new[159]	_	_
35-4	2902-2905	the	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-5	2906-2910	most	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-6	2911-2922	significant	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-7	2923-2928	input	abstract[159]|abstract|abstract[161]	new[159]|giv|giv[161]	coref	39-15
35-8	2929-2937	bit-pair	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-9	2938-2951	corresponding	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-10	2952-2954	to	abstract[159]|abstract[161]	new[159]|giv[161]	_	_
35-11	2955-2958	the	abstract[159]|abstract[161]|abstract[162]	new[159]|giv[161]|giv[162]	coref	39-18[183_162]
35-12	2959-2969	inaccurate	abstract[159]|abstract[161]|abstract[162]	new[159]|giv[161]|giv[162]	_	_
35-13	2970-2979	sub-adder	abstract[159]|abstract[161]|abstract[162]	new[159]|giv[161]|giv[162]	_	_
35-14	2980-2986	serves	_	_	_	_
35-15	2987-2989	as	_	_	_	_
35-16	2990-2993	the	abstract[163]	new[163]	coref	35-25[166_163]
35-17	2994-3000	select	abstract[163]	new[163]	_	_
35-18	3001-3006	input	abstract[163]	new[163]	_	_
35-19	3007-3009	of	abstract[163]	new[163]	_	_
35-20	3010-3015	MUX21	abstract[163]|abstract	new[163]|giv	_	_
35-21	3016-3017	,	_	_	_	_
35-22	3018-3025	besides	_	_	_	_
35-23	3026-3033	serving	_	_	_	_
35-24	3034-3036	as	_	_	_	_
35-25	3037-3040	the	abstract[166]	giv[166]	coref	41-19[0_166]
35-26	3041-3046	carry	abstract|abstract[166]	giv|giv[166]	_	_
35-27	3047-3052	input	abstract[166]	giv[166]	_	_
35-28	3053-3056	for	abstract[166]	giv[166]	_	_
35-29	3057-3060	the	abstract[166]|abstract[167]	giv[166]|giv[167]	coref	39-1[177_167]
35-30	3061-3069	accurate	abstract[166]|abstract[167]	giv[166]|giv[167]	_	_
35-31	3070-3079	sub-adder	abstract[166]|abstract[167]	giv[166]|giv[167]	_	_
35-32	3080-3081	.	_	_	_	_

#Text=An optimized version of LOA presented in Reference , called OLOCA , is shown in
36-1	3082-3084	An	abstract[168]	new[168]	_	_
36-2	3085-3094	optimized	abstract[168]	new[168]	_	_
36-3	3095-3102	version	abstract[168]	new[168]	_	_
36-4	3103-3105	of	abstract[168]	new[168]	_	_
36-5	3106-3109	LOA	abstract[168]|abstract[169]	new[168]|giv[169]	coref	38-10[0_169]
36-6	3110-3119	presented	abstract[168]|abstract[169]	new[168]|giv[169]	_	_
36-7	3120-3122	in	abstract[168]|abstract[169]	new[168]|giv[169]	_	_
36-8	3123-3132	Reference	abstract[168]|abstract[169]|abstract	new[168]|giv[169]|giv	_	_
36-9	3133-3134	,	abstract[168]|abstract[169]	new[168]|giv[169]	_	_
36-10	3135-3141	called	abstract[168]|abstract[169]	new[168]|giv[169]	_	_
36-11	3142-3147	OLOCA	abstract[168]|abstract[169]|abstract	new[168]|giv[169]|new	coref	38-1[174_0]
36-12	3148-3149	,	_	_	_	_
36-13	3150-3152	is	_	_	_	_
36-14	3153-3158	shown	_	_	_	_
36-15	3159-3161	in	_	_	_	_

#Text=Figure 1
37-1	3162-3168	Figure	abstract[172]	giv[172]	_	_
37-2	3169-3170	1	abstract[172]	giv[172]	_	_

#Text=f. OLOCA is in fact a slight modification of LOA .
38-1	3171-3173	f.	abstract|abstract[174]	new|giv[174]	coref	38-5[175_174]
38-2	3174-3179	OLOCA	abstract[174]	giv[174]	_	_
38-3	3180-3182	is	_	_	_	_
38-4	3183-3185	in	_	_	_	_
38-5	3186-3190	fact	abstract[175]	giv[175]	coref	39-22[0_175]
38-6	3191-3192	a	abstract[175]	giv[175]	_	_
38-7	3193-3199	slight	abstract[175]	giv[175]	_	_
38-8	3200-3212	modification	abstract[175]	giv[175]	_	_
38-9	3213-3215	of	abstract[175]	giv[175]	_	_
38-10	3216-3219	LOA	abstract[175]|abstract	giv[175]|giv	coref	39-29
38-11	3220-3221	.	_	_	_	_

#Text=The accurate sub-adder and the sum output bits corresponding to the two most significant bit positions in the inaccurate sub-adder of OLOCA are the same as that of LOA .
39-1	3222-3225	The	abstract[177]	giv[177]	_	_
39-2	3226-3234	accurate	abstract[177]	giv[177]	_	_
39-3	3235-3244	sub-adder	abstract[177]	giv[177]	_	_
39-4	3245-3248	and	_	_	_	_
39-5	3249-3252	the	abstract[180]	giv[180]	coref	40-3[189_180]
39-6	3253-3256	sum	abstract|abstract[180]	giv|giv[180]	coref	40-12
39-7	3257-3263	output	abstract|abstract[180]	giv|giv[180]	coref	40-13
39-8	3264-3268	bits	abstract[180]	giv[180]	_	_
39-9	3269-3282	corresponding	abstract[180]	giv[180]	_	_
39-10	3283-3285	to	abstract[180]	giv[180]	_	_
39-11	3286-3289	the	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-12	3290-3293	two	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-13	3294-3298	most	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-14	3299-3310	significant	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-15	3311-3314	bit	abstract[180]|abstract|abstract[182]	giv[180]|giv|new[182]	_	_
39-16	3315-3324	positions	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-17	3325-3327	in	abstract[180]|abstract[182]	giv[180]|new[182]	_	_
39-18	3328-3331	the	abstract[180]|abstract[182]|abstract[183]	giv[180]|new[182]|giv[183]	coref	40-16[190_183]
39-19	3332-3342	inaccurate	abstract[180]|abstract[182]|abstract[183]	giv[180]|new[182]|giv[183]	_	_
39-20	3343-3352	sub-adder	abstract[180]|abstract[182]|abstract[183]	giv[180]|new[182]|giv[183]	_	_
39-21	3353-3355	of	abstract[180]|abstract[182]|abstract[183]	giv[180]|new[182]|giv[183]	_	_
39-22	3356-3361	OLOCA	abstract[180]|abstract[182]|abstract[183]|abstract	giv[180]|new[182]|giv[183]|giv	coref	40-20
39-23	3362-3365	are	_	_	_	_
39-24	3366-3369	the	_	_	_	_
39-25	3370-3374	same	_	_	_	_
39-26	3375-3377	as	_	_	_	_
39-27	3378-3382	that	_	_	_	_
39-28	3383-3385	of	_	_	_	_
39-29	3386-3389	LOA	abstract	giv	coref	41-2[192_0]
39-30	3390-3391	.	_	_	_	_

#Text=However , the remaining ( K – 2 ) less significant sum output bits in the inaccurate sub-adder of OLOCA are tied to a constant 1 .
40-1	3392-3399	However	_	_	_	_
40-2	3400-3401	,	_	_	_	_
40-3	3402-3405	the	abstract[189]	giv[189]	coref	41-7[195_189]
40-4	3406-3415	remaining	abstract[189]	giv[189]	_	_
40-5	3416-3417	(	abstract[189]	giv[189]	_	_
40-6	3418-3419	K	abstract[189]	giv[189]	_	_
40-7	3420-3421	–	abstract[189]	giv[189]	_	_
40-8	3422-3423	2	abstract|abstract[189]	new|giv[189]	coref	42-9
40-9	3424-3425	)	abstract[189]	giv[189]	_	_
40-10	3426-3430	less	abstract[189]	giv[189]	_	_
40-11	3431-3442	significant	abstract[189]	giv[189]	_	_
40-12	3443-3446	sum	abstract|abstract[189]	giv|giv[189]	coref	41-10
40-13	3447-3453	output	abstract|abstract[189]	giv|giv[189]	coref	41-11
40-14	3454-3458	bits	abstract[189]	giv[189]	_	_
40-15	3459-3461	in	abstract[189]	giv[189]	_	_
40-16	3462-3465	the	abstract[189]|abstract[190]	giv[189]|giv[190]	coref	42-34[210_190]
40-17	3466-3476	inaccurate	abstract[189]|abstract[190]	giv[189]|giv[190]	_	_
40-18	3477-3486	sub-adder	abstract[189]|abstract[190]	giv[189]|giv[190]	_	_
40-19	3487-3489	of	abstract[189]|abstract[190]	giv[189]|giv[190]	_	_
40-20	3490-3495	OLOCA	abstract[189]|abstract[190]|abstract	giv[189]|giv[190]|giv	coref	42-14
40-21	3496-3499	are	_	_	_	_
40-22	3500-3504	tied	_	_	_	_
40-23	3505-3507	to	_	_	_	_
40-24	3508-3509	a	_	_	_	_
40-25	3510-3518	constant	_	_	_	_
40-26	3519-3520	1	_	_	_	_
40-27	3521-3522	.	_	_	_	_

#Text=In the LOA , however , all the K sum output bits are produced by OR-ing the respective input bit-pairs .
41-1	3523-3525	In	_	_	_	_
41-2	3526-3529	the	abstract[192]	giv[192]	coref	43-18[0_192]
41-3	3530-3533	LOA	abstract[192]	giv[192]	_	_
41-4	3534-3535	,	_	_	_	_
41-5	3536-3543	however	_	_	_	_
41-6	3544-3545	,	_	_	_	_
41-7	3546-3549	all	abstract[195]	giv[195]	coref	42-5[201_195]
41-8	3550-3553	the	abstract[195]	giv[195]	_	_
41-9	3554-3555	K	abstract[195]	giv[195]	_	_
41-10	3556-3559	sum	abstract|abstract[195]	giv|giv[195]	coref	42-11
41-11	3560-3566	output	abstract|abstract[195]	giv|giv[195]	_	_
41-12	3567-3571	bits	abstract[195]	giv[195]	_	_
41-13	3572-3575	are	_	_	_	_
41-14	3576-3584	produced	_	_	_	_
41-15	3585-3587	by	_	_	_	_
41-16	3588-3594	OR-ing	_	_	_	_
41-17	3595-3598	the	abstract[197]	new[197]	_	_
41-18	3599-3609	respective	abstract[197]	new[197]	_	_
41-19	3610-3615	input	abstract|abstract[197]	giv|new[197]	_	_
41-20	3616-3625	bit-pairs	abstract[197]	new[197]	_	_
41-21	3626-3627	.	_	_	_	_

#Text=A constant 1 for the ( K – 2 ) sum bits in OLOCA implies the elimination of look-up tables ( LUTs ) and flip-flops ( FFs ) for realizing those bits of the inaccurate sub-adder for a FPGA-based implementation .
42-1	3628-3629	A	abstract[198]	new[198]	_	_
42-2	3630-3638	constant	abstract[198]	new[198]	_	_
42-3	3639-3640	1	abstract[198]	new[198]	_	_
42-4	3641-3644	for	abstract[198]	new[198]	_	_
42-5	3645-3648	the	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-6	3649-3650	(	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-7	3651-3652	K	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-8	3653-3654	–	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-9	3655-3656	2	abstract[198]|abstract|abstract[201]	new[198]|giv|giv[201]	_	_
42-10	3657-3658	)	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-11	3659-3662	sum	abstract[198]|abstract|abstract[201]	new[198]|giv|giv[201]	_	_
42-12	3663-3667	bits	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-13	3668-3670	in	abstract[198]|abstract[201]	new[198]|giv[201]	_	_
42-14	3671-3676	OLOCA	abstract[198]|abstract[201]|abstract	new[198]|giv[201]|giv	coref	43-3
42-15	3677-3684	implies	_	_	_	_
42-16	3685-3688	the	event[203]	new[203]	_	_
42-17	3689-3700	elimination	event[203]	new[203]	_	_
42-18	3701-3703	of	event[203]	new[203]	_	_
42-19	3704-3711	look-up	event[203]|object|object[205]	new[203]|new|new[205]	_	_
42-20	3712-3718	tables	event[203]|object[205]	new[203]|new[205]	_	_
42-21	3719-3720	(	_	_	_	_
42-22	3721-3725	LUTs	abstract	new	_	_
42-23	3726-3727	)	_	_	_	_
42-24	3728-3731	and	_	_	_	_
42-25	3732-3742	flip-flops	object	new	_	_
42-26	3743-3744	(	_	_	_	_
42-27	3745-3748	FFs	abstract	new	_	_
42-28	3749-3750	)	_	_	_	_
42-29	3751-3754	for	_	_	_	_
42-30	3755-3764	realizing	_	_	_	_
42-31	3765-3770	those	abstract[209]	new[209]	_	_
42-32	3771-3775	bits	abstract[209]	new[209]	_	_
42-33	3776-3778	of	abstract[209]	new[209]	_	_
42-34	3779-3782	the	abstract[209]|abstract[210]	new[209]|giv[210]	_	_
42-35	3783-3793	inaccurate	abstract[209]|abstract[210]	new[209]|giv[210]	_	_
42-36	3794-3803	sub-adder	abstract[209]|abstract[210]	new[209]|giv[210]	_	_
42-37	3804-3807	for	_	_	_	_
42-38	3808-3809	a	abstract[211]	new[211]	_	_
42-39	3810-3820	FPGA-based	abstract[211]	new[211]	_	_
42-40	3821-3835	implementation	abstract[211]	new[211]	_	_
42-41	3836-3837	.	_	_	_	_

#Text=Hence , OLOCA is likely to consume less FPGA resources compared to the accurate FPGA adder , LOA , LOAWA , APPROX5 , and HEAA , which is substantiated by the simulation results given in the next section .
43-1	3838-3843	Hence	_	_	_	_
43-2	3844-3845	,	_	_	_	_
43-3	3846-3851	OLOCA	abstract	giv	_	_
43-4	3852-3854	is	_	_	_	_
43-5	3855-3861	likely	_	_	_	_
43-6	3862-3864	to	_	_	_	_
43-7	3865-3872	consume	_	_	_	_
43-8	3873-3877	less	abstract[214]	giv[214]	_	_
43-9	3878-3882	FPGA	abstract|abstract[214]	giv|giv[214]	coref	43-15
43-10	3883-3892	resources	abstract[214]	giv[214]	_	_
43-11	3893-3901	compared	_	_	_	_
43-12	3902-3904	to	_	_	_	_
43-13	3905-3908	the	abstract[216]	giv[216]	_	_
43-14	3909-3917	accurate	abstract[216]	giv[216]	_	_
43-15	3918-3922	FPGA	abstract|abstract[216]	giv|giv[216]	_	_
43-16	3923-3928	adder	abstract[216]	giv[216]	_	_
43-17	3929-3930	,	_	_	_	_
43-18	3931-3934	LOA	abstract	giv	_	_
43-19	3935-3936	,	_	_	_	_
43-20	3937-3942	LOAWA	abstract	giv	_	_
43-21	3943-3944	,	_	_	_	_
43-22	3945-3952	APPROX5	abstract	giv	_	_
43-23	3953-3954	,	_	_	_	_
43-24	3955-3958	and	_	_	_	_
43-25	3959-3963	HEAA	abstract[220]	giv[220]	_	_
43-26	3964-3965	,	abstract[220]	giv[220]	_	_
43-27	3966-3971	which	abstract[220]	giv[220]	_	_
43-28	3972-3974	is	abstract[220]	giv[220]	_	_
43-29	3975-3988	substantiated	abstract[220]	giv[220]	_	_
43-30	3989-3991	by	abstract[220]	giv[220]	_	_
43-31	3992-3995	the	abstract[220]|abstract[222]	giv[220]|new[222]	_	_
43-32	3996-4006	simulation	abstract[220]|abstract|abstract[222]	giv[220]|new|new[222]	_	_
43-33	4007-4014	results	abstract[220]|abstract[222]	giv[220]|new[222]	_	_
43-34	4015-4020	given	abstract[220]|abstract[222]	giv[220]|new[222]	_	_
43-35	4021-4023	in	abstract[220]|abstract[222]	giv[220]|new[222]	_	_
43-36	4024-4027	the	abstract[220]|abstract[222]|abstract[223]	giv[220]|new[222]|new[223]	_	_
43-37	4028-4032	next	abstract[220]|abstract[222]|abstract[223]	giv[220]|new[222]|new[223]	_	_
43-38	4033-4040	section	abstract[220]|abstract[222]|abstract[223]	giv[220]|new[222]|new[223]	_	_
43-39	4041-4042	.	_	_	_	_
