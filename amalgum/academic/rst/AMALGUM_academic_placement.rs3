<rst>
<header>
	<relations>
			<rel name="purpose" type="rst"/>
			<rel name="background" type="rst"/>
			<rel name="restatement" type="rst"/>
			<rel name="circumstance" type="rst"/>
			<rel name="elaboration" type="rst"/>
			<rel name="cause" type="rst"/>
			<rel name="preparation" type="rst"/>
			<rel name="concession" type="rst"/>
			<rel name="means" type="rst"/>
			<rel name="attribution" type="rst"/>
			<rel name="contrast" type="multinuc"/>
			<rel name="joint" type="multinuc"/>
			<rel name="same_unit" type="multinuc"/>
		</relations>
</header>
<body>
<segment id="1" parent="1001" relname="preparation">1. Introduction</segment>
<segment id="2" parent="1003" relname="span">Microservice architecture is a new trend</segment>
<segment id="3" parent="2" relname="elaboration">rising fast for application development ,</segment>
<segment id="4" parent="1005" relname="span">as it enhances flexibility</segment>
<segment id="5" parent="4" relname="purpose">to incorporate different technologies ,</segment>
<segment id="6" parent="1006" relname="span">it reduces complexity</segment>
<segment id="7" parent="1007" relname="joint">by using lightweight and modular services ,</segment>
<segment id="8" parent="1007" relname="joint">and it improves overall scalability and resilience of the system .</segment>
<segment id="9" parent="1010" relname="span">In the definition</segment>
<segment id="10" parent="11" relname="preparation">( Microservices :</segment>
<segment id="11" parent="1011" relname="span">https://martinfowler.com/tags/microservices.html ) ,</segment>
<segment id="12" parent="1012" relname="span">the microservice architectural style is an approach</segment>
<segment id="13" parent="1013" relname="span">to develop a single application as a suite of small services ,</segment>
<segment id="14" parent="1014" relname="joint">each running in its own process</segment>
<segment id="15" parent="1015" relname="span">and communicating with lightweight mechanisms</segment>
<segment id="16" parent="15" relname="elaboration">( e.g. , HTTP resource API ) .</segment>
<segment id="17" parent="1018" relname="span">The application then is composed of a number of services</segment>
<segment id="18" parent="17" relname="elaboration">( service-based application )</segment>
<segment id="19" parent="1019" relname="span">that work cohesively</segment>
<segment id="20" parent="19" relname="purpose">to provide complex functionalities .</segment>
<segment id="21" parent="22" relname="attribution">Due to the advantages of microservices architecture ,</segment>
<segment id="22" parent="1021" relname="span">many developers intend to transform traditional monolithic applications into service-based applications .</segment>
<segment id="23" parent="1023" relname="span">For instance , an online shopping application could be basically divided into product service , cart service , and order service ,</segment>
<segment id="24" parent="23" relname="elaboration">which can greatly improve the productivity , agility , and resilience of the application .</segment>
<segment id="25" parent="1025" relname="preparation">However , it also brings challenges .</segment>
<segment id="26" parent="1027" relname="circumstance">When deploying a service-based application in clouds ,</segment>
<segment id="27" parent="1027" relname="span">the scheduler has to carefully schedule each service ,</segment>
<segment id="28" parent="27" relname="elaboration">which may have diverse resource demands , on distributed compute clusters .</segment>
<segment id="29" parent="1029" relname="span">Furthermore , the network communication between different services needs to be handled well ,</segment>
<segment id="30" parent="1030" relname="span">as the communication conditions significantly influence the quality of service</segment>
<segment id="31" parent="30" relname="elaboration">( e.g. , the response time of a service ) .</segment>
<segment id="32" parent="1025" relname="joint">Ensuring the desired performance of service-based applications , especially the network performance between the involved services , becomes increasingly important .</segment>
<segment id="33" parent="1033" relname="span">In general , service-based applications involve numerous distributed and complex services</segment>
<segment id="34" parent="33" relname="elaboration">which usually require more computing resources beyond single machine capability .</segment>
<segment id="35" parent="1036" relname="span">Therefore , a cluster of networked machines or cloud computing platforms</segment>
<segment id="36" parent="35" relname="elaboration">( e.g. , Amazon EC2</segment>
<segment id="37" parent="1038" relname="preparation">( Amazon EC2 :</segment>
<segment id="38" parent="1038" relname="joint">https://aws.amazon.com ) ,</segment>
<segment id="39" parent="1039" relname="span">Microsoft Azure</segment>
<segment id="40" parent="1041" relname="preparation">( Microsoft Azure :</segment>
<segment id="41" parent="1041" relname="contrast">https://azure.microsoft.com ) ,</segment>
<segment id="42" parent="1044" relname="span">or Google Cloud Platform</segment>
<segment id="43" parent="44" relname="preparation">( Google Cloud Platform :</segment>
<segment id="44" parent="1045" relname="span">https://cloud.google.com ) )</segment>
<segment id="45" parent="1043" relname="same_unit">are generally leveraged</segment>
<segment id="46" parent="1043" relname="purpose">to run service-based applications .</segment>
<segment id="47" parent="1047" relname="span">More importantly , containers are emerging as the disruptive technology</segment>
<segment id="48" parent="1048" relname="span">for effectively encapsulating runtime contexts of software components and services ,</segment>
<segment id="49" parent="1049" relname="span">which significantly improves portability and efficiency</segment>
<segment id="50" parent="49" relname="elaboration">of deploying applications in clouds .</segment>
<segment id="51" parent="1025" relname="joint">When deploying a service-based application in clouds , several essential aspects have to be taken into account .</segment>
<segment id="52" parent="1052" relname="span">First , services</segment>
<segment id="53" parent="52" relname="elaboration">involved in the application often have diverse resource demands , such as CPU , memory and disk .</segment>
<segment id="54" parent="1055" relname="span">The underlying machine has to ensure sufficient resources</segment>
<segment id="55" parent="54" relname="purpose">to run each service</segment>
<segment id="56" parent="1025" relname="joint">and at the same time provide cohesive functionalities .</segment>
<segment id="57" parent="1058" relname="span">Efficient resource allocation to each service is difficult ,</segment>
<segment id="58" parent="1059" relname="span">while it becomes more challenging</segment>
<segment id="59" parent="58" relname="circumstance">when the cluster consists of heterogeneous machines .</segment>
<segment id="60" parent="1061" relname="span">Second , services</segment>
<segment id="61" parent="60" relname="elaboration">involved in the application often have traffic demands among them</segment>
<segment id="62" parent="1062" relname="span">due to data communication ,</segment>
<segment id="63" parent="62" relname="elaboration">which require meticulous treatment .</segment>
<segment id="64" parent="1064" relname="preparation">Poor handling of the traffic demands can result in severe performance degradation ,</segment>
<segment id="65" parent="1064" relname="joint">as the response time of a service is directly affected by its traffic situation .</segment>
<segment id="66" parent="1066" relname="span">Considering the traffic demands ,</segment>
<segment id="67" parent="1068" relname="span">an intuitive solution is to place the services</segment>
<segment id="68" parent="67" relname="elaboration">that have large traffic demands among them on the same machine ,</segment>
<segment id="69" parent="1069" relname="joint">which can achieve intra-machine communication</segment>
<segment id="70" parent="1069" relname="joint">and reduce inter-machine traffic .</segment>
<segment id="71" parent="1071" relname="span">However , such services cannot all be co-located on one machine</segment>
<segment id="72" parent="71" relname="cause">due to limited resource capacities .</segment>
<segment id="73" parent="1072" relname="span">Hence , placement of service-based applications is quite complicated in clouds .</segment>
<segment id="74" parent="1074" relname="span">In order to achieve a desired performance of a service-based application ,</segment>
<segment id="75" parent="74" relname="elaboration">cluster schedulers have to carefully place each service of the application with respect to the resource demands and traffic demands .</segment>
<segment id="76" parent="1075" relname="joint">Recent cluster scheduling methods mainly focus on the cluster resource efficiency or job completion time of batch workloads .</segment>
<segment id="77" parent="1077" relname="span">For instance , Tetris , a multi-resource cluster scheduler , adapts heuristics for the multi-dimensional bin packing problem</segment>
<segment id="78" parent="77" relname="purpose">to efficiently pack tasks on multi-resource cluster .</segment>
<segment id="79" parent="1078" relname="joint">Firmament , a centralized cluster scheduler , can make high-quality placement decisions on large-scale clusters via a min-cost max-flow optimization .</segment>
<segment id="80" parent="1080" relname="span">Unfortunately , these solutions would face difficulties for handling service-based applications ,</segment>
<segment id="81" parent="1081" relname="span">as they ignore the traffic demands</segment>
<segment id="82" parent="81" relname="circumstance">when making placement decisions .</segment>
<segment id="83" parent="1084" relname="span">Some other research works concentrate on composite Software as a service</segment>
<segment id="84" parent="83" relname="restatement">( SaaS )</segment>
<segment id="85" parent="1085" relname="span">placement problem ,</segment>
<segment id="86" parent="85" relname="elaboration">which try to minimize the total execution time for composite SaaS .</segment>
<segment id="87" parent="1086" relname="joint">However , they only focus on a set of predefined service components for the application placement .</segment>
<segment id="88" parent="1088" relname="span">For traffic-aware scheduling , relevant research solutions are proposed</segment>
<segment id="89" parent="1090" relname="span">to handle virtual machine</segment>
<segment id="90" parent="89" relname="restatement">( VM )</segment>
<segment id="91" parent="1091" relname="span">placement problem ,</segment>
<segment id="92" parent="91" relname="elaboration">which aims to optimize network resource usage over the cluster .</segment>
<segment id="93" parent="1093" relname="contrast">However , these solutions rely on a certain network topology ,</segment>
<segment id="94" parent="1093" relname="contrast">while most of existing cluster schedulers are agnostic to network topology .</segment>
<segment id="95" parent="1094" relname="span">In particular , it is hard to get the network topology information</segment>
<segment id="96" parent="95" relname="circumstance">when deploying a service-based application on a virtual infrastructure .</segment>
<group id="1000" type="span" />
<group id="1001" type="span" parent="1000" relname="span"/>
<group id="1002" type="multinuc" parent="1008" relname="background"/>
<group id="1003" type="span" parent="1002" relname="same_unit"/>
<group id="1004" type="span" parent="1002" relname="same_unit"/>
<group id="1005" type="span" parent="1006" relname="circumstance"/>
<group id="1006" type="span" parent="1004" relname="span"/>
<group id="1007" type="multinuc" parent="6" relname="means"/>
<group id="1008" type="multinuc" parent="1001" relname="span"/>
<group id="1009" type="multinuc" parent="1008" relname="joint"/>
<group id="1010" type="span" parent="1009" relname="same_unit"/>
<group id="1011" type="span" parent="9" relname="elaboration"/>
<group id="1012" type="span" parent="1009" relname="same_unit"/>
<group id="1013" type="span" parent="12" relname="purpose"/>
<group id="1014" type="multinuc" parent="13" relname="elaboration"/>
<group id="1015" type="span" parent="1014" relname="joint"/>
<group id="1017" type="span" parent="1008" relname="joint"/>
<group id="1018" type="span" parent="1017" relname="span"/>
<group id="1019" type="span" parent="1018" relname="elaboration"/>
<group id="1021" type="span" parent="1008" relname="joint"/>
<group id="1023" type="span" parent="1008" relname="joint"/>
<group id="1024" type="span" parent="1008" relname="joint"/>
<group id="1025" type="multinuc" parent="1024" relname="span"/>
<group id="1026" type="span" parent="1025" relname="joint"/>
<group id="1027" type="span" parent="1026" relname="span"/>
<group id="1029" type="span" parent="1025" relname="joint"/>
<group id="1030" type="span" parent="29" relname="circumstance"/>
<group id="1033" type="span" parent="1025" relname="joint"/>
<group id="1035" type="multinuc" parent="1025" relname="joint"/>
<group id="1036" type="span" parent="1035" relname="same_unit"/>
<group id="1037" type="span" parent="1035" relname="same_unit"/>
<group id="1038" type="multinuc" parent="1037" relname="span"/>
<group id="1039" type="span" parent="1038" relname="joint"/>
<group id="1040" type="span" parent="39" relname="elaboration"/>
<group id="1041" type="multinuc" parent="1040" relname="span"/>
<group id="1042" type="span" parent="1041" relname="contrast"/>
<group id="1043" type="multinuc" parent="1042" relname="span"/>
<group id="1044" type="span" parent="1043" relname="same_unit"/>
<group id="1045" type="span" parent="42" relname="elaboration"/>
<group id="1047" type="span" parent="1025" relname="joint"/>
<group id="1048" type="span" parent="47" relname="elaboration"/>
<group id="1049" type="span" parent="48" relname="elaboration"/>
<group id="1052" type="span" parent="1025" relname="joint"/>
<group id="1055" type="span" parent="1025" relname="joint"/>
<group id="1058" type="span" parent="1025" relname="joint"/>
<group id="1059" type="span" parent="57" relname="concession"/>
<group id="1060" type="multinuc" parent="1025" relname="joint"/>
<group id="1061" type="span" parent="1060" relname="same_unit"/>
<group id="1062" type="span" parent="1060" relname="same_unit"/>
<group id="1063" type="span" parent="1025" relname="joint"/>
<group id="1064" type="multinuc" parent="1063" relname="span"/>
<group id="1066" type="span" parent="1064" relname="joint"/>
<group id="1067" type="span" parent="66" relname="elaboration"/>
<group id="1068" type="span" parent="1067" relname="span"/>
<group id="1069" type="multinuc" parent="1068" relname="elaboration"/>
<group id="1071" type="span" parent="1064" relname="joint"/>
<group id="1072" type="span" parent="1064" relname="joint"/>
<group id="1073" type="multinuc" parent="73" relname="purpose"/>
<group id="1074" type="span" parent="1073" relname="joint"/>
<group id="1075" type="multinuc" parent="1073" relname="joint"/>
<group id="1076" type="multinuc" parent="1075" relname="joint"/>
<group id="1077" type="span" parent="1076" relname="joint"/>
<group id="1078" type="multinuc" parent="1076" relname="joint"/>
<group id="1079" type="multinuc" parent="1078" relname="joint"/>
<group id="1080" type="span" parent="1079" relname="joint"/>
<group id="1081" type="span" parent="80" relname="circumstance"/>
<group id="1082" type="multinuc" parent="1079" relname="joint"/>
<group id="1083" type="multinuc" parent="1082" relname="contrast"/>
<group id="1084" type="span" parent="1083" relname="same_unit"/>
<group id="1085" type="span" parent="1083" relname="same_unit"/>
<group id="1086" type="multinuc" parent="1082" relname="contrast"/>
<group id="1087" type="multinuc" parent="1086" relname="joint"/>
<group id="1088" type="span" parent="1087" relname="joint"/>
<group id="1089" type="multinuc" parent="88" relname="purpose"/>
<group id="1090" type="span" parent="1089" relname="same_unit"/>
<group id="1091" type="span" parent="1089" relname="same_unit"/>
<group id="1092" type="multinuc" parent="1087" relname="joint"/>
<group id="1093" type="multinuc" parent="1092" relname="joint"/>
<group id="1094" type="span" parent="1092" relname="joint"/>
	</body>
</rst>
