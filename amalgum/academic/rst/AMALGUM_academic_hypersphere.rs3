<rst>
<header>
	<relations>
			<rel name="evidence" type="rst"/>
			<rel name="elaboration" type="rst"/>
			<rel name="preparation" type="rst"/>
			<rel name="restatement" type="rst"/>
			<rel name="means" type="rst"/>
			<rel name="attribution" type="rst"/>
			<rel name="joint" type="multinuc"/>
			<rel name="same_unit" type="multinuc"/>
		</relations>
</header>
<body>
<segment id="1" parent="1001" relname="preparation">2.</segment>
<segment id="2" parent="1002" relname="preparation">Related Works</segment>
<segment id="3" parent="1003" relname="span">In this paper , we consider a multi-class classification problem with a training dataset ,</segment>
<segment id="4" parent="1004" relname="joint">where K is the number of classes</segment>
<segment id="5" parent="1004" relname="joint">and is the number of the samples of the k -th class .</segment>
<segment id="6" parent="1006" relname="preparation">The size of training dataset is .</segment>
<segment id="7" parent="1006" relname="joint">Denote , for convenience , by the sets of samples of the k -th class , i.e. , .</segment>
<segment id="8" parent="1006" relname="joint">2.1. Review of K-SVCR Multi-Classifier</segment>
<segment id="9" parent="1006" relname="joint">The K-SVCR multi-classifier is based on decomposition-reconstruction strategy .</segment>
<segment id="10" parent="1010" relname="preparation">binary SVM sub-classifiers are constructed ,</segment>
<segment id="11" parent="1012" relname="span">each of which evaluates each sample into 1-vs-1-vs-rest structure .</segment>
<segment id="12" parent="11" relname="elaboration">The classification result of K-SVCR is shown in</segment>
<segment id="13" parent="1014" relname="preparation">Figure 1</segment>
<segment id="14" parent="1014" relname="span">a intuitively .</segment>
<segment id="15" parent="1016" relname="span">The sub-classifier for two focused classes i and j in K-SVCR seeks an optimal hyperplane</segment>
<segment id="16" parent="15" relname="evidence">( 1 )</segment>
<segment id="17" parent="1017" relname="joint">here is the normal vector</segment>
<segment id="18" parent="1017" relname="joint">and is the bias term .</segment>
<segment id="19" parent="1019" relname="span">The optimal hyperplane can be obtained</segment>
<segment id="20" parent="1020" relname="span">by resolving the following QPP :</segment>
<segment id="21" parent="1021" relname="span">( 2 )</segment>
<segment id="22" parent="21" relname="elaboration">where , , , and , are slack variables ,</segment>
<segment id="23" parent="1010" relname="joint">the parameter is restricted to .</segment>
<segment id="24" parent="1010" relname="joint">For a testing sample x , the sub-classifier determines its class by ( 3 )</segment>
<segment id="25" parent="1010" relname="joint">For the testing</segment>
<segment id="26" parent="1010" relname="joint">sample x , the final label can be determined by vote rule .</segment>
<segment id="27" parent="1010" relname="joint">2.2. Review of Twin-KSVC Multi-Classifier</segment>
<segment id="28" parent="1010" relname="joint">Twin-KSVC is an improvement of K-SVCR .</segment>
<segment id="29" parent="1029" relname="span">The Twin-KSVC constructs pairs of binary TSVM sub-classifiers ,</segment>
<segment id="30" parent="29" relname="elaboration">which evaluates each sample into 1-vs-1-vs-rest structure .</segment>
<segment id="31" parent="1031" relname="preparation">The classification result is intuitively presented in</segment>
<segment id="32" parent="1032" relname="preparation">Figure 1</segment>
<segment id="33" parent="1033" relname="attribution">b.</segment>
<segment id="34" parent="1035" relname="span">The sub-classifiers and for two focused classes i and j in Twin-KSVC seek a pair of hyperplane</segment>
<segment id="35" parent="34" relname="restatement">( 4 )</segment>
<segment id="36" parent="1035" relname="elaboration">where and are the normal vector and the bias term of the corresponding hyperplane , respectively .</segment>
<segment id="37" parent="1037" relname="span">The two hyperplanes can be obtained</segment>
<segment id="38" parent="1040" relname="span">by resolving the QPPs as follows :</segment>
<segment id="39" parent="38" relname="restatement">( 5 )</segment>
<segment id="40" parent="1040" relname="restatement">( 6 )</segment>
<segment id="41" parent="1039" relname="elaboration">where and are slack variables .</segment>
<segment id="42" parent="1033" relname="joint">For a testing sample x , the sub-classifiers and assign its class by ( 7 )</segment>
<segment id="43" parent="1033" relname="joint">For the testing sample x , the final label can be also determined by vote rule .</segment>
<segment id="44" parent="1033" relname="joint">2.3.</segment>
<segment id="45" parent="1045" relname="preparation">Review of THKSVM Multi-Classifier</segment>
<segment id="46" parent="1047" relname="span">THKSVM</segment>
<segment id="47" parent="46" relname="elaboration">( Twin Hypersphere Multiclass Support Vector Machine )</segment>
<segment id="48" parent="1046" relname="same_unit">integrates THSVM and 1-vs-rest structure .</segment>
<segment id="49" parent="1049" relname="span">THKSVM constructs K hyperspheres in the training stage ,</segment>
<segment id="50" parent="49" relname="elaboration">whose classification result is intuitively shown in</segment>
<segment id="51" parent="1051" relname="preparation">Figure 1</segment>
<segment id="52" parent="1052" relname="attribution">c.</segment>
<segment id="53" parent="1054" relname="span">The sub-classifier for the focused classes i in THKSVM seeks a hypersphere</segment>
<segment id="54" parent="53" relname="restatement">( 8 )</segment>
<segment id="55" parent="1054" relname="elaboration">where and are the center and the radius of the corresponding hypersphere , respectively .</segment>
<segment id="56" parent="1056" relname="span">The hypersphere can be constructed</segment>
<segment id="57" parent="1058" relname="span">by resolving the following QPP :</segment>
<segment id="58" parent="57" relname="restatement">( 9 )</segment>
<segment id="59" parent="1058" relname="elaboration">where , and are slack variables .</segment>
<segment id="60" parent="1052" relname="joint">The class of a testing sample x can be determined by ( 10 )</segment>
<group id="1000" type="span" />
<group id="1001" type="span" parent="1000" relname="span"/>
<group id="1002" type="span" parent="1001" relname="span"/>
<group id="1003" type="span" parent="1005" relname="preparation"/>
<group id="1004" type="multinuc" parent="3" relname="elaboration"/>
<group id="1005" type="span" parent="1002" relname="span"/>
<group id="1006" type="multinuc" parent="1005" relname="span"/>
<group id="1009" type="span" parent="1006" relname="joint"/>
<group id="1010" type="multinuc" parent="1009" relname="span"/>
<group id="1011" type="span" parent="1010" relname="joint"/>
<group id="1012" type="span" parent="1011" relname="span"/>
<group id="1013" type="span" parent="1012" relname="elaboration"/>
<group id="1014" type="span" parent="1013" relname="span"/>
<group id="1015" type="multinuc" parent="14" relname="elaboration"/>
<group id="1016" type="span" parent="1015" relname="same_unit"/>
<group id="1017" type="multinuc" parent="1015" relname="same_unit"/>
<group id="1019" type="span" parent="1010" relname="joint"/>
<group id="1020" type="span" parent="19" relname="means"/>
<group id="1021" type="span" parent="20" relname="elaboration"/>
<group id="1029" type="span" parent="1010" relname="joint"/>
<group id="1030" type="span" parent="1010" relname="joint"/>
<group id="1031" type="span" parent="1030" relname="span"/>
<group id="1032" type="span" parent="1031" relname="span"/>
<group id="1033" type="multinuc" parent="1032" relname="span"/>
<group id="1034" type="span" parent="1033" relname="joint"/>
<group id="1035" type="span" parent="1034" relname="span"/>
<group id="1037" type="span" parent="1033" relname="joint"/>
<group id="1038" type="span" parent="37" relname="means"/>
<group id="1039" type="span" parent="1038" relname="span"/>
<group id="1040" type="span" parent="1039" relname="span"/>
<group id="1044" type="span" parent="1033" relname="joint"/>
<group id="1045" type="multinuc" parent="1044" relname="span"/>
<group id="1046" type="multinuc" parent="1045" relname="joint"/>
<group id="1047" type="span" parent="1046" relname="same_unit"/>
<group id="1049" type="span" parent="1045" relname="joint"/>
<group id="1050" type="span" parent="1045" relname="joint"/>
<group id="1051" type="span" parent="1050" relname="span"/>
<group id="1052" type="multinuc" parent="1051" relname="span"/>
<group id="1053" type="span" parent="1052" relname="joint"/>
<group id="1054" type="span" parent="1053" relname="span"/>
<group id="1056" type="span" parent="1052" relname="joint"/>
<group id="1057" type="span" parent="56" relname="means"/>
<group id="1058" type="span" parent="1057" relname="span"/>
	</body>
</rst>
