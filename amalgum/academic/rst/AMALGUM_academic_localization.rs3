<rst>
<header>
	<relations>
			<rel name="purpose" type="rst"/>
			<rel name="preparation" type="rst"/>
			<rel name="background" type="rst"/>
			<rel name="restatement" type="rst"/>
			<rel name="elaboration" type="rst"/>
			<rel name="condition" type="rst"/>
			<rel name="concession" type="rst"/>
			<rel name="means" type="rst"/>
			<rel name="attribution" type="rst"/>
			<rel name="joint" type="multinuc"/>
			<rel name="sequence" type="multinuc"/>
			<rel name="same_unit" type="multinuc"/>
		</relations>
</header>
<body>
<segment id="1" parent="1001" relname="preparation">3. Cooperative Localization</segment>
<segment id="2" parent="1001" relname="joint">For range-free localization , a large deviation of distance estimation and position estimation may often happen ,</segment>
<segment id="3" parent="1001" relname="joint">due to scarce information and difficult communication environment .</segment>
<segment id="4" parent="1001" relname="joint">These unwelcome estimations are called outliers .</segment>
<segment id="5" parent="1005" relname="span">Especially in cooperative localization , outliers may lead to the failure of whole network .</segment>
<segment id="6" parent="1006" relname="span">To alleviate the effect of the outliers ,</segment>
<segment id="7" parent="6" relname="elaboration">we propose a cooperative localization method with outlier constraints .</segment>
<segment id="8" parent="1009" relname="span">Outlier constraints are divided into distance constraints and position constraints ,</segment>
<segment id="9" parent="8" relname="elaboration">which both rely on neighboring anchors .</segment>
<segment id="10" parent="1001" relname="joint">The estimated distance and position will not exceed the communication range of neighboring anchors for both distance constraints and position constraints .</segment>
<segment id="11" parent="1012" relname="span">These constraints are represented by the parameters and ,</segment>
<segment id="12" parent="11" relname="elaboration">which condition the cooperative method .</segment>
<segment id="13" parent="1001" relname="joint">The cooperative method introduces message passing</segment>
<segment id="14" parent="1001" relname="joint">and updates the estimated position through the variational message passing rule .</segment>
<segment id="15" parent="1016" relname="span">The final localization result depends on confidence of the agent</segment>
<segment id="16" parent="15" relname="purpose">to be located .</segment>
<segment id="17" parent="1001" relname="joint">3.1. Outlier Constraints</segment>
<segment id="18" parent="1019" relname="span">For range-based localization , the estimated distances are relatively accurate ,</segment>
<segment id="19" parent="18" relname="purpose">so that the localization of agents is quite precise .</segment>
<segment id="20" parent="1001" relname="joint">For range-free localization , in our paper , the accuracy fails to meet the requirement of cooperative localization for both node distance and node position .</segment>
<segment id="21" parent="1024" relname="condition">If the outlier distance and position are regarded as key information of a virtual anchor ,</segment>
<segment id="22" parent="1024" relname="span">this will cause a large derivation in the subsequent iteration ,</segment>
<segment id="23" parent="22" relname="elaboration">leading , finally , to disruption of the whole network and localization failure .</segment>
<segment id="24" parent="1025" relname="joint">To avoid this problem ,</segment>
<segment id="25" parent="1026" relname="span">we propose the outlier constraint method ,</segment>
<segment id="26" parent="25" relname="elaboration">which includes position constraint and distance constraint .</segment>
<segment id="27" parent="1001" relname="joint">It is inevitable to have low accuracy of distance estimation with the multi-hop method .</segment>
<segment id="28" parent="1001" relname="joint">The outlier distance has a negative effect on cooperative localization ,</segment>
<segment id="29" parent="1001" relname="joint">so it is better to exclude the outlier distances .</segment>
<segment id="30" parent="1031" relname="span">The outlier distance is excluded by constraints from anchors ,</segment>
<segment id="31" parent="30" relname="attribution">as shown in</segment>
<segment id="32" parent="1001" relname="joint">Figure 5</segment>
<segment id="33" parent="1001" relname="joint">and</segment>
<segment id="34" parent="35" relname="preparation">Figure 6</segment>
<segment id="35" parent="1036" relname="span">.</segment>
<segment id="36" parent="37" relname="preparation">Figure 5</segment>
<segment id="37" parent="1037" relname="span">shows the distance between agent and anchor .</segment>
<segment id="38" parent="1039" relname="preparation">Figure 6</segment>
<segment id="39" parent="1040" relname="preparation">shows the distance between agents .</segment>
<segment id="40" parent="1041" relname="concession">For the distance between agent and anchor ,</segment>
<segment id="41" parent="1042" relname="span">the outlier constraint is ( 14 )</segment>
<segment id="42" parent="41" relname="elaboration">where is the estimated distance</segment>
<segment id="43" parent="1044" relname="attribution">according to Section 2 ,</segment>
<segment id="44" parent="1045" relname="preparation">denotes the neighboring anchors within communication range of ,</segment>
<segment id="45" parent="1046" relname="concession">denotes the true distance between anchor and any anchor in .</segment>
<segment id="46" parent="1046" relname="span">Hence , we propose a constraint function as ( 15 )</segment>
<segment id="47" parent="1048" relname="same_unit">For the distance between agents ,</segment>
<segment id="48" parent="1051" relname="span">the outlier constraint is ( 16 )</segment>
<segment id="49" parent="48" relname="elaboration">where is the estimated distance according to Section 2 ,</segment>
<segment id="50" parent="1050" relname="same_unit">denotes the neighboring anchors within communication range of ,</segment>
<segment id="51" parent="52" relname="attribution">denotes the neighboring anchors within communication range of ,</segment>
<segment id="52" parent="1052" relname="span">denotes the real distance between any anchor in and any anchor in .</segment>
<segment id="53" parent="1054" relname="span">Hence , we propose the constraint function</segment>
<segment id="54" parent="53" relname="restatement">( 17 )</segment>
<segment id="55" parent="1055" relname="span">In a cooperative network , the outlier position of the agent also has a negative effect on cooperative localization .</segment>
<segment id="56" parent="1056" relname="span">It is better to exclude these outlier positions through neighboring anchors .</segment>
<segment id="57" parent="1059" relname="span">In the network , agents can communicate with all nodes</segment>
<segment id="58" parent="57" relname="elaboration">that are in their communication range .</segment>
<segment id="59" parent="1063" relname="span">Therefore , distance between the agent and its neighboring anchor is lower than the communication range :</segment>
<segment id="60" parent="59" relname="restatement">( 18 )</segment>
<segment id="61" parent="1063" relname="elaboration">where is the estimated position of agent ,</segment>
<segment id="62" parent="1061" relname="same_unit">denotes the neighboring anchors within communication range of ,</segment>
<segment id="63" parent="1060" relname="same_unit">denotes position of any anchor in .</segment>
<segment id="64" parent="1066" relname="span">Hence , we propose the constraint function</segment>
<segment id="65" parent="64" relname="restatement">( 19 )</segment>
<segment id="66" parent="1066" relname="elaboration">where is the Euclidean norm of estimated position and true position .</segment>
<segment id="67" parent="1068" relname="span">3.2. Cooperative Localization</segment>
<segment id="68" parent="1069" relname="span">Thanks to the locally factorized structure of the joint likelihood function ,</segment>
<segment id="69" parent="68" relname="elaboration">the cooperative localization problem can be addressed under the framework of factor graph .</segment>
<segment id="70" parent="1071" relname="joint">Inference and estimation tasks are typically carried out on a factor graph by message passing between variable nodes and factor nodes .</segment>
<segment id="71" parent="1072" relname="span">Existing methods do not consider the outlier variable nodes and factor ,</segment>
<segment id="72" parent="73" relname="attribution">which indicates</segment>
<segment id="73" parent="1073" relname="span">that cooperative localization is not suitable for a range-free situation .</segment>
<segment id="74" parent="1075" relname="span">In the cooperative phase , we explore a hard decision-based cooperative way for a range-free situation</segment>
<segment id="75" parent="74" relname="means">applying outlier constraints .</segment>
<segment id="76" parent="1078" relname="attribution">We assume</segment>
<segment id="77" parent="1078" relname="joint">that the sensor node acquires a noisy measurement</segment>
<segment id="78" parent="1079" relname="span">and that , which is the estimated distance from the sensor node</segment>
<segment id="79" parent="78" relname="elaboration">( can be either an agent or an anchor ) .</segment>
<segment id="80" parent="1080" relname="span">Then , we have ( 20 )</segment>
<segment id="81" parent="80" relname="elaboration">where is the measurement noise .</segment>
<segment id="82" parent="1083" relname="attribution">Without loss of generality , we assume</segment>
<segment id="83" parent="1083" relname="span">that measurement noise obeys a Gaussian distribution ,</segment>
<segment id="84" parent="83" relname="purpose">so ; is the standard deviation .</segment>
<segment id="85" parent="1085" relname="span">The probability density function of node distance is</segment>
<segment id="86" parent="85" relname="restatement">( 21 )</segment>
<segment id="87" parent="1001" relname="joint">We define</segment>
<segment id="88" parent="1088" relname="attribution">and assume</segment>
<segment id="89" parent="1088" relname="joint">that the relative positions are conditionally independent</segment>
<segment id="90" parent="1091" relname="span">and only depend on the two nodes involved :</segment>
<segment id="91" parent="90" relname="restatement">( 22 )</segment>
<segment id="92" parent="1091" relname="elaboration">where is defined as the position set of all nodes ,</segment>
<segment id="93" parent="1088" relname="joint">and is defined as the distance set of all nodes .</segment>
<group id="1000" type="span" />
<group id="1001" type="multinuc" parent="1000" relname="span"/>
<group id="1005" type="span" parent="1001" relname="joint"/>
<group id="1006" type="span" parent="5" relname="purpose"/>
<group id="1009" type="span" parent="1001" relname="joint"/>
<group id="1012" type="span" parent="1001" relname="joint"/>
<group id="1016" type="span" parent="1001" relname="joint"/>
<group id="1019" type="span" parent="1001" relname="joint"/>
<group id="1022" type="span" parent="1001" relname="joint"/>
<group id="1023" type="span" parent="1022" relname="span"/>
<group id="1024" type="span" parent="1023" relname="span"/>
<group id="1025" type="multinuc" parent="1023" relname="purpose"/>
<group id="1026" type="span" parent="1025" relname="joint"/>
<group id="1031" type="span" parent="1001" relname="joint"/>
<group id="1035" type="span" parent="1001" relname="joint"/>
<group id="1036" type="span" parent="1035" relname="span"/>
<group id="1037" type="span" parent="1036" relname="background"/>
<group id="1038" type="span" parent="1001" relname="joint"/>
<group id="1039" type="span" parent="1038" relname="span"/>
<group id="1040" type="span" parent="1039" relname="span"/>
<group id="1041" type="span" parent="1040" relname="span"/>
<group id="1042" type="span" parent="1043" relname="preparation"/>
<group id="1043" type="span" parent="1041" relname="span"/>
<group id="1044" type="span" parent="1043" relname="span"/>
<group id="1045" type="span" parent="1044" relname="span"/>
<group id="1046" type="span" parent="1045" relname="span"/>
<group id="1047" type="multinuc" parent="46" relname="elaboration"/>
<group id="1048" type="multinuc" parent="1047" relname="joint"/>
<group id="1049" type="multinuc" parent="1048" relname="same_unit"/>
<group id="1050" type="multinuc" parent="1049" relname="same_unit"/>
<group id="1051" type="span" parent="1050" relname="same_unit"/>
<group id="1052" type="span" parent="1049" relname="same_unit"/>
<group id="1053" type="multinuc" parent="1047" relname="joint"/>
<group id="1054" type="span" parent="1053" relname="same_unit"/>
<group id="1055" type="span" parent="1053" relname="same_unit"/>
<group id="1056" type="span" parent="55" relname="elaboration"/>
<group id="1057" type="multinuc" parent="56" relname="elaboration"/>
<group id="1058" type="multinuc" parent="1057" relname="joint"/>
<group id="1059" type="span" parent="1058" relname="joint"/>
<group id="1060" type="multinuc" parent="1058" relname="joint"/>
<group id="1061" type="multinuc" parent="1060" relname="same_unit"/>
<group id="1062" type="span" parent="1061" relname="same_unit"/>
<group id="1063" type="span" parent="1062" relname="span"/>
<group id="1064" type="multinuc" parent="1057" relname="joint"/>
<group id="1065" type="span" parent="1064" relname="joint"/>
<group id="1066" type="span" parent="1065" relname="span"/>
<group id="1067" type="multinuc" parent="1064" relname="joint"/>
<group id="1068" type="span" parent="1067" relname="joint"/>
<group id="1069" type="span" parent="67" relname="elaboration"/>
<group id="1070" type="span" parent="1067" relname="joint"/>
<group id="1071" type="multinuc" parent="1070" relname="span"/>
<group id="1072" type="span" parent="1071" relname="joint"/>
<group id="1073" type="span" parent="71" relname="elaboration"/>
<group id="1074" type="span" parent="1071" relname="elaboration"/>
<group id="1075" type="span" parent="1074" relname="span"/>
<group id="1076" type="multinuc" parent="1075" relname="elaboration"/>
<group id="1077" type="span" parent="1076" relname="sequence"/>
<group id="1078" type="multinuc" parent="1077" relname="span"/>
<group id="1079" type="span" parent="1078" relname="joint"/>
<group id="1080" type="span" parent="1076" relname="sequence"/>
<group id="1082" type="span" parent="1001" relname="joint"/>
<group id="1083" type="span" parent="1082" relname="span"/>
<group id="1085" type="span" parent="1001" relname="joint"/>
<group id="1087" type="span" parent="1001" relname="joint"/>
<group id="1088" type="multinuc" parent="1087" relname="span"/>
<group id="1090" type="span" parent="1088" relname="joint"/>
<group id="1091" type="span" parent="1090" relname="span"/>
	</body>
</rst>
