# s_type = frag
# newdoc id = AMALGUM_academic_fourier
# sent_id = AMALGUM_academic_fourier-1
# text = 1. Introduction
1	1.	1.	X	LS	_	2	dep	2:dep	Discourse=preparation:1->2
2	Introduction	introduction	NOUN	NN	Number=Sing	0	root	0:root	Entity=(abstract-1)

# s_type = decl
# sent_id = AMALGUM_academic_fourier-2
# text = Many applications in the real world , such as system identification , regression , and online kernel learning ( OKL ) , require complex nonlinear models .
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=ROOT:2|Entity=(abstract-2
2	applications	application	NOUN	NNS	Number=Plur	23	nsubj	23:nsubj	_
3	in	in	ADP	IN	_	6	case	6:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-3
5	real	real	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	world	world	NOUN	NN	Number=Sing	2	nmod	2:nmod:in	Entity=abstract-3)
7	,	,	PUNCT	,	_	11	punct	11:punct	_
8	such	such	ADJ	JJ	Degree=Pos	11	case	11:case	_
9	as	as	ADP	IN	_	8	fixed	8:fixed	_
10	system	system	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-4(abstract-5)
11	identification	identification	NOUN	NN	Number=Sing	2	nmod	2:nmod:such_as	Entity=abstract-4)
12	,	,	PUNCT	,	_	13	punct	13:punct	_
13	regression	regression	NOUN	NN	Number=Sing	11	conj	2:nmod:such_as|11:conj:and	Entity=(abstract-6)
14	,	,	PUNCT	,	_	18	punct	18:punct	_
15	and	and	CCONJ	CC	_	18	cc	18:cc	_
16	online	online	ADJ	JJ	Degree=Pos	18	amod	18:amod	Entity=(abstract-7
17	kernel	kernel	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-8)
18	learning	learning	NOUN	NN	Number=Sing	11	conj	2:nmod:such_as|11:conj:and	Entity=abstract-2)abstract-7)
19	(	(	PUNCT	-LRB-	_	20	punct	20:punct	Discourse=elaboration:3->2
20	OKL	OKL	PROPN	NNP	Number=Sing	11	appos	11:appos	Entity=(abstract-7)
21	)	)	PUNCT	-RRB-	_	20	punct	20:punct	_
22	,	,	PUNCT	,	_	2	punct	2:punct	_
23	require	require	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	Discourse=same_unit:4->2
24	complex	complex	ADJ	JJ	Degree=Pos	26	amod	26:amod	Entity=(abstract-9
25	nonlinear	nonlinear	ADJ	JJ	Degree=Pos	26	amod	26:amod	_
26	models	model	NOUN	NNS	Number=Plur	23	obj	23:obj	Entity=abstract-9)
27	.	.	PUNCT	.	_	23	punct	23:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-3
# text = The kernel method using a Mercer kernel has attracted interests in tackling these complex nonlinear applications , which transforms nonlinear applications into linear ones in the reproducing kernel Hilbert space ( RKHS ) .
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:5->2|Entity=(abstract-10
2	kernel	kernel	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(abstract-8)
3	method	method	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	_
4	using	use	VERB	VBG	VerbForm=Ger	3	acl	3:acl	Discourse=elaboration:6->5
5	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(abstract-8
6	Mercer	Mercer	PROPN	NNP	Number=Sing	7	compound	7:compound	Entity=(person-11)
7	kernel	kernel	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-10)abstract-8)
8	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	9:aux	_
9	attracted	attract	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
10	interests	interest	NOUN	NNS	Number=Plur	9	obj	9:obj	Entity=(abstract-12)
11	in	in	SCONJ	IN	_	12	mark	12:mark	Discourse=circumstance:7->6
12	tackling	tackle	VERB	VBG	VerbForm=Ger	9	advcl	9:advcl:in	_
13	these	this	DET	DT	Number=Plur|PronType=Dem	16	det	16:det	Entity=(abstract-2
14	complex	complex	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
15	nonlinear	nonlinear	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	applications	application	NOUN	NNS	Number=Plur	12	obj	12:obj|19:nsubj	_
17	,	,	PUNCT	,	_	19	punct	19:punct	_
18	which	which	PRON	WDT	PronType=Rel	19	nsubj	16:ref	Discourse=elaboration:8->7
19	transforms	transform	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	acl:relcl	16:acl:relcl	Entity=(abstract-13)
20	nonlinear	nonlinear	ADJ	JJ	Degree=Pos	21	amod	21:amod	Entity=(abstract-2
21	applications	application	NOUN	NNS	Number=Plur	19	obj	19:obj	Entity=abstract-2)
22	into	into	ADP	IN	_	24	case	24:case	_
23	linear	linear	ADJ	JJ	Degree=Pos	24	amod	24:amod	Entity=(abstract-14
24	ones	one	NOUN	NNS	Number=Plur	19	obl	19:obl:into	Entity=abstract-14)
25	in	in	ADP	IN	_	30	case	30:case	_
26	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(abstract-15
27	reproducing	reproduce	VERB	VBG	VerbForm=Ger	30	amod	30:amod	_
28	kernel	kernel	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-8)
29	Hilbert	Hilbert	PROPN	NNP	Number=Sing	30	compound	30:compound	Entity=(person-16)
30	space	space	NOUN	NN	Number=Sing	19	obl	19:obl:in	Entity=abstract-2)abstract-15)
31	(	(	PUNCT	-LRB-	_	32	punct	32:punct	Discourse=restatement:9->8
32	RKHS	RKHS	PROPN	NNP	Number=Sing	30	appos	30:appos	Entity=(abstract-15)
33	)	)	PUNCT	-RRB-	_	32	punct	32:punct	_
34	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-4
# text = Developed in RKHS , a kernel adaptive filter ( KAF ) is the most celebrated subfield of OKL algorithms .
1	Developed	Develop	VERB	VBN	Tense=Past|VerbForm=Part	16	acl	16:acl	Discourse=background:10->11|Entity=(abstract-17
2	in	in	ADP	IN	_	3	case	3:case	_
3	RKHS	RKHS	PROPN	NNP	Number=Sing	1	obl	1:obl:in	Entity=(abstract-15)
4	,	,	PUNCT	,	_	1	punct	1:punct	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Discourse=joint:11->2|Entity=(abstract-18
6	kernel	kernel	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(abstract-8)
7	adaptive	adaptive	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	filter	filter	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=abstract-18)
9	(	(	PUNCT	-LRB-	_	10	punct	10:punct	Discourse=restatement:12->11
10	KAF	KAF	PROPN	NNP	Number=Sing	8	appos	8:appos	Entity=(abstract-18)
11	)	)	PUNCT	-RRB-	_	10	punct	10:punct	_
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	cop	16:cop	Discourse=same_unit:13->11
13	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	_
14	most	most	ADV	RBS	Degree=Sup	15	advmod	15:advmod	_
15	celebrated	celebrate	VERB	VBN	Tense=Past|VerbForm=Part	16	amod	16:amod	_
16	subfield	subfield	NOUN	NN	Number=Sing	0	root	0:root	_
17	of	of	ADP	IN	_	19	case	19:case	_
18	OKL	OKL	PROPN	NNP	Number=Sing	19	compound	19:compound	Entity=(abstract-19(abstract-7)
19	algorithms	algorithm	NOUN	NNS	Number=Plur	16	nmod	16:nmod:of	Entity=abstract-17)abstract-19)
20	.	.	PUNCT	.	_	16	punct	16:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-5
# text = Using the simplest stochastic gradient descent ( SGD ) method for learning , KAFs including the kernel least mean square ( KLMS ) algorithm , kernel affine projection algorithm ( KAPA ) , and kernel recursive least squares ( KRLS ) algorithm have been proposed .
1	Using	use	VERB	VBG	VerbForm=Ger	14	acl	14:acl	Discourse=means:14->11|Entity=(abstract-20
2	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-10
3	simplest	simple	ADJ	JJS	Degree=Sup	10	amod	10:amod	_
4	stochastic	stochastic	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-21
5	gradient	gradient	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(substance-22)
6	descent	descent	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=abstract-21)
7	(	(	PUNCT	-LRB-	_	8	punct	8:punct	Discourse=elaboration:15->14
8	SGD	SGD	PROPN	NNP	Number=Sing	6	appos	6:appos	Entity=(abstract-21)
9	)	)	PUNCT	-RRB-	_	8	punct	8:punct	_
10	method	method	NOUN	NN	Number=Sing	1	obj	1:obj	_
11	for	for	SCONJ	IN	_	12	mark	12:mark	_
12	learning	learning	NOUN	NN	Number=Sing	10	acl	10:acl:for	Entity=abstract-10)
13	,	,	PUNCT	,	_	1	punct	1:punct	_
14	KAFs	kaf	NOUN	NNS	Number=Plur	45	nsubj:pass	45:nsubj:pass	Discourse=same_unit:16->14
15	including	include	VERB	VBG	VerbForm=Ger	24	case	24:case	Discourse=elaboration:17->16
16	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(abstract-23
17	kernel	kernel	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(place-24(abstract-8)
18	least	least	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(place-25)
19	mean	mean	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-26)
20	square	square	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=place-24)
21	(	(	PUNCT	-LRB-	_	22	punct	22:punct	Discourse=elaboration:18->16
22	KLMS	KLMS	PROPN	NNP	Number=Sing	20	appos	20:appos	Entity=(abstract-27)
23	)	)	PUNCT	-RRB-	_	22	punct	22:punct	_
24	algorithm	algorithm	NOUN	NN	Number=Sing	14	nmod	14:nmod:including	Entity=abstract-23)
25	,	,	PUNCT	,	_	29	punct	29:punct	_
26	kernel	kernel	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=(abstract-13(abstract-8)
27	affine	affine	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=(abstract-28)
28	projection	projection	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=(abstract-29)
29	algorithm	algorithm	NOUN	NN	Number=Sing	24	conj	14:nmod:including|24:conj	Entity=abstract-20)abstract-13)
30	(	(	PUNCT	-LRB-	_	31	punct	31:punct	Discourse=elaboration:19->18
31	KAPA	KAPA	PROPN	NNP	Number=Sing	29	appos	29:appos	Entity=(abstract-30)
32	)	)	PUNCT	-RRB-	_	31	punct	31:punct	_
33	,	,	PUNCT	,	_	14	punct	14:punct	_
34	and	and	CCONJ	CC	_	42	cc	42:cc	Discourse=joint:20->16
35	kernel	kernel	NOUN	NN	Number=Sing	38	compound	38:compound	Entity=(abstract-30(place-31(abstract-8)
36	recursive	recursive	ADJ	JJ	Degree=Pos	38	amod	38:amod	_
37	least	least	NOUN	NN	Number=Sing	38	compound	38:compound	Entity=(place-25)
38	squares	square	NOUN	NNS	Number=Plur	42	compound	42:compound	Entity=place-31)
39	(	(	PUNCT	-LRB-	_	40	punct	40:punct	Discourse=elaboration:21->20
40	KRLS	KRLS	PROPN	NNP	Number=Sing	38	appos	38:appos	Entity=(abstract-32)
41	)	)	PUNCT	-RRB-	_	40	punct	40:punct	_
42	algorithm	algorithm	NOUN	NN	Number=Sing	45	nsubj:pass	45:nsubj:pass	Entity=abstract-30)
43	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	45	aux	45:aux	Discourse=same_unit:22->20
44	been	be	AUX	VBN	Tense=Past|VerbForm=Part	45	aux:pass	45:aux:pass	_
45	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
46	.	.	PUNCT	.	_	45	punct	45:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-6
# text = However , allocating a new kernel unit as a radial basis function ( RBF ) center with the coming of new data , the linearly growing structure ( called “ dictionary ” hereafter ) will increase the computational and memory requirements in KAFs .
1	However	however	ADV	RB	_	36	advmod	36:advmod	Discourse=joint:23->2
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	allocating	allocate	VERB	VBG	VerbForm=Ger	36	csubj	36:csubj	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(object-33
5	new	new	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
6	kernel	kernel	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-8)
7	unit	unit	NOUN	NN	Number=Sing	3	obj	3:obj	Entity=object-33)
8	as	as	ADP	IN	_	16	case	16:case	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	16	det	16:det	Entity=(place-34
10	radial	radial	ADJ	JJ	Degree=Pos	12	amod	12:amod	Entity=(abstract-35
11	basis	basis	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-36)
12	function	function	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=abstract-35)
13	(	(	PUNCT	-LRB-	_	14	punct	14:punct	Discourse=restatement:24->23
14	RBF	RBF	PROPN	NNP	Number=Sing	12	appos	12:appos	Entity=(abstract-35)
15	)	)	PUNCT	-RRB-	_	14	punct	14:punct	_
16	center	center	NOUN	NN	Number=Sing	3	obl	3:obl:as	Discourse=same_unit:25->23|Entity=place-34)
17	with	with	ADP	IN	_	19	case	19:case	Discourse=elaboration:26->23
18	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(event-37
19	coming	coming	NOUN	NN	Number=Sing	3	obl	3:obl:with	_
20	of	of	ADP	IN	_	22	case	22:case	_
21	new	new	ADJ	JJ	Degree=Pos	22	amod	22:amod	Entity=(abstract-38
22	data	datum	NOUN	NNS	Number=Plur	19	nmod	19:nmod:of	Entity=event-37)abstract-38)
23	,	,	PUNCT	,	_	3	punct	3:punct	_
24	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Discourse=elaboration:27->26|Entity=(abstract-39
25	linearly	linearly	ADJ	JJ	Degree=Pos	26	advmod	26:advmod	_
26	growing	grow	VERB	VBG	VerbForm=Ger	27	amod	27:amod	_
27	structure	structure	NOUN	NN	Number=Sing	36	nsubj	36:nsubj	_
28	(	(	PUNCT	-LRB-	_	29	punct	29:punct	Discourse=elaboration:28->27
29	called	call	VERB	VBN	Tense=Past|VerbForm=Part	27	acl	27:acl	_
30	“	''	PUNCT	``	_	31	punct	31:punct	Entity=(abstract-40
31	dictionary	dictionary	NOUN	NN	Number=Sing	29	xcomp	29:xcomp	_
32	”	''	PUNCT	''	_	31	punct	31:punct	_
33	hereafter	hereafter	ADV	RB	Degree=Pos	31	advmod	31:advmod	Entity=abstract-40)
34	)	)	PUNCT	-RRB-	_	29	punct	29:punct	Entity=abstract-39)
35	will	will	AUX	MD	VerbForm=Fin	36	aux	36:aux	Discourse=same_unit:29->27
36	increase	increase	VERB	VB	VerbForm=Inf	0	root	0:root	_
37	the	the	DET	DT	Definite=Def|PronType=Art	41	det	41:det	Entity=(abstract-41
38	computational	computational	ADJ	JJ	Degree=Pos	41	amod	41:amod	_
39	and	and	CCONJ	CC	_	40	cc	40:cc	_
40	memory	memory	NOUN	NN	Number=Sing	38	conj	38:conj:and|41:compound	_
41	requirements	requirement	NOUN	NNS	Number=Plur	36	obj	36:obj	_
42	in	in	ADP	IN	_	43	case	43:case	_
43	KAFs	KAF	PROPN	NNPS	Number=Plur	41	nmod	41:nmod:in	Entity=abstract-41)(abstract-20)
44	.	.	PUNCT	.	_	36	punct	36:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-7
# text = To curb the growth of the dictionary , two categories are chosen for sparsification .
1	To	to	PART	TO	_	2	mark	2:mark	Discourse=purpose:30->23
2	curb	curb	VERB	VB	VerbForm=Inf	12	advcl	12:advcl:to	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-42
4	growth	growth	NOUN	NN	Number=Sing	2	obj	2:obj	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-40
7	dictionary	dictionary	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=abstract-42)abstract-40)
8	,	,	PUNCT	,	_	2	punct	2:punct	_
9	two	2	NUM	CD	NumForm=Digit|NumType=Card	10	nummod	10:nummod	Entity=(abstract-43
10	categories	category	NOUN	NNS	Number=Plur	12	nsubj:pass	12:nsubj:pass	Entity=abstract-43)
11	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	12:aux:pass	_
12	chosen	choose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
13	for	for	ADP	IN	_	14	case	14:case	_
14	sparsification	sparsification	NOUN	NN	Number=Sing	12	obl	12:obl:for	Entity=(abstract-44)
15	.	.	PUNCT	.	_	12	punct	12:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-8
# text = The first category accepts only informative data as new dictionary centers by using a threshold , including the surprise criterion ( SC ) , the coherence criterion ( CC ) , and the vector quantization ( VQ ) .
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:31->2|Entity=(abstract-45
2	first	first	ADJ	JJ	Degree=Pos|NumType=Ord	3	amod	3:amod	_
3	category	category	NOUN	NN	Number=Sing	4	nsubj	4:nsubj	Entity=abstract-45)
4	accepts	accept	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	only	only	ADV	RB	_	7	advmod	7:advmod	Entity=(abstract-38
6	informative	informative	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	data	datum	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=abstract-38)
8	as	as	ADP	IN	_	11	case	11:case	_
9	new	new	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(place-46
10	dictionary	dictionary	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-40)
11	centers	center	NOUN	NNS	Number=Plur	4	obl	4:obl:as	Entity=place-46)
12	by	by	SCONJ	IN	_	13	mark	13:mark	Discourse=means:32->31
13	using	use	VERB	VBG	VerbForm=Ger	4	advcl	4:advcl:by	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(abstract-47
15	threshold	threshold	NOUN	NN	Number=Sing	13	obj	13:obj	_
16	,	,	PUNCT	,	_	20	punct	20:punct	_
17	including	include	VERB	VBG	VerbForm=Ger	20	case	20:case	Discourse=elaboration:33->32
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-48
19	surprise	surprise	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-49)
20	criterion	criterion	NOUN	NN	Number=Sing	15	nmod	15:nmod:including	Entity=abstract-47)abstract-48)
21	(	(	PUNCT	-LRB-	_	22	punct	22:punct	Discourse=elaboration:34->33
22	SC	SC	PROPN	NNP	Abbr=Yes|Number=Sing	20	appos	20:appos	Entity=(abstract-48)
23	)	)	PUNCT	-RRB-	_	22	punct	22:punct	_
24	,	,	PUNCT	,	_	27	punct	27:punct	_
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Entity=(abstract-50
26	coherence	coherence	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-51)
27	criterion	criterion	NOUN	NN	Number=Sing	20	conj	15:nmod:including|20:conj:and	Entity=abstract-50)
28	(	(	PUNCT	-LRB-	_	29	punct	29:punct	Discourse=elaboration:35->33
29	CC	CC	PROPN	NNP	Abbr=Yes|Number=Sing	27	appos	27:appos	Entity=(person-52)
30	)	)	PUNCT	-RRB-	_	29	punct	29:punct	_
31	,	,	PUNCT	,	_	35	punct	35:punct	_
32	and	and	CCONJ	CC	_	35	cc	35:cc	Discourse=same_unit:36->31
33	the	the	DET	DT	Definite=Def|PronType=Art	35	det	35:det	Entity=(abstract-53
34	vector	vector	NOUN	NN	Number=Sing	35	compound	35:compound	Entity=(person-54)
35	quantization	quantization	NOUN	NN	Number=Sing	20	conj	15:nmod:including|20:conj:and	Entity=abstract-53)
36	(	(	PUNCT	-LRB-	_	37	punct	37:punct	Discourse=restatement:37->36
37	VQ	VQ	PROPN	NNP	Number=Sing	35	appos	35:appos	Entity=(abstract-53)
38	)	)	PUNCT	-RRB-	_	37	punct	37:punct	_
39	.	.	PUNCT	.	_	4	punct	4:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-9
# text = However , these methods cannot fully address the growing problem and still introduce additional time consumption at each iteration .
1	However	however	ADV	RB	_	7	advmod	7:advmod	Discourse=joint:38->2
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	these	this	DET	DT	Number=Plur|PronType=Dem	4	det	4:det	Entity=(abstract-55
4	methods	method	NOUN	NNS	Number=Plur	7	nsubj	7:nsubj	Entity=abstract-55)
5	cannot	cannot	AUX	MD	VerbForm=Fin	7	aux	7:aux|13:aux	_
6	fully	fully	ADV	RB	Degree=Pos	7	advmod	7:advmod	_
7	address	address	VERB	VB	VerbForm=Inf	0	root	0:root	_
8	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-56
9	growing	grow	VERB	VBG	VerbForm=Ger	10	amod	10:amod	_
10	problem	problem	NOUN	NN	Number=Sing	7	obj	7:obj	Entity=abstract-56)
11	and	and	CCONJ	CC	_	13	cc	13:cc	Discourse=joint:39->2
12	still	still	ADV	RB	Degree=Pos	13	advmod	13:advmod	_
13	introduce	introduce	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	7	conj	7:conj:and	_
14	additional	additional	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(abstract-57
15	time	time	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-58)
16	consumption	consumption	NOUN	NN	Number=Sing	13	obj	13:obj	Entity=abstract-57)
17	at	at	ADP	IN	_	19	case	19:case	_
18	each	each	DET	DT	_	19	det	19:det	Entity=(abstract-59
19	iteration	iteration	NOUN	NN	Number=Sing	13	obl	13:obl:at	Entity=abstract-59)
20	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-10
# text = The fixed points methods as the second category , including the fixed-budget ( FB ) , the sliding window ( SW ) , and the kernel approximation methods ( e.g. , the Nystrm method and random Fourier features ( RFFs ) method ) , are used to overcome the sublinearly growing problem .
1	The	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Discourse=joint:40->2|Entity=(abstract-55
2	fixed	fix	VERB	VBN	Tense=Past|VerbForm=Part	3	amod	3:amod	Entity=(abstract-60
3	points	point	NOUN	NNS	Number=Plur	4	compound	4:compound	Entity=abstract-60)
4	methods	method	NOUN	NNS	Number=Plur	46	nsubj:pass	46:nsubj:pass|48:nsubj:xsubj	_
5	as	as	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-61
7	second	second	ADJ	JJ	Degree=Pos|NumType=Ord	8	amod	8:amod	_
8	category	category	NOUN	NN	Number=Sing	4	nmod	4:nmod:as	Entity=abstract-61)
9	,	,	PUNCT	,	_	12	punct	12:punct	_
10	including	include	VERB	VBG	VerbForm=Ger	12	case	12:case	Discourse=elaboration:41->40
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-62
12	fixed-budget	fixed-budget	NOUN	NN	Number=Sing	4	nmod	4:nmod:including	Entity=abstract-55)abstract-62)
13	(	(	PUNCT	-LRB-	_	14	punct	14:punct	Discourse=elaboration:42->40
14	FB	FB	PROPN	NNP	Number=Sing	12	appos	12:appos	Entity=(abstract-62)
15	)	)	PUNCT	-RRB-	_	14	punct	14:punct	_
16	,	,	PUNCT	,	_	19	punct	19:punct	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(object-63
18	sliding	slide	VERB	VBG	VerbForm=Ger	19	amod	19:amod	_
19	window	window	NOUN	NN	Number=Sing	12	conj	4:nmod:including|12:conj:and	Entity=object-63)
20	(	(	PUNCT	-LRB-	_	21	punct	21:punct	Discourse=elaboration:43->40
21	SW	SW	PROPN	NNP	Number=Sing	19	appos	19:appos	Entity=(abstract-64)
22	)	)	PUNCT	-RRB-	_	21	punct	21:punct	_
23	,	,	PUNCT	,	_	28	punct	28:punct	_
24	and	and	CCONJ	CC	_	28	cc	28:cc	Discourse=joint:44->2
25	the	the	DET	DT	Definite=Def|PronType=Art	28	det	28:det	Entity=(abstract-55
26	kernel	kernel	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-65(abstract-8)
27	approximation	approximation	NOUN	NN	Number=Sing	28	compound	28:compound	Entity=abstract-65)
28	methods	method	NOUN	NNS	Number=Plur	12	conj	4:nmod:including|12:conj:and	Entity=abstract-55)
29	(	(	PUNCT	-LRB-	_	34	punct	34:punct	Discourse=elaboration:45->44|Entity=(abstract-55
30	e.g.	e.g.	ADV	FW	Abbr=Yes	34	advmod	34:advmod	Entity=(abstract-55
31	,	,	PUNCT	,	_	30	punct	30:punct	_
32	the	the	DET	DT	Definite=Def|PronType=Art	34	det	34:det	_
33	Nystrm	Nystrm	PROPN	NNP	Number=Sing	34	compound	34:compound	Entity=(abstract-66)
34	method	method	NOUN	NN	Number=Sing	28	appos	28:appos	Entity=abstract-55)
35	and	and	CCONJ	CC	_	42	cc	42:cc	_
36	random	random	ADJ	JJ	Degree=Pos	38	amod	38:amod	Entity=(abstract-55(abstract-67
37	Fourier	Fourier	PROPN	NNP	Number=Sing	38	compound	38:compound	Entity=(person-68)
38	features	feature	NOUN	NNS	Number=Plur	42	compound	42:compound	Entity=abstract-67)
39	(	(	PUNCT	-LRB-	_	40	punct	40:punct	Discourse=elaboration:46->45
40	RFFs	RFF	NOUN	NNS	Number=Plur	38	appos	38:appos	Entity=(abstract-67)
41	)	)	PUNCT	-RRB-	_	40	punct	40:punct	_
42	method	method	NOUN	NN	Number=Sing	34	conj	28:appos|34:conj:and	_
43	)	)	PUNCT	-RRB-	_	34	punct	34:punct	Entity=abstract-55)abstract-55)
44	,	,	PUNCT	,	_	4	punct	4:punct	_
45	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	46	aux:pass	46:aux:pass	Discourse=same_unit:47->44
46	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
47	to	to	PART	TO	_	48	mark	48:mark	Discourse=purpose:48->47
48	overcome	overcome	VERB	VB	VerbForm=Inf	46	xcomp	46:xcomp	_
49	the	the	DET	DT	Definite=Def|PronType=Art	52	det	52:det	Entity=(abstract-56
50	sublinearly	sublinearly	ADV	RB	Degree=Pos	51	advmod	51:advmod	_
51	growing	grow	VERB	VBG	VerbForm=Ger	52	amod	52:amod	_
52	problem	problem	NOUN	NN	Number=Sing	48	obj	48:obj	Entity=abstract-56)
53	.	.	PUNCT	.	_	46	punct	46:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-11
# text = However , the FB method and the SW method cannot guarantee a good performance in specific environments with a small amount of time .
1	However	however	ADV	RB	_	11	advmod	11:advmod	Discourse=elaboration:49->44
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-55(abstract-10
4	FB	FB	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(abstract-62)
5	method	method	NOUN	NN	Number=Sing	11	nsubj	11:nsubj	Entity=abstract-10)
6	and	and	CCONJ	CC	_	9	cc	9:cc	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-10
8	SW	SW	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-64)
9	method	method	NOUN	NN	Number=Sing	5	conj	5:conj:and|11:nsubj	Entity=abstract-55)abstract-10)
10	cannot	cannot	AUX	MD	VerbForm=Fin	11	aux	11:aux	_
11	guarantee	guarantee	VERB	VB	VerbForm=Inf	0	root	0:root	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(abstract-69
13	good	good	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	performance	performance	NOUN	NN	Number=Sing	11	obj	11:obj	_
15	in	in	ADP	IN	_	17	case	17:case	_
16	specific	specific	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(place-70
17	environments	environment	NOUN	NNS	Number=Plur	14	nmod	14:nmod:in	Entity=abstract-69)place-70)
18	with	with	ADP	IN	_	21	case	21:case	_
19	a	a	DET	DT	Definite=Ind|PronType=Art	21	det	21:det	Entity=(abstract-71
20	small	small	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
21	amount	amount	NOUN	NN	Number=Sing	11	obl	11:obl:with	_
22	of	of	ADP	IN	_	23	case	23:case	_
23	time	time	NOUN	NN	Number=Sing	21	nmod	21:nmod:of	Entity=abstract-71)(abstract-58)
24	.	.	PUNCT	.	_	11	punct	11:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-12
# text = Compared with the Nystrm method , RFFs are drawn from a distribution that is randomly independent from the training data .
1	Compared	compare	VERB	VBN	Tense=Past|VerbForm=Part	9	advcl	9:advcl	Discourse=elaboration:50->49
2	with	with	ADP	IN	_	5	case	5:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-10
4	Nystrm	Nystrm	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(abstract-66)
5	method	method	NOUN	NN	Number=Sing	1	obl	1:obl:with	Entity=abstract-10)
6	,	,	PUNCT	,	_	1	punct	1:punct	_
7	RFFs	RFF	NOUN	NNS	Number=Plur	9	nsubj:pass	9:nsubj:pass	Entity=(abstract-67)
8	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	9:aux:pass	_
9	drawn	draw	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
10	from	from	ADP	IN	_	12	case	12:case	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-72
12	distribution	distribution	NOUN	NN	Number=Sing	9	obl	9:obl:from|16:nsubj	_
13	that	that	PRON	WDT	PronType=Rel	16	nsubj	12:ref	Discourse=elaboration:51->50
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	cop	16:cop	_
15	randomly	randomly	ADV	RB	Degree=Pos	16	advmod	16:advmod	_
16	independent	independent	ADJ	JJ	Degree=Pos	12	acl:relcl	12:acl:relcl	_
17	from	from	ADP	IN	_	20	case	20:case	_
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-38
19	training	training	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-73)
20	data	datum	NOUN	NNS	Number=Plur	16	obl	16:obl:from	Entity=abstract-72)abstract-38)
21	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-13
# text = Due to a data-independent vector representation , RFFs can provide a good solution to non-stationary circumstances .
1	Due	due	ADJ	JJ	Degree=Pos	6	case	6:case	Discourse=joint:52->49
2	to	to	ADP	IN	_	1	fixed	1:fixed	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	Entity=(abstract-74
4	data-independent	data-independent	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
5	vector	vector	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(person-54)
6	representation	representation	NOUN	NN	Number=Sing	10	obl	10:obl:due_to	Entity=abstract-74)
7	,	,	PUNCT	,	_	6	punct	6:punct	_
8	RFFs	RFF	NOUN	NNS	Number=Plur	10	nsubj	10:nsubj	Discourse=elaboration:53->52|Entity=(abstract-67)
9	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
10	provide	provide	VERB	VB	VerbForm=Inf	0	root	0:root	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(abstract-75
12	good	good	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
13	solution	solution	NOUN	NN	Number=Sing	10	obj	10:obj	_
14	to	to	ADP	IN	_	16	case	16:case	_
15	non-stationary	non-stationary	ADJ	JJ	Degree=Pos|Polarity=Neg	16	amod	16:amod	Entity=(abstract-76
16	circumstances	circumstance	NOUN	NNS	Number=Plur	13	nmod	13:nmod:to	Entity=abstract-75)abstract-76)
17	.	.	PUNCT	.	_	10	punct	10:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-14
# text = On the basis of RFFs , random Fourier mapping ( RFM ) is proposed by mapping input data into a finite-dimensional random Fourier features space ( RFFS ) using a randomized feature kernel ’s Fourier transform in a fixed network structure .
1	On	on	ADP	IN	_	3	case	3:case	Discourse=joint:54->52
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-36
3	basis	basis	NOUN	NN	Number=Sing	14	obl	14:obl:on	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	RFFs	RFF	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-36)(abstract-67)
6	,	,	PUNCT	,	_	3	punct	3:punct	_
7	random	random	ADJ	JJ	Degree=Pos	9	amod	9:amod	Entity=(abstract-77
8	Fourier	Fourier	PROPN	NNP	Number=Sing	9	compound	9:compound	Entity=(person-68)
9	mapping	mapping	NOUN	NN	Number=Sing	14	nsubj:pass	14:nsubj:pass	Entity=abstract-77)
10	(	(	PUNCT	-LRB-	_	11	punct	11:punct	Discourse=restatement:55->54
11	RFM	RFM	PROPN	NNP	Number=Sing	9	appos	9:appos	Entity=(abstract-77)
12	)	)	PUNCT	-RRB-	_	11	punct	11:punct	_
13	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	14:aux:pass	Discourse=same_unit:56->54
14	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
15	by	by	SCONJ	IN	_	16	mark	16:mark	Discourse=means:57->54
16	mapping	map	VERB	VBG	VerbForm=Ger	14	advcl	14:advcl:by	_
17	input	input	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-38(abstract-78)
18	data	datum	NOUN	NNS	Number=Plur	16	obj	16:obj	Entity=abstract-38)
19	into	into	ADP	IN	_	25	case	25:case	_
20	a	a	DET	DT	Definite=Ind|PronType=Art	25	det	25:det	Entity=(abstract-15
21	finite-dimensional	finite-dimensional	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
22	random	random	ADJ	JJ	Degree=Pos	24	amod	24:amod	Entity=(abstract-67
23	Fourier	Fourier	PROPN	NNP	Number=Sing	25	compound	25:compound	Entity=(person-68)
24	features	feature	NOUN	NNS	Number=Plur	25	compound	25:compound	Entity=abstract-67)
25	space	space	NOUN	NN	Number=Sing	16	obl	16:obl:into	Entity=abstract-15)
26	(	(	PUNCT	-LRB-	_	27	punct	27:punct	Discourse=restatement:58->57
27	RFFS	RFFS	PROPN	NNP	Number=Sing	25	appos	25:appos	Entity=(abstract-15)
28	)	)	PUNCT	-RRB-	_	27	punct	27:punct	_
29	using	use	VERB	VBG	VerbForm=Ger	16	advcl	16:advcl	Discourse=means:59->57
30	a	a	DET	DT	Definite=Ind|PronType=Art	33	det	33:det	Entity=(abstract-13
31	randomized	randomized	ADJ	JJ	Degree=Pos	33	amod	33:amod	Entity=(abstract-8
32	feature	feature	NOUN	NN	Number=Sing	33	compound	33:compound	Entity=(abstract-79)
33	kernel	kernel	NOUN	NN	Number=Sing	36	nmod:poss	36:nmod:poss	_
34	’s	's	PART	POS	_	33	case	33:case	Entity=abstract-8)
35	Fourier	Fourier	PROPN	NNP	Number=Sing	36	compound	36:compound	Entity=(person-68)
36	transform	transform	NOUN	NN	Number=Sing	29	obj	29:obj	_
37	in	in	ADP	IN	_	41	case	41:case	_
38	a	a	DET	DT	Definite=Ind|PronType=Art	41	det	41:det	Entity=(abstract-39
39	fixed	fix	VERB	VBN	Tense=Past|VerbForm=Part	41	amod	41:amod	_
40	network	network	NOUN	NN	Number=Sing	41	compound	41:compound	Entity=(abstract-80)
41	structure	structure	NOUN	NN	Number=Sing	36	nmod	36:nmod:in	Entity=abstract-13)abstract-39)
42	.	.	PUNCT	.	_	14	punct	14:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-15
# text = The RFM alleviates the computational and storage burdens of KAFs , and ensures a satisfactory performance under non-stationary conditions .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:60->54|Entity=(abstract-77
2	RFM	RFM	PROPN	NNP	Number=Sing	3	nsubj	3:nsubj|13:nsubj	Entity=abstract-77)
3	alleviates	alleviate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
4	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-81
5	computational	computational	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
6	and	and	CCONJ	CC	_	7	cc	7:cc	_
7	storage	storage	NOUN	NN	Number=Sing	5	conj	5:conj:and|8:compound	_
8	burdens	burden	NOUN	NNS	Number=Plur	3	obj	3:obj	_
9	of	of	ADP	IN	_	10	case	10:case	_
10	KAFs	kaf	NOUN	NNS	Number=Plur	8	nmod	8:nmod:of	Entity=abstract-81)(abstract-20)
11	,	,	PUNCT	,	_	13	punct	13:punct	_
12	and	and	CCONJ	CC	_	13	cc	13:cc	Discourse=joint:61->60
13	ensures	ensure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	conj	3:conj:and	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	16	det	16:det	Entity=(abstract-69
15	satisfactory	satisfactory	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	performance	performance	NOUN	NN	Number=Sing	13	obj	13:obj	_
17	under	under	ADP	IN	_	19	case	19:case	_
18	non-stationary	non-stationary	ADJ	JJ	Degree=Pos|Polarity=Neg	19	amod	19:amod	Entity=(abstract-82
19	conditions	condition	NOUN	NNS	Number=Plur	16	nmod	16:nmod:under	Entity=abstract-69)abstract-82)
20	.	.	PUNCT	.	_	3	punct	3:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-16
# text = The examples for developing KAFs with RFM are the random Fourier features kernel least mean square ( RFFKLMS ) algorithm , random Fourier features maximum correntropy ( RFFMC ) algorithm , and random Fourier features conjugate gradient ( RFFCG ) algorithm .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:62->60|Entity=(abstract-83
2	examples	example	NOUN	NNS	Number=Plur	20	nsubj	20:nsubj|30:nsubj|41:nsubj	_
3	for	for	SCONJ	IN	_	4	mark	4:mark	Discourse=elaboration:63->62
4	developing	develop	VERB	VBG	VerbForm=Ger	2	acl	2:acl:for	_
5	KAFs	kaf	NOUN	NNS	Number=Plur	4	obj	4:obj	Entity=(abstract-20)
6	with	with	ADP	IN	_	7	case	7:case	_
7	RFM	RFM	PROPN	NNP	Number=Sing	4	obl	4:obl:with	Entity=abstract-83)(abstract-77)
8	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	20	cop	20:cop	Discourse=same_unit:64->62
9	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-83(abstract-83
10	random	random	ADJ	JJ	Degree=Pos	12	amod	12:amod	Entity=(place-24(abstract-67
11	Fourier	Fourier	PROPN	NNP	Number=Sing	12	compound	12:compound	Entity=(person-68)
12	features	feature	NOUN	NNS	Number=Plur	16	compound	16:compound	Entity=abstract-67)
13	kernel	kernel	NOUN	NN	Number=Sing	16	compound	16:compound	_
14	least	least	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(abstract-26(place-25)
15	mean	mean	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=abstract-26)
16	square	square	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=place-24)
17	(	(	PUNCT	-LRB-	_	18	punct	18:punct	Discourse=restatement:65->64
18	RFFKLMS	RFFKLMS	PROPN	NNP	Number=Sing	16	appos	16:appos	Entity=(abstract-84)
19	)	)	PUNCT	-RRB-	_	18	punct	18:punct	_
20	algorithm	algorithm	NOUN	NN	Number=Sing	0	root	0:root	Discourse=same_unit:66->62|Entity=abstract-83)
21	,	,	PUNCT	,	_	30	punct	30:punct	_
22	random	random	ADJ	JJ	Degree=Pos	24	amod	24:amod	Discourse=joint:67->66|Entity=(abstract-30(abstract-85
23	Fourier	Fourier	PROPN	NNP	Number=Sing	24	compound	24:compound	Entity=(person-68)
24	features	feature	VERB	VBN	Tense=Past|VerbForm=Part	26	compound	26:compound	_
25	maximum	maximum	ADJ	JJ	Degree=Pos	26	amod	26:amod	_
26	correntropy	correntropy	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=abstract-85)
27	(	(	PUNCT	-LRB-	_	28	punct	28:punct	Discourse=elaboration:68->67
28	RFFMC	RFFMC	PROPN	NNP	Number=Sing	26	appos	26:appos	Entity=(abstract-85)
29	)	)	PUNCT	-RRB-	_	28	punct	28:punct	_
30	algorithm	algorithm	NOUN	NN	Number=Sing	20	conj	20:conj:and	Entity=abstract-30)
31	,	,	PUNCT	,	_	41	punct	41:punct	_
32	and	and	CCONJ	CC	_	41	cc	41:cc	Discourse=joint:69->67
33	random	random	ADJ	JJ	Degree=Pos	35	amod	35:amod	Entity=(abstract-30(substance-22
34	Fourier	Fourier	PROPN	NNP	Number=Sing	35	compound	35:compound	Entity=(person-68)
35	features	feature	VERB	VBN	Tense=Past|VerbForm=Part	37	compound	37:compound	_
36	conjugate	conjugate	NOUN	NN	Number=Sing	37	compound	37:compound	Entity=(abstract-86)
37	gradient	gradient	NOUN	NN	Number=Sing	41	compound	41:compound	Entity=substance-22)
38	(	(	PUNCT	-LRB-	_	39	punct	39:punct	Discourse=restatement:70->69
39	RFFCG	RFFCG	PROPN	NNP	Number=Sing	37	appos	37:appos	Entity=(abstract-87)
40	)	)	PUNCT	-RRB-	_	39	punct	39:punct	_
41	algorithm	algorithm	NOUN	NN	Number=Sing	20	conj	20:conj:and	Discourse=same_unit:71->69|Entity=abstract-83)abstract-30)
42	.	.	PUNCT	.	_	20	punct	20:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-17
# text = For the loss function , due to their simplicity , smoothness , and mathematical tractability , the second-order statistical measures ( e.g. , minimum mean square error ( MMSE ) and least squares ) are widely utilized in KAFs .
1	For	for	ADP	IN	_	4	case	4:case	Discourse=joint:72->62
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-35
3	loss	loss	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-88)
4	function	function	NOUN	NN	Number=Sing	37	obl	37:obl:for	Entity=abstract-35)
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	due	due	ADJ	JJ	Degree=Pos	9	case	9:case	Discourse=joint:73->72
7	to	to	ADP	IN	_	6	fixed	6:fixed	_
8	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(abstract-89(abstract-83)
9	simplicity	simplicity	NOUN	NN	Number=Sing	37	obl	37:obl:due_to	Entity=abstract-89)
10	,	,	PUNCT	,	_	11	punct	11:punct	_
11	smoothness	smoothness	NOUN	NN	Number=Sing	9	conj	9:conj:and|37:obl:due_to	Entity=(abstract-90)
12	,	,	PUNCT	,	_	15	punct	15:punct	_
13	and	and	CCONJ	CC	_	15	cc	15:cc	_
14	mathematical	mathematical	ADJ	JJ	Degree=Pos	15	amod	15:amod	Entity=(abstract-91
15	tractability	tractability	NOUN	NN	Number=Sing	9	conj	9:conj:and|37:obl:due_to	Entity=abstract-91)
16	,	,	PUNCT	,	_	9	punct	9:punct	_
17	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-92
18	second-order	second-order	NOUN	NN	Number=Sing	20	compound	20:compound	_
19	statistical	statistical	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
20	measures	measure	NOUN	NNS	Number=Plur	37	nsubj:pass	37:nsubj:pass	Entity=abstract-92)
21	(	(	PUNCT	-LRB-	_	27	punct	27:punct	Discourse=elaboration:74->73
22	e.g.	e.g.	ADV	FW	Abbr=Yes	27	advmod	27:advmod	Entity=(abstract-92
23	,	,	PUNCT	,	_	22	punct	22:punct	_
24	minimum	minimum	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-93)
25	mean	mean	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-26)
26	square	square	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(place-24)
27	error	error	NOUN	NN	Number=Sing	20	appos	20:appos	Entity=abstract-92)
28	(	(	PUNCT	-LRB-	_	29	punct	29:punct	Discourse=restatement:75->74
29	MMSE	MMSE	PROPN	NNP	Number=Sing	27	appos	27:appos	Entity=(abstract-92)
30	)	)	PUNCT	-RRB-	_	29	punct	29:punct	_
31	and	and	CCONJ	CC	_	33	cc	33:cc	Discourse=joint:76->74
32	least	least	NOUN	NN	Number=Sing	33	compound	33:compound	Entity=(abstract-92(place-25)
33	squares	square	NOUN	NNS	Number=Plur	27	conj	20:appos|27:conj:and	Entity=abstract-92)
34	)	)	PUNCT	-RRB-	_	27	punct	27:punct	_
35	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	37	aux:pass	37:aux:pass	Discourse=same_unit:77->73
36	widely	widely	ADV	RB	Degree=Pos	37	advmod	37:advmod	_
37	utilized	utilize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
38	in	in	ADP	IN	_	39	case	39:case	_
39	KAFs	KAF	PROPN	NNPS	Number=Plur	37	obl	37:obl:in	Entity=(abstract-20)
40	.	.	PUNCT	.	_	37	punct	37:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-18
# text = However , KAFs based on the second-order statistical measures are sensitive to non-Gaussian noises including the sub-Gaussian and super-Gaussian noises , which means that their performance may be seriously degraded if the training data are contaminated by outliers .
1	However	however	ADV	RB	_	11	advmod	11:advmod	Discourse=contrast:78->72
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	KAFs	KAF	PROPN	NNPS	Number=Plur	11	nsubj	11:nsubj	Entity=(abstract-20
4	based	base	VERB	VBN	Tense=Past|VerbForm=Part	3	acl	3:acl	Discourse=elaboration:79->78
5	on	on	ADP	IN	_	9	case	9:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-92
7	second-order	second-order	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
8	statistical	statistical	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	measures	measure	NOUN	NNS	Number=Plur	4	obl	4:obl:on	Entity=abstract-20)abstract-92)
10	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	cop	11:cop	_
11	sensitive	sensitive	ADJ	JJ	Degree=Pos	0	root	0:root	_
12	to	to	ADP	IN	_	14	case	14:case	_
13	non-Gaussian	non-Gaussian	ADJ	JJ	Degree=Pos|Polarity=Neg	14	amod	14:amod	Entity=(abstract-94
14	noises	noise	NOUN	NNS	Number=Plur	11	obl	11:obl:to	_
15	including	include	VERB	VBG	VerbForm=Ger	20	case	20:case	Discourse=elaboration:80->79
16	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-94
17	sub-Gaussian	sub-Gaussian	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
18	and	and	CCONJ	CC	_	19	cc	19:cc	_
19	super-Gaussian	super-Gaussian	ADJ	JJ	Degree=Pos	17	conj	17:conj:and|20:amod	_
20	noises	noise	NOUN	NNS	Number=Plur	14	nmod	14:nmod:including|23:nsubj	_
21	,	,	PUNCT	,	_	23	punct	23:punct	_
22	which	which	PRON	WDT	PronType=Rel	23	nsubj	20:ref	Discourse=attribution:81->82
23	means	mean	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	acl:relcl	20:acl:relcl	_
24	that	that	SCONJ	IN	_	30	mark	30:mark	Discourse=elaboration:82->79
25	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	26	nmod:poss	26:nmod:poss	Entity=(abstract-69(abstract-94)
26	performance	performance	NOUN	NN	Number=Sing	30	nsubj:pass	30:nsubj:pass	Entity=abstract-69)
27	may	may	AUX	MD	VerbForm=Fin	30	aux	30:aux	_
28	be	be	AUX	VB	VerbForm=Inf	30	aux:pass	30:aux:pass	_
29	seriously	seriously	ADV	RB	Degree=Pos	30	advmod	30:advmod	_
30	degraded	degrade	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	23	ccomp	23:ccomp	Entity=abstract-94)abstract-94)
31	if	if	SCONJ	IN	_	36	mark	36:mark	Discourse=condition:83->82
32	the	the	DET	DT	Definite=Def|PronType=Art	34	det	34:det	Entity=(abstract-38
33	training	training	NOUN	NN	Number=Sing	34	compound	34:compound	Entity=(abstract-73)
34	data	datum	NOUN	NNS	Number=Plur	36	nsubj:pass	36:nsubj:pass	Entity=abstract-38)
35	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	36	aux:pass	36:aux:pass	_
36	contaminated	contaminate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	30	advcl	30:advcl:if	_
37	by	by	ADP	IN	_	38	case	38:case	_
38	outliers	outlier	NOUN	NNS	Number=Plur	36	obl	36:obl:by	Entity=(abstract-95)
39	.	.	PUNCT	.	_	11	punct	11:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-19
# text = To handle this issue , robust statistical measures have therefore gained more attention , among which the lower-order error measure and the higher-lower error measure are two typical examples .
1	To	to	PART	TO	_	2	mark	2:mark	Discourse=purpose:84->78
2	handle	handle	VERB	VB	VerbForm=Inf	11	advcl	11:advcl:to	_
3	this	this	DET	DT	Number=Sing|PronType=Dem	4	det	4:det	Entity=(abstract-96
4	issue	issue	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-96)
5	,	,	PUNCT	,	_	2	punct	2:punct	_
6	robust	robust	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=(abstract-92
7	statistical	statistical	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	measures	measure	NOUN	NNS	Number=Plur	11	nsubj	11:nsubj	Entity=abstract-92)
9	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	aux	11:aux	_
10	therefore	therefore	ADV	RB	Degree=Pos	11	advmod	11:advmod	_
11	gained	gain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
12	more	more	ADJ	JJR	Degree=Cmp	13	amod	13:amod	Entity=(abstract-97
13	attention	attention	NOUN	NN	Number=Sing	11	obj	11:obj|29:nmod:among	_
14	,	,	PUNCT	,	_	29	punct	29:punct	_
15	among	among	ADP	IN	_	16	case	16:case	Discourse=elaboration:85->84
16	which	which	PRON	WDT	PronType=Rel	29	nmod	13:ref	_
17	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-83(abstract-98
18	lower-order	lower-order	NOUN	NN	Number=Sing	20	compound	20:compound	_
19	error	error	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-99)
20	measure	measure	NOUN	NN	Number=Sing	29	nsubj	29:nsubj	Entity=abstract-98)
21	and	and	CCONJ	CC	_	25	cc	25:cc	_
22	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	Entity=(abstract-100
23	higher-lower	higher-lower	ADJ	JJR	Degree=Cmp	25	amod	25:amod	_
24	error	error	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-99)
25	measure	measure	NOUN	NN	Number=Sing	20	conj	20:conj:and|29:nsubj	Entity=abstract-100)
26	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	cop	29:cop	_
27	two	2	NUM	CD	NumForm=Digit|NumType=Card	29	nummod	29:nummod	_
28	typical	typical	ADJ	JJ	Degree=Pos	29	amod	29:amod	_
29	examples	example	NOUN	NNS	Number=Plur	13	acl:relcl	13:acl:relcl	Entity=abstract-97)abstract-83)
30	.	.	PUNCT	.	_	11	punct	11:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-20
# text = However , the higher-order error measure is not suitable for the mixture of Gaussian and super-Gaussian noises ( Laplace , -stable , etc. ) with poor stability and astringency , and the lower-order measure of error is usually more desirable in these noise environments with slow convergence rate .
1	However	however	ADV	RB	_	9	advmod	9:advmod	Discourse=joint:86->78
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-100
4	higher-order	higher-order	NOUN	NN	Number=Sing	6	compound	6:compound	_
5	error	error	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-99)
6	measure	measure	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	Entity=abstract-100)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	9:cop	_
8	not	not	ADV	RB	Polarity=Neg	9	advmod	9:advmod	_
9	suitable	suitable	ADJ	JJ	Degree=Pos	0	root	0:root	_
10	for	for	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-101
12	mixture	mixture	NOUN	NN	Number=Sing	9	obl	9:obl:for	_
13	of	of	ADP	IN	_	17	case	17:case	_
14	Gaussian	Gaussian	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(abstract-94
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	super-Gaussian	super-Gaussian	ADJ	JJ	Degree=Pos	14	conj	14:conj:and|17:amod	_
17	noises	noise	NOUN	NNS	Number=Plur	12	nmod	12:nmod:of	Entity=abstract-101)abstract-94)
18	(	(	PUNCT	-LRB-	_	19	punct	19:punct	Discourse=elaboration:87->86
19	Laplace	Laplace	PROPN	NNP	Number=Sing	17	appos	17:appos	Entity=(person-102)
20	,	,	PUNCT	,	_	21	punct	21:punct	_
21	-stable	-stable	NOUN	NN	Number=Sing	19	conj	17:appos|19:conj	_
22	,	,	PUNCT	,	_	23	punct	23:punct	_
23	etc.	etc.	X	FW	Abbr=Yes	19	conj	17:appos|19:conj	_
24	)	)	PUNCT	-RRB-	_	19	punct	19:punct	_
25	with	with	ADP	IN	_	27	case	27:case	Discourse=same_unit:88->87
26	poor	poor	ADJ	JJ	Degree=Pos	27	amod	27:amod	Entity=(abstract-103
27	stability	stability	NOUN	NN	Number=Sing	17	nmod	17:nmod:with	Entity=abstract-103)
28	and	and	CCONJ	CC	_	29	cc	29:cc	_
29	astringency	astringency	NOUN	NN	Number=Sing	27	conj	17:nmod:with|27:conj:and	Entity=(organization-104)
30	,	,	PUNCT	,	_	40	punct	40:punct	_
31	and	and	CCONJ	CC	_	40	cc	40:cc	Discourse=joint:89->86
32	the	the	DET	DT	Definite=Def|PronType=Art	34	det	34:det	Entity=(abstract-100
33	lower-order	lower-order	ADJ	JJR	Degree=Cmp	34	amod	34:amod	_
34	measure	measure	NOUN	NN	Number=Sing	40	nsubj	40:nsubj	_
35	of	of	ADP	IN	_	36	case	36:case	_
36	error	error	NOUN	NN	Number=Sing	34	nmod	34:nmod:of	Entity=abstract-100)(abstract-99)
37	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	40	cop	40:cop	_
38	usually	usually	ADV	RB	Degree=Pos	40	advmod	40:advmod	_
39	more	more	ADV	RBR	Degree=Cmp	40	advmod	40:advmod	_
40	desirable	desirable	ADJ	JJ	Degree=Pos	9	conj	9:conj:and	_
41	in	in	ADP	IN	_	44	case	44:case	_
42	these	this	DET	DT	Number=Plur|PronType=Dem	44	det	44:det	Entity=(place-70
43	noise	noise	NOUN	NN	Number=Sing	44	compound	44:compound	Entity=(abstract-105)
44	environments	environment	NOUN	NNS	Number=Plur	40	obl	40:obl:in	_
45	with	with	ADP	IN	_	48	case	48:case	_
46	slow	slow	ADJ	JJ	Degree=Pos	48	amod	48:amod	Entity=(abstract-106
47	convergence	convergence	NOUN	NN	Number=Sing	48	compound	48:compound	Entity=(abstract-107)
48	rate	rate	NOUN	NN	Number=Sing	44	nmod	44:nmod:with	Entity=place-70)abstract-106)
49	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-21
# text = Recently , the information theoretic learning ( ITL ) similarity measures , such as the maximum correntropy criterion ( MCC ) and minimum error entropy criterion ( MEE ) , have been introduced to implement robust KAFs .
1	Recently	recently	ADV	RB	Degree=Pos	33	advmod	33:advmod	Discourse=elaboration:90->89
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-92
4	information	information	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-7(abstract-108)
5	theoretic	theoretic	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
6	learning	learning	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=abstract-7)
7	(	(	PUNCT	-LRB-	_	8	punct	8:punct	Discourse=restatement:91->90
8	ITL	ITL	PROPN	NNP	Number=Sing	6	appos	6:appos	Entity=(abstract-7)
9	)	)	PUNCT	-RRB-	_	8	punct	8:punct	_
10	similarity	similarity	NOUN	NN	Number=Sing	11	compound	11:compound	Discourse=same_unit:92->90|Entity=(abstract-109)
11	measures	measure	NOUN	NNS	Number=Plur	33	nsubj:pass	33:nsubj:pass|35:nsubj:xsubj	_
12	,	,	PUNCT	,	_	18	punct	18:punct	_
13	such	such	ADJ	JJ	Degree=Pos	18	case	18:case	_
14	as	as	ADP	IN	_	13	fixed	13:fixed	_
15	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-50
16	maximum	maximum	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
17	correntropy	correntropy	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-85)
18	criterion	criterion	NOUN	NN	Number=Sing	11	nmod	11:nmod:such_as	Entity=abstract-92)abstract-50)
19	(	(	PUNCT	-LRB-	_	20	punct	20:punct	Discourse=restatement:93->90
20	MCC	MCC	PROPN	NNP	Number=Sing	18	appos	18:appos	Entity=(abstract-50)
21	)	)	PUNCT	-RRB-	_	20	punct	20:punct	_
22	and	and	CCONJ	CC	_	26	cc	26:cc	Discourse=same_unit:94->90
23	minimum	minimum	ADJ	JJ	Degree=Pos	25	amod	25:amod	Entity=(abstract-50(abstract-110
24	error	error	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=(abstract-99)
25	entropy	entropy	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=abstract-110)
26	criterion	criterion	NOUN	NN	Number=Sing	18	conj	11:nmod:such_as|18:conj:and	Entity=abstract-50)
27	(	(	PUNCT	-LRB-	_	28	punct	28:punct	Discourse=elaboration:95->94
28	MEE	MEE	PROPN	NNP	Number=Sing	26	appos	26:appos	Entity=(abstract-50)
29	)	)	PUNCT	-RRB-	_	28	punct	28:punct	_
30	,	,	PUNCT	,	_	11	punct	11:punct	_
31	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	33	aux	33:aux	Discourse=same_unit:96->94
32	been	be	AUX	VBN	Tense=Past|VerbForm=Part	33	aux:pass	33:aux:pass	_
33	introduced	introduce	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
34	to	to	PART	TO	_	35	mark	35:mark	Discourse=purpose:97->96
35	implement	implement	VERB	VB	VerbForm=Inf	33	xcomp	33:xcomp	_
36	robust	robust	ADJ	JJ	Degree=Pos	37	amod	37:amod	Entity=(abstract-20
37	KAFs	kaf	NOUN	NNS	Number=Plur	35	obj	35:obj	Entity=abstract-20)
38	.	.	PUNCT	.	_	33	punct	33:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-22
# text = The ITL similarity measures have been shown to have a strong robustness against non-Gaussian noises at the expense of increasing computational burden in training processing .
1	The	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Discourse=joint:98->89|Entity=(abstract-92
2	ITL	ITL	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=(abstract-7)
3	similarity	similarity	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-109)
4	measures	measure	NOUN	NNS	Number=Plur	7	nsubj:pass	7:nsubj:pass|9:nsubj:xsubj	Entity=abstract-92)
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	7:aux	_
6	been	be	AUX	VBN	Tense=Past|VerbForm=Part	7	aux:pass	7:aux:pass	_
7	shown	show	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
8	to	to	PART	TO	_	9	mark	9:mark	_
9	have	have	VERB	VB	VerbForm=Inf	7	xcomp	7:xcomp	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-111
11	strong	strong	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	robustness	robustness	NOUN	NN	Number=Sing	9	obj	9:obj	_
13	against	against	ADP	IN	_	15	case	15:case	_
14	non-Gaussian	non-Gaussian	ADJ	JJ	Degree=Pos|Polarity=Neg	15	amod	15:amod	Entity=(abstract-94
15	noises	noise	NOUN	NNS	Number=Plur	12	nmod	12:nmod:against	Entity=abstract-111)abstract-94)
16	at	at	ADP	IN	_	18	case	18:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-112
18	expense	expense	NOUN	NN	Number=Sing	9	obl	9:obl:at	_
19	of	of	SCONJ	IN	_	20	mark	20:mark	_
20	increasing	increase	VERB	VBG	VerbForm=Ger	18	acl	18:acl:of	_
21	computational	computational	ADJ	JJ	Degree=Pos	22	amod	22:amod	Entity=(abstract-113
22	burden	burden	NOUN	NN	Number=Sing	20	obj	20:obj	_
23	in	in	ADP	IN	_	25	case	25:case	_
24	training	training	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-114(abstract-73)
25	processing	processing	NOUN	NN	Number=Sing	22	nmod	22:nmod:in	Entity=abstract-112)abstract-113)abstract-114)
26	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-23
# text = In addition , minimizing the logarithmic moments of the error , the logarithmic error measure — including the Cauchy loss ( CL ) with low computational complexity — is an appropriate measure of optimality .
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:99->98
2	addition	addition	NOUN	NN	Number=Sing	32	nmod	32:nmod:in	_
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	minimizing	minimize	VERB	VBG	VerbForm=Ger	32	advcl	32:advcl	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-115
6	logarithmic	logarithmic	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	moments	moment	NOUN	NNS	Number=Plur	4	obj	4:obj	_
8	of	of	ADP	IN	_	10	case	10:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-99
10	error	error	NOUN	NN	Number=Sing	7	nmod	7:nmod:of	Entity=abstract-115)abstract-99)
11	,	,	PUNCT	,	_	4	punct	4:punct	_
12	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Discourse=elaboration:100->99|Entity=(abstract-100
13	logarithmic	logarithmic	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
14	error	error	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(abstract-99)
15	measure	measure	NOUN	NN	Number=Sing	32	nsubj	32:nsubj	_
16	—	—	PUNCT	:	_	20	punct	20:punct	Discourse=elaboration:101->100
17	including	include	VERB	VBG	VerbForm=Ger	20	case	20:case	_
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-88
19	Cauchy	Cauchy	PROPN	NNP	Number=Sing	20	compound	20:compound	Entity=(abstract-116)
20	loss	loss	NOUN	NN	Number=Sing	15	nmod	15:nmod:including	Entity=abstract-100)abstract-88)
21	(	(	PUNCT	-LRB-	_	22	punct	22:punct	Discourse=restatement:102->101
22	CL	CL	PROPN	NNP	Number=Sing	20	appos	20:appos	Entity=(abstract-88)
23	)	)	PUNCT	-RRB-	_	22	punct	22:punct	_
24	with	with	ADP	IN	_	27	case	27:case	Discourse=elaboration:103->101
25	low	low	ADJ	JJ	Degree=Pos	27	amod	27:amod	Entity=(abstract-117
26	computational	computational	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	complexity	complexity	NOUN	NN	Number=Sing	20	nmod	20:nmod:with	Entity=abstract-117)
28	—	—	PUNCT	:	_	15	punct	15:punct	_
29	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	cop	32:cop	Discourse=same_unit:104->99
30	an	a	DET	DT	Definite=Ind|PronType=Art	32	det	32:det	Entity=(abstract-100
31	appropriate	appropriate	ADJ	JJ	Degree=Pos	32	amod	32:amod	_
32	measure	measure	NOUN	NN	Number=Sing	0	root	0:root	_
33	of	of	ADP	IN	_	34	case	34:case	_
34	optimality	optimality	NOUN	NN	Number=Sing	32	nmod	32:nmod:of	Entity=abstract-100)(abstract-118)
35	.	.	PUNCT	.	_	32	punct	32:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-24
# text = Using the Cauchy loss to penalize the noise term , some algorithms based on the minimum Cauchy loss ( MCL ) criterion are efficient for combating non-Gaussian noises , especially for heavy-tailed - stable noises .
1	Using	use	VERB	VBG	VerbForm=Ger	24	advcl	24:advcl	Discourse=means:105->99
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-88
3	Cauchy	Cauchy	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=(abstract-116)
4	loss	loss	NOUN	NN	Number=Sing	1	obj	1:obj	Entity=abstract-88)
5	to	to	PART	TO	_	6	mark	6:mark	Discourse=purpose:106->105
6	penalize	penalize	VERB	VB	VerbForm=Inf	1	advcl	1:advcl:to	_
7	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-119
8	noise	noise	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-105)
9	term	term	NOUN	NN	Number=Sing	6	obj	6:obj	Entity=abstract-119)
10	,	,	PUNCT	,	_	1	punct	1:punct	_
11	some	some	DET	DT	_	12	det	12:det	Discourse=same_unit:107->105|Entity=(abstract-19
12	algorithms	algorithm	NOUN	NNS	Number=Plur	24	nsubj	24:nsubj	_
13	based	base	VERB	VBN	Tense=Past|VerbForm=Part	12	acl	12:acl	Discourse=elaboration:108->107
14	on	on	ADP	IN	_	22	case	22:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-50
16	minimum	minimum	ADJ	JJ	Degree=Pos	18	amod	18:amod	Entity=(abstract-88
17	Cauchy	Cauchy	PROPN	NNP	Number=Sing	18	compound	18:compound	Entity=(abstract-116)
18	loss	loss	NOUN	NN	Number=Sing	22	compound	22:compound	Entity=abstract-88)
19	(	(	PUNCT	-LRB-	_	20	punct	20:punct	Discourse=elaboration:109->107
20	MCL	MCL	PROPN	NNP	Number=Sing	18	appos	18:appos	Entity=(abstract-88)
21	)	)	PUNCT	-RRB-	_	20	punct	20:punct	_
22	criterion	criterion	NOUN	NN	Number=Sing	13	obl	13:obl:on	Entity=abstract-19)abstract-50)
23	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	24	cop	24:cop	Discourse=same_unit:110->107
24	efficient	efficient	ADJ	JJ	Degree=Pos	0	root	0:root	_
25	for	for	SCONJ	IN	_	26	mark	26:mark	Discourse=purpose:111->110
26	combating	combat	VERB	VBG	VerbForm=Ger	24	advcl	24:advcl:for	_
27	non-Gaussian	non-Gaussian	ADJ	JJ	Degree=Pos|Polarity=Neg	28	amod	28:amod	Entity=(abstract-94
28	noises	noise	NOUN	NNS	Number=Plur	26	obj	26:obj	Entity=abstract-94)
29	,	,	PUNCT	,	_	35	punct	35:punct	_
30	especially	especially	ADV	RB	Degree=Pos	35	advmod	35:advmod	Entity=(abstract-94
31	for	for	ADP	IN	_	35	case	35:case	_
32	heavy-tailed	heavy-tailed	ADJ	JJ	Degree=Pos	35	amod	35:amod	_
33	-	-	PUNCT	:	_	32	punct	32:punct	_
34	stable	stable	ADJ	JJ	Degree=Pos	35	amod	35:amod	_
35	noises	noise	NOUN	NNS	Number=Plur	24	obl	24:obl:for	Entity=abstract-94)
36	.	.	PUNCT	.	_	24	punct	24:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-25
# text = From the aspect of the optimization method , the stochastic gradient descent ( SGD)-based algorithms cannot find the minimum using the negative gradient in some loss functions .
1	From	from	ADP	IN	_	3	case	3:case	Discourse=joint:112->99
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-120
3	aspect	aspect	NOUN	NN	Number=Sing	17	obl	17:obl:from	_
4	of	of	ADP	IN	_	7	case	7:case	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-10
6	optimization	optimization	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-121)
7	method	method	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-120)abstract-10)
8	,	,	PUNCT	,	_	3	punct	3:punct	_
9	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-19(abstract-21
10	stochastic	stochastic	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
11	gradient	gradient	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(substance-22)
12	descent	descent	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=abstract-21)
13	(	(	PUNCT	-LRB-	_	14	punct	14:punct	Discourse=elaboration:113->112
14	SGD)-based	sGD)-base	VERB	VBN	Tense=Past|VerbForm=Part	12	appos	12:appos	_
15	algorithms	algorithm	NOUN	NNS	Number=Plur	17	nsubj	17:nsubj	Entity=abstract-19)
16	cannot	cannot	AUX	MD	VerbForm=Fin	17	aux	17:aux	_
17	find	find	VERB	VB	VerbForm=Inf	0	root	0:root	_
18	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(abstract-93
19	minimum	minimum	NOUN	NN	Number=Sing	17	obj	17:obj	Entity=abstract-93)
20	using	use	VERB	VBG	VerbForm=Ger	17	advcl	17:advcl	Discourse=means:114->113
21	the	the	DET	DT	Definite=Def|PronType=Art	23	det	23:det	Entity=(substance-22
22	negative	negative	ADJ	JJ	Degree=Pos	23	amod	23:amod	_
23	gradient	gradient	NOUN	NN	Number=Sing	20	obj	20:obj	_
24	in	in	ADP	IN	_	27	case	27:case	_
25	some	some	DET	DT	_	27	det	27:det	Entity=(abstract-122
26	loss	loss	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-88)
27	functions	function	NOUN	NNS	Number=Plur	23	nmod	23:nmod:in	Entity=substance-22)abstract-122)
28	.	.	PUNCT	.	_	17	punct	17:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-26
# text = Toward this end , recursive-based algorithms address these issues at the cost of increasing computational cost .
1	Toward	toward	ADP	IN	_	3	case	3:case	Discourse=preparation:115->116
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-123
3	end	end	NOUN	NN	Number=Sing	7	obl	7:obl:toward	Entity=abstract-123)
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	recursive-based	recursive-based	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-19
6	algorithms	algorithm	NOUN	NNS	Number=Plur	7	nsubj	7:nsubj	Entity=abstract-19)
7	address	address	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
8	these	this	DET	DT	Number=Plur|PronType=Dem	9	det	9:det	Entity=(abstract-124
9	issues	issue	NOUN	NNS	Number=Plur	7	obj	7:obj	Entity=abstract-124)
10	at	at	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-125
12	cost	cost	NOUN	NN	Number=Sing	7	obl	7:obl:at	_
13	of	of	SCONJ	IN	_	14	mark	14:mark	_
14	increasing	increase	VERB	VBG	VerbForm=Ger	12	acl	12:acl:of	_
15	computational	computational	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(abstract-125
16	cost	cost	NOUN	NN	Number=Sing	14	obj	14:obj	Entity=abstract-125)abstract-125)
17	.	.	PUNCT	.	_	7	punct	7:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-27
# text = In comparison with the SGD method and recursive method , the conjugate gradient ( CG ) method and Newton ’s method as developments of SGD have become alternative optimization methods in KAFs .
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:116->112
2	comparison	comparison	NOUN	NN	Number=Sing	27	obl	27:obl:in	Entity=(abstract-126
3	with	with	ADP	IN	_	6	case	6:case	_
4	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-55(abstract-10
5	SGD	SGD	PROPN	NNP	Number=Sing	6	compound	6:compound	Entity=(abstract-21)
6	method	method	NOUN	NN	Number=Sing	2	nmod	2:nmod:with	Entity=abstract-10)
7	and	and	CCONJ	CC	_	9	cc	9:cc	_
8	recursive	recursive	ADJ	JJ	Degree=Pos	9	amod	9:amod	Entity=(abstract-10
9	method	method	NOUN	NN	Number=Sing	6	conj	2:nmod:with|6:conj:and	Entity=abstract-126)abstract-55)abstract-10)
10	,	,	PUNCT	,	_	2	punct	2:punct	_
11	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Discourse=joint:117->116|Entity=(abstract-55(abstract-10
12	conjugate	conjugate	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(substance-22(abstract-86)
13	gradient	gradient	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=substance-22)
14	(	(	PUNCT	-LRB-	_	15	punct	15:punct	Discourse=restatement:118->117
15	CG	CG	PROPN	NNP	Number=Sing	13	appos	13:appos	Entity=(abstract-127)
16	)	)	PUNCT	-RRB-	_	15	punct	15:punct	_
17	method	method	NOUN	NN	Number=Sing	27	nsubj	27:nsubj|30:nsubj:xsubj	Discourse=same_unit:119->117|Entity=abstract-10)
18	and	and	CCONJ	CC	_	21	cc	21:cc	_
19	Newton	Newton	PROPN	NNP	Number=Sing	21	nmod:poss	21:nmod:poss	Entity=(abstract-10(person-128
20	’s	's	PART	POS	_	19	case	19:case	Entity=person-128)
21	method	method	NOUN	NN	Number=Sing	17	conj	17:conj:and|27:nsubj:xsubj|30:nsubj:xsubj	_
22	as	as	ADP	IN	_	23	case	23:case	_
23	developments	development	NOUN	NNS	Number=Plur	21	nmod	21:nmod:as	Entity=(abstract-129
24	of	of	ADP	IN	_	25	case	25:case	_
25	SGD	SGD	PROPN	NNP	Number=Sing	23	nmod	23:nmod:of	Entity=abstract-55)abstract-10)abstract-129)(abstract-21)
26	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	27	aux	27:aux	_
27	become	become	VERB	VBN	Tense=Past|VerbForm=Part	0	root	0:root	_
28	alternative	alternative	ADJ	JJ	Degree=Pos	30	amod	30:amod	_
29	optimization	optimization	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-121)
30	methods	method	NOUN	NNS	Number=Plur	27	xcomp	27:xcomp	_
31	in	in	ADP	IN	_	32	case	32:case	_
32	KAFs	kaf	NOUN	NNS	Number=Plur	30	nmod	30:nmod:in	Entity=(abstract-20)
33	.	.	PUNCT	.	_	27	punct	27:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-28
# text = The inverse of matrix of Newton ’s method increases the computation and causes the divergence of algorithms in some cases .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:120->116|Entity=(abstract-130
2	inverse	inverse	NOUN	NN	Number=Sing	9	nsubj	9:nsubj|13:nsubj	_
3	of	of	ADP	IN	_	4	case	4:case	_
4	matrix	matrix	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=(abstract-131
5	of	of	ADP	IN	_	8	case	8:case	_
6	Newton	Newton	PROPN	NNP	Number=Sing	8	nmod:poss	8:nmod:poss	Entity=(abstract-10(person-128
7	’s	's	PART	POS	_	6	case	6:case	Entity=person-128)
8	method	method	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=abstract-130)abstract-131)abstract-10)
9	increases	increase	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-132
11	computation	computation	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=abstract-132)
12	and	and	CCONJ	CC	_	13	cc	13:cc	Discourse=elaboration:121->120
13	causes	cause	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	conj	9:conj:and	_
14	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(abstract-133
15	divergence	divergence	NOUN	NN	Number=Sing	13	obj	13:obj	_
16	of	of	ADP	IN	_	17	case	17:case	_
17	algorithms	algorithm	NOUN	NNS	Number=Plur	15	nmod	15:nmod:of	Entity=abstract-133)(abstract-19)
18	in	in	ADP	IN	_	20	case	20:case	_
19	some	some	DET	DT	_	20	det	20:det	Entity=(abstract-134
20	cases	case	NOUN	NNS	Number=Plur	13	obl	13:obl:in	Entity=abstract-134)
21	.	.	PUNCT	.	_	9	punct	9:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-29
# text = However , the CG method gives a trade-off between convergence rate and computational complexity without the inverse computation , and has been successfully applied in various fields , including compressed sensing , neural networks , and large-scale optimization .
1	However	however	ADV	RB	_	6	advmod	6:advmod	Discourse=contrast:122->120
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-10
4	CG	CG	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(abstract-127)
5	method	method	NOUN	NN	Number=Sing	6	nsubj	6:nsubj|24:nsubj:pass	Entity=abstract-10)
6	gives	give	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(event-135
8	trade-off	trade-off	NOUN	NN	Number=Sing	6	obj	6:obj	_
9	between	between	ADP	IN	_	11	case	11:case	_
10	convergence	convergence	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-106(abstract-107)
11	rate	rate	NOUN	NN	Number=Sing	8	nmod	8:nmod:between	Entity=abstract-106)
12	and	and	CCONJ	CC	_	14	cc	14:cc	_
13	computational	computational	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(abstract-117
14	complexity	complexity	NOUN	NN	Number=Sing	11	conj	8:nmod:between|11:conj:and	_
15	without	without	ADP	IN	_	18	case	18:case	_
16	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-132
17	inverse	inverse	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
18	computation	computation	NOUN	NN	Number=Sing	14	nmod	14:nmod:without	Entity=event-135)abstract-117)abstract-132)
19	,	,	PUNCT	,	_	24	punct	24:punct	_
20	and	and	CCONJ	CC	_	24	cc	24:cc	Discourse=joint:123->122
21	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	aux	24:aux	_
22	been	be	AUX	VBN	Tense=Past|VerbForm=Part	24	aux:pass	24:aux:pass	_
23	successfully	successfully	ADV	RB	Degree=Pos	24	advmod	24:advmod	_
24	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	conj	6:conj:and	_
25	in	in	ADP	IN	_	27	case	27:case	_
26	various	various	ADJ	JJ	Degree=Pos	27	amod	27:amod	Entity=(abstract-136
27	fields	field	NOUN	NNS	Number=Plur	24	obl	24:obl:in	_
28	,	,	PUNCT	,	_	31	punct	31:punct	_
29	including	include	VERB	VBG	VerbForm=Ger	31	case	31:case	Discourse=elaboration:124->123
30	compressed	compress	VERB	VBN	Tense=Past|VerbForm=Part	31	amod	31:amod	Entity=(abstract-137
31	sensing	sensing	NOUN	NN	Number=Sing	27	nmod	27:nmod:including	Entity=abstract-137)
32	,	,	PUNCT	,	_	34	punct	34:punct	_
33	neural	neural	ADJ	JJ	Degree=Pos	34	amod	34:amod	Entity=(abstract-138
34	networks	network	NOUN	NNS	Number=Plur	31	conj	27:nmod:including|31:conj:and	Entity=abstract-138)
35	,	,	PUNCT	,	_	38	punct	38:punct	_
36	and	and	CCONJ	CC	_	38	cc	38:cc	_
37	large-scale	large-scale	ADJ	JJ	Degree=Pos	38	amod	38:amod	Entity=(abstract-121
38	optimization	optimization	NOUN	NN	Number=Sing	31	conj	27:nmod:including|31:conj:and	Entity=abstract-136)abstract-121)
39	.	.	PUNCT	.	_	6	punct	6:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-30
# text = In addition , the kernel conjugate gradient ( KCG ) method is proposed for adaptive filtering .
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:125->122
2	addition	addition	NOUN	NN	Number=Sing	13	obl	13:obl:in	_
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-10
5	kernel	kernel	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(substance-22(abstract-8)
6	conjugate	conjugate	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-86)
7	gradient	gradient	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=substance-22)
8	(	(	PUNCT	-LRB-	_	9	punct	9:punct	Discourse=restatement:126->125
9	KCG	KCG	PROPN	NNP	Number=Sing	7	appos	7:appos	Entity=(abstract-139)
10	)	)	PUNCT	-RRB-	_	9	punct	9:punct	_
11	method	method	NOUN	NN	Number=Sing	13	nsubj:pass	13:nsubj:pass	Discourse=same_unit:127->125|Entity=abstract-10)
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
13	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
14	for	for	ADP	IN	_	16	case	16:case	_
15	adaptive	adaptive	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(abstract-140
16	filtering	filtering	NOUN	NN	Number=Sing	13	obl	13:obl:for	Entity=abstract-140)
17	.	.	PUNCT	.	_	13	punct	13:punct	_

# s_type = decl
# sent_id = AMALGUM_academic_fourier-31
# text = KCG with low computational and space requirements can produce a better solution than KLMS , and has comparable accuracy to KRLS .
1	KCG	KCG	PROPN	NNP	Number=Sing	9	nsubj	9:nsubj|17:nsubj	Discourse=joint:128->125|Entity=(abstract-139
2	with	with	ADP	IN	_	7	case	7:case	_
3	low	low	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(abstract-141
4	computational	computational	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
5	and	and	CCONJ	CC	_	6	cc	6:cc	_
6	space	space	NOUN	NN	Number=Sing	4	conj	4:conj:and|7:compound	_
7	requirements	requirement	NOUN	NNS	Number=Plur	1	nmod	1:nmod:with	Entity=abstract-139)abstract-141)
8	can	can	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	produce	produce	VERB	VB	VerbForm=Inf	0	root	0:root	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-75
11	better	good	ADJ	JJR	Degree=Cmp	12	amod	12:amod	_
12	solution	solution	NOUN	NN	Number=Sing	9	obj	9:obj	_
13	than	than	ADP	IN	_	14	case	14:case	_
14	KLMS	KLMS	PROPN	NNP	Number=Sing	12	nmod	12:nmod:than	Entity=abstract-75)(abstract-27)
15	,	,	PUNCT	,	_	17	punct	17:punct	_
16	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:129->128
17	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	conj	9:conj:and	_
18	comparable	comparable	ADJ	JJ	Degree=Pos	19	amod	19:amod	Entity=(abstract-142
19	accuracy	accuracy	NOUN	NN	Number=Sing	17	obj	17:obj	Entity=abstract-142)
20	to	to	ADP	IN	_	21	case	21:case	_
21	KRLS	KRLS	PROPN	NNP	Number=Sing	17	obl	17:obl:to	Entity=(abstract-32)
22	.	.	PUNCT	.	_	9	punct	9:punct	_

