# newdoc id = AMALGUM_academic_gradient
# sent_id = AMALGUM_academic_gradient-1
# s_type = frag
# text = 2. Gradient Descent Learning of Stochastic Neural Networks
1	2.	2.	X	LS	_	4	dep	4:dep	Discourse=preparation:1->3
2	Gradient	Gradient	ADJ	NNP	Number=Sing	3	amod	3:amod	Entity=(abstract-1(abstract-2
3	Descent	Descent	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=abstract-2)
4	Learning	learning	NOUN	NN	Number=Sing	0	root	0:root	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	Stochastic	Stochastic	ADJ	NNP	Number=Sing	8	amod	8:amod	Entity=(abstract-3
7	Neural	Neural	ADJ	NNP	Number=Sing	8	amod	8:amod	_
8	Networks	Network	PROPN	NNPS	Number=Plur	4	nmod	4:nmod:of	Entity=abstract-1)abstract-3)

# sent_id = AMALGUM_academic_gradient-2
# s_type = frag
# text = 2.1. Stochastic Neural Networks
1	2.1.	2.1.	NUM	CD	NumForm=Digit|NumType=Card	4	dep	4:dep	Discourse=preparation:2->3
2	Stochastic	Stochastic	ADJ	JJ	Degree=Pos	4	amod	4:amod	Entity=(abstract-3
3	Neural	Neural	PROPN	NNP	Number=Sing	4	compound	4:compound	Entity=(abstract-4)
4	Networks	Network	PROPN	NNPS	Number=Plur	0	root	0:root	Entity=abstract-3)

# sent_id = AMALGUM_academic_gradient-3
# s_type = imp
# text = Since the natural gradient is derived from stochastic neural network models, let us start from the brief description of the two popular stochastic models.
1	Since	since	SCONJ	IN	_	6	mark	6:mark	Discourse=ROOT:3
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-5
3	natural	natural	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	gradient	gradient	NOUN	NN	Number=Sing	6	nsubj:pass	6:nsubj:pass	Entity=abstract-5)
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	6:aux:pass	_
6	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	advcl	13:advcl:since	_
7	from	from	ADP	IN	_	11	case	11:case	_
8	stochastic	stochastic	ADJ	JJ	Degree=Pos	11	amod	11:amod	Entity=(abstract-6
9	neural	neural	ADJ	JJ	Degree=Pos	10	amod	10:amod	Entity=(abstract-7
10	network	network	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=abstract-7)
11	models	model	NOUN	NNS	Number=Plur	6	obl	6:obl:from	Entity=abstract-6)|SpaceAfter=No
12	,	,	PUNCT	,	_	6	punct	6:punct	_
13	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:4->3
14	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	13	obj	13:obj|15:nsubj:xsubj	Entity=(person-8)
15	start	start	VERB	VB	VerbForm=Inf	13	xcomp	13:xcomp	_
16	from	from	ADP	IN	_	19	case	19:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(abstract-9
18	brief	brief	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
19	description	description	NOUN	NN	Number=Sing	15	obl	15:obl:from	_
20	of	of	ADP	IN	_	25	case	25:case	_
21	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	Entity=(abstract-6
22	two	2	NUM	CD	NumForm=Digit|NumType=Card	25	nummod	25:nummod	_
23	popular	popular	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
24	stochastic	stochastic	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
25	models	model	NOUN	NNS	Number=Plur	19	nmod	19:nmod:of	Entity=abstract-9)abstract-6)|SpaceAfter=No
26	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_gradient-4
# s_type = multiple
# text = Although typical neural networks, including deep networks, are defined as deterministic input-output mapping functions of input , output , and parameter , the observed data for training the networks always have inevitable noises and thus the input-output relation can be described in the stochastic manner.
1	Although	although	SCONJ	IN	_	11	mark	11:mark	Discourse=concession:5->6
2	typical	typical	ADJ	JJ	Degree=Pos	4	amod	4:amod	Entity=(abstract-3
3	neural	neural	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	networks	network	NOUN	NNS	Number=Plur	11	nsubj:pass	11:nsubj:pass	SpaceAfter=No
5	,	,	PUNCT	,	_	8	punct	8:punct	_
6	including	include	VERB	VBG	VerbForm=Ger	8	case	8:case	_
7	deep	deep	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=(abstract-3
8	networks	network	NOUN	NNS	Number=Plur	4	nmod	4:nmod:including	Entity=abstract-3)abstract-3)|SpaceAfter=No
9	,	,	PUNCT	,	_	4	punct	4:punct	_
10	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	aux:pass	11:aux:pass	_
11	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	33	advcl	33:advcl:although	_
12	as	as	ADP	IN	_	16	case	16:case	_
13	deterministic	deterministic	ADJ	JJ	Degree=Pos	16	amod	16:amod	Entity=(abstract-10
14	input-output	input-output	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
15	mapping	mapping	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-11)
16	functions	function	NOUN	NNS	Number=Plur	11	obl	11:obl:as	_
17	of	of	ADP	IN	_	18	case	18:case	_
18	input	input	NOUN	NN	Number=Sing	16	nmod	16:nmod:of	Entity=(abstract-12)
19	,	,	PUNCT	,	_	20	punct	20:punct	_
20	output	output	NOUN	NN	Number=Sing	18	conj	16:nmod:of|18:conj:and	Entity=(abstract-13)
21	,	,	PUNCT	,	_	23	punct	23:punct	_
22	and	and	CCONJ	CC	_	23	cc	23:cc	_
23	parameter	parameter	NOUN	NN	Number=Sing	18	conj	16:nmod:of|18:conj:and	Entity=abstract-10)(abstract-14)
24	,	,	PUNCT	,	_	11	punct	11:punct	_
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Discourse=joint:6->3|Entity=(abstract-15
26	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part	27	amod	27:amod	_
27	data	datum	NOUN	NNS	Number=Plur	33	nsubj	33:nsubj	_
28	for	for	SCONJ	IN	_	29	mark	29:mark	Discourse=purpose:7->6
29	training	train	VERB	VBG	VerbForm=Ger	27	acl	27:acl:for	_
30	the	the	DET	DT	Definite=Def|PronType=Art	31	det	31:det	Entity=(abstract-3
31	networks	network	NOUN	NNS	Number=Plur	29	obj	29:obj	Entity=abstract-15)abstract-3)
32	always	always	ADV	RB	_	33	advmod	33:advmod	_
33	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
34	inevitable	inevitable	ADJ	JJ	Degree=Pos	35	amod	35:amod	Entity=(abstract-16
35	noises	noise	NOUN	NNS	Number=Plur	33	obj	33:obj	Entity=abstract-16)
36	and	and	CCONJ	CC	_	43	cc	43:cc	Discourse=joint:8->7
37	thus	thus	ADV	RB	_	43	advmod	43:advmod	_
38	the	the	DET	DT	Definite=Def|PronType=Art	40	det	40:det	Entity=(abstract-17
39	input-output	input-output	ADJ	JJ	Degree=Pos	40	amod	40:amod	_
40	relation	relation	NOUN	NN	Number=Sing	43	nsubj:pass	43:nsubj:pass	Entity=abstract-17)
41	can	can	AUX	MD	VerbForm=Fin	43	aux	43:aux	_
42	be	be	AUX	VB	VerbForm=Inf	43	aux:pass	43:aux:pass	_
43	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	33	conj	33:conj:and	_
44	in	in	ADP	IN	_	47	case	47:case	_
45	the	the	DET	DT	Definite=Def|PronType=Art	47	det	47:det	Entity=(abstract-18
46	stochastic	stochastic	ADJ	JJ	Degree=Pos	47	amod	47:amod	_
47	manner	manner	NOUN	NN	Number=Sing	43	obl	43:obl:in	Entity=abstract-18)|SpaceAfter=No
48	.	.	PUNCT	.	_	33	punct	33:punct	_

# sent_id = AMALGUM_academic_gradient-5
# s_type = sub
# text = In other words, the observed output can be regarded as a random vector that is dependent on the deterministic function and some additional stochastic process that is described by the conditional probability .
1	In	in	ADP	IN	_	3	case	3:case	Discourse=joint:9->3
2	other	other	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	words	word	NOUN	NNS	Number=Plur	10	obl	10:obl:in	SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-13
6	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part	7	amod	7:amod	_
7	output	output	NOUN	NN	Number=Sing	10	nsubj:pass	10:nsubj:pass	Entity=abstract-13)
8	can	can	AUX	MD	VerbForm=Fin	10	aux	10:aux	_
9	be	be	AUX	VB	VerbForm=Inf	10	aux:pass	10:aux:pass	_
10	regarded	regard	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
11	as	as	ADP	IN	_	14	case	14:case	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(abstract-19
13	random	random	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	vector	vector	NOUN	NN	Number=Sing	10	obl	10:obl:as|17:nsubj	_
15	that	that	PRON	WDT	PronType=Rel	17	nsubj	14:ref	Discourse=elaboration:10->9
16	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	cop	17:cop	_
17	dependent	dependent	ADJ	JJ	Degree=Pos	14	acl:relcl	14:acl:relcl	_
18	on	on	ADP	IN	_	21	case	21:case	_
19	the	the	DET	DT	Definite=Def|PronType=Art	21	det	21:det	Entity=(abstract-20
20	deterministic	deterministic	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
21	function	function	NOUN	NN	Number=Sing	17	obl	17:obl:on	Entity=abstract-20)
22	and	and	CCONJ	CC	_	26	cc	26:cc	_
23	some	some	DET	DT	_	26	det	26:det	Entity=(abstract-21
24	additional	additional	ADJ	JJ	Degree=Pos	26	amod	26:amod	_
25	stochastic	stochastic	ADJ	JJ	Degree=Pos	26	amod	26:amod	_
26	process	process	NOUN	NN	Number=Sing	21	conj	17:obl:on|21:conj:and|29:nsubj:pass	_
27	that	that	PRON	WDT	PronType=Rel	29	nsubj:pass	26:ref	Discourse=elaboration:11->10
28	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	aux:pass	29:aux:pass	_
29	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	26	acl:relcl	26:acl:relcl	_
30	by	by	ADP	IN	_	33	case	33:case	_
31	the	the	DET	DT	Definite=Def|PronType=Art	33	det	33:det	Entity=(abstract-22
32	conditional	conditional	ADJ	JJ	Degree=Pos	33	amod	33:amod	_
33	probability	probability	NOUN	NN	Number=Sing	29	obl	29:obl:by	Entity=abstract-19)abstract-21)abstract-22)
34	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_academic_gradient-6
# s_type = decl
# text = Then the goal of learning is to find an optimal value of parameter that minimizes the loss function defined as negative log likelihood of given input-output sample .
1	Then	then	ADV	RB	PronType=Dem	8	advmod	8:advmod	Discourse=sequence:12->9
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-23
3	goal	goal	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	_
4	of	of	ADP	IN	_	5	case	5:case	_
5	learning	learning	NOUN	NN	Number=Sing	3	nmod	3:nmod:of	Entity=abstract-23)(abstract-1)
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
7	to	to	PART	TO	_	8	mark	8:mark	_
8	find	find	VERB	VB	VerbForm=Inf	0	root	0:root	_
9	an	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(abstract-24
10	optimal	optimal	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	value	value	NOUN	NN	Number=Sing	8	obj	8:obj|15:nsubj	_
12	of	of	ADP	IN	_	13	case	13:case	_
13	parameter	parameter	NOUN	NN	Number=Sing	11	nmod	11:nmod:of	Entity=(abstract-14)
14	that	that	PRON	WDT	PronType=Rel	15	nsubj	11:ref	Discourse=elaboration:13->12
15	minimizes	minimize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	acl:relcl	11:acl:relcl	Entity=(abstract-25)
16	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-20
17	loss	loss	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-26)
18	function	function	NOUN	NN	Number=Sing	15	obj	15:obj	_
19	defined	define	VERB	VBN	Tense=Past|VerbForm=Part	18	acl	18:acl	Discourse=elaboration:14->13
20	as	as	ADP	IN	_	23	case	23:case	_
21	negative	negative	ADJ	JJ	Degree=Pos	23	amod	23:amod	Entity=(abstract-27
22	log	log	NOUN	NN	Number=Sing	23	compound	23:compound	Entity=(object-28)
23	likelihood	likelihood	NOUN	NN	Number=Sing	19	obl	19:obl:as	_
24	of	of	ADP	IN	_	27	case	27:case	_
25	given	give	VERB	VBN	Tense=Past|VerbForm=Part	27	amod	27:amod	Entity=(abstract-29
26	input-output	input-output	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	sample	sample	NOUN	NN	Number=Sing	23	nmod	23:nmod:of	Entity=abstract-24)abstract-20)abstract-27)abstract-29)
28	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_academic_gradient-7
# s_type = decl
# text = The loss function can then be written as (1) and the optimal parameter is described as (2)
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=sequence:15->9|Entity=(abstract-20
2	loss	loss	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(abstract-26)
3	function	function	NOUN	NN	Number=Sing	7	nsubj:pass	7:nsubj:pass	Entity=abstract-20)
4	can	can	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
5	then	then	ADV	RB	PronType=Dem	7	advmod	7:advmod	_
6	be	be	AUX	VB	VerbForm=Inf	7	aux:pass	7:aux:pass	_
7	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
8	as	as	ADP	IN	_	10	case	10:case	_
9	(	(	PUNCT	-LRB-	_	10	punct	10:punct	SpaceAfter=No
10	1	1	NUM	CD	NumForm=Digit|NumType=Card	7	obl	7:obl:as	Entity=(abstract-30)|SpaceAfter=No
11	)	)	PUNCT	-RRB-	_	10	punct	10:punct	_
12	and	and	CCONJ	CC	_	17	cc	17:cc	Discourse=joint:16->15
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(abstract-14
14	optimal	optimal	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	parameter	parameter	NOUN	NN	Number=Sing	17	nsubj:pass	17:nsubj:pass	Entity=abstract-14)
16	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	aux:pass	17:aux:pass	_
17	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	conj	7:conj:and	_
18	as	as	ADP	IN	_	20	case	20:case	_
19	(	(	PUNCT	-LRB-	_	20	punct	20:punct	SpaceAfter=No
20	2	2	NUM	CD	NumForm=Digit|NumType=Card	17	dep	17:dep	SpaceAfter=No
21	)	)	PUNCT	-RRB-	_	20	punct	20:punct	_

# sent_id = AMALGUM_academic_gradient-8
# s_type = imp
# text = Note that the last term in equation (1) is independent of parameter and can be ignored in the objective function for optimization.
1	Note	note	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:17->18
2	that	that	SCONJ	IN	_	12	mark	12:mark	Discourse=joint:18->15
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-31
4	last	last	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	term	term	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	_
6	in	in	ADP	IN	_	7	case	7:case	_
7	equation	equation	NOUN	NN	Number=Sing	5	nmod	5:nmod:in	Entity=abstract-31)(abstract-32)
8	(	(	PUNCT	-LRB-	_	9	punct	9:punct	SpaceAfter=No
9	1	1	NUM	CD	NumForm=Digit|NumType=Card	7	appos	7:appos	Entity=(abstract-32)|SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	9	punct	9:punct	_
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	12:cop	_
12	independent	independent	ADJ	JJ	Degree=Pos	1	ccomp	1:ccomp	_
13	of	of	ADP	IN	_	14	case	14:case	_
14	parameter	parameter	NOUN	NN	Number=Sing	12	obl	12:obl:of	Entity=(abstract-14)
15	and	and	CCONJ	CC	_	18	cc	18:cc	Discourse=joint:19->15
16	can	can	AUX	MD	VerbForm=Fin	18	aux	18:aux	_
17	be	be	AUX	VB	VerbForm=Inf	18	aux:pass	18:aux:pass	_
18	ignored	ignore	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	conj	1:ccomp|12:conj:and	_
19	in	in	ADP	IN	_	22	case	22:case	_
20	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-20
21	objective	objective	ADJ	JJ	Degree=Pos	22	amod	22:amod	_
22	function	function	NOUN	NN	Number=Sing	18	obl	18:obl:in	_
23	for	for	ADP	IN	_	24	case	24:case	_
24	optimization	optimization	NOUN	NN	Number=Sing	22	nmod	22:nmod:for	Entity=abstract-20)(abstract-33)|SpaceAfter=No
25	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_gradient-9
# s_type = sub
# text = Based on the general definition, the conventional neural networks can be regarded as a special case with a specific conditional probability distribution, .
1	Based	base	VERB	VBN	Tense=Past|VerbForm=Part	13	advcl	13:advcl	Discourse=preparation:20->21
2	on	on	ADP	IN	_	5	case	5:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-34
4	general	general	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	definition	definition	NOUN	NN	Number=Sing	1	obl	1:obl:on	Entity=abstract-34)|SpaceAfter=No
6	,	,	PUNCT	,	_	1	punct	1:punct	_
7	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Discourse=joint:21->15|Entity=(abstract-3
8	conventional	conventional	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
9	neural	neural	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	networks	network	NOUN	NNS	Number=Plur	13	nsubj:pass	13:nsubj:pass	Entity=abstract-3)
11	can	can	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
12	be	be	AUX	VB	VerbForm=Inf	13	aux:pass	13:aux:pass	_
13	regarded	regard	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
14	as	as	ADP	IN	_	17	case	17:case	_
15	a	a	DET	DT	Definite=Ind|PronType=Art	17	det	17:det	Entity=(abstract-35
16	special	special	ADJ	JJ	Degree=Pos	17	amod	17:amod	_
17	case	case	NOUN	NN	Number=Sing	13	obl	13:obl:as	_
18	with	with	ADP	IN	_	23	case	23:case	_
19	a	a	DET	DT	Definite=Ind|PronType=Art	23	det	23:det	Entity=(abstract-36
20	specific	specific	ADJ	JJ	Degree=Pos	23	amod	23:amod	_
21	conditional	conditional	ADJ	JJ	Degree=Pos	23	amod	23:amod	_
22	probability	probability	NOUN	NN	Number=Sing	23	compound	23:compound	Entity=(abstract-22)
23	distribution	distribution	NOUN	NN	Number=Sing	17	nmod	17:nmod:with	Entity=abstract-35)abstract-36)|SpaceAfter=No
24	,	,	PUNCT	,	_	13	punct	13:punct	_
25	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_gradient-10
# s_type = imp
# text = For example, consider that the output is observed with additive noise to the deterministic neural networks function such as (3) where is a random noise vector.
1	For	for	ADP	IN	_	2	case	2:case	Discourse=joint:22->21
2	example	example	NOUN	NN	Number=Sing	4	obl	4:obl:for	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	consider	consider	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
5	that	that	SCONJ	IN	_	9	mark	9:mark	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-13
7	output	output	NOUN	NN	Number=Sing	9	nsubj:pass	9:nsubj:pass	Entity=abstract-13)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	9:aux:pass	_
9	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	ccomp	4:ccomp	_
10	with	with	ADP	IN	_	12	case	12:case	_
11	additive	additive	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-37(person-38)
12	noise	noise	NOUN	NN	Number=Sing	9	obl	9:obl:with	Entity=abstract-37)
13	to	to	ADP	IN	_	18	case	18:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	18	det	18:det	Entity=(abstract-20
15	deterministic	deterministic	ADJ	JJ	Degree=Pos	18	amod	18:amod	_
16	neural	neural	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(abstract-3
17	networks	network	NOUN	NNS	Number=Plur	18	compound	18:compound	Entity=abstract-3)
18	function	function	NOUN	NN	Number=Sing	9	obl	9:obl:to	_
19	such	such	ADJ	JJ	Degree=Pos	22	case	22:case	_
20	as	as	ADP	IN	_	19	fixed	19:fixed	_
21	(	(	PUNCT	-LRB-	_	22	punct	22:punct	SpaceAfter=No
22	3	3	NUM	CD	NumForm=Digit|NumType=Card	18	dep	18:dep	SpaceAfter=No
23	)	)	PUNCT	-RRB-	_	22	punct	22:punct	_
24	where	where	SCONJ	WRB	PronType=Rel	29	nsubj	29:nsubj	Discourse=elaboration:23->22|Entity=(abstract-19
25	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	cop	29:cop	_
26	a	a	DET	DT	Definite=Ind|PronType=Art	29	det	29:det	_
27	random	random	ADJ	JJ	Degree=Pos	28	amod	28:amod	Entity=(abstract-37
28	noise	noise	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=abstract-37)
29	vector	vector	NOUN	NN	Number=Sing	18	acl:relcl	18:acl:relcl	Entity=abstract-20)abstract-19)|SpaceAfter=No
30	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_gradient-11
# s_type = decl
# text = When we assume that the random vector is subject to the standard Gaussian distribution, its probability density is defined as the normal distribution function, and its loss function becomes the well-known squared error function, which can be written as (4)
1	When	when	SCONJ	WRB	PronType=Int	3	mark	3:mark	Discourse=attribution:24->25
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	nsubj	3:nsubj	Entity=(person-8)
3	assume	assume	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	20	advcl	20:advcl:when	_
4	that	that	SCONJ	IN	_	9	mark	9:mark	Discourse=joint:25->21
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-19
6	random	random	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
7	vector	vector	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	Entity=abstract-19)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	9:cop	_
9	subject	subject	ADJ	JJ	Degree=Pos	3	ccomp	3:ccomp	_
10	to	to	ADP	IN	_	14	case	14:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-36
12	standard	standard	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
13	Gaussian	Gaussian	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	distribution	distribution	NOUN	NN	Number=Sing	9	obl	9:obl:to	Entity=abstract-36)|SpaceAfter=No
15	,	,	PUNCT	,	_	3	punct	3:punct	_
16	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	18	nmod:poss	18:nmod:poss	Discourse=elaboration:26->25|Entity=(abstract-39(abstract-36)
17	probability	probability	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-22)
18	density	density	NOUN	NN	Number=Sing	20	nsubj:pass	20:nsubj:pass	Entity=abstract-39)
19	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	aux:pass	20:aux:pass	_
20	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
21	as	as	ADP	IN	_	25	case	25:case	_
22	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	Entity=(abstract-20
23	normal	normal	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
24	distribution	distribution	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-36)
25	function	function	NOUN	NN	Number=Sing	20	obl	20:obl:as	Entity=abstract-20)|SpaceAfter=No
26	,	,	PUNCT	,	_	31	punct	31:punct	_
27	and	and	CCONJ	CC	_	31	cc	31:cc	Discourse=joint:27->26
28	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	30	nmod:poss	30:nmod:poss	Entity=(abstract-20(abstract-36)
29	loss	loss	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-26)
30	function	function	NOUN	NN	Number=Sing	31	nsubj	31:nsubj|36:nsubj:xsubj	Entity=abstract-20)
31	becomes	become	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	conj	20:conj:and	_
32	the	the	DET	DT	Definite=Def|PronType=Art	36	det	36:det	Entity=(abstract-20
33	well-known	well-known	ADJ	JJ	Degree=Pos	36	amod	36:amod	_
34	squared	square	VERB	VBN	Tense=Past|VerbForm=Part	35	amod	35:amod	Entity=(abstract-40
35	error	error	NOUN	NN	Number=Sing	36	compound	36:compound	Entity=abstract-40)
36	function	function	NOUN	NN	Number=Sing	31	xcomp	31:xcomp|41:nsubj:pass	SpaceAfter=No
37	,	,	PUNCT	,	_	41	punct	41:punct	_
38	which	which	PRON	WDT	PronType=Rel	41	nsubj:pass	36:ref	Discourse=elaboration:28->27
39	can	can	AUX	MD	VerbForm=Fin	41	aux	41:aux	_
40	be	be	AUX	VB	VerbForm=Inf	41	aux:pass	41:aux:pass	_
41	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	36	acl:relcl	36:acl:relcl	_
42	as	as	ADP	IN	_	41	obl	41:obl	Entity=abstract-20)
43	(	(	PUNCT	-LRB-	_	44	punct	44:punct	Discourse=restatement:29->28|SpaceAfter=No
44	4	4	NUM	CD	NumForm=Digit|NumType=Card	20	dep	20:dep	SpaceAfter=No
45	)	)	PUNCT	-RRB-	_	44	punct	44:punct	_

# sent_id = AMALGUM_academic_gradient-12
# s_type = decl
# text = Therefore, the stochastic neural network model with additive Gaussian noise is equivalent to the typical neural network model trained with squared error function, which is widely used for regression task.
1	Therefore	therefore	ADV	RB	Degree=Pos	13	advmod	13:advmod	Discourse=joint:30->21|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-41
4	stochastic	stochastic	ADJ	JJ	Degree=Pos	7	amod	7:amod	_
5	neural	neural	ADJ	JJ	Degree=Pos	6	amod	6:amod	Entity=(abstract-7
6	network	network	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=abstract-7)
7	model	model	NOUN	NN	Number=Sing	13	nsubj	13:nsubj	_
8	with	with	ADP	IN	_	11	case	11:case	_
9	additive	additive	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-37
10	Gaussian	Gaussian	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(person-42)
11	noise	noise	NOUN	NN	Number=Sing	7	nmod	7:nmod:with	Entity=abstract-41)abstract-37)
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	13:cop	_
13	equivalent	equivalent	ADJ	JJ	Degree=Pos	0	root	0:root	_
14	to	to	ADP	IN	_	19	case	19:case	_
15	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Entity=(abstract-43
16	typical	typical	ADJ	JJ	Degree=Pos	19	amod	19:amod	_
17	neural	neural	ADJ	JJ	Degree=Pos	18	amod	18:amod	Entity=(abstract-7
18	network	network	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=abstract-7)
19	model	model	NOUN	NN	Number=Sing	13	obl	13:obl:to|29:nsubj:pass	_
20	trained	train	VERB	VBN	Tense=Past|VerbForm=Part	19	acl	19:acl	Discourse=elaboration:31->30
21	with	with	ADP	IN	_	24	case	24:case	_
22	squared	square	VERB	VBN	Tense=Past|VerbForm=Part	24	amod	24:amod	Entity=(abstract-20
23	error	error	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(abstract-40)
24	function	function	NOUN	NN	Number=Sing	20	obl	20:obl:with	Entity=abstract-20)|SpaceAfter=No
25	,	,	PUNCT	,	_	29	punct	29:punct	_
26	which	which	PRON	WDT	PronType=Rel	29	nsubj:pass	19:ref	Discourse=elaboration:32->31
27	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	aux:pass	29:aux:pass	_
28	widely	widely	ADV	RB	Degree=Pos	29	advmod	29:advmod	_
29	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	19	acl:relcl	19:acl:relcl	_
30	for	for	ADP	IN	_	32	case	32:case	_
31	regression	regression	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=(abstract-44(abstract-45)
32	task	task	NOUN	NN	Number=Sing	29	obl	29:obl:for	Entity=abstract-43)abstract-44)|SpaceAfter=No
33	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_gradient-13
# s_type = decl
# text = On the other hand, in case that the output is a binary vector, the corresponding probability distribution can be defined by using a logistic model, such as (5) where and are the i-th component of L-dimensional vector and , respectively.
1	On	on	ADP	IN	_	4	case	4:case	Discourse=joint:33->21
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
3	other	other	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	hand	hand	NOUN	NN	Number=Sing	22	obl	22:obl:on	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	in	in	ADP	IN	_	7	case	7:case	_
7	case	case	NOUN	NN	Number=Sing	22	obl	22:obl:in	_
8	that	that	SCONJ	IN	_	14	mark	14:mark	Discourse=elaboration:34->33
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-19(abstract-13
10	output	output	NOUN	NN	Number=Sing	14	nsubj	14:nsubj	Entity=abstract-13)
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	14:cop	_
12	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	_
13	binary	binary	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	vector	vector	NOUN	NN	Number=Sing	7	acl	7:acl:that	Entity=abstract-19)|SpaceAfter=No
15	,	,	PUNCT	,	_	7	punct	7:punct	_
16	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Discourse=elaboration:35->34|Entity=(abstract-36
17	corresponding	correspond	VERB	VBG	VerbForm=Ger	19	amod	19:amod	_
18	probability	probability	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(abstract-22)
19	distribution	distribution	NOUN	NN	Number=Sing	22	nsubj:pass	22:nsubj:pass	Entity=abstract-36)
20	can	can	AUX	MD	VerbForm=Fin	22	aux	22:aux	_
21	be	be	AUX	VB	VerbForm=Inf	22	aux:pass	22:aux:pass	_
22	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
23	by	by	SCONJ	IN	_	24	mark	24:mark	Discourse=means:36->35
24	using	use	VERB	VBG	VerbForm=Ger	22	advcl	22:advcl:by	_
25	a	a	DET	DT	Definite=Ind|PronType=Art	27	det	27:det	Entity=(abstract-43
26	logistic	logistic	ADJ	JJ	Degree=Pos	27	amod	27:amod	_
27	model	model	NOUN	NN	Number=Sing	24	obj	24:obj	SpaceAfter=No
28	,	,	PUNCT	,	_	32	punct	32:punct	_
29	such	such	ADJ	JJ	Degree=Pos	32	case	32:case	_
30	as	as	ADP	IN	_	29	fixed	29:fixed	_
31	(	(	PUNCT	-LRB-	_	32	punct	32:punct	SpaceAfter=No
32	5	5	NUM	CD	NumForm=Digit|NumType=Card	27	dep	27:dep	SpaceAfter=No
33	)	)	PUNCT	-RRB-	_	32	punct	32:punct	_
34	where	where	SCONJ	WRB	PronType=Int	40	mark	40:mark	Discourse=elaboration:37->36
35	and	and	CCONJ	CC	_	40	nsubj	40:nsubj|47:nsubj	Entity=(abstract-46
36	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	40	cop	40:cop	_
37	the	the	DET	DT	Definite=Def|PronType=Art	40	det	40:det	_
38	i	I	ADJ	JJ	Degree=Pos	40	nummod	40:nummod	SpaceAfter=No
39	-th	-th	ADJ	JJ	Degree=Pos	40	amod	40:amod	_
40	component	component	NOUN	NN	Number=Sing	27	acl	27:acl:where	_
41	of	of	ADP	IN	_	44	case	44:case	_
42	L	L	NOUN	NN	Number=Sing	43	compound	43:compound	Entity=(abstract-19(person-47)|SpaceAfter=No
43	-dimensional	-dimensional	ADJ	JJ	Degree=Pos	44	amod	44:amod	_
44	vector	vector	NOUN	NN	Number=Sing	40	nmod	40:nmod:of	Entity=abstract-46)abstract-19)
45	and	and	CCONJ	CC	_	47	cc	47:cc	_
46	,	,	PUNCT	,	_	45	punct	45:punct	_
47	respectively	respectively	ADV	RB	Degree=Pos	40	conj	27:acl:where|40:conj:and	Entity=abstract-43)|SpaceAfter=No
48	.	.	PUNCT	.	_	22	punct	22:punct	_

# sent_id = AMALGUM_academic_gradient-14
# s_type = decl
# text = Since the typical problems with binary target output vector is pattern classification, the logistic model is appropriate for L-class classification tasks.
1	Since	since	SCONJ	IN	_	12	mark	12:mark	Discourse=joint:38->21
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-48
3	typical	typical	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	problems	problem	NOUN	NNS	Number=Plur	12	nsubj	12:nsubj	_
5	with	with	ADP	IN	_	9	case	9:case	_
6	binary	binary	ADJ	JJ	Degree=Pos	9	amod	9:amod	Entity=(abstract-19
7	target	target	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-49)
8	output	output	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-13)
9	vector	vector	NOUN	NN	Number=Sing	4	nmod	4:nmod:with	Entity=abstract-48)abstract-19)
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	12:cop	_
11	pattern	pattern	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-48(abstract-50)
12	classification	classification	NOUN	NN	Number=Sing	18	advcl	18:advcl:since	Entity=abstract-48)|SpaceAfter=No
13	,	,	PUNCT	,	_	12	punct	12:punct	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Discourse=elaboration:39->38|Entity=(abstract-43
15	logistic	logistic	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	model	model	NOUN	NN	Number=Sing	18	nsubj	18:nsubj	Entity=abstract-43)
17	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	cop	18:cop	_
18	appropriate	appropriate	ADJ	JJ	Degree=Pos	0	root	0:root	_
19	for	for	ADP	IN	_	23	case	23:case	_
20	L	L	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=(abstract-51(person-47)|SpaceAfter=No
21	-class	-class	NOUN	NN	Number=Sing	23	compound	23:compound	_
22	classification	classification	NOUN	NN	Number=Sing	23	compound	23:compound	Entity=(abstract-52)
23	tasks	task	NOUN	NNS	Number=Plur	18	obl	18:obl:for	Entity=abstract-51)|SpaceAfter=No
24	.	.	PUNCT	.	_	18	punct	18:punct	_

# sent_id = AMALGUM_academic_gradient-15
# s_type = decl
# text = The corresponding loss function of the logistic model is obtained by taking negative log likelihood of Equation (5), which can be written as, (6)
1	The	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Discourse=joint:40->21|Entity=(abstract-20
2	corresponding	corresponding	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
3	loss	loss	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-26)
4	function	function	NOUN	NN	Number=Sing	10	nsubj:pass	10:nsubj:pass	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-43
7	logistic	logistic	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	model	model	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=abstract-20)abstract-43)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	10:aux:pass	_
10	obtained	obtain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
11	by	by	SCONJ	IN	_	12	mark	12:mark	Discourse=means:41->40
12	taking	take	VERB	VBG	VerbForm=Ger	10	advcl	10:advcl:by	_
13	negative	negative	ADJ	JJ	Degree=Pos	15	amod	15:amod	Entity=(abstract-53
14	log	log	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(object-28)
15	likelihood	likelihood	NOUN	NN	Number=Sing	12	obj	12:obj	_
16	of	of	ADP	IN	_	17	case	17:case	_
17	Equation	Equation	PROPN	NNP	Number=Sing	15	nmod	15:nmod:of|25:nsubj:pass	Entity=(abstract-32
18	(	(	PUNCT	-LRB-	_	19	punct	19:punct	SpaceAfter=No
19	5	5	NUM	CD	NumForm=Digit|NumType=Card	17	nmod:tmod	17:nmod:tmod	Entity=(abstract-54)|SpaceAfter=No
20	)	)	PUNCT	-RRB-	_	19	punct	19:punct	SpaceAfter=No
21	,	,	PUNCT	,	_	25	punct	25:punct	_
22	which	which	PRON	WDT	PronType=Rel	25	nsubj:pass	17:ref	Discourse=elaboration:42->41
23	can	can	AUX	MD	VerbForm=Fin	25	aux	25:aux	_
24	be	be	AUX	VB	VerbForm=Inf	25	aux:pass	25:aux:pass	_
25	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	acl:relcl	17:acl:relcl	_
26	as	as	ADP	IN	_	25	obl	25:obl	Entity=abstract-53)abstract-32)|SpaceAfter=No
27	,	,	PUNCT	,	_	29	punct	29:punct	_
28	(	(	PUNCT	-LRB-	_	29	punct	29:punct	Discourse=evidence:43->42|SpaceAfter=No
29	6	6	NUM	CD	NumForm=Digit|NumType=Card	10	dep	10:dep	SpaceAfter=No
30	)	)	PUNCT	-RRB-	_	29	punct	29:punct	_

# sent_id = AMALGUM_academic_gradient-16
# s_type = decl
# text = Noting that this is the well-known cross-entropy error, we can say that the logistic regression model is equivalent to the typical neural networks with cross-entropy error, which is widely used for classification task.
1	Noting	note	VERB	VBG	VerbForm=Ger	12	advcl	12:advcl	Discourse=elaboration:44->40
2	that	that	SCONJ	IN	_	8	mark	8:mark	_
3	this	this	PRON	DT	Number=Sing|PronType=Dem	8	nsubj	8:nsubj	Entity=(abstract-32)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
5	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-32
6	well-known	well-known	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
7	cross-entropy	cross-entropy	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(abstract-55)
8	error	error	NOUN	NN	Number=Sing	1	ccomp	1:ccomp	Entity=abstract-32)|SpaceAfter=No
9	,	,	PUNCT	,	_	1	punct	1:punct	_
10	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	12	nsubj	12:nsubj	Discourse=attribution:45->46|Entity=(person-8)
11	can	can	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
12	say	say	VERB	VB	VerbForm=Inf	0	root	0:root	_
13	that	that	SCONJ	IN	_	19	mark	19:mark	Discourse=elaboration:46->44
14	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Entity=(abstract-43
15	logistic	logistic	ADJ	JJ	Degree=Pos	17	amod	17:amod	_
16	regression	regression	NOUN	NN	Number=Sing	17	compound	17:compound	Entity=(abstract-45)
17	model	model	NOUN	NN	Number=Sing	19	nsubj	19:nsubj	Entity=abstract-43)
18	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	cop	19:cop	_
19	equivalent	equivalent	ADJ	JJ	Degree=Pos	12	ccomp	12:ccomp	_
20	to	to	ADP	IN	_	24	case	24:case	_
21	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(abstract-3
22	typical	typical	ADJ	JJ	Degree=Pos	24	amod	24:amod	_
23	neural	neural	ADJ	JJ	Degree=Pos	24	amod	24:amod	_
24	networks	network	NOUN	NNS	Number=Plur	19	obl	19:obl:to|32:nsubj:pass	_
25	with	with	ADP	IN	_	27	case	27:case	_
26	cross-entropy	cross-entropy	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-32(abstract-55)
27	error	error	NOUN	NN	Number=Sing	24	nmod	24:nmod:with	Entity=abstract-32)|SpaceAfter=No
28	,	,	PUNCT	,	_	32	punct	32:punct	_
29	which	which	PRON	WDT	PronType=Rel	32	nsubj:pass	24:ref	Discourse=elaboration:47->46
30	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	aux:pass	32:aux:pass	_
31	widely	widely	ADV	RB	Degree=Pos	32	advmod	32:advmod	_
32	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	24	acl:relcl	24:acl:relcl	_
33	for	for	ADP	IN	_	35	case	35:case	_
34	classification	classification	NOUN	NN	Number=Sing	35	compound	35:compound	Entity=(abstract-44(abstract-52)
35	task	task	NOUN	NN	Number=Sing	32	obl	32:obl:for	Entity=abstract-3)abstract-44)|SpaceAfter=No
36	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_academic_gradient-17
# s_type = sub
# text = Likewise, by defining a proper stochastic model, we can derive various types of neural network models, which can explain the given task more adequately and get a new insight to solve many unresolved problems in the field of neural network learning.
1	Likewise	likewise	ADV	RB	_	12	advmod	12:advmod	Discourse=joint:48->21|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	by	by	SCONJ	IN	_	4	mark	4:mark	Discourse=means:49->48
4	defining	define	VERB	VBG	VerbForm=Ger	12	advcl	12:advcl:by	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-43
6	proper	proper	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
7	stochastic	stochastic	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	model	model	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=abstract-43)|SpaceAfter=No
9	,	,	PUNCT	,	_	4	punct	4:punct	_
10	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	12	nsubj	12:nsubj	Discourse=elaboration:50->49|Entity=(person-8)
11	can	can	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
12	derive	derive	VERB	VB	VerbForm=Inf	0	root	0:root	_
13	various	various	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(abstract-56
14	types	type	NOUN	NNS	Number=Plur	12	obj	12:obj	_
15	of	of	ADP	IN	_	18	case	18:case	_
16	neural	neural	ADJ	JJ	Degree=Pos	17	amod	17:amod	Entity=(abstract-6(abstract-7
17	network	network	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=abstract-7)
18	models	model	NOUN	NNS	Number=Plur	14	nmod	14:nmod:of|22:nsubj	SpaceAfter=No
19	,	,	PUNCT	,	_	22	punct	22:punct	_
20	which	which	PRON	WDT	PronType=Rel	22	nsubj	18:ref	Discourse=elaboration:51->50
21	can	can	AUX	MD	VerbForm=Fin	22	aux	22:aux|29:aux	_
22	explain	explain	VERB	VB	VerbForm=Inf	18	acl:relcl	18:acl:relcl	_
23	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	Entity=(abstract-44
24	given	give	VERB	VBN	Tense=Past|VerbForm=Part	25	amod	25:amod	_
25	task	task	NOUN	NN	Number=Sing	22	obj	22:obj	Entity=abstract-44)
26	more	more	ADV	RBR	Degree=Cmp	27	advmod	27:advmod	_
27	adequately	adequately	ADV	RB	Degree=Pos	22	advmod	22:advmod	_
28	and	and	CCONJ	CC	_	29	cc	29:cc	Discourse=joint:52->51
29	get	get	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	22	conj	18:acl:relcl|22:conj:and	_
30	a	a	DET	DT	Definite=Ind|PronType=Art	32	det	32:det	Entity=(abstract-57
31	new	new	ADJ	JJ	Degree=Pos	32	amod	32:amod	_
32	insight	insight	NOUN	NN	Number=Sing	29	obj	29:obj	_
33	to	to	PART	TO	_	34	mark	34:mark	Discourse=purpose:53->52
34	solve	solve	VERB	VB	VerbForm=Inf	32	acl	32:acl:to	_
35	many	many	ADJ	JJ	Degree=Pos	37	amod	37:amod	Entity=(abstract-48
36	unresolved	unresolved	ADJ	JJ	Degree=Pos|Polarity=Neg	37	amod	37:amod	_
37	problems	problem	NOUN	NNS	Number=Plur	34	obj	34:obj	_
38	in	in	ADP	IN	_	40	case	40:case	_
39	the	the	DET	DT	Definite=Def|PronType=Art	40	det	40:det	Entity=(abstract-58
40	field	field	NOUN	NN	Number=Sing	37	nmod	37:nmod:in	_
41	of	of	ADP	IN	_	44	case	44:case	_
42	neural	neural	ADJ	JJ	Degree=Pos	43	amod	43:amod	Entity=(abstract-1(abstract-7
43	network	network	NOUN	NN	Number=Sing	44	compound	44:compound	Entity=abstract-7)
44	learning	learning	NOUN	NN	Number=Sing	40	nmod	40:nmod:of	Entity=abstract-56)abstract-6)abstract-57)abstract-48)abstract-58)abstract-1)|SpaceAfter=No
45	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_academic_gradient-18
# s_type = decl
# text = Natural gradient is also derived from a new metric for the space of probability density function of stochastic neural networks.
1	Natural	natural	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=joint:54->21|Entity=(abstract-5
2	gradient	gradient	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=abstract-5)
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
4	also	also	ADV	RB	_	5	advmod	5:advmod	_
5	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	from	from	ADP	IN	_	9	case	9:case	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(abstract-59
8	new	new	ADJ	JJ	Degree=Pos	9	amod	9:amod	_
9	metric	metric	NOUN	NN	Number=Sing	5	obl	5:obl:from	_
10	for	for	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-60
12	space	space	NOUN	NN	Number=Sing	9	nmod	9:nmod:for	_
13	of	of	ADP	IN	_	16	case	16:case	_
14	probability	probability	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-61(abstract-22)
15	density	density	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(abstract-39)
16	function	function	NOUN	NN	Number=Sing	12	nmod	12:nmod:of	_
17	of	of	ADP	IN	_	20	case	20:case	_
18	stochastic	stochastic	ADJ	JJ	Degree=Pos	20	amod	20:amod	Entity=(abstract-3
19	neural	neural	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
20	networks	network	NOUN	NNS	Number=Plur	16	nmod	16:nmod:of	Entity=abstract-59)abstract-60)abstract-61)abstract-3)|SpaceAfter=No
21	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_gradient-19
# s_type = decl
# text = In this paper, we present explicit algorithms of adaptive natural gradient learning method for two representative stochastic neural network models: The additive Gaussian noise model and the logistic regression model.
1	In	in	ADP	IN	_	3	case	3:case	Discourse=preparation:55->56
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-62
3	paper	paper	NOUN	NN	Number=Sing	6	obl	6:obl:in	Entity=abstract-62)|SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	nsubj	6:nsubj	Entity=(person-8)
6	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
7	explicit	explicit	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=(abstract-63
8	algorithms	algorithm	NOUN	NNS	Number=Plur	6	obj	6:obj	_
9	of	of	ADP	IN	_	14	case	14:case	_
10	adaptive	adaptive	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(abstract-64
11	natural	natural	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
12	gradient	gradient	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-1(abstract-5)
13	learning	learning	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=abstract-1)
14	method	method	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=abstract-64)
15	for	for	ADP	IN	_	21	case	21:case	_
16	two	2	NUM	CD	NumForm=Digit|NumType=Card	21	nummod	21:nummod	Entity=(abstract-6
17	representative	representative	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
18	stochastic	stochastic	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
19	neural	neural	ADJ	JJ	Degree=Pos	20	amod	20:amod	Entity=(abstract-7
20	network	network	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=abstract-7)
21	models	model	NOUN	NNS	Number=Plur	8	nmod	8:nmod:for	Entity=abstract-63)abstract-6)|SpaceAfter=No
22	:	:	PUNCT	:	_	27	punct	27:punct	_
23	The	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Discourse=joint:56->21|Entity=(abstract-6(abstract-6
24	additive	additive	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(person-38)
25	Gaussian	Gaussian	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(person-42)
26	noise	noise	NOUN	NN	Number=Sing	27	compound	27:compound	Entity=(abstract-37)
27	model	model	NOUN	NN	Number=Sing	21	appos	21:appos	Entity=abstract-6)
28	and	and	CCONJ	CC	_	32	cc	32:cc	_
29	the	the	DET	DT	Definite=Def|PronType=Art	32	det	32:det	Entity=(abstract-6
30	logistic	logistic	ADJ	JJ	Degree=Pos	31	amod	31:amod	Entity=(abstract-45
31	regression	regression	NOUN	NN	Number=Sing	32	compound	32:compound	Entity=abstract-45)
32	model	model	NOUN	NN	Number=Sing	27	conj	21:appos|27:conj:and	Entity=abstract-6)abstract-6)|SpaceAfter=No
33	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_gradient-20
# s_type = frag
# text = 2.2.
1	2.2.	2.2.	NUM	CD	NumForm=Digit|NumType=Card	0	root	0:root	Discourse=joint:57->56|Entity=(abstract-65)

# sent_id = AMALGUM_academic_gradient-21
# s_type = frag
# text = Gradient Descent Learning
1	Gradient	gradient	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:58->56|Entity=(abstract-1(abstract-2
2	Descent	descent	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=abstract-2)
3	Learning	learning	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-1)

# sent_id = AMALGUM_academic_gradient-22
# s_type = decl
# text = Once a specific model of stochastic neural networks and its corresponding loss function are determined, the weight parameters are optimized by gradient descent method.
1	Once	once	SCONJ	RB	NumType=Mult	15	mark	15:mark	Discourse=circumstance:59->60
2	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	4:det	Entity=(abstract-43
3	specific	specific	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
4	model	model	NOUN	NN	Number=Sing	15	nsubj:pass	15:nsubj:pass	_
5	of	of	ADP	IN	_	8	case	8:case	_
6	stochastic	stochastic	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=(abstract-3(abstract-3
7	neural	neural	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	networks	network	NOUN	NNS	Number=Plur	4	nmod	4:nmod:of	Entity=abstract-3)
9	and	and	CCONJ	CC	_	13	cc	13:cc	_
10	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	13	nmod:poss	13:nmod:poss	Entity=(abstract-61(abstract-43)
11	corresponding	corresponding	ADJ	JJ	Degree=Pos	13	amod	13:amod	_
12	loss	loss	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-26)
13	function	function	NOUN	NN	Number=Sing	8	conj	4:nmod:of|8:conj:and	Entity=abstract-43)abstract-3)abstract-61)
14	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	aux:pass	15:aux:pass	_
15	determined	determine	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	advcl	21:advcl:once	SpaceAfter=No
16	,	,	PUNCT	,	_	15	punct	15:punct	_
17	the	the	DET	DT	Definite=Def|PronType=Art	19	det	19:det	Discourse=elaboration:60->58|Entity=(abstract-66
18	weight	weight	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(abstract-67)
19	parameters	parameter	NOUN	NNS	Number=Plur	21	nsubj:pass	21:nsubj:pass	Entity=abstract-66)
20	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	21	aux:pass	21:aux:pass	_
21	optimized	optimize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
22	by	by	ADP	IN	_	25	case	25:case	_
23	gradient	gradient	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(abstract-64(abstract-2(abstract-5)
24	descent	descent	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=abstract-2)
25	method	method	NOUN	NN	Number=Sing	21	obl	21:obl:by	Entity=abstract-64)|SpaceAfter=No
26	.	.	PUNCT	.	_	21	punct	21:punct	_

# sent_id = AMALGUM_academic_gradient-23
# s_type = decl
# text = The well-known error-backpropagation algorithm is the standard type of gradient descent learning method.
1	The	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Discourse=joint:61->56|Entity=(abstract-68
2	well-known	well-known	ADJ	JJ	Degree=Pos	4	amod	4:amod	_
3	error-backpropagation	error-backpropagation	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-69)
4	algorithm	algorithm	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=abstract-68)
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-68
7	standard	standard	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
8	type	type	NOUN	NN	Number=Sing	0	root	0:root	_
9	of	of	ADP	IN	_	13	case	13:case	_
10	gradient	gradient	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-64(abstract-2(abstract-5)
11	descent	descent	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=abstract-2)
12	learning	learning	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-1)
13	method	method	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=abstract-68)abstract-64)|SpaceAfter=No
14	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_academic_gradient-24
# s_type = decl
# text = There have been numerous variations of the standard gradient descent method, including second-order methods, momentum method, and adaptive learning rate methods.
1	There	there	PRON	EX	_	5	expl	5:expl	Discourse=joint:62->56
2	have	have	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	5:aux	_
3	been	be	AUX	VBN	Tense=Past|VerbForm=Part	5	cop	5:cop	_
4	numerous	numerous	ADJ	JJ	Degree=Pos	5	amod	5:amod	Entity=(abstract-70
5	variations	variation	NOUN	NNS	Number=Plur	0	root	0:root	_
6	of	of	ADP	IN	_	11	case	11:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-64
8	standard	standard	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
9	gradient	gradient	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(abstract-2(abstract-5)
10	descent	descent	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=abstract-2)
11	method	method	NOUN	NN	Number=Sing	5	nmod	5:nmod:of	Entity=abstract-64)|SpaceAfter=No
12	,	,	PUNCT	,	_	15	punct	15:punct	_
13	including	include	VERB	VBG	VerbForm=Ger	15	case	15:case	Discourse=elaboration:63->62
14	second-order	second-order	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(abstract-71
15	methods	method	NOUN	NNS	Number=Plur	5	nmod	5:nmod:including	Entity=abstract-71)|SpaceAfter=No
16	,	,	PUNCT	,	_	18	punct	18:punct	_
17	momentum	momentum	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-64(abstract-72)
18	method	method	NOUN	NN	Number=Sing	15	conj	5:nmod:including|15:conj:and	Entity=abstract-64)|SpaceAfter=No
19	,	,	PUNCT	,	_	24	punct	24:punct	_
20	and	and	CCONJ	CC	_	24	cc	24:cc	_
21	adaptive	adaptive	ADJ	JJ	Degree=Pos	23	amod	23:amod	Entity=(abstract-73(abstract-74
22	learning	learning	NOUN	NN	Number=Sing	23	compound	23:compound	Entity=(abstract-1)
23	rate	rate	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=abstract-74)
24	methods	method	NOUN	NNS	Number=Plur	15	conj	5:nmod:including|15:conj:and	Entity=abstract-70)abstract-73)|SpaceAfter=No
25	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_gradient-25
# s_type = decl
# text = Since the natural gradient learning method is also based on the gradient descent method, we describe the basic formula of gradient descent learning and its online version that is called stochastic gradient descent method.
1	Since	since	SCONJ	IN	_	9	mark	9:mark	Discourse=condition:64->65
2	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-64
3	natural	natural	ADJ	JJ	Degree=Pos	5	amod	5:amod	Entity=(abstract-1
4	gradient	gradient	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-5)
5	learning	learning	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=abstract-1)
6	method	method	NOUN	NN	Number=Sing	9	nsubj:pass	9:nsubj:pass	Entity=abstract-64)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	9:aux:pass	_
8	also	also	ADV	RB	_	9	advmod	9:advmod	_
9	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	advcl	17:advcl:since	_
10	on	on	ADP	IN	_	14	case	14:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-64
12	gradient	gradient	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-2(abstract-5)
13	descent	descent	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=abstract-2)
14	method	method	NOUN	NN	Number=Sing	9	obl	9:obl:on	Entity=abstract-64)|SpaceAfter=No
15	,	,	PUNCT	,	_	9	punct	9:punct	_
16	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	17	nsubj	17:nsubj	Discourse=joint:65->56|Entity=(person-8)
17	describe	describe	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
18	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-75
19	basic	basic	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
20	formula	formula	NOUN	NN	Number=Sing	17	obj	17:obj	_
21	of	of	ADP	IN	_	24	case	24:case	_
22	gradient	gradient	NOUN	NN	Number=Sing	23	compound	23:compound	Entity=(abstract-1(abstract-2(abstract-5)
23	descent	descent	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=abstract-2)
24	learning	learning	NOUN	NN	Number=Sing	20	nmod	20:nmod:of	Entity=abstract-1)
25	and	and	CCONJ	CC	_	28	cc	28:cc	_
26	its	its	PRON	PRP$	Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	28	nmod:poss	28:nmod:poss	Entity=(abstract-76(abstract-68)
27	online	online	ADJ	JJ	Degree=Pos	28	amod	28:amod	_
28	version	version	NOUN	NN	Number=Sing	24	conj	20:nmod:of|24:conj:and|31:nsubj:pass	_
29	that	that	PRON	WDT	PronType=Rel	31	nsubj:pass	28:ref	Discourse=elaboration:66->65
30	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	31	aux:pass	31:aux:pass	_
31	called	call	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	28	acl:relcl	28:acl:relcl	_
32	stochastic	stochastic	ADJ	JJ	Degree=Pos	35	amod	35:amod	Entity=(abstract-64
33	gradient	gradient	NOUN	NN	Number=Sing	34	compound	34:compound	Entity=(abstract-2(abstract-5)
34	descent	descent	NOUN	NN	Number=Sing	35	compound	35:compound	Entity=abstract-2)
35	method	method	NOUN	NN	Number=Sing	31	obj	31:obj	Entity=abstract-75)abstract-76)abstract-64)|SpaceAfter=No
36	.	.	PUNCT	.	_	17	punct	17:punct	_

# sent_id = AMALGUM_academic_gradient-26
# s_type = decl
# text = When a set of training data is given, a neural network is trained in order to find an input-output mapping that is specified with weight parameter vector .
1	When	when	SCONJ	WRB	PronType=Int	8	mark	8:mark	Discourse=circumstance:67->68
2	a	a	DET	DT	Definite=Ind|PronType=Art	3	det	3:det	Entity=(abstract-77
3	set	set	NOUN	NN	Number=Sing	8	nsubj:pass	8:nsubj:pass	_
4	of	of	ADP	IN	_	6	case	6:case	_
5	training	training	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-78)
6	data	datum	NOUN	NNS	Number=Plur	3	nmod	3:nmod:of	Entity=abstract-77)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux:pass	8:aux:pass	_
8	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	advcl	14:advcl:when	SpaceAfter=No
9	,	,	PUNCT	,	_	8	punct	8:punct	_
10	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Discourse=joint:68->56|Entity=(abstract-7
11	neural	neural	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	network	network	NOUN	NN	Number=Sing	14	nsubj:pass	14:nsubj:pass	Entity=abstract-7)
13	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	14:aux:pass	_
14	trained	train	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
15	in	in	SCONJ	IN	_	18	mark	18:mark	Discourse=purpose:69->68
16	order	order	NOUN	NN	Number=Sing	15	fixed	15:fixed	_
17	to	to	PART	TO	_	18	mark	18:mark	_
18	find	find	VERB	VB	VerbForm=Inf	14	advcl	14:advcl:in_order	_
19	an	a	DET	DT	Definite=Ind|PronType=Art	21	det	21:det	Entity=(abstract-79
20	input-output	input-output	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
21	mapping	mapping	NOUN	NN	Number=Sing	18	obj	18:obj|24:nsubj:pass	_
22	that	that	PRON	WDT	PronType=Rel	24	nsubj:pass	21:ref	Discourse=elaboration:70->69
23	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	aux:pass	24:aux:pass	_
24	specified	specify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	acl:relcl	21:acl:relcl	_
25	with	with	ADP	IN	_	28	case	28:case	_
26	weight	weight	NOUN	NN	Number=Sing	28	compound	28:compound	Entity=(abstract-19(abstract-67)
27	parameter	parameter	NOUN	NN	Number=Sing	28	compound	28:compound	Entity=(abstract-14)
28	vector	vector	NOUN	NN	Number=Sing	24	obl	24:obl:with	Entity=abstract-79)abstract-19)
29	.	.	PUNCT	.	_	14	punct	14:punct	_

# sent_id = AMALGUM_academic_gradient-27
# s_type = decl
# text = The error of neural network for the whole data set can then be defined by using a loss function such as (7) and the goal of learning is to get the optimal minimizing .
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:71->56|Entity=(abstract-32
2	error	error	NOUN	NN	Number=Sing	14	nsubj:pass	14:nsubj:pass	_
3	of	of	ADP	IN	_	5	case	5:case	_
4	neural	neural	ADJ	JJ	Degree=Pos	5	amod	5:amod	Entity=(abstract-7
5	network	network	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-7)
6	for	for	ADP	IN	_	10	case	10:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-80
8	whole	whole	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
9	data	datum	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(abstract-81)
10	set	set	NOUN	NN	Number=Sing	2	nmod	2:nmod:for	Entity=abstract-32)abstract-80)
11	can	can	AUX	MD	VerbForm=Fin	14	aux	14:aux|32:aux	_
12	then	then	ADV	RB	PronType=Dem	14	advmod	14:advmod	_
13	be	be	AUX	VB	VerbForm=Inf	14	aux:pass	14:aux:pass|32:aux:pass	_
14	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
15	by	by	SCONJ	IN	_	16	mark	16:mark	Discourse=means:72->71
16	using	use	VERB	VBG	VerbForm=Ger	14	advcl	14:advcl:by	_
17	a	a	DET	DT	Definite=Ind|PronType=Art	19	det	19:det	Entity=(abstract-61
18	loss	loss	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(abstract-26)
19	function	function	NOUN	NN	Number=Sing	16	obj	16:obj	_
20	such	such	ADJ	JJ	Degree=Pos	23	case	23:case	_
21	as	as	ADP	IN	_	20	fixed	20:fixed	_
22	(	(	PUNCT	-LRB-	_	23	punct	23:punct	SpaceAfter=No
23	7	7	NUM	CD	NumForm=Digit|NumType=Card	19	dep	19:dep	SpaceAfter=No
24	)	)	PUNCT	-RRB-	_	23	punct	23:punct	Entity=abstract-61)
25	and	and	CCONJ	CC	_	32	cc	32:cc	Discourse=joint:73->72
26	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Entity=(abstract-82
27	goal	goal	NOUN	NN	Number=Sing	32	nsubj	32:nsubj|35:nsubj:xsubj	_
28	of	of	ADP	IN	_	29	case	29:case	_
29	learning	learning	NOUN	NN	Number=Sing	27	acl	27:acl	Entity=abstract-82)(abstract-1)
30	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	cop	32:cop	_
31	to	to	PART	TO	_	32	mark	32:mark	_
32	get	get	VERB	VB	VerbForm=Inf	14	conj	14:conj:and	_
33	the	the	DET	DT	Definite=Def|PronType=Art	35	det	35:det	Entity=(abstract-25
34	optimal	optimal	ADJ	JJ	Degree=Pos	35	amod	35:amod	_
35	minimizing	minimizing	NOUN	NN	Number=Sing	32	xcomp	32:xcomp	Entity=abstract-25)
36	.	.	PUNCT	.	_	14	punct	14:punct	_

# sent_id = AMALGUM_academic_gradient-28
# s_type = decl
# text = To achieve the goal, the weight parameter is updated starting from the current position , according to the opposite direction of the gradient of , which can be written as (8)
1	To	to	PART	TO	_	2	mark	2:mark	Discourse=attribution:74->75
2	achieve	achieve	VERB	VB	VerbForm=Inf	10	advcl	10:advcl:to	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-82
4	goal	goal	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-82)|SpaceAfter=No
5	,	,	PUNCT	,	_	2	punct	2:punct	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Discourse=joint:75->56|Entity=(abstract-14
7	weight	weight	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(abstract-67)
8	parameter	parameter	NOUN	NN	Number=Sing	10	nsubj:pass	10:nsubj:pass	Entity=abstract-14)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	10:aux:pass	_
10	updated	update	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
11	starting	start	VERB	VBG	VerbForm=Ger	10	advcl	10:advcl	Discourse=circumstance:76->75
12	from	from	ADP	IN	_	15	case	15:case	_
13	the	the	DET	DT	Definite=Def|PronType=Art	15	det	15:det	Entity=(abstract-83
14	current	current	ADJ	JJ	Degree=Pos	15	amod	15:amod	_
15	position	position	NOUN	NN	Number=Sing	11	obl	11:obl:from	Entity=abstract-83)
16	,	,	PUNCT	,	_	21	punct	21:punct	_
17	according	accord	VERB	VBG	VerbForm=Ger	21	case	21:case	Discourse=circumstance:77->76
18	to	to	ADP	IN	_	17	fixed	17:fixed	_
19	the	the	DET	DT	Definite=Def|PronType=Art	21	det	21:det	Entity=(abstract-84
20	opposite	opposite	ADJ	JJ	Degree=Pos	21	amod	21:amod	_
21	direction	direction	NOUN	NN	Number=Sing	10	obl	10:obl:according_to|30:nsubj:pass	_
22	of	of	ADP	IN	_	24	case	24:case	_
23	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(abstract-5
24	gradient	gradient	NOUN	NN	Number=Sing	21	nmod	21:nmod:of_as	_
25	of	of	ADP	IN	_	24	nmod	24:nmod	Entity=abstract-5)
26	,	,	PUNCT	,	_	30	punct	30:punct	_
27	which	which	PRON	WDT	PronType=Rel	30	nsubj:pass	21:ref	Discourse=elaboration:78->77
28	can	can	AUX	MD	VerbForm=Fin	30	aux	30:aux	_
29	be	be	AUX	VB	VerbForm=Inf	30	aux:pass	30:aux:pass	_
30	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	acl:relcl	21:acl:relcl	Entity=abstract-84)
31	as	as	ADP	IN	_	24	case	24:case	_
32	(	(	PUNCT	-LRB-	_	33	punct	33:punct	SpaceAfter=No
33	8	8	NUM	CD	NumForm=Digit|NumType=Card	10	dep	10:dep	SpaceAfter=No
34	)	)	PUNCT	-RRB-	_	33	punct	33:punct	_

# sent_id = AMALGUM_academic_gradient-29
# s_type = decl
# text = This update rule is called batch learning mode, meaning that an update is done for the whole batch set .
1	This	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Discourse=joint:79->56|Entity=(abstract-85
2	update	update	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(event-86)
3	rule	rule	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=abstract-85)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
5	called	call	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	batch	batch	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(abstract-87(abstract-1(abstract-88)
7	learning	learning	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=abstract-1)
8	mode	mode	NOUN	NN	Number=Sing	5	obj	5:obj	Entity=abstract-87)|SpaceAfter=No
9	,	,	PUNCT	,	_	10	punct	10:punct	_
10	meaning	mean	VERB	VBG	VerbForm=Ger	5	advcl	5:advcl	Discourse=elaboration:80->79
11	that	that	SCONJ	IN	_	15	mark	15:mark	_
12	an	a	DET	DT	Definite=Ind|PronType=Art	13	det	13:det	Entity=(event-86
13	update	update	NOUN	NN	Number=Sing	15	nsubj:pass	15:nsubj:pass	Entity=event-86)
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	aux:pass	15:aux:pass	_
15	done	do	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	ccomp	10:ccomp	_
16	for	for	ADP	IN	_	20	case	20:case	_
17	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-80
18	whole	whole	ADJ	JJ	Degree=Pos	20	amod	20:amod	_
19	batch	batch	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-88)
20	set	set	NOUN	NN	Number=Sing	15	obl	15:obl:for	Entity=abstract-80)
21	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_gradient-30
# s_type = decl
# text = Theoretically, the batch mode learning gives the steepest descent direction of at the current position of , but it has two practical drawbacks.
1	Theoretically	theoretically	ADV	RB	Degree=Pos	7	advmod	7:advmod	Discourse=concession:81->82|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-1
4	batch	batch	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-87(abstract-88)
5	mode	mode	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=abstract-87)
6	learning	learning	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=abstract-1)
7	gives	give	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
8	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-84
9	steepest	steep	ADJ	JJS	Degree=Sup	11	amod	11:amod	_
10	descent	descent	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-2)
11	direction	direction	NOUN	NN	Number=Sing	7	obj	7:obj	_
12	of	of	ADP	IN	_	11	nmod	11:nmod	Entity=abstract-84)
13	at	at	ADP	IN	_	16	case	16:case	_
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(abstract-83
15	current	current	ADJ	JJ	Degree=Pos	16	amod	16:amod	_
16	position	position	NOUN	NN	Number=Sing	7	obl	7:obl:at	_
17	of	of	ADP	IN	_	16	nmod	16:nmod	Entity=abstract-83)
18	,	,	PUNCT	,	_	21	punct	21:punct	_
19	but	but	CCONJ	CC	_	21	cc	21:cc	Discourse=joint:82->56
20	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	21	nsubj	21:nsubj	Entity=(abstract-83)
21	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	conj	7:conj:but	_
22	two	2	NUM	CD	NumForm=Digit|NumType=Card	24	nummod	24:nummod	Entity=(abstract-89
23	practical	practical	ADJ	JJ	Degree=Pos	24	amod	24:amod	_
24	drawbacks	drawback	NOUN	NNS	Number=Plur	21	obj	21:obj	Entity=abstract-89)|SpaceAfter=No
25	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_gradient-31
# s_type = decl
# text = First, it is too stable to be easily trapped in undesirable local minima.
1	First	first	ADV	RB	Degree=Pos|NumType=Ord	6	advmod	6:advmod	Discourse=joint:83->56|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	6	nsubj	6:nsubj	Entity=(abstract-83)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	too	too	ADV	RB	Degree=Pos	6	advmod	6:advmod	_
6	stable	stable	ADJ	JJ	Degree=Pos	0	root	0:root	_
7	to	to	PART	TO	_	10	mark	10:mark	Discourse=purpose:84->83
8	be	be	AUX	VB	VerbForm=Inf	10	aux:pass	10:aux:pass	_
9	easily	easily	ADV	RB	Degree=Pos	10	advmod	10:advmod	_
10	trapped	trap	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	csubj	6:csubj	_
11	in	in	ADP	IN	_	14	case	14:case	_
12	undesirable	undesirable	ADJ	JJ	Degree=Pos|Polarity=Neg	14	amod	14:amod	Entity=(abstract-90
13	local	local	ADJ	JJ	Degree=Pos	14	amod	14:amod	_
14	minima	minima	NOUN	NNS	Number=Plur	10	obl	10:obl:in	Entity=abstract-90)|SpaceAfter=No
15	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_gradient-32
# s_type = decl
# text = In addition, when the number of data is large, it needs large amounts of computation for just a single update, making the learning process slow.
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:85->56
2	addition	addition	NOUN	NN	Number=Sing	13	obl	13:obl:in	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	when	when	SCONJ	WRB	PronType=Int	10	mark	10:mark	Discourse=circumstance:86->87
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-91
6	number	number	NOUN	NN	Number=Sing	10	nsubj	10:nsubj	_
7	of	of	ADP	IN	_	8	case	8:case	_
8	data	datum	NOUN	NNS	Number=Plur	6	nmod	6:nmod:of	Entity=abstract-91)(abstract-77)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	10:cop	_
10	large	large	ADJ	JJ	Degree=Pos	13	advcl	13:advcl:when	SpaceAfter=No
11	,	,	PUNCT	,	_	10	punct	10:punct	_
12	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	13	nsubj	13:nsubj	Discourse=joint:87->56|Entity=(abstract-91)
13	needs	need	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
14	large	large	ADJ	JJ	Degree=Pos	15	amod	15:amod	Entity=(abstract-92
15	amounts	amount	NOUN	NNS	Number=Plur	13	obj	13:obj	_
16	of	of	ADP	IN	_	17	case	17:case	_
17	computation	computation	NOUN	NN	Number=Sing	15	nmod	15:nmod:of	Entity=abstract-92)(abstract-93)
18	for	for	ADP	IN	_	22	case	22:case	_
19	just	just	ADV	RB	_	22	advmod	22:advmod	Entity=(event-86
20	a	a	DET	DT	Definite=Ind|PronType=Art	22	det	22:det	_
21	single	single	ADJ	JJ	Degree=Pos	22	amod	22:amod	_
22	update	update	NOUN	NN	Number=Sing	13	obl	13:obl:for	Entity=event-86)|SpaceAfter=No
23	,	,	PUNCT	,	_	24	punct	24:punct	_
24	making	make	VERB	VBG	VerbForm=Ger	13	advcl	13:advcl	Discourse=joint:88->87
25	the	the	DET	DT	Definite=Def|PronType=Art	27	det	27:det	Entity=(abstract-94
26	learning	learning	NOUN	NN	Number=Sing	27	compound	27:compound	_
27	process	process	NOUN	NN	Number=Sing	24	obj	24:obj|28:nsubj:xsubj	Entity=abstract-94)
28	slow	slow	ADJ	JJ	Degree=Pos	24	xcomp	24:xcomp	SpaceAfter=No
29	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_gradient-33
# s_type = decl
# text = To overcome this practical inefficiency, online stochastic gradient decent learning is proposed, in which parameters are updated for each data sample by using gradient of loss function defined with a single data pair , such as (9)
1	To	to	PART	TO	_	2	mark	2:mark	Discourse=purpose:89->88
2	overcome	overcome	VERB	VB	VerbForm=Inf	13	advcl	13:advcl:to	_
3	this	this	DET	DT	Number=Sing|PronType=Dem	5	det	5:det	Entity=(abstract-95
4	practical	practical	ADJ	JJ	Degree=Pos	5	amod	5:amod	_
5	inefficiency	inefficiency	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-95)|SpaceAfter=No
6	,	,	PUNCT	,	_	2	punct	2:punct	_
7	online	online	ADJ	JJ	Degree=Pos	11	amod	11:amod	Discourse=joint:90->89|Entity=(abstract-1
8	stochastic	stochastic	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
9	gradient	gradient	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(abstract-5)
10	decent	decent	ADJ	JJ	Degree=Pos	11	amod	11:amod	_
11	learning	learning	NOUN	NN	Number=Sing	13	nsubj:pass	13:nsubj:pass	Entity=abstract-1)
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	13:aux:pass	_
13	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root|19:obl:in	SpaceAfter=No
14	,	,	PUNCT	,	_	19	punct	19:punct	_
15	in	in	ADP	IN	_	16	case	16:case	Discourse=elaboration:91->90
16	which	which	PRON	WDT	PronType=Rel	19	obl	13:ref	_
17	parameters	parameter	NOUN	NNS	Number=Plur	19	nsubj:pass	19:nsubj:pass	Entity=(abstract-66)
18	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	19	aux:pass	19:aux:pass	_
19	updated	update	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	acl:relcl	13:acl:relcl	_
20	for	for	ADP	IN	_	23	case	23:case	_
21	each	each	DET	DT	_	23	det	23:det	Entity=(abstract-96
22	data	datum	NOUN	NNS	Number=Plur	23	compound	23:compound	Entity=(abstract-77)
23	sample	sample	NOUN	NN	Number=Sing	19	obl	19:obl:for	Entity=abstract-96)
24	by	by	SCONJ	IN	_	25	mark	25:mark	Discourse=means:92->91
25	using	use	VERB	VBG	VerbForm=Ger	19	advcl	19:advcl:by	_
26	gradient	gradient	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=(abstract-61(abstract-5
27	of	of	ADP	IN	_	28	case	28:case	_
28	loss	loss	NOUN	NN	Number=Sing	26	nmod	26:nmod:of	Entity=abstract-5)(abstract-26)
29	function	function	NOUN	NN	Number=Sing	25	obj	25:obj	_
30	defined	define	VERB	VBN	Tense=Past|VerbForm=Part	29	acl	29:acl	Discourse=elaboration:93->92
31	with	with	ADP	IN	_	35	case	35:case	_
32	a	a	DET	DT	Definite=Ind|PronType=Art	35	det	35:det	Entity=(abstract-97
33	single	single	ADJ	JJ	Degree=Pos	35	amod	35:amod	_
34	data	datum	NOUN	NN	Number=Sing	35	compound	35:compound	Entity=(abstract-77)
35	pair	pair	NOUN	NN	Number=Sing	30	obl	30:obl:with	Entity=abstract-61)abstract-97)
36	,	,	PUNCT	,	_	40	punct	40:punct	_
37	such	such	ADJ	JJ	Degree=Pos	40	case	40:case	_
38	as	as	ADP	IN	_	37	fixed	37:fixed	_
39	(	(	PUNCT	-LRB-	_	40	punct	40:punct	SpaceAfter=No
40	9	9	NUM	CD	NumForm=Digit|NumType=Card	13	dep	13:dep	SpaceAfter=No
41	)	)	PUNCT	-RRB-	_	40	punct	40:punct	_

