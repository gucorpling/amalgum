# meta::id = AMALGUM_academic_ambtc
# meta::title = A Hybrid Data Hiding Method for Strict AMBTC Format Images with High-Fidelity
# meta::shortTitle = ambtc
# meta::author = Chin-Chen Chang, Xu Wang, Ji-Hwei Horng
# meta::type = academic
# meta::dateCollected = 2019-11-03
# meta::sourceURL = https://www.mdpi.com/2073-8994/11/10/1314/htm
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_academic_ambtc
# sent_id = AMALGUM_academic_ambtc-1
# s_type = frag
# text = 2.
# newpar = head (2 s)
1	2.	2.	X	LS	_	0	root	0:root	Discourse=preparation:1->4

# sent_id = AMALGUM_academic_ambtc-2
# s_type = frag
# text = Related Work
1	Related	related	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=preparation:2->4|Entity=(abstract-1
2	Work	Work	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-1)

# sent_id = AMALGUM_academic_ambtc-3
# s_type = decl
# text = Two important techniques are used in our proposed method:
# newpar = p (3 s)
1	Two	2	NUM	CD	NumForm=Digit|NumType=Card	3	nummod	3:nummod	Discourse=preparation:3->4|Entity=(abstract-2
2	important	important	ADJ	JJ	Degree=Pos	3	amod	3:amod	_
3	techniques	technique	NOUN	NNS	Number=Plur	5	nsubj:pass	5:nsubj:pass	Entity=abstract-2)
4	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
5	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	in	in	ADP	IN	_	9	case	9:case	_
7	our	our	PRON	PRP$	Number=Plur|Person=1|Poss=Yes|PronType=Prs	9	nmod:poss	9:nmod:poss	Entity=(abstract-3(person-4)
8	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part	9	amod	9:amod	_
9	method	method	NOUN	NN	Number=Sing	5	obl	5:obl:in	Entity=abstract-3)|SpaceAfter=No
10	:	:	PUNCT	:	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_ambtc-4
# s_type = frag
# text = absolute moment block truncation coding (AMBTC) compression and matrix coding.
1	absolute	absolute	ADJ	JJ	Degree=Pos	2	amod	2:amod	Discourse=ROOT:4|Entity=(abstract-5(abstract-6(event-7
2	moment	moment	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=event-7)
3	block	block	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(object-8)
4	truncation	truncation	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-9)
5	coding	coding	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=abstract-6)
6	(	(	PUNCT	-LRB-	_	7	punct	7:punct	Discourse=restatement:5->4|SpaceAfter=No
7	AMBTC	AMBTC	PROPN	NNP	Number=Sing	5	appos	5:appos	Entity=(abstract-6)|SpaceAfter=No
8	)	)	PUNCT	-RRB-	_	7	punct	7:punct	_
9	compression	compression	NOUN	NN	Number=Sing	0	root	0:root	Discourse=same_unit:6->4|Entity=abstract-5)
10	and	and	CCONJ	CC	_	12	cc	12:cc	_
11	matrix	matrix	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-6(abstract-10)
12	coding	coding	NOUN	NN	Number=Sing	9	conj	9:conj:and	Entity=abstract-6)|SpaceAfter=No
13	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_academic_ambtc-5
# s_type = decl
# text = These techniques are briefly introduced in Section 2.1 and Section 2.2, respectively.
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	2:det	Discourse=joint:7->4|Entity=(abstract-2
2	techniques	technique	NOUN	NNS	Number=Plur	5	nsubj:pass	5:nsubj:pass	Entity=abstract-2)
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
4	briefly	briefly	ADV	RB	Degree=Pos	5	advmod	5:advmod	_
5	introduced	introduce	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	in	in	ADP	IN	_	7	case	7:case	_
7	Section	Section	PROPN	NNP	Number=Sing	5	obl	5:obl:in	Entity=(abstract-11
8	2.1	2.1	NUM	CD	NumForm=Digit|NumType=Card	7	flat	7:flat	Entity=abstract-11)
9	and	and	CCONJ	CC	_	10	cc	10:cc	_
10	Section	Section	PROPN	NNP	Number=Sing	7	conj	5:obl:in|7:conj:and	Entity=(abstract-12
11	2.2	2.2	NUM	CD	NumForm=Digit|NumType=Card	10	flat	10:flat	Entity=abstract-12)|SpaceAfter=No
12	,	,	PUNCT	,	_	13	punct	13:punct	_
13	respectively	respectively	ADV	RB	Degree=Pos	5	advmod	5:advmod	SpaceAfter=No
14	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_ambtc-6
# s_type = frag
# text = 2.1.
# newpar = head (2 s)
1	2.1.	2.1.	NUM	CD	NumForm=Digit|NumType=Card	0	root	0:root	Discourse=joint:8->4|Entity=(abstract-13)

# sent_id = AMALGUM_academic_ambtc-7
# s_type = frag
# text = Absolute Moment Block Truncation Coding (AMBTC)
1	Absolute	Absolute	ADJ	NNP	Number=Sing	2	amod	2:amod	Discourse=preparation:9->11|Entity=(abstract-6(event-7
2	Moment	Moment	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=event-7)
3	Block	Block	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(person-14)
4	Truncation	Truncation	PROPN	NNP	Number=Sing	5	compound	5:compound	Entity=(abstract-9)
5	Coding	Coding	PROPN	NNP	Number=Sing	0	root	0:root	Entity=abstract-6)
6	(	(	PUNCT	-LRB-	_	7	punct	7:punct	Discourse=restatement:10->9|SpaceAfter=No
7	AMBTC	AMBTC	PROPN	NNP	Number=Sing	5	appos	5:appos	Entity=(abstract-6)|SpaceAfter=No
8	)	)	PUNCT	-RRB-	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_ambtc-8
# s_type = decl
# text = In 1979, an efficient block-based lossy image compression technique named block truncation coding (BTC) was proposed by Delp and Mitchell.
# newpar = p (7 s)
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:11->4
2	1979	1979	NUM	CD	NumForm=Digit|NumType=Card	19	obl	19:obl:in	Entity=(time-15)|SpaceAfter=No|XML=<date when:::"1979"></date>
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	an	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(abstract-16
5	efficient	efficient	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
6	block-based	block-based	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
7	lossy	lossy	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
8	image	image	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-5(abstract-17)
9	compression	compression	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=abstract-5)
10	technique	technique	NOUN	NN	Number=Sing	19	nsubj:pass	19:nsubj:pass	_
11	named	name	VERB	VBN	Tense=Past|VerbForm=Part	10	acl	10:acl	Discourse=elaboration:12->11
12	block	block	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-6(abstract-9(object-8)
13	truncation	truncation	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=abstract-9)
14	coding	coding	NOUN	NN	Number=Sing	11	xcomp	11:xcomp	Entity=abstract-16)abstract-6)
15	(	(	PUNCT	-LRB-	_	16	punct	16:punct	Discourse=restatement:13->12|SpaceAfter=No
16	BTC	BTC	PROPN	NNP	Number=Sing	14	appos	14:appos	Entity=(abstract-6)|SpaceAfter=No
17	)	)	PUNCT	-RRB-	_	16	punct	16:punct	_
18	was	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	19	aux:pass	19:aux:pass	Discourse=same_unit:14->11
19	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
20	by	by	ADP	IN	_	21	case	21:case	_
21	Delp	Delp	PROPN	NNP	Number=Sing	19	obl	19:obl:by	Entity=(person-18)
22	and	and	CCONJ	CC	_	23	cc	23:cc	_
23	Mitchell	Mitchell	PROPN	NNP	Number=Sing	21	conj	19:obl:by|21:conj:and	Entity=(person-19)|SpaceAfter=No
24	.	.	PUNCT	.	_	19	punct	19:punct	_

# sent_id = AMALGUM_academic_ambtc-9
# s_type = decl
# text = In order to achieve compression, an image is divided into several non-overlapping blocks and stores only one bitmap and two corresponding quantization values of each block.
1	In	in	SCONJ	IN	_	4	mark	4:mark	Discourse=purpose:15->16
2	order	order	NOUN	NN	Number=Sing	1	fixed	1:fixed	_
3	to	to	PART	TO	_	4	mark	4:mark	_
4	achieve	achieve	VERB	VB	VerbForm=Inf	10	advcl	10:advcl:in_order	_
5	compression	compression	NOUN	NN	Number=Sing	4	obj	4:obj	Entity=(abstract-5)|SpaceAfter=No
6	,	,	PUNCT	,	_	4	punct	4:punct	_
7	an	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Discourse=joint:16->11|Entity=(abstract-17
8	image	image	NOUN	NN	Number=Sing	10	nsubj:pass	10:nsubj:pass	Entity=abstract-17)
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux:pass	10:aux:pass	_
10	divided	divide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
11	into	into	ADP	IN	_	14	case	14:case	_
12	several	several	ADJ	JJ	Degree=Pos	14	amod	14:amod	Entity=(abstract-20
13	non-overlapping	non-overlapping	ADJ	JJ	Degree=Pos|Polarity=Neg	14	amod	14:amod	_
14	blocks	block	NOUN	NNS	Number=Plur	10	obl	10:obl:into	Entity=abstract-20)
15	and	and	CCONJ	CC	_	16	cc	16:cc	Discourse=joint:17->16
16	stores	store	NOUN	NNS	Number=Plur	10	conj	10:conj:and	_
17	only	only	ADV	RB	_	18	advmod	18:advmod	Entity=(abstract-21
18	one	one	NUM	CD	NumForm=Word|NumType=Card	19	nummod	19:nummod	_
19	bitmap	bitmap	NOUN	NN	Number=Sing	16	obj	16:obj	Entity=abstract-21)
20	and	and	CCONJ	CC	_	24	cc	24:cc	_
21	two	2	NUM	CD	NumForm=Digit|NumType=Card	24	nummod	24:nummod	Entity=(abstract-22
22	corresponding	correspond	VERB	VBG	VerbForm=Ger	24	amod	24:amod	_
23	quantization	quantization	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(abstract-23)
24	values	value	NOUN	NNS	Number=Plur	19	conj	16:obj|19:conj:and	_
25	of	of	ADP	IN	_	27	case	27:case	_
26	each	each	DET	DT	_	27	det	27:det	Entity=(object-8
27	block	block	NOUN	NN	Number=Sing	24	nmod	24:nmod:of	Entity=abstract-22)object-8)|SpaceAfter=No
28	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_academic_ambtc-10
# s_type = decl
# text = Because the algorithm utilized in the BTC technique has significant computational complexity, Lema and Mitchell proposed an improved version named absolute moment block truncation coding (AMBTC).
1	Because	because	SCONJ	IN	_	9	mark	9:mark	Discourse=cause:18->16
2	the	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Entity=(abstract-24
3	algorithm	algorithm	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	_
4	utilized	utilize	VERB	VBN	Tense=Past|VerbForm=Part	3	acl	3:acl	Discourse=elaboration:19->18
5	in	in	ADP	IN	_	8	case	8:case	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-16
7	BTC	BTC	PROPN	NNP	Number=Sing	8	compound	8:compound	Entity=(abstract-6)
8	technique	technique	NOUN	NN	Number=Sing	4	obl	4:obl:in	Entity=abstract-24)abstract-16)
9	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	advcl	17:advcl:because	_
10	significant	significant	ADJ	JJ	Degree=Pos	12	amod	12:amod	Entity=(abstract-25
11	computational	computational	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	complexity	complexity	NOUN	NN	Number=Sing	9	obj	9:obj	Entity=abstract-25)|SpaceAfter=No
13	,	,	PUNCT	,	_	9	punct	9:punct	_
14	Lema	Lema	PROPN	NNP	Number=Sing	17	nsubj	17:nsubj	Discourse=same_unit:20->18|Entity=(person-26)
15	and	and	CCONJ	CC	_	16	cc	16:cc	_
16	Mitchell	Mitchell	PROPN	NNP	Number=Sing	14	conj	14:conj:and|17:nsubj	Entity=(person-19)
17	proposed	propose	VERB	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	0	root	0:root	_
18	an	a	DET	DT	Definite=Ind|PronType=Art	20	det	20:det	Entity=(abstract-27
19	improved	improve	VERB	VBN	Tense=Past|VerbForm=Part	20	amod	20:amod	_
20	version	version	NOUN	NN	Number=Sing	17	obj	17:obj	_
21	named	name	VERB	VBN	Tense=Past|VerbForm=Part	20	acl	20:acl	Discourse=elaboration:21->20
22	absolute	absolute	ADJ	JJ	Degree=Pos	23	amod	23:amod	Entity=(abstract-6(event-7
23	moment	moment	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=event-7)
24	block	block	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-9(object-8)
25	truncation	truncation	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=abstract-9)
26	coding	coding	NOUN	NN	Number=Sing	21	xcomp	21:xcomp	Entity=abstract-27)abstract-6)
27	(	(	PUNCT	-LRB-	_	28	punct	28:punct	Discourse=restatement:22->21|SpaceAfter=No
28	AMBTC	AMBTC	PROPN	NNP	Number=Sing	26	appos	26:appos	Entity=(abstract-6)|SpaceAfter=No
29	)	)	PUNCT	-RRB-	_	28	punct	28:punct	SpaceAfter=No
30	.	.	PUNCT	.	_	17	punct	17:punct	_

# sent_id = AMALGUM_academic_ambtc-11
# s_type = decl
# text = In AMBTC, the image is also divided into several non-overlapping blocks with a size of k × k pixels, for each block, the mean value AVG can be calculated by Equation (1).
1	In	in	ADP	IN	_	2	case	2:case	Discourse=joint:23->18
2	AMBTC	AMBTC	PROPN	NNP	Number=Sing	8	obl	8:obl:in	Entity=(abstract-6)|SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-17
5	image	image	NOUN	NN	Number=Sing	8	nsubj:pass	8:nsubj:pass	Entity=abstract-17)
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux:pass	8:aux:pass	_
7	also	also	ADV	RB	_	8	advmod	8:advmod	_
8	divided	divide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
9	into	into	ADP	IN	_	12	case	12:case	_
10	several	several	ADJ	JJ	Degree=Pos	12	amod	12:amod	Entity=(abstract-20
11	non-overlapping	non-overlapping	ADJ	JJ	Degree=Pos|Polarity=Neg	12	amod	12:amod	_
12	blocks	block	NOUN	NNS	Number=Plur	8	obl	8:obl:into	_
13	with	with	ADP	IN	_	15	case	15:case	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(abstract-28
15	size	size	NOUN	NN	Number=Sing	12	nmod	12:nmod:with	_
16	of	of	ADP	IN	_	20	case	20:case	_
17	k	k	NUM	CD	NumForm=Word|NumType=Card	20	nummod	20:nummod	Entity=(abstract-29|XML=<hi rend:::"italic"></hi>
18	×	×	SYM	SYM	_	19	case	19:case	_
19	k	k	NUM	CD	NumForm=Word|NumType=Card	17	nmod	17:nmod:	Entity=(abstract-30)|XML=<hi rend:::"italic"></hi>
20	pixels	pixel	NOUN	NNS	Number=Plur	15	nmod	15:nmod:of	Entity=abstract-20)abstract-28)abstract-29)|SpaceAfter=No
21	,	,	PUNCT	,	_	32	punct	32:punct	_
22	for	for	ADP	IN	_	24	case	24:case	Discourse=purpose:24->23
23	each	each	DET	DT	_	24	det	24:det	Entity=(object-8
24	block	block	NOUN	NN	Number=Sing	32	obl	32:obl:for	Entity=object-8)|SpaceAfter=No
25	,	,	PUNCT	,	_	24	punct	24:punct	_
26	the	the	DET	DT	Definite=Def|PronType=Art	28	det	28:det	Entity=(abstract-31
27	mean	mean	ADJ	JJ	Degree=Pos	28	amod	28:amod	_
28	value	value	NOUN	NN	Number=Sing	32	nsubj:pass	32:nsubj:pass	Entity=abstract-31)
29	AVG	AVG	PROPN	NNP	Number=Sing	28	nsubj:pass	28:nsubj:pass	Entity=(abstract-32)|XML=<hi rend:::"italic"></hi>
30	can	can	AUX	MD	VerbForm=Fin	32	aux	32:aux	_
31	be	be	AUX	VB	VerbForm=Inf	32	aux:pass	32:aux:pass	_
32	calculated	calculate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	parataxis	8:parataxis	_
33	by	by	ADP	IN	_	34	case	34:case	_
34	Equation	Equation	PROPN	NNP	Number=Sing	32	obl	32:obl:by	Entity=(abstract-33
35	(	(	PUNCT	-LRB-	_	36	punct	36:punct	SpaceAfter=No
36	1	1	NUM	CD	NumForm=Digit|NumType=Card	34	dep	34:dep	SpaceAfter=No
37	)	)	PUNCT	-RRB-	_	36	punct	36:punct	Entity=abstract-33)|SpaceAfter=No
38	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_academic_ambtc-12
# s_type = decl
# text = (1) where denotes the j-th pixel value in the block.
1	(	(	PUNCT	-LRB-	_	2	punct	2:punct	Discourse=elaboration:25->23|SpaceAfter=No
2	1	1	NUM	CD	NumForm=Digit|NumType=Card	5	dep	5:dep	SpaceAfter=No
3	)	)	PUNCT	-RRB-	_	2	punct	2:punct	_
4	where	where	SCONJ	WRB	PronType=Int	5	nsubj	5:nsubj	Discourse=elaboration:26->25
5	denotes	denote	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	the	the	DET	DT	Definite=Def|PronType=Art	10	det	10:det	Entity=(abstract-31
7	j	j	NOUN	NN	Number=Sing	10	nummod	10:nummod	SpaceAfter=No|XML=<hi rend:::"italic"></hi>
8	-th	-th	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
9	pixel	pixel	NOUN	NN	Number=Sing	10	compound	10:compound	Entity=(object-34)
10	value	value	NOUN	NN	Number=Sing	5	obj	5:obj	_
11	in	in	ADP	IN	_	13	case	13:case	_
12	the	the	DET	DT	Definite=Def|PronType=Art	13	det	13:det	Entity=(object-8
13	block	block	NOUN	NN	Number=Sing	10	nmod	10:nmod:in	Entity=abstract-31)object-8)|SpaceAfter=No
14	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_ambtc-13
# s_type = decl
# text = The bitmap can then be constructed by comparing each pixel value with AVG:
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=preparation:27->29|Entity=(abstract-21
2	bitmap	bitmap	NOUN	NN	Number=Sing	6	nsubj:pass	6:nsubj:pass	Entity=abstract-21)
3	can	can	AUX	MD	VerbForm=Fin	6	aux	6:aux	_
4	then	then	ADV	RB	PronType=Dem	6	advmod	6:advmod	_
5	be	be	AUX	VB	VerbForm=Inf	6	aux:pass	6:aux:pass	_
6	constructed	construct	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
7	by	by	SCONJ	IN	_	8	mark	8:mark	Discourse=means:28->27
8	comparing	compare	VERB	VBG	VerbForm=Ger	6	advcl	6:advcl:by	_
9	each	each	DET	DT	_	11	det	11:det	Entity=(abstract-31
10	pixel	pixel	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(object-34)
11	value	value	NOUN	NN	Number=Sing	8	obj	8:obj	Entity=abstract-31)
12	with	with	ADP	IN	_	13	case	13:case	_
13	AVG	AVG	PROPN	NNP	Number=Sing	8	obl	8:obl:with	Entity=(abstract-32)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
14	:	:	PUNCT	:	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_ambtc-14
# s_type = imp
# text = Set the bit value of bitmap to ‘0’ if the pixel value is less than AVG and set to ‘1’ for others.
1	Set	set	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=sequence:29->23
2	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-31
3	bit	bit	NOUN	NN	Number=Sing	4	compound	4:compound	Entity=(abstract-35)
4	value	value	NOUN	NN	Number=Sing	1	obj	1:obj	_
5	of	of	ADP	IN	_	6	case	6:case	_
6	bitmap	bitmap	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=abstract-31)(abstract-21)
7	to	to	ADP	IN	_	9	case	9:case	_
8	‘	'	PUNCT	``	_	7	punct	7:punct	SpaceAfter=No
9	0	0	NUM	CD	NumForm=Digit|NumType=Card	1	obl	1:obl:to	Entity=(abstract-36)|SpaceAfter=No
10	’	'	PUNCT	''	_	16	punct	16:punct	_
11	if	if	SCONJ	IN	_	16	mark	16:mark	Discourse=condition:30->29
12	the	the	DET	DT	Definite=Def|PronType=Art	14	det	14:det	Entity=(abstract-31
13	pixel	pixel	NOUN	NN	Number=Sing	14	compound	14:compound	Entity=(object-34)
14	value	value	NOUN	NN	Number=Sing	16	nsubj	16:nsubj	Entity=abstract-31)
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	cop	16:cop	_
16	less	less	ADJ	JJR	Degree=Cmp	1	advcl	1:advcl:if	_
17	than	than	ADP	IN	_	18	case	18:case	_
18	AVG	AVG	PROPN	NNP	Number=Sing	16	obl	16:obl:than	Entity=(abstract-32)|XML=<hi rend:::"italic"></hi>
19	and	and	CCONJ	CC	_	20	cc	20:cc	Discourse=joint:31->30
20	set	set	VERB	VBN	Tense=Past|VerbForm=Part	1	conj	1:conj:and	_
21	to	to	ADP	IN	_	23	case	23:case	_
22	‘	'	PUNCT	``	_	21	punct	21:punct	SpaceAfter=No
23	1	1	NUM	CD	NumForm=Digit|NumType=Card	20	obl	20:obl:to	Entity=(time-37)|SpaceAfter=No
24	’	'	PUNCT	''	_	26	punct	26:punct	_
25	for	for	ADP	IN	_	26	case	26:case	_
26	others	other	NOUN	NNS	Number=Plur	20	obl	20:obl:for	Entity=(person-38)|SpaceAfter=No
27	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_ambtc-15
# s_type = decl
# text = Next, Equations (2) and (3) can be applied to derive two quantization values, i.e., the low mean value L and the high mean value H, respectively. (2) (3) where q represents the number of ‘1’ that exist in the bitmap BM.
# newpar = p (4 s)
1	Next	next	ADV	RB	Degree=Pos	13	advmod	13:advmod	Discourse=elaboration:32->29|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	Equations	Equation	PROPN	NNPS	Number=Plur	13	nsubj:pass	13:nsubj:pass|15:nsubj:xsubj	Entity=(abstract-39
4	(	(	PUNCT	:	_	5	punct	5:punct	SpaceAfter=No
5	2	2	NUM	CD	NumForm=Digit|NumType=Card	3	nmod:tmod	3:nmod:tmod	Entity=(abstract-40)|SpaceAfter=No
6	)	)	PUNCT	-RRB-	_	5	punct	5:punct	Entity=abstract-39)
7	and	and	CCONJ	CC	_	9	cc	9:cc	_
8	(	(	PUNCT	-LRB-	_	9	punct	9:punct	SpaceAfter=No
9	3	3	NUM	CD	NumForm=Digit|NumType=Card	3	conj	3:conj:and|13:nsubj:xsubj|15:nsubj:xsubj	Entity=(abstract-41)|SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	9	punct	9:punct	_
11	can	can	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
12	be	be	AUX	VB	VerbForm=Inf	13	aux:pass	13:aux:pass	_
13	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
14	to	to	PART	TO	_	15	mark	15:mark	Discourse=purpose:33->32
15	derive	derive	VERB	VB	VerbForm=Inf	13	xcomp	13:xcomp	_
16	two	2	NUM	CD	NumForm=Digit|NumType=Card	18	nummod	18:nummod	Entity=(abstract-22
17	quantization	quantization	NOUN	NN	Number=Sing	18	compound	18:compound	Entity=(abstract-23)
18	values	value	NOUN	NNS	Number=Plur	15	obj	15:obj	Entity=abstract-22)|SpaceAfter=No
19	,	,	PUNCT	,	_	25	punct	25:punct	_
20	i.e.	i.e.	ADV	FW	Abbr=Yes	25	advmod	25:advmod	Entity=(abstract-42(abstract-22(abstract-31|SpaceAfter=No
21	,	,	PUNCT	,	_	20	punct	20:punct	_
22	the	the	DET	DT	Definite=Def|PronType=Art	25	det	25:det	_
23	low	low	ADJ	JJ	Degree=Pos	25	amod	25:amod	_
24	mean	mean	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-43)
25	value	value	NOUN	NN	Number=Sing	18	appos	18:appos	Entity=abstract-31)
26	L	L	NOUN	NN	Number=Sing	25	appos	25:appos	XML=<hi rend:::"italic"></hi>
27	and	and	CCONJ	CC	_	31	cc	31:cc	_
28	the	the	DET	DT	Definite=Def|PronType=Art	31	det	31:det	Entity=(abstract-44(abstract-31
29	high	high	ADJ	JJ	Degree=Pos	30	amod	30:amod	Entity=(abstract-43
30	mean	mean	NOUN	NN	Number=Sing	31	compound	31:compound	Entity=abstract-43)
31	value	value	NOUN	NN	Number=Sing	25	conj	18:appos|25:conj:and	Entity=abstract-31)
32	H	H	NOUN	NN	Number=Sing	31	appos	31:appos	Entity=abstract-42)abstract-22)abstract-44)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
33	,	,	PUNCT	,	_	34	punct	34:punct	_
34	respectively	respectively	ADV	RB	Degree=Pos	13	advmod	13:advmod	SpaceAfter=No
35	.	.	PUNCT	.	_	13	punct	13:punct	_
36	(	(	PUNCT	-LRB-	_	37	punct	37:punct	Discourse=elaboration:34->32|SpaceAfter=No
37	2	2	NUM	CD	NumForm=Digit|NumType=Card	13	dep	13:dep	SpaceAfter=No
38	)	)	PUNCT	-RRB-	_	37	punct	37:punct	_
39	(	(	PUNCT	-LRB-	_	40	punct	40:punct	SpaceAfter=No
40	3	3	NUM	CD	NumForm=Digit|NumType=Card	13	dep	13:dep	SpaceAfter=No
41	)	)	PUNCT	-RRB-	_	40	punct	40:punct	_
42	where	where	SCONJ	WRB	PronType=Int	44	mark	44:mark	Discourse=elaboration:35->32
43	q	q	NOUN	NN	Number=Sing	44	nsubj	44:nsubj	Entity=(abstract-45)|XML=<hi rend:::"italic"></hi>
44	represents	represent	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	acl	18:acl:where	_
45	the	the	DET	DT	Definite=Def|PronType=Art	46	det	46:det	Entity=(abstract-46
46	number	number	NOUN	NN	Number=Sing	44	obj	44:obj	_
47	of	of	ADP	IN	_	49	case	49:case	_
48	‘	'	PUNCT	``	_	47	punct	47:punct	Entity=(time-37|SpaceAfter=No
49	1	1	NUM	CD	NumForm=Digit|NumType=Card	46	nmod	46:nmod:of|52:nsubj	SpaceAfter=No
50	’	'	PUNCT	''	_	52	punct	52:punct	_
51	that	that	PRON	WDT	PronType=Rel	52	nsubj	49:ref	Discourse=elaboration:36->35
52	exist	exist	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	49	acl:relcl	49:acl:relcl	_
53	in	in	ADP	IN	_	56	case	56:case	_
54	the	the	DET	DT	Definite=Def|PronType=Art	56	det	56:det	Entity=(abstract-47
55	bitmap	bitmap	NOUN	NN	Number=Sing	56	compound	56:compound	Entity=(abstract-21)
56	BM	BM	PROPN	NNP	Number=Sing	52	obl	52:obl:in	Entity=abstract-46)time-37)abstract-47)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
57	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_ambtc-16
# s_type = decl
# text = Meanwhile, and denote two original pixel sets which the corresponding bits are ‘0’ and ‘1’, respectively in bitmap BM.
1	Meanwhile	meanwhile	ADV	RB	Degree=Pos	4	advmod	4:advmod	Discourse=joint:37->29|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	_
4	denote	denote	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	two	2	NUM	CD	NumForm=Digit|NumType=Card	8	nummod	8:nummod	Entity=(abstract-48
6	original	original	ADJ	JJ	Degree=Pos	8	amod	8:amod	_
7	pixel	pixel	NOUN	NN	Number=Sing	8	compound	8:compound	Entity=(object-34)
8	sets	set	NOUN	NNS	Number=Plur	4	obj	4:obj|15:obl	_
9	which	which	PRON	WDT	PronType=Rel	15	obl	8:ref	Discourse=elaboration:38->37
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-36(abstract-49
11	corresponding	corresponding	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	bits	bit	NOUN	NNS	Number=Plur	15	nsubj	15:nsubj	Entity=abstract-49)
13	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	15	cop	15:cop	_
14	‘	'	PUNCT	``	_	13	punct	13:punct	SpaceAfter=No
15	0	0	NUM	CD	NumForm=Digit|NumType=Card	8	acl:relcl	8:acl:relcl	SpaceAfter=No
16	’	'	PUNCT	''	_	19	punct	19:punct	Entity=abstract-36)
17	and	and	CCONJ	CC	_	19	cc	19:cc	_
18	‘	'	PUNCT	``	_	17	punct	17:punct	Entity=(time-37|SpaceAfter=No
19	1	1	NUM	CD	NumForm=Digit|NumType=Card	15	conj	8:acl:relcl|15:conj:and	SpaceAfter=No
20	’	'	PUNCT	''	_	19	punct	19:punct	SpaceAfter=No
21	,	,	PUNCT	,	_	22	punct	22:punct	_
22	respectively	respectively	ADV	RB	Degree=Pos	15	advmod	15:advmod	_
23	in	in	ADP	IN	_	25	case	25:case	_
24	bitmap	bitmap	NOUN	NN	Number=Sing	25	compound	25:compound	Entity=(abstract-47(abstract-21)
25	BM	BM	PROPN	NNP	Number=Sing	15	nmod	15:nmod:in	Entity=abstract-48)time-37)abstract-47)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
26	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_ambtc-17
# s_type = decl
# text = Therefore, the final compression code of the block can be obtained by concatenating L, H, and BM, i.e., (L, H, BM).
1	Therefore	therefore	ADV	RB	Degree=Pos	12	advmod	12:advmod	Discourse=preparation:39->42|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-50
4	final	final	ADJ	JJ	Degree=Pos	6	amod	6:amod	_
5	compression	compression	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-5)
6	code	code	NOUN	NN	Number=Sing	12	nsubj:pass	12:nsubj:pass	_
7	of	of	ADP	IN	_	9	case	9:case	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(object-8
9	block	block	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=abstract-50)object-8)
10	can	can	AUX	MD	VerbForm=Fin	12	aux	12:aux	_
11	be	be	AUX	VB	VerbForm=Inf	12	aux:pass	12:aux:pass	_
12	obtained	obtain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
13	by	by	SCONJ	IN	_	14	mark	14:mark	Discourse=attribution:40->41
14	concatenating	concatenate	VERB	VBG	VerbForm=Ger	12	advcl	12:advcl:by	_
15	L	L	PROPN	NNP	Number=Sing	14	obj	14:obj	Entity=(person-51)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
16	,	,	PUNCT	,	_	17	punct	17:punct	_
17	H	H	PROPN	NNP	Number=Sing	15	conj	14:obj|15:conj:and	Entity=(abstract-44)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
18	,	,	PUNCT	,	_	20	punct	20:punct	_
19	and	and	CCONJ	CC	_	20	cc	20:cc	_
20	BM	BM	PROPN	NNP	Number=Sing	15	conj	14:obj|15:conj:and	Entity=(abstract-47)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
21	,	,	PUNCT	,	_	25	punct	25:punct	_
22	i.e.	i.e.	ADV	FW	Abbr=Yes	25	advmod	25:advmod	Discourse=same_unit:41->39|SpaceAfter=No
23	,	,	PUNCT	,	_	22	punct	22:punct	_
24	(	(	PUNCT	-LRB-	_	25	punct	25:punct	SpaceAfter=No
25	L	L	PROPN	NNP	Number=Sing	14	dep	14:dep	SpaceAfter=No|XML=<hi rend:::"italic"></hi>
26	,	,	PUNCT	,	_	27	punct	27:punct	_
27	H	H	PROPN	NNP	Number=Sing	25	conj	14:dep|25:conj	SpaceAfter=No|XML=<hi rend:::"italic"></hi>
28	,	,	PUNCT	,	_	29	punct	29:punct	_
29	BM	BM	PROPN	NNP	Number=Sing	25	conj	14:dep|25:conj	SpaceAfter=No|XML=<hi rend:::"italic"></hi>
30	)	)	PUNCT	-RRB-	_	25	punct	25:punct	SpaceAfter=No
31	.	.	PUNCT	.	_	12	punct	12:punct	_

# sent_id = AMALGUM_academic_ambtc-18
# s_type = decl
# text = The corresponding restored block can be constructed by replacing each ‘0’ and ‘1’ of the bitmap with low mean value L and high mean value H, respectively.
1	The	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Discourse=joint:42->37|Entity=(object-8
2	corresponding	correspond	VERB	VBG	VerbForm=Ger	4	amod	4:amod	_
3	restored	restore	VERB	VBN	Tense=Past|VerbForm=Part	4	amod	4:amod	_
4	block	block	NOUN	NN	Number=Sing	7	nsubj:pass	7:nsubj:pass	Entity=object-8)
5	can	can	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
6	be	be	AUX	VB	VerbForm=Inf	7	aux:pass	7:aux:pass	_
7	constructed	construct	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
8	by	by	SCONJ	IN	_	9	mark	9:mark	Discourse=means:43->42
9	replacing	replace	VERB	VBG	VerbForm=Ger	7	advcl	7:advcl:by	_
10	each	each	DET	DT	_	12	det	12:det	Entity=(abstract-36
11	‘	'	PUNCT	``	_	10	punct	10:punct	SpaceAfter=No
12	0	0	NUM	CD	NumForm=Digit|NumType=Card	9	obj	9:obj	SpaceAfter=No
13	’	'	PUNCT	''	_	16	punct	16:punct	Entity=abstract-36)
14	and	and	CCONJ	CC	_	16	cc	16:cc	_
15	‘	'	PUNCT	``	_	14	punct	14:punct	Entity=(time-37|SpaceAfter=No
16	1	1	NUM	CD	NumForm=Digit|NumType=Card	12	conj	9:obj|12:conj:and	SpaceAfter=No
17	’	'	PUNCT	''	_	16	punct	16:punct	_
18	of	of	ADP	IN	_	20	case	20:case	_
19	the	the	DET	DT	Definite=Def|PronType=Art	20	det	20:det	Entity=(abstract-21
20	bitmap	bitmap	NOUN	NN	Number=Sing	12	nmod	12:nmod:of	Entity=time-37)abstract-21)
21	with	with	ADP	IN	_	24	case	24:case	_
22	low	low	ADJ	JJ	Degree=Pos	24	amod	24:amod	Entity=(abstract-42(abstract-31
23	mean	mean	NOUN	NN	Number=Sing	24	compound	24:compound	Entity=(abstract-43)
24	value	value	NOUN	NN	Number=Sing	9	obl	9:obl:with	_
25	L	L	NOUN	NN	Number=Sing	24	nummod	24:nummod	Entity=abstract-31)|XML=<hi rend:::"italic"></hi>
26	and	and	CCONJ	CC	_	29	cc	29:cc	_
27	high	high	ADJ	JJ	Degree=Pos	28	amod	28:amod	Entity=(abstract-31(abstract-43
28	mean	mean	NOUN	NN	Number=Sing	29	compound	29:compound	Entity=abstract-43)
29	value	value	NOUN	NN	Number=Sing	24	conj	9:obl:with|24:conj:and	Entity=abstract-42)abstract-31)
30	H	H	NOUN	NN	Number=Sing	29	dep	29:dep	Entity=(abstract-44)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
31	,	,	PUNCT	,	_	32	punct	32:punct	_
32	respectively	respectively	ADV	RB	Degree=Pos	7	advmod	7:advmod	SpaceAfter=No
33	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_ambtc-19
# s_type = frag
# text = 2.2.
# newpar = head (2 s)
1	2.2.	2.2.	NUM	CD	NumForm=Digit|NumType=Card	0	root	0:root	Discourse=joint:44->42|Entity=(abstract-52)

# sent_id = AMALGUM_academic_ambtc-20
# s_type = frag
# text = Matrix Coding
1	Matrix	matrix	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:45->44|Entity=(abstract-6(abstract-10)
2	Coding	coding	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-6)

# sent_id = AMALGUM_academic_ambtc-21
# s_type = decl
# text = Matrix coding method is a modified version of the (7, 4) Hamming code, and is widely used in LSB-based data hiding methods.
# newpar = p (6 s)
1	Matrix	matrix	NOUN	NN	Number=Sing	2	compound	2:compound	Discourse=joint:46->45|Entity=(abstract-3(abstract-6(abstract-10)
2	coding	coding	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=abstract-6)
3	method	method	NOUN	NN	Number=Sing	7	nsubj	7:nsubj|21:nsubj:pass	Entity=abstract-3)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	7:cop	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	Entity=(abstract-3
6	modified	modify	VERB	VBN	Tense=Past|VerbForm=Part	7	amod	7:amod	_
7	version	version	NOUN	NN	Number=Sing	0	root	0:root	_
8	of	of	ADP	IN	_	16	case	16:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(abstract-50
10	(	(	PUNCT	-LRB-	_	11	punct	11:punct	Discourse=restatement:47->46|SpaceAfter=No
11	7	7	NUM	CD	NumForm=Digit|NumType=Card	16	compound	16:compound	SpaceAfter=No
12	,	,	PUNCT	,	_	13	punct	13:punct	_
13	4	4	NUM	CD	NumForm=Digit|NumType=Card	11	dep	11:dep	SpaceAfter=No
14	)	)	PUNCT	-RRB-	_	11	punct	11:punct	_
15	Hamming	hamming	NOUN	NN	Number=Sing	16	compound	16:compound	Discourse=same_unit:48->46|Entity=(person-53)
16	code	code	NOUN	NN	Number=Sing	7	nmod	7:nmod:of	Entity=abstract-3)abstract-50)|SpaceAfter=No
17	,	,	PUNCT	,	_	21	punct	21:punct	_
18	and	and	CCONJ	CC	_	21	cc	21:cc	Discourse=joint:49->48
19	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	aux:pass	21:aux:pass	_
20	widely	widely	ADV	RB	Degree=Pos	21	advmod	21:advmod	_
21	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	conj	7:conj:and	_
22	in	in	ADP	IN	_	26	case	26:case	_
23	LSB-based	LSB-based	PROPN	NNP	Number=Sing	26	compound	26:compound	Entity=(abstract-54(abstract-55)
24	data	datum	NOUN	NNS	Number=Plur	25	compound	25:compound	Entity=(abstract-56(abstract-57)
25	hiding	hiding	NOUN	NN	Number=Sing	26	compound	26:compound	Entity=abstract-56)
26	methods	method	NOUN	NNS	Number=Plur	21	obl	21:obl:in	Entity=abstract-54)|SpaceAfter=No
27	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_ambtc-22
# s_type = decl
# text = By utilizing the matrix operation, for a seven-bit sequence (also called a code-word), at most one bit is changed when embedding three secret bits.
1	By	by	SCONJ	IN	_	2	mark	2:mark	Discourse=means:50->46
2	utilizing	utilize	VERB	VBG	VerbForm=Ger	23	advcl	23:advcl:by	_
3	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-58
4	matrix	matrix	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-10)
5	operation	operation	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-58)|SpaceAfter=No
6	,	,	PUNCT	,	_	10	punct	10:punct	_
7	for	for	ADP	IN	_	10	case	10:case	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(abstract-59
9	seven-bit	seven-bit	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	sequence	sequence	NOUN	NN	Number=Sing	23	obl	23:obl:for	_
11	(	(	PUNCT	-LRB-	_	13	punct	13:punct	Discourse=elaboration:51->50|SpaceAfter=No
12	also	also	ADV	RB	_	13	advmod	13:advmod	_
13	called	call	VERB	VBN	Tense=Past|VerbForm=Part	10	acl	10:acl	_
14	a	a	DET	DT	Definite=Ind|PronType=Art	15	det	15:det	Entity=(abstract-60
15	code-word	code-word	NOUN	NN	Number=Sing	13	xcomp	13:xcomp	Entity=abstract-60)|SpaceAfter=No
16	)	)	PUNCT	-RRB-	_	13	punct	13:punct	Entity=abstract-59)|SpaceAfter=No
17	,	,	PUNCT	,	_	10	punct	10:punct	_
18	at	at	ADV	IN	_	20	advmod	20:advmod	Discourse=same_unit:52->50|Entity=(abstract-35
19	most	most	ADJ	JJS	Degree=Sup	18	fixed	18:fixed	_
20	one	one	NUM	CD	NumForm=Word|NumType=Card	21	nummod	21:nummod	_
21	bit	bit	NOUN	NN	Number=Sing	23	nsubj:pass	23:nsubj:pass	Entity=abstract-35)
22	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	23	aux:pass	23:aux:pass	_
23	changed	change	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
24	when	when	SCONJ	WRB	PronType=Int	25	mark	25:mark	Discourse=circumstance:53->52
25	embedding	embed	VERB	VBG	VerbForm=Ger	23	advcl	23:advcl:when	_
26	three	3	NUM	CD	NumForm=Digit|NumType=Card	28	nummod	28:nummod	Entity=(abstract-49
27	secret	secret	ADJ	JJ	Degree=Pos	28	amod	28:amod	_
28	bits	bit	NOUN	NNS	Number=Plur	25	obj	25:obj	Entity=abstract-49)|SpaceAfter=No
29	.	.	PUNCT	.	_	23	punct	23:punct	_

# sent_id = AMALGUM_academic_ambtc-23
# s_type = decl
# text = In the matrix coding method, H is the check matrix and is defined as .
1	In	in	ADP	IN	_	5	case	5:case	Discourse=sequence:54->50
2	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-3
3	matrix	matrix	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-10)
4	coding	code	VERB	VBG	VerbForm=Ger	5	amod	5:amod	_
5	method	method	NOUN	NN	Number=Sing	11	nmod	11:nmod:in	Entity=abstract-3)|SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	H	H	PROPN	NNP	Number=Sing	11	nsubj	11:nsubj|14:nsubj:pass	Entity=(abstract-44)|XML=<hi rend:::"italic"></hi>
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	11:cop	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-44
10	check	check	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(event-61)
11	matrix	matrix	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-44)
12	and	and	CCONJ	CC	_	14	cc	14:cc	Discourse=joint:55->54
13	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	14:aux:pass	_
14	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	conj	11:conj:and	_
15	as	as	ADP	IN	_	14	obl	14:obl	_
16	.	.	PUNCT	.	_	11	punct	11:punct	_

# sent_id = AMALGUM_academic_ambtc-24
# s_type = decl
# text = Equation (4) is used to obtain which bit needs to be changed. (4) where CW denotes the seven-bit sequence, and S represents the three-bit vector to be hidden.
1	Equation	equation	NOUN	NN	Number=Sing	6	nsubj:pass	6:nsubj:pass|8:nsubj:xsubj	Discourse=joint:56->54|Entity=(abstract-33
2	(	(	PUNCT	-LRB-	_	3	punct	3:punct	SpaceAfter=No
3	4	4	NUM	CD	NumForm=Digit|NumType=Card	1	nmod:tmod	1:nmod:tmod	Entity=(abstract-62)|SpaceAfter=No
4	)	)	PUNCT	-RRB-	_	3	punct	3:punct	Entity=abstract-33)
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	6:aux:pass	_
6	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
7	to	to	PART	TO	_	8	mark	8:mark	Discourse=purpose:57->56
8	obtain	obtain	VERB	VB	VerbForm=Inf	6	xcomp	6:xcomp	_
9	which	which	DET	WDT	PronType=Int	10	det	10:det	Entity=(abstract-35
10	bit	bit	NOUN	NN	Number=Sing	11	nsubj	11:nsubj|14:nsubj:xsubj	Entity=abstract-35)
11	needs	need	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	ccomp	8:ccomp	_
12	to	to	PART	TO	_	14	mark	14:mark	_
13	be	be	AUX	VB	VerbForm=Inf	14	aux:pass	14:aux:pass	_
14	changed	change	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	xcomp	11:xcomp	SpaceAfter=No
15	.	.	PUNCT	.	_	6	punct	6:punct	_
16	(	(	PUNCT	-LRB-	_	17	punct	17:punct	Discourse=restatement:58->56|SpaceAfter=No
17	4	4	NUM	CD	NumForm=Digit|NumType=Card	6	dep	6:dep	SpaceAfter=No
18	)	)	PUNCT	-RRB-	_	17	punct	17:punct	_
19	where	where	SCONJ	WRB	PronType=Int	21	mark	21:mark	Discourse=elaboration:59->56
20	CW	CW	PROPN	NNP	Abbr=Yes|Number=Sing	21	nsubj	21:nsubj	Entity=(abstract-63)|XML=<hi rend:::"italic"></hi>
21	denotes	denote	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	advcl	6:advcl:where	_
22	the	the	DET	DT	Definite=Def|PronType=Art	24	det	24:det	Entity=(abstract-59
23	seven-bit	seven-bit	ADJ	JJ	Degree=Pos	24	amod	24:amod	_
24	sequence	sequence	NOUN	NN	Number=Sing	21	obj	21:obj	Entity=abstract-59)|SpaceAfter=No
25	,	,	PUNCT	,	_	28	punct	28:punct	_
26	and	and	CCONJ	CC	_	28	cc	28:cc	Discourse=joint:60->59
27	S	S	NOUN	NN	Number=Sing	28	nsubj	28:nsubj	Entity=(abstract-64)|XML=<hi rend:::"italic"></hi>
28	represents	represent	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	conj	6:advcl:where|21:conj:and	_
29	the	the	DET	DT	Definite=Def|PronType=Art	31	det	31:det	Entity=(abstract-65
30	three-bit	three-bit	NOUN	NN	Number=Sing	31	compound	31:compound	_
31	vector	vector	NOUN	NN	Number=Sing	28	obj	28:obj	_
32	to	to	PART	TO	_	34	mark	34:mark	Discourse=elaboration:61->60
33	be	be	AUX	VB	VerbForm=Inf	34	aux:pass	34:aux:pass	_
34	hidden	hide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	31	acl	31:acl:to	Entity=abstract-65)|SpaceAfter=No
35	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_ambtc-25
# s_type = imp
# text = Notice that Equation (4) is calculated under the modulo-2 operation.
1	Notice	notice	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:62->63
2	that	that	SCONJ	IN	_	8	mark	8:mark	Discourse=joint:63->56
3	Equation	Equation	PROPN	NNP	Number=Sing	8	nsubj:pass	8:nsubj:pass	Entity=(abstract-33)
4	(	(	PUNCT	-LRB-	_	5	punct	5:punct	SpaceAfter=No
5	4	4	NUM	CD	NumForm=Digit|NumType=Card	3	appos	3:appos	Entity=(abstract-33)|SpaceAfter=No
6	)	)	PUNCT	-RRB-	_	5	punct	5:punct	_
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux:pass	8:aux:pass	_
8	calculated	calculate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	ccomp	1:ccomp	_
9	under	under	ADP	IN	_	12	case	12:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-58
11	modulo-2	modulo-2	ADJ	JJ	Degree=Pos	12	amod	12:amod	_
12	operation	operation	NOUN	NN	Number=Sing	8	obl	8:obl:under	Entity=abstract-58)|SpaceAfter=No
13	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_ambtc-26
# s_type = decl
# text = The location of z is listed in Table 1.
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	2:det	Discourse=joint:64->63|Entity=(abstract-10
2	location	location	NOUN	NN	Number=Sing	6	nsubj:pass	6:nsubj:pass	_
3	of	of	ADP	IN	_	4	case	4:case	_
4	z	z	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-10)(abstract-66)|XML=<hi rend:::"italic"></hi>
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	6:aux:pass	_
6	listed	list	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
7	in	in	ADP	IN	_	8	case	8:case	_
8	Table	Table	PROPN	NNP	Number=Sing	6	obl	6:obl:in	Entity=(abstract-67
9	1	1	NUM	CD	NumForm=Digit|NumType=Card	8	dep	8:dep	Entity=abstract-67)|SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_ambtc-27
# s_type = sub
# text = In the data extraction phase, Equation (5) can be used to extract three bits of secret data from each seven-bit sequence. (5) where RCW denotes the seven-bit sequence that has been embedded.
# newpar = p (2 s)
1	In	in	ADP	IN	_	5	case	5:case	Discourse=elaboration:65->64
2	the	the	DET	DT	Definite=Def|PronType=Art	5	det	5:det	Entity=(abstract-68
3	data	datum	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-57)
4	extraction	extraction	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(place-69)
5	phase	phase	NOUN	NN	Number=Sing	13	obl	13:obl:in	Entity=abstract-68)|SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	Equation	Equation	PROPN	NNP	Number=Sing	13	nsubj:pass	13:nsubj:pass|15:nsubj:xsubj	Entity=(abstract-33
8	(	(	PUNCT	-LRB-	_	9	punct	9:punct	SpaceAfter=No
9	5	5	NUM	CD	NumForm=Digit|NumType=Card	7	nmod:tmod	7:nmod:tmod	Entity=(abstract-70)|SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	9	punct	9:punct	Entity=abstract-33)
11	can	can	AUX	MD	VerbForm=Fin	13	aux	13:aux	_
12	be	be	AUX	VB	VerbForm=Inf	13	aux:pass	13:aux:pass	_
13	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
14	to	to	PART	TO	_	15	mark	15:mark	Discourse=purpose:66->65
15	extract	extract	VERB	VB	VerbForm=Inf	13	xcomp	13:xcomp	_
16	three	3	NUM	CD	NumForm=Digit|NumType=Card	17	nummod	17:nummod	Entity=(abstract-49
17	bits	bit	NOUN	NNS	Number=Plur	15	obj	15:obj	_
18	of	of	ADP	IN	_	20	case	20:case	_
19	secret	secret	ADJ	JJ	Degree=Pos	20	amod	20:amod	Entity=(abstract-57
20	data	datum	NOUN	NNS	Number=Plur	17	nmod	17:nmod:of	Entity=abstract-49)abstract-57)
21	from	from	ADP	IN	_	24	case	24:case	_
22	each	each	DET	DT	_	24	det	24:det	Entity=(abstract-59
23	seven-bit	seven-bit	ADJ	JJ	Degree=Pos	24	amod	24:amod	_
24	sequence	sequence	NOUN	NN	Number=Sing	15	obl	15:obl:from	Entity=abstract-59)|SpaceAfter=No
25	.	.	PUNCT	.	_	13	punct	13:punct	_
26	(	(	PUNCT	-LRB-	_	27	punct	27:punct	Discourse=restatement:67->65|SpaceAfter=No
27	5	5	NUM	CD	NumForm=Digit|NumType=Card	13	dep	13:dep	SpaceAfter=No
28	)	)	PUNCT	-RRB-	_	27	punct	27:punct	_
29	where	where	SCONJ	WRB	PronType=Int	31	mark	31:mark	Discourse=elaboration:68->65
30	RCW	RCW	PROPN	NNP	Number=Sing	31	nsubj	31:nsubj	Entity=(abstract-71)|XML=<hi rend:::"italic"></hi>
31	denotes	denote	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	advcl	13:advcl:where	_
32	the	the	DET	DT	Definite=Def|PronType=Art	34	det	34:det	Entity=(abstract-59
33	seven-bit	seven-bit	ADJ	JJ	Degree=Pos	34	nummod	34:nummod	_
34	sequence	sequence	NOUN	NN	Number=Sing	31	obj	31:obj|38:nsubj:pass	_
35	that	that	PRON	WDT	PronType=Rel	38	nsubj:pass	34:ref	Discourse=elaboration:69->68
36	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	38	aux	38:aux	_
37	been	be	AUX	VBN	Tense=Past|VerbForm=Part	38	aux:pass	38:aux:pass	_
38	embedded	embd	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	34	acl:relcl	34:acl:relcl	Entity=abstract-59)|SpaceAfter=No
39	.	.	PUNCT	.	_	13	punct	13:punct	_

# sent_id = AMALGUM_academic_ambtc-28
# s_type = decl
# text = Equation (5) is also calculated under the modulo-2 operation.
1	Equation	equation	NOUN	NN	Number=Sing	7	nsubj:pass	7:nsubj:pass	Discourse=joint:70->64|Entity=(abstract-33)
2	(	(	PUNCT	-LRB-	_	3	punct	3:punct	SpaceAfter=No
3	5	5	NUM	CD	NumForm=Digit|NumType=Card	1	appos	1:appos	Entity=(abstract-33)|SpaceAfter=No
4	)	)	PUNCT	-RRB-	_	3	punct	3:punct	_
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux:pass	7:aux:pass	_
6	also	also	ADV	RB	_	7	advmod	7:advmod	_
7	calculated	calculate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
8	under	under	ADP	IN	_	11	case	11:case	_
9	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-58
10	modulo-2	modulo-2	NOUN	NN	Number=Sing	11	compound	11:compound	Entity=(place-72)
11	operation	operation	NOUN	NN	Number=Sing	7	obl	7:obl:under	Entity=abstract-58)|SpaceAfter=No
12	.	.	PUNCT	.	_	7	punct	7:punct	_

