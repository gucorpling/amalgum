# meta::id = AMALGUM_academic_storage
# meta::title = Formation of Stable and Efficient Social Storage Cloud
# meta::shortTitle = storage
# meta::author = Pramod  C. Mane, Nagarajan Krishnamurthy, Kapil Ahuja
# meta::type = academic
# meta::dateCollected = 2019-11-03
# meta::sourceURL = https://www.mdpi.com/2073-4336/10/4/44/htm
# meta::speakerList = none
# meta::speakerCount = 0
# newdoc id = AMALGUM_academic_storage
# sent_id = AMALGUM_academic_storage-1
# s_type = frag
# text = 3. Network Structure and Storage Availability
# newpar = head (1 s)
1	3.	3.	X	LS	_	3	dep	3:dep	Discourse=preparation:1->2
2	Network	network	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(abstract-1(person-2)
3	Structure	structure	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-1)
4	and	and	CCONJ	CC	_	6	cc	6:cc	_
5	Storage	storage	NOUN	NN	Number=Sing	6	compound	6:compound	Entity=(abstract-3(place-4)
6	Availability	availability	NOUN	NN	Number=Sing	3	conj	3:conj:and	Entity=abstract-3)

# sent_id = AMALGUM_academic_storage-2
# s_type = decl
# text = One of the objectives of this paper is to understand the impact of link addition and deletion on storage availability for those agents who are involved in the link addition/deletion as well as those who are not.
# newpar = p (4 s)
1	One	one	NUM	CD	NumForm=Word|NumType=Card	10	nsubj	10:nsubj	Discourse=ROOT:2|Entity=(object-5
2	of	of	ADP	IN	_	4	case	4:case	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-6
4	objectives	objective	NOUN	NNS	Number=Plur	1	nmod	1:nmod:of	_
5	of	of	ADP	IN	_	7	case	7:case	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	7:det	Entity=(abstract-7
7	paper	paper	NOUN	NN	Number=Sing	4	nmod	4:nmod:of	Entity=object-5)abstract-6)abstract-7)
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	10:cop	_
9	to	to	PART	TO	_	10	mark	10:mark	_
10	understand	understand	VERB	VB	VerbForm=Inf	0	root	0:root	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-8
12	impact	impact	NOUN	NN	Number=Sing	10	obj	10:obj	_
13	of	of	ADP	IN	_	15	case	15:case	_
14	link	link	NOUN	NN	Number=Sing	15	compound	15:compound	Entity=(abstract-9(abstract-10(abstract-11)
15	addition	addition	NOUN	NN	Number=Sing	12	nmod	12:nmod:of	Entity=abstract-10)
16	and	and	CCONJ	CC	_	17	cc	17:cc	_
17	deletion	deletion	NOUN	NN	Number=Sing	15	conj	12:nmod:of|15:conj:and	Entity=abstract-9)(event-12)
18	on	on	ADP	IN	_	20	case	20:case	_
19	storage	storage	NOUN	NN	Number=Sing	20	compound	20:compound	Entity=(abstract-3(place-4)
20	availability	availability	NOUN	NN	Number=Sing	12	nmod	12:nmod:on	_
21	for	for	ADP	IN	_	23	case	23:case	_
22	those	this	DET	DT	Number=Plur|PronType=Dem	23	det	23:det	Entity=(person-13
23	agents	agent	NOUN	NNS	Number=Plur	20	nmod	20:nmod:for|26:nsubj:pass	_
24	who	who	PRON	WP	PronType=Rel	26	nsubj:pass	23:ref	Discourse=elaboration:3->2
25	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	26	aux:pass	26:aux:pass	_
26	involved	involve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	23	acl:relcl	23:acl:relcl	_
27	in	in	ADP	IN	_	30	case	30:case	_
28	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(abstract-14
29	link	link	NOUN	NN	Number=Sing	30	compound	30:compound	Entity=(abstract-11)
30	addition/deletion	addition/deletion	NOUN	NN	Number=Sing	26	obl	26:obl:in	Entity=abstract-8)abstract-3)person-13)abstract-14)
31	as	as	ADV	RB	_	34	cc	34:cc	_
32	well	well	ADV	RB	Degree=Pos	31	fixed	31:fixed	_
33	as	as	ADP	IN	_	31	fixed	31:fixed	_
34	those	this	PRON	DT	Number=Plur|PronType=Dem	21	conj	21:conj:as_well_as|23:case|36:nsubj	_
35	who	who	PRON	WP	PronType=Rel	36	nsubj	34:ref	Discourse=elaboration:4->3
36	are	be	VERB	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	34	acl:relcl	34:acl:relcl	_
37	not	not	ADV	RB	Polarity=Neg	34	acl:relcl	34:acl:relcl	SpaceAfter=No
38	.	.	PUNCT	.	_	10	punct	10:punct	_

# sent_id = AMALGUM_academic_storage-3
# s_type = decl
# text = The storage availability is determined by the distances between them and their closeness (from Equation (2)).
1	The	the	DET	DT	Definite=Def|PronType=Art	3	det	3:det	Discourse=joint:5->2|Entity=(abstract-3
2	storage	storage	NOUN	NN	Number=Sing	3	compound	3:compound	Entity=(place-4)
3	availability	availability	NOUN	NN	Number=Sing	5	nsubj:pass	5:nsubj:pass	Entity=abstract-3)
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux:pass	5:aux:pass	_
5	determined	determine	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	0:root	_
6	by	by	ADP	IN	_	8	case	8:case	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-15(abstract-16
8	distances	distance	NOUN	NNS	Number=Plur	5	obl	5:obl:by	_
9	between	between	ADP	IN	_	10	case	10:case	_
10	them	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs	8	nmod	8:nmod:between	Entity=abstract-16)(abstract-15)
11	and	and	CCONJ	CC	_	13	cc	13:cc	_
12	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	13	nmod:poss	13:nmod:poss	Entity=(abstract-17(abstract-15)
13	closeness	closeness	NOUN	NN	Number=Sing	8	conj	5:obl:by|8:conj:and	Entity=abstract-15)abstract-17)
14	(	(	PUNCT	-LRB-	_	16	punct	16:punct	Discourse=elaboration:6->5|SpaceAfter=No
15	from	from	ADP	IN	_	16	case	16:case	_
16	Equation	Equation	PROPN	NNP	Number=Sing	5	obl	5:obl:from	Entity=(abstract-18
17	(	(	PUNCT	-LRB-	_	18	punct	18:punct	SpaceAfter=No
18	2	2	NUM	CD	NumForm=Digit|NumType=Card	16	nmod:tmod	16:nmod:tmod	Entity=(abstract-19)|SpaceAfter=No
19	)	)	PUNCT	-RRB-	_	18	punct	18:punct	Entity=abstract-18)|SpaceAfter=No
20	)	)	PUNCT	-RRB-	_	16	punct	16:punct	SpaceAfter=No
21	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_storage-4
# s_type = decl
# text = Therefore, first we study how addition and deletion of a link impacts the shortest distances between pairs of agents and, therefore, their closeness.
1	Therefore	therefore	ADV	RB	Degree=Pos	5	advmod	5:advmod	Discourse=joint:7->2|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	first	first	ADV	RB	Degree=Pos|NumType=Ord	5	advmod	5:advmod	_
4	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	5	nsubj	5:nsubj	Entity=(person-20)
5	study	study	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	how	how	SCONJ	WRB	PronType=Rel	5	obj	5:obj	_
7	addition	addition	NOUN	NN	Number=Sing	13	nsubj	13:nsubj	Entity=(abstract-9(abstract-10)
8	and	and	CCONJ	CC	_	9	cc	9:cc	_
9	deletion	deletion	NOUN	NN	Number=Sing	7	conj	7:conj:and|13:nsubj	Entity=(event-12
10	of	of	ADP	IN	_	12	case	12:case	_
11	a	a	DET	DT	Definite=Ind|PronType=Art	12	det	12:det	Entity=(abstract-11
12	link	link	NOUN	NN	Number=Sing	7	nmod	7:nmod:of	Entity=abstract-9)event-12)abstract-11)
13	impacts	impact	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	acl:relcl	6:acl:relcl	Entity=(abstract-21)
14	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	Entity=(abstract-15(abstract-16
15	shortest	short	ADJ	JJS	Degree=Sup	16	amod	16:amod	_
16	distances	distance	NOUN	NNS	Number=Plur	13	obj	13:obj	_
17	between	between	ADP	IN	_	18	case	18:case	_
18	pairs	pair	NOUN	NNS	Number=Plur	16	nmod	16:nmod:between	Entity=(plant-22
19	of	of	ADP	IN	_	20	case	20:case	_
20	agents	agent	NOUN	NNS	Number=Plur	18	nmod	18:nmod:of	Entity=abstract-16)plant-22)(person-13)
21	and	and	CCONJ	CC	_	26	cc	26:cc	SpaceAfter=No
22	,	,	PUNCT	,	_	21	punct	21:punct	_
23	therefore	therefore	ADV	RB	Degree=Pos	26	advmod	26:advmod	Entity=(abstract-17|SpaceAfter=No
24	,	,	PUNCT	,	_	23	punct	23:punct	_
25	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	26	nmod:poss	26:nmod:poss	Entity=(abstract-15)
26	closeness	closeness	NOUN	NN	Number=Sing	16	conj	13:obj|16:conj:and	Entity=abstract-15)abstract-17)|SpaceAfter=No
27	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_storage-5
# s_type = decl
# text = This analysis provides a base for understanding the effect of link-addition/deletion on agents’ storage availability in .
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	2:det	Discourse=elaboration:8->7|Entity=(abstract-23
2	analysis	analysis	NOUN	NN	Number=Sing	3	nsubj	3:nsubj	Entity=abstract-23)
3	provides	provide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	5:det	Entity=(abstract-24
5	base	base	NOUN	NN	Number=Sing	3	obj	3:obj	_
6	for	for	SCONJ	IN	_	7	mark	7:mark	Discourse=elaboration:9->8
7	understanding	understand	VERB	VBG	VerbForm=Ger	5	acl	5:acl:for	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	9:det	Entity=(abstract-25
9	effect	effect	NOUN	NN	Number=Sing	7	obj	7:obj	_
10	of	of	ADP	IN	_	11	case	11:case	_
11	link-addition/deletion	link-addition/deletion	NOUN	NN	Number=Sing	9	nmod	9:nmod:of	Entity=(abstract-26
12	on	on	ADP	IN	_	16	case	16:case	_
13-14	agents’	_	_	_	_	_	_	_	_
13	agents	agent	NOUN	NNS	Number=Plur	16	nmod:poss	16:nmod:poss	Entity=(abstract-3(person-13
14	’	's	PART	POS	_	13	case	13:case	Entity=person-13)
15	storage	storage	NOUN	NN	Number=Sing	16	compound	16:compound	Entity=(place-4)
16	availability	availability	NOUN	NN	Number=Sing	11	nmod	11:nmod:on	_
17	in	in	ADV	IN	_	16	advmod	16:advmod	Entity=abstract-24)abstract-25)abstract-26)abstract-3)
18	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-6
# s_type = frag
# text = 3.1. Effect of Link Alteration on Closeness
# newpar = head (1 s)
1	3.1.	3.1.	NUM	CD	NumForm=Digit|NumType=Card	2	dep	2:dep	Discourse=preparation:10->11
2	Effect	effect	NOUN	NN	Number=Sing	0	root	0:root	Entity=(abstract-27
3	of	of	ADP	IN	_	5	case	5:case	_
4	Link	link	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-28(person-29)
5	Alteration	alteration	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-28)
6	on	on	ADP	IN	_	7	case	7:case	_
7	Closeness	closeness	NOUN	NN	Number=Sing	2	nmod	2:nmod:on	Entity=abstract-27)(abstract-17)

# sent_id = AMALGUM_academic_storage-7
# s_type = frag
# text = Lemma 1.
# newpar = p (1 s)
1	Lemma	Lemma	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:11->2|Entity=(abstract-30|XML=<hi rend:::"bold"></hi>
2	1.	1.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-30)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-8
# s_type = imp
# text = Suppose .
# newpar = p (3 s) | hi rend:::"italic" (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:12->11
2	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-9
# s_type = frag
# text = Then, .
1	Then	then	ADV	RB	PronType=Dem	0	root	0:root	Discourse=sequence:13->12|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_academic_storage-10
# s_type = frag
# text = Proof.
1	Proof	Proof	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:14->13|Entity=(person-31)|SpaceAfter=No|XML=<hi rend:::"bold">
2	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-11
# s_type = frag
# text = Clearly, .
# newpar = p (4 s)
1	Clearly	clearly	ADV	RB	Degree=Pos	0	root	0:root	Discourse=joint:15->13|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-12
# s_type = decl
# text = As , we have, .
1	As	as	SCONJ	IN	_	4	mark	4:mark	Discourse=manner:16->15
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-20)
4	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	SpaceAfter=No
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-13
# s_type = frag
# text = Also, .
1	Also	also	ADV	RB	_	0	root	0:root	Discourse=joint:17->16|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-14
# s_type = imp
# text = Thus, and increase by at least in .
1	Thus	thus	ADV	RB	_	4	advmod	4:advmod	Discourse=joint:18->13|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	_
4	increase	increase	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
5	by	by	ADP	IN	_	7	case	7:case	_
6	at	at	ADP	IN	_	7	case	7:case	_
7	least	least	ADJ	JJS	Degree=Sup	8	advmod	8:advmod	_
8	in	in	ADP	IN	_	4	obl	4:obl	_
9	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-15
# s_type = frag
# text = Lemma2.
# newpar = p (1 s)
1	Lemma	Lemma	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:19->13|Entity=(abstract-30|SpaceAfter=No|XML=<hi rend:::"bold"></hi>
2	2.	2.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-30)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-16
# s_type = imp
# text = Suppose .
# newpar = p (3 s) | hi rend:::"italic" (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:20->13
2	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-17
# s_type = frag
# text = Then, .
1	Then	then	ADV	RB	PronType=Dem	0	root	0:root	Discourse=sequence:21->20|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	SpaceAfter=No

# sent_id = AMALGUM_academic_storage-18
# s_type = frag
# text = Proof.
1	Proof	Proof	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:22->21|Entity=(person-31)|SpaceAfter=No|XML=<hi rend:::"bold">
2	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-19
# s_type = imp
# text = Let us assume there is no path between i and j in , then , thus, and decrease by 1 in .
# newpar = p (3 s) | list type:::"unordered" (3 s) | item (1 s)
1	Let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:23->24
2	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	1	obj	1:obj|3:nsubj:xsubj	Entity=(person-20)
3	assume	assume	VERB	VB	VerbForm=Inf	1	xcomp	1:xcomp	_
4	there	there	PRON	EX	_	5	expl	5:expl	Discourse=elaboration:24->22
5	is	be	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	3:ccomp	_
6	no	no	DET	DT	Polarity=Neg	7	det	7:det	Entity=(abstract-32
7	path	path	NOUN	NN	Number=Sing	5	nsubj	5:nsubj	_
8	between	between	ADP	IN	_	9	case	9:case	_
9	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	7	nmod	7:nmod:between_in	Entity=(abstract-32)|XML=<hi rend:::"italic"></hi>
10	and	and	CCONJ	CC	_	11	cc	11:cc	_
11	j	j	NOUN	NN	Number=Sing	9	conj	7:nmod:between_in|9:conj:and	Entity=abstract-32)(abstract-33)|XML=<hi rend:::"italic"></hi>
12	in	in	ADP	IN	_	9	case	9:case	_
13	,	,	PUNCT	,	_	14	punct	14:punct	_
14	then	then	ADV	RB	PronType=Dem	1	advmod	1:advmod	Discourse=elaboration:25->24
15	,	,	PUNCT	,	_	14	punct	14:punct	_
16	thus	thus	ADV	RB	_	19	advmod	19:advmod	SpaceAfter=No
17	,	,	PUNCT	,	_	16	punct	16:punct	_
18	and	and	CCONJ	CC	_	19	cc	19:cc	_
19	decrease	decrease	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
20	by	by	ADP	IN	_	21	case	21:case	_
21	1	1	NUM	CD	NumForm=Digit|NumType=Card	19	obl	19:obl:by	Entity=(abstract-34)
22	in	in	ADP	IN	_	19	compound:prt	19:compound:prt	_
23	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-20
# s_type = imp
# text = Now, let us assume there exists a path between i and j in , the distance between i and j in being at least 1 more than that in .
# newpar = item (2 s)
1	Now	now	ADV	RB	_	3	advmod	3:advmod	Discourse=attribution:26->27|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	3	obj	3:obj|5:nsubj:xsubj	Entity=(person-20)
5	assume	assume	VERB	VB	VerbForm=Inf	3	xcomp	3:xcomp	_
6	there	there	PRON	EX	_	7	expl	7:expl	Discourse=joint:27->21
7	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	5:ccomp	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(abstract-32
9	path	path	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	_
10	between	between	ADP	IN	_	11	case	11:case	_
11	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	9	nmod	9:nmod:between_in	Entity=(abstract-32)|XML=<hi rend:::"italic"></hi>
12	and	and	CCONJ	CC	_	13	cc	13:cc	_
13	j	j	ADV	RB	Degree=Pos	11	conj	9:nmod:between_in|11:conj:and	Entity=abstract-32)|XML=<hi rend:::"italic"></hi>
14	in	in	ADP	IN	_	11	case	11:case	_
15	,	,	PUNCT	,	_	27	punct	27:punct	_
16	the	the	DET	DT	Definite=Def|PronType=Art	17	det	17:det	Discourse=elaboration:28->27|Entity=(abstract-35
17	distance	distance	NOUN	NN	Number=Sing	27	nsubj	27:nsubj	_
18	between	between	ADP	IN	_	19	case	19:case	_
19	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	17	nmod	17:nmod:between	Entity=(abstract-32)|XML=<hi rend:::"italic"></hi>
20	and	and	CCONJ	CC	_	21	cc	21:cc	_
21	j	j	ADV	RB	Degree=Pos	19	conj	17:nmod:between|19:conj:and	Entity=abstract-35)|XML=<hi rend:::"italic"></hi>
22	in	in	SCONJ	IN	_	17	mark	17:mark	_
23	being	be	AUX	VBG	VerbForm=Ger	27	cop	27:cop	_
24	at	at	ADP	IN	_	25	case	25:case	_
25	least	least	ADJ	JJS	Degree=Sup	26	nmod	26:nmod:at	Entity=(abstract-34
26	1	1	NUM	CD	NumForm=Digit|NumType=Card	27	obl:npmod	27:obl:npmod	Entity=abstract-34)
27	more	more	ADJ	JJR	Degree=Cmp	5	ccomp	5:ccomp	_
28	than	than	ADP	IN	_	29	case	29:case	_
29	that	that	PRON	DT	Number=Sing|PronType=Dem	27	obl	27:obl:than	_
30	in	in	ADP	IN	_	29	nmod	29:nmod	_
31	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-21
# s_type = imp
# text = Thus, and decrease by at least in .
1	Thus	thus	ADV	RB	_	4	advmod	4:advmod	Discourse=joint:29->21|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	_
4	decrease	decrease	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
5	by	by	ADP	IN	_	7	case	7:case	_
6	at	at	ADP	IN	_	7	case	7:case	_
7	least	least	ADJ	JJS	Degree=Sup	8	advmod	8:advmod	_
8	in	in	ADP	IN	_	4	obl	4:obl	_
9	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-22
# s_type = decl
# text = Lemmas 1 and 2 show that, with respect to closeness, every link benefits agents on either side of the link.
# newpar = p (3 s)
1	Lemmas	Lemmas	PROPN	NNPS	Number=Plur	5	nsubj	5:nsubj	Discourse=attribution:30->31|Entity=(abstract-36
2	1	1	NUM	CD	NumForm=Digit|NumType=Card	1	flat	1:flat	Entity=abstract-36)
3	and	and	CCONJ	CC	_	4	cc	4:cc	_
4	2	2	NUM	CD	NumForm=Digit|NumType=Card	1	conj	1:conj:and|5:nsubj	Entity=(abstract-19)
5	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
6	that	that	SCONJ	IN	_	15	mark	15:mark	Discourse=joint:31->21|SpaceAfter=No
7	,	,	PUNCT	,	_	6	punct	6:punct	_
8	with	with	ADP	IN	_	9	case	9:case	_
9	respect	respect	NOUN	NN	Number=Sing	15	obl	15:obl:with	_
10	to	to	ADP	IN	_	11	case	11:case	_
11	closeness	closeness	NOUN	NN	Number=Sing	9	nmod	9:nmod:to	Entity=(abstract-17)|SpaceAfter=No
12	,	,	PUNCT	,	_	9	punct	9:punct	_
13	every	every	DET	DT	_	14	det	14:det	Discourse=same_unit:32->31|Entity=(abstract-11
14	link	link	NOUN	NN	Number=Sing	15	nsubj	15:nsubj	Entity=abstract-11)
15	benefits	benefit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	5:ccomp	_
16	agents	agent	NOUN	NNS	Number=Plur	15	obj	15:obj	Entity=(person-13
17	on	on	ADP	IN	_	19	case	19:case	_
18	either	either	DET	DT	_	19	det	19:det	Entity=(abstract-37
19	side	side	NOUN	NN	Number=Sing	16	nmod	16:nmod:on	_
20	of	of	ADP	IN	_	22	case	22:case	_
21	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-11
22	link	link	NOUN	NN	Number=Sing	19	nmod	19:nmod:of	Entity=person-13)abstract-37)abstract-11)|SpaceAfter=No
23	.	.	PUNCT	.	_	5	punct	5:punct	_

# sent_id = AMALGUM_academic_storage-23
# s_type = decl
# text = An action of link addition or deletion between a pair of agents not only impacts their closeness, but also that of other agents.
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	2:det	Discourse=joint:33->21|Entity=(event-38
2	action	action	NOUN	NN	Number=Sing	15	nsubj	15:nsubj	_
3	of	of	ADP	IN	_	5	case	5:case	_
4	link	link	NOUN	NN	Number=Sing	5	compound	5:compound	Entity=(abstract-39(abstract-40(abstract-11)
5	addition	addition	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=abstract-40)
6	or	or	CCONJ	CC	_	7	cc	7:cc	_
7	deletion	deletion	NOUN	NN	Number=Sing	5	conj	2:nmod:of|5:conj:or	Entity=(event-12
8	between	between	ADP	IN	_	10	case	10:case	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	10:det	Entity=(abstract-41
10	pair	pair	NOUN	NN	Number=Sing	5	nmod	5:nmod:between	_
11	of	of	ADP	IN	_	12	case	12:case	_
12	agents	agent	NOUN	NNS	Number=Plur	10	nmod	10:nmod:of	Entity=event-38)abstract-39)event-12)abstract-41)(person-13)
13	not	not	ADV	RB	Polarity=Neg	14	advmod	14:advmod	_
14	only	only	ADV	RB	_	15	advmod	15:advmod	_
15	impacts	impact	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	Entity=(abstract-21)
16	their	their	PRON	PRP$	Number=Plur|Person=3|Poss=Yes|PronType=Prs	17	nmod:poss	17:nmod:poss	Entity=(abstract-17(person-13)
17	closeness	closeness	NOUN	NN	Number=Sing	15	obj	15:obj	Entity=abstract-17)|SpaceAfter=No
18	,	,	PUNCT	,	_	21	punct	21:punct	_
19	but	but	CCONJ	CC	_	21	cc	21:cc	Discourse=joint:34->21
20	also	also	ADV	RB	_	21	advmod	21:advmod	_
21	that	that	PRON	DT	Number=Sing|PronType=Dem	17	conj	15:obj|17:conj:but	Entity=(abstract-41
22	of	of	ADP	IN	_	24	case	24:case	_
23	other	other	ADJ	JJ	Degree=Pos	24	amod	24:amod	Entity=(person-13
24	agents	agent	NOUN	NNS	Number=Plur	21	nmod	21:nmod:of	Entity=abstract-41)person-13)|SpaceAfter=No
25	.	.	PUNCT	.	_	15	punct	15:punct	_

# sent_id = AMALGUM_academic_storage-24
# s_type = decl
# text = Now, we study the impact of link addition or deletion between a pair of agents (say, i and j) on the closeness of the other agents .
1	Now	now	ADV	RB	_	4	advmod	4:advmod	Discourse=joint:35->21|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	nsubj	4:nsubj	Entity=(person-20)
4	study	study	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	6:det	Entity=(abstract-21
6	impact	impact	NOUN	NN	Number=Sing	4	obj	4:obj	_
7	of	of	ADP	IN	_	9	case	9:case	_
8	link	link	NOUN	NN	Number=Sing	9	compound	9:compound	Entity=(abstract-11(abstract-40(abstract-11)
9	addition	addition	NOUN	NN	Number=Sing	6	nmod	6:nmod:of	Entity=abstract-40)
10	or	or	CCONJ	CC	_	11	cc	11:cc	_
11	deletion	deletion	NOUN	NN	Number=Sing	9	conj	6:nmod:of|9:conj:or	Entity=(event-12
12	between	between	ADP	IN	_	14	case	14:case	_
13	a	a	DET	DT	Definite=Ind|PronType=Art	14	det	14:det	Entity=(abstract-41
14	pair	pair	NOUN	NN	Number=Sing	9	nmod	9:nmod:between	_
15	of	of	ADP	IN	_	16	case	16:case	_
16	agents	agent	NOUN	NNS	Number=Plur	14	nmod	14:nmod:of	Entity=abstract-11)event-12)abstract-41)(person-13)
17	(	(	PUNCT	-LRB-	_	20	punct	20:punct	Discourse=elaboration:36->35|SpaceAfter=No
18	say	say	VERB	VB	VerbForm=Inf	20	advmod	20:advmod	Entity=(abstract-32|SpaceAfter=No
19	,	,	PUNCT	,	_	18	punct	18:punct	_
20	i	I	NUM	CD	NumForm=Roman|NumType=Card	16	appos	16:appos	Entity=abstract-32)|XML=<hi rend:::"italic"></hi>
21	and	and	CCONJ	CC	_	22	cc	22:cc	_
22	j	j	NOUN	NN	Number=Sing	20	conj	16:appos|20:conj:and	Entity=(abstract-33)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
23	)	)	PUNCT	-RRB-	_	20	punct	20:punct	_
24	on	on	ADP	IN	_	26	case	26:case	Discourse=same_unit:37->35
25	the	the	DET	DT	Definite=Def|PronType=Art	26	det	26:det	Entity=(abstract-17
26	closeness	closeness	NOUN	NN	Number=Sing	6	nmod	6:nmod:on	_
27	of	of	ADP	IN	_	30	case	30:case	_
28	the	the	DET	DT	Definite=Def|PronType=Art	30	det	30:det	Entity=(person-13
29	other	other	ADJ	JJ	Degree=Pos	30	amod	30:amod	_
30	agents	agent	NOUN	NNS	Number=Plur	26	nmod	26:nmod:of	Entity=abstract-21)abstract-17)person-13)
31	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-25
# s_type = frag
# text = Lemma 3.
# newpar = p (1 s)
1	Lemma	Lemma	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:38->21|Entity=(abstract-30|XML=<hi rend:::"bold"></hi>
2	3.	3.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-30)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-26
# s_type = imp
# text = Suppose and .
# newpar = p (3 s) | hi rend:::"italic" (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:39->21
2	and	and	CCONJ	CC	_	1	conj	1:conj	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-27
# s_type = frag
# text = Then, if and only if for all .
1	Then	then	ADV	RB	PronType=Dem	8	advmod	8:advmod	Discourse=sequence:40->39|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:41->40
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	only	only	ADV	RB	_	3	conj	3:conj:and|8:mark	_
6	if	if	SCONJ	IN	_	8	mark	8:mark	_
7	for	for	ADP	IN	_	8	case	8:case	_
8	all	all	PRON	DT	_	0	root	0:root	_
9	.	.	PUNCT	.	_	8	punct	8:punct	SpaceAfter=No

# sent_id = AMALGUM_academic_storage-28
# s_type = frag
# text = Proof.
1	Proof	Proof	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:42->40|Entity=(person-31)|SpaceAfter=No|XML=<hi rend:::"bold">
2	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-29
# s_type = frag
# text = If for all , then by Equation (1), .
# newpar = p (1 s)
1	If	if	SCONJ	IN	_	7	mark	7:mark	Discourse=condition:43->44
2	for	for	ADP	IN	_	3	case	3:case	_
3	all	all	PRON	DT	_	7	nmod	7:nmod:for	Entity=(abstract-18
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	then	then	ADV	RB	PronType=Dem	7	advmod	7:advmod	Discourse=elaboration:44->42
6	by	by	ADP	IN	_	7	case	7:case	_
7	Equation	Equation	PROPN	NNP	Number=Sing	0	root	0:root	_
8	(	(	PUNCT	-LRB-	_	9	punct	9:punct	SpaceAfter=No
9	1	1	NUM	CD	NumForm=Digit|NumType=Card	7	dep	7:dep	SpaceAfter=No
10	)	)	PUNCT	-RRB-	_	9	punct	9:punct	Entity=abstract-18)|SpaceAfter=No
11	,	,	PUNCT	,	_	7	punct	7:punct	_
12	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_storage-30
# s_type = imp
# text = Conversely, suppose .
# newpar = p (1 s)
1	Conversely	conversely	ADV	RB	Degree=Pos	3	advmod	3:advmod	Discourse=question:45->47|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-31
# s_type = decl
# text = It is easy to see that, if for some , if , then .
# newpar = p (2 s)
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	3	expl	3:expl	Discourse=attribution:46->47|Entity=(abstract-18)
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	3:cop	_
3	easy	easy	ADJ	JJ	Degree=Pos	0	root	0:root	_
4	to	to	PART	TO	_	5	mark	5:mark	_
5	see	see	VERB	VB	VerbForm=Inf	3	csubj	3:csubj	_
6	that	that	SCONJ	IN	_	14	mark	14:mark	Discourse=joint:47->40|SpaceAfter=No
7	,	,	PUNCT	,	_	6	punct	6:punct	_
8	if	if	SCONJ	IN	_	10	mark	10:mark	_
9	for	for	ADP	IN	_	10	case	10:case	_
10	some	some	PRON	DT	_	12	nmod	12:nmod:for	_
11	,	,	PUNCT	,	_	10	punct	10:punct	_
12	if	if	ADP	IN	_	14	discourse	14:discourse	Discourse=condition:48->47
13	,	,	PUNCT	,	_	12	punct	12:punct	_
14	then	then	ADV	RB	PronType=Dem	3	advcl	3:advcl:that	_
15	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-32
# s_type = decl
# text = (Paths in exist in too).
1	(	(	PUNCT	-LRB-	_	4	punct	4:punct	Discourse=elaboration:49->47|SpaceAfter=No
2	Paths	path	NOUN	NNS	Number=Plur	4	nsubj	4:nsubj	Entity=(abstract-42)
3	in	in	ADP	IN	_	2	dep	2:dep	_
4	exist	exist	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	in	in	ADP	IN	_	6	case	6:case	_
6	too	too	ADV	RB	Degree=Pos	4	advmod	4:advmod	SpaceAfter=No
7	)	)	PUNCT	-RRB-	_	4	punct	4:punct	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-33
# s_type = decl
# text = We have for all and, if there exists x such that , then , a contradiction.
# newpar = p (1 s)
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	nsubj	2:nsubj	Discourse=elaboration:50->47|Entity=(person-20)
2	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	for	for	ADP	IN	_	4	case	4:case	_
4	all	all	PRON	DT	_	2	obl	2:obl:for	_
5	and	and	CCONJ	CC	_	17	cc	17:cc	SpaceAfter=No
6	,	,	PUNCT	,	_	5	punct	5:punct	_
7	if	if	SCONJ	IN	_	9	mark	9:mark	Discourse=condition:51->52
8	there	there	PRON	EX	_	9	expl	9:expl	_
9	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	advcl	17:advcl:if	_
10	x	x	NUM	CD	NumForm=Word|NumType=Card	9	nsubj	9:nsubj	Entity=(abstract-43)|XML=<hi rend:::"italic"></hi>
11	such	such	ADJ	JJ	Degree=Pos	9	advmod	9:advmod	_
12	that	that	PRON	DT	Number=Sing|PronType=Dem	17	reparandum	17:reparandum	Entity=(abstract-44
13	,	,	PUNCT	,	_	12	punct	12:punct	_
14	then	then	ADV	RB	PronType=Dem	17	advmod	17:advmod	Discourse=same_unit:52->50
15	,	,	PUNCT	,	_	14	punct	14:punct	_
16	a	a	DET	DT	Definite=Ind|PronType=Art	17	det	17:det	_
17	contradiction	contradiction	NOUN	NN	Number=Sing	2	parataxis	2:parataxis	Entity=abstract-44)|SpaceAfter=No
18	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_academic_storage-34
# s_type = frag
# text = Lemma 4.
# newpar = p (1 s)
1	Lemma	Lemma	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:53->40|Entity=(abstract-30|XML=<hi rend:::"bold"></hi>
2	4.	4.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=abstract-30)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-35
# s_type = imp
# text = Suppose and .
# newpar = p (3 s) | hi rend:::"italic" (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=elaboration:54->53
2	and	and	CCONJ	CC	_	1	conj	1:conj	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-36
# s_type = frag
# text = Then, if and only if for all .
1	Then	then	ADV	RB	PronType=Dem	8	advmod	8:advmod	Discourse=sequence:55->53|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:56->55
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	only	only	ADV	RB	_	3	conj	3:conj:and|8:mark	_
6	if	if	SCONJ	IN	_	8	mark	8:mark	_
7	for	for	ADP	IN	_	8	case	8:case	_
8	all	all	PRON	DT	_	0	root	0:root	_
9	.	.	PUNCT	.	_	8	punct	8:punct	SpaceAfter=No

# sent_id = AMALGUM_academic_storage-37
# s_type = frag
# text = Proof.
1	Proof	Proof	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:57->55|Entity=(person-31)|SpaceAfter=No|XML=<hi rend:::"bold">
2	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-38
# s_type = decl
# text = As for all l, the proof follows in lines similar to that of Lemma 3.
# newpar = p (1 s)
1	As	as	SCONJ	IN	_	4	mark	4:mark	Discourse=manner:58->57
2	for	for	ADP	IN	_	4	case	4:case	_
3	all	all	DET	DT	_	4	det	4:det	Entity=(abstract-45
4	l	luileter	NOUN	NN	Number=Sing	8	obl	8:obl:for	Entity=abstract-45)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
5	,	,	PUNCT	,	_	4	punct	4:punct	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	Entity=(abstract-46
7	proof	proof	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	Entity=abstract-46)
8	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
9	in	in	ADP	IN	_	10	case	10:case	_
10	lines	line	NOUN	NNS	Number=Plur	8	obl	8:obl:in	Entity=(abstract-47
11	similar	similar	ADJ	JJ	Degree=Pos	10	amod	10:amod	Entity=abstract-47)
12	to	to	ADP	IN	_	13	case	13:case	_
13	that	that	PRON	DT	Number=Sing|PronType=Dem	11	obl	11:obl:to	Entity=(abstract-46
14	of	of	ADP	IN	_	15	case	15:case	_
15	Lemma	Lemma	PROPN	NNP	Number=Sing	13	nmod	13:nmod:of	Entity=(abstract-30
16	3	3	NUM	CD	NumForm=Digit|NumType=Card	15	dep	15:dep	Entity=abstract-46)abstract-30)|SpaceAfter=No
17	.	.	PUNCT	.	_	8	punct	8:punct	_

# sent_id = AMALGUM_academic_storage-39
# s_type = decl
# text = We now show necessary and sufficient conditions for increase in the closeness of agents who are not involved in link addition or deletion.
# newpar = p (1 s)
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	nsubj	3:nsubj	Discourse=elaboration:59->57|Entity=(person-20)
2	now	now	ADV	RB	_	3	advmod	3:advmod	_
3	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
4	necessary	necessary	ADJ	JJ	Degree=Pos	7	amod	7:amod	Entity=(abstract-48
5	and	and	CCONJ	CC	_	6	cc	6:cc	_
6	sufficient	sufficient	ADJ	JJ	Degree=Pos	4	conj	4:conj:and|7:amod	_
7	conditions	condition	NOUN	NNS	Number=Plur	3	obj	3:obj	_
8	for	for	ADP	IN	_	9	case	9:case	_
9	increase	increase	NOUN	NN	Number=Sing	7	nmod	7:nmod:for	Entity=(event-49
10	in	in	ADP	IN	_	12	case	12:case	_
11	the	the	DET	DT	Definite=Def|PronType=Art	12	det	12:det	Entity=(abstract-50
12	closeness	closeness	NOUN	NN	Number=Sing	9	nmod	9:nmod:in	_
13	of	of	ADP	IN	_	14	case	14:case	_
14	agents	agent	NOUN	NNS	Number=Plur	12	nmod	12:nmod:of|18:nsubj:pass	Entity=(person-13
15	who	who	PRON	WP	PronType=Rel	18	nsubj:pass	14:ref	Discourse=elaboration:60->59
16	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	aux:pass	18:aux:pass	_
17	not	not	ADV	RB	Polarity=Neg	18	advmod	18:advmod	_
18	involved	involve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	acl:relcl	14:acl:relcl	_
19	in	in	ADP	IN	_	21	case	21:case	_
20	link	link	NOUN	NN	Number=Sing	21	compound	21:compound	Entity=(abstract-11(abstract-40(abstract-11)
21	addition	addition	NOUN	NN	Number=Sing	18	obl	18:obl:in	Entity=abstract-40)
22	or	or	CCONJ	CC	_	23	cc	23:cc	_
23	deletion	deletion	NOUN	NN	Number=Sing	21	conj	18:obl:in|21:conj:or	Entity=abstract-48)event-49)abstract-50)person-13)abstract-11)(event-12)|SpaceAfter=No
24	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-40
# s_type = frag
# text = Theorem 1.
# newpar = p (1 s)
1	Theorem	Theorem	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:61->55|Entity=(person-51|XML=<hi rend:::"bold"></hi>
2	1.	1.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=person-51)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-41
# s_type = imp
# text = Suppose , and let k be an agent distinct from i and j.
# newpar = p (3 s) | hi rend:::"italic" (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:62->55
2	,	,	PUNCT	,	_	4	punct	4:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=joint:63->62
4	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
5	k	k	NUM	CD	NumForm=Word|NumType=Card	4	obj	4:obj|8:nsubj:xsubj	Entity=(abstract-52)
6	be	be	AUX	VB	VerbForm=Inf	8	cop	8:cop	_
7	an	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-53
8	agent	agent	NOUN	NN	Number=Sing	4	xcomp	4:xcomp	_
9	distinct	distinct	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=abstract-53)
10	from	from	ADP	IN	_	11	case	11:case	_
11	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	9	obl	9:obl:from	Entity=(abstract-53)
12	and	and	CCONJ	CC	_	13	cc	13:cc	_
13	j.	j.	PROPN	NNP	Number=Sing	11	conj	9:obl:from|11:conj:and	Entity=(abstract-54)

# sent_id = AMALGUM_academic_storage-42
# s_type = decl
# text = Then, if and only if there exists at least one agent such that and all shortest paths from k to l in contain .
1	Then	then	ADV	RB	PronType=Dem	8	advmod	8:advmod	Discourse=sequence:64->62|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	if	if	SCONJ	IN	_	8	mark	8:mark	Discourse=condition:65->66
4	and	and	CCONJ	CC	_	5	cc	5:cc	_
5	only	only	ADV	RB	_	3	conj	3:conj:and|8:mark	_
6	if	if	SCONJ	IN	_	8	mark	8:mark	_
7	there	there	PRON	EX	_	8	expl	8:expl	_
8	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
9	at	at	ADP	IN	_	10	case	10:case	_
10	least	least	ADJ	JJS	Degree=Sup	11	advmod	11:advmod	Entity=(person-55
11	one	one	NUM	CD	NumForm=Word|NumType=Card	12	nummod	12:nummod	_
12	agent	agent	NOUN	NN	Number=Sing	8	nsubj	8:nsubj	_
13	such	such	SCONJ	JJ	Degree=Pos	24	mark	24:mark	Discourse=same_unit:66->64
14	that	that	SCONJ	IN	_	24	mark	24:mark	_
15	and	and	CCONJ	CC	_	18	cc	18:cc	_
16	all	all	DET	DT	_	18	det	18:det	Entity=(abstract-42
17	shortest	short	ADJ	JJS	Degree=Sup	18	amod	18:amod	_
18	paths	path	NOUN	NNS	Number=Plur	12	nmod	12:nmod	_
19	from	from	ADP	IN	_	20	case	20:case	_
20	k	k	NUM	CD	NumForm=Word|NumType=Card	18	nmod	18:nmod:from	Entity=(abstract-52
21	to	to	ADP	IN	_	22	case	22:case	_
22	l	luileter	NOUN	NN	Number=Sing	20	nmod	20:nmod:to	Entity=person-55)abstract-42)abstract-52)(abstract-45)
23	in	in	ADP	IN	_	24	case	24:case	_
24	contain	contain	NOUN	NN	Number=Sing	8	advcl	8:advcl:such_that	Entity=(place-56)
25	.	.	PUNCT	.	_	8	punct	8:punct	SpaceAfter=No

# sent_id = AMALGUM_academic_storage-43
# s_type = frag
# text = Proof.
1	Proof	Proof	NOUN	NN	Number=Sing	0	root	0:root	Discourse=joint:67->64|Entity=(person-31)|SpaceAfter=No|XML=<hi rend:::"bold">
2	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-44
# s_type = imp
# text = Let .
# newpar = p (2 s)
1	Let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=preparation:68->69
2	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-45
# s_type = sub
# text = Then, by Lemma 3, there must be at least one agent, say l, such that .
1	Then	then	ADV	RB	PronType=Dem	9	advmod	9:advmod	Discourse=joint:69->64|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	by	by	ADP	IN	_	4	case	4:case	_
4	Lemma	Lemma	PROPN	NNP	Number=Sing	9	obl	9:obl:by	Entity=(abstract-30
5	3	3	NUM	CD	NumForm=Digit|NumType=Card	4	dep	4:dep	Entity=abstract-30)|SpaceAfter=No
6	,	,	PUNCT	,	_	4	punct	4:punct	_
7	there	there	PRON	EX	_	9	expl	9:expl	_
8	must	must	AUX	MD	VerbForm=Fin	9	aux	9:aux	_
9	be	be	VERB	VB	VerbForm=Inf	0	root	0:root	_
10	at	at	ADP	IN	_	11	case	11:case	_
11	least	least	ADJ	JJS	Degree=Sup	12	advmod	12:advmod	Entity=(person-55
12	one	one	NUM	CD	NumForm=Word|NumType=Card	13	nummod	13:nummod	_
13	agent	agent	NOUN	NN	Number=Sing	9	nsubj	9:nsubj	SpaceAfter=No
14	,	,	PUNCT	,	_	16	punct	16:punct	_
15	say	say	VERB	VB	VerbForm=Inf	16	case	16:case	_
16	l	luileter	NOUN	NN	Number=Sing	13	nmod	13:nmod:say	Entity=(abstract-45)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
17	,	,	PUNCT	,	_	18	punct	18:punct	_
18	such	such	ADJ	JJ	Degree=Pos	13	advmod	13:advmod	Discourse=same_unit:70->69
19	that	that	PRON	DT	Number=Sing|PronType=Dem	18	fixed	18:fixed	Entity=person-55)
20	.	.	PUNCT	.	_	9	punct	9:punct	_

# sent_id = AMALGUM_academic_storage-46
# s_type = imp
# text = Suppose and l are all distinct.
# newpar = p (2 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:71->69
2	and	and	CCONJ	CC	_	3	cc	3:cc	_
3	l	luileter	NOUN	NN	Number=Sing	1	conj	1:conj:and	Entity=(abstract-45)|XML=<hi rend:::"italic"></hi>
4	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	6:cop	_
5	all	all	ADV	RB	Degree=Pos	6	advmod	6:advmod	_
6	distinct	distinct	ADJ	JJ	Degree=Pos	1	ccomp	1:ccomp	SpaceAfter=No
7	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-47
# s_type = imp
# text = Note that j may be the same as l.
1	Note	note	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=attribution:72->73
2	that	that	SCONJ	IN	_	7	mark	7:mark	Discourse=joint:73->69
3	j	j	NOUN	NN	Number=Sing	7	nsubj	7:nsubj	Entity=(abstract-57)|XML=<hi rend:::"italic"></hi>
4	may	may	AUX	MD	VerbForm=Fin	7	aux	7:aux	_
5	be	be	AUX	VB	VerbForm=Inf	7	cop	7:cop	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	7:det	_
7	same	same	ADJ	JJ	Degree=Pos	1	ccomp	1:ccomp	_
8	as	as	ADP	IN	_	9	case	9:case	_
9	l	l	NUM	CD	NumForm=Word|NumType=Card	7	obl	7:obl:as	Entity=(abstract-45)|SpaceAfter=No|XML=<hi rend:::"italic"></hi>
10	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-48
# s_type = imp
# text = If possible, let for all .
# newpar = p (4 s)
1	If	if	SCONJ	IN	_	2	mark	2:mark	Discourse=condition:74->75
2	possible	possible	ADJ	JJ	Degree=Pos	4	advcl	4:advcl:if	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:75->69
5	for	for	ADP	IN	_	6	case	6:case	_
6	all	all	PRON	DT	_	4	obl	4:obl:for	_
7	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-49
# s_type = frag
# text = Then, for all .
1	Then	then	ADV	RB	PronType=Dem	4	advmod	4:advmod	Discourse=sequence:76->75|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	for	for	ADP	IN	_	4	case	4:case	_
4	all	all	PRON	DT	_	0	root	0:root	_
5	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-50
# s_type = frag
# text = From Lemma 1, , a contradiction.
1	From	from	ADP	IN	_	2	case	2:case	Discourse=joint:77->76
2	Lemma	Lemma	PROPN	NNP	Number=Sing	7	nmod	7:nmod:from	Entity=(abstract-44(abstract-30
3	1	1	NUM	CD	NumForm=Digit|NumType=Card	2	dep	2:dep	Entity=abstract-30)|SpaceAfter=No
4	,	,	PUNCT	,	_	2	punct	2:punct	_
5	,	,	PUNCT	,	_	2	punct	2:punct	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	7:det	_
7	contradiction	contradiction	NOUN	NN	Number=Sing	0	root	0:root	Entity=abstract-44)|SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	7:punct	_

# sent_id = AMALGUM_academic_storage-51
# s_type = decl
# text = Therefore, there exists an such that .
1	Therefore	therefore	ADV	RB	Degree=Pos	4	advmod	4:advmod	Discourse=joint:78->76|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	there	there	PRON	EX	_	4	expl	4:expl	_
4	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
5	an	a	DET	DT	Definite=Ind|PronType=Art	6	det	6:det	_
6	such	such	ADJ	JJ	Degree=Pos	4	nsubj	4:nsubj	_
7	that	that	PRON	DT	Number=Sing|PronType=Dem	6	nmod	6:nmod	Entity=(abstract-44)
8	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-52
# s_type = frag
# text = As , .
# newpar = p (3 s)
1	As	as	ADP	IN	_	0	root	0:root	Discourse=joint:79->76
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-53
# s_type = frag
# text = As , and .
1	As	as	ADP	IN	_	0	root	0:root	Discourse=joint:80->76
2	,	,	PUNCT	,	_	3	punct	3:punct	_
3	and	and	CCONJ	CC	_	1	conj	1:conj	_
4	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-54
# s_type = frag
# text = Hence, .
1	Hence	hence	ADV	RB	Degree=Pos	0	root	0:root	Discourse=joint:81->76|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-55
# s_type = other
# text = Now,
# newpar = p (1 s)
1	Now	now	ADV	RB	_	0	root	0:root	Discourse=preparation:82->84|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-56
# s_type = decl
# text = It follows that every shortest path between k and l in contains .
# newpar = p (2 s)
1	It	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	2	expl	2:expl	Discourse=attribution:83->84|Entity=(abstract-44)
2	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	that	that	SCONJ	IN	_	12	mark	12:mark	Discourse=joint:84->76
4	every	every	DET	DT	_	6	det	6:det	Entity=(abstract-58
5	shortest	short	ADJ	JJS	Degree=Sup	6	amod	6:amod	_
6	path	path	NOUN	NN	Number=Sing	12	nsubj	12:nsubj	_
7	between	between	ADP	IN	_	8	case	8:case	_
8	k	k	NUM	CD	NumForm=Word|NumType=Card	6	nmod	6:nmod:between	Entity=(abstract-52)|XML=<hi rend:::"italic"></hi>
9	and	and	CCONJ	CC	_	10	cc	10:cc	_
10	l	luileter	NOUN	NN	Number=Sing	8	conj	6:nmod:between|8:conj:and	Entity=abstract-58)(abstract-45)|XML=<hi rend:::"italic"></hi>
11	in	in	SCONJ	IN	_	12	mark	12:mark	_
12	contains	contain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	csubj	2:csubj	_
13	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_academic_storage-57
# s_type = imp
# text = (Note that if there exists a shortest path from k to l in that does not contain , then this shortest path exists in too).
1	(	(	PUNCT	-LRB-	_	2	punct	2:punct	Discourse=attribution:85->86|SpaceAfter=No
2	Note	note	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
3	that	that	SCONJ	IN	_	24	mark	24:mark	Discourse=elaboration:86->84
4	if	if	SCONJ	IN	_	6	mark	6:mark	Discourse=condition:87->89
5	there	there	PRON	EX	_	6	expl	6:expl	_
6	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	advcl	24:advcl:if	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	9:det	Entity=(abstract-58
8	shortest	short	ADJ	JJS	Degree=Sup	9	amod	9:amod	_
9	path	path	NOUN	NN	Number=Sing	6	nsubj	6:nsubj|18:nsubj	_
10	from	from	ADP	IN	_	11	case	11:case	_
11	k	k	NUM	CD	NumForm=Word|NumType=Card	9	nmod	9:nmod:from	Entity=(abstract-52|XML=<hi rend:::"italic"></hi>
12	to	to	ADP	IN	_	13	case	13:case	_
13	l	luileter	NOUN	NN	Number=Sing	11	nmod	11:nmod:to	Entity=abstract-52)(abstract-45)|XML=<hi rend:::"italic"></hi>
14	in	in	SCONJ	IN	_	18	mark	18:mark	_
15	that	that	PRON	WDT	PronType=Rel	18	nsubj	9:ref	Discourse=elaboration:88->87
16	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	aux	18:aux	_
17	not	not	ADV	RB	Polarity=Neg	18	advmod	18:advmod	_
18	contain	contain	VERB	VB	VerbForm=Inf	9	acl:relcl	9:acl:relcl	Entity=abstract-58)
19	,	,	PUNCT	,	_	6	punct	6:punct	_
20	then	then	ADV	RB	PronType=Dem	24	advmod	24:advmod	Discourse=same_unit:89->86
21	this	this	DET	DT	Number=Sing|PronType=Dem	23	det	23:det	Entity=(abstract-58
22	shortest	short	ADJ	JJ	Degree=Pos	23	amod	23:amod	_
23	path	path	NOUN	NN	Number=Sing	24	nsubj	24:nsubj	Entity=abstract-58)
24	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	2:ccomp	_
25	in	in	ADP	IN	_	26	case	26:case	_
26	too	too	ADV	RB	Degree=Pos	24	obl	24:obl:in	SpaceAfter=No
27	)	)	PUNCT	-RRB-	_	2	punct	2:punct	SpaceAfter=No
28	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_academic_storage-58
# s_type = imp
# text = Conversely, let such that and all shortest paths from k to l in contain .
# newpar = p (1 s)
1	Conversely	conversely	ADV	RB	Degree=Pos	3	advmod	3:advmod	Discourse=attribution:90->91|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	_
4	such	such	ADV	RB	Degree=Pos	3	obj	3:obj	_
5	that	that	SCONJ	IN	_	15	mark	15:mark	Discourse=joint:91->84
6	and	and	CCONJ	CC	_	9	cc	9:cc	_
7	all	all	DET	DT	_	9	det	9:det	Entity=(abstract-42
8	shortest	short	ADJ	JJS	Degree=Sup	9	amod	9:amod	_
9	paths	path	NOUN	NNS	Number=Plur	15	nsubj	15:nsubj	_
10	from	from	ADP	IN	_	11	case	11:case	_
11	k	k	NUM	CD	NumForm=Word|NumType=Card	9	nmod	9:nmod:from	Entity=(abstract-52)|XML=<hi rend:::"italic"></hi>
12	to	to	ADP	IN	_	13	case	13:case	_
13	l	luileter	NOUN	NN	Number=Sing	9	nmod	9:nmod:to	Entity=abstract-42)(abstract-45)|XML=<hi rend:::"italic"></hi>
14	in	in	SCONJ	IN	_	15	mark	15:mark	_
15	contain	contain	VERB	VB	VerbForm=Inf	3	advcl	3:advcl:that_in	_
16	.	.	PUNCT	.	_	3	punct	3:punct	_

# sent_id = AMALGUM_academic_storage-59
# s_type = frag
# text = Clearly, .
# newpar = p (1 s)
1	Clearly	clearly	ADV	RB	Degree=Pos	0	root	0:root	Discourse=joint:92->84|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-60
# s_type = imp
# text = If possible, let .
# newpar = p (3 s)
1	If	if	SCONJ	IN	_	2	mark	2:mark	Discourse=condition:93->94
2	possible	possible	ADJ	JJ	Degree=Pos	4	advcl	4:advcl:if	SpaceAfter=No
3	,	,	PUNCT	,	_	2	punct	2:punct	_
4	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:94->84
5	.	.	PUNCT	.	_	4	punct	4:punct	_

# sent_id = AMALGUM_academic_storage-61
# s_type = decl
# text = This means for every l in there exists a shortest path from k to l in that does not contain , a contradiction.
1	This	this	PRON	DT	Number=Sing|PronType=Dem	2	nsubj	2:nsubj	Discourse=attribution:95->96|Entity=(abstract-45)
2	means	mean	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	for	for	ADP	IN	_	5	case	5:case	_
4	every	every	DET	DT	_	5	det	5:det	Entity=(abstract-45
5	l	luileter	NOUN	NN	Number=Sing	8	obl	8:obl:for	XML=<hi rend:::"italic"></hi>
6	in	in	ADV	IN	_	5	advmod	5:advmod	Entity=abstract-45)
7	there	there	PRON	EX	_	8	expl	8:expl	Discourse=joint:96->84
8	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	2:ccomp	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	11	det	11:det	Entity=(abstract-58
10	shortest	short	ADJ	JJS	Degree=Sup	11	amod	11:amod	_
11	path	path	NOUN	NN	Number=Sing	8	nsubj	8:nsubj|20:nsubj	_
12	from	from	ADP	IN	_	13	case	13:case	_
13	k	k	NOUN	NN	Number=Sing	11	nmod	11:nmod:from	Entity=(abstract-52)|XML=<hi rend:::"italic"></hi>
14	to	to	ADP	IN	_	15	case	15:case	_
15	l	luileter	NOUN	NN	Number=Sing	11	nmod	11:nmod:to_in	Entity=(abstract-45)|XML=<hi rend:::"italic"></hi>
16	in	in	ADP	IN	_	15	case	15:case	_
17	that	that	PRON	WDT	PronType=Rel	20	nsubj	11:ref	Discourse=elaboration:97->96
18	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	aux	20:aux	_
19	not	not	ADV	RB	Polarity=Neg	20	advmod	20:advmod	_
20	contain	contain	VERB	VB	VerbForm=Inf	11	acl:relcl	11:acl:relcl	_
21	,	,	PUNCT	,	_	23	punct	23:punct	_
22	a	a	DET	DT	Definite=Ind|PronType=Art	23	det	23:det	Entity=(abstract-44
23	contradiction	contradiction	NOUN	NN	Number=Sing	20	obj	20:obj	Entity=abstract-58)abstract-44)|SpaceAfter=No
24	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_academic_storage-62
# s_type = frag
# text = Therefore, .
1	Therefore	therefore	ADV	RB	Degree=Pos	0	root	0:root	Discourse=evaluation:98->96|SpaceAfter=No
2	,	,	PUNCT	,	_	1	punct	1:punct	_
3	.	.	PUNCT	.	_	1	punct	1:punct	_

# sent_id = AMALGUM_academic_storage-63
# s_type = frag
# text = Theorem 2.
# newpar = p (1 s)
1	Theorem	Theorem	PROPN	NNP	Number=Sing	0	root	0:root	Discourse=joint:99->84|Entity=(person-51|XML=<hi rend:::"bold"></hi>
2	2.	2.	NUM	CD	NumForm=Digit|NumType=Card	1	dep	1:dep	Entity=person-51)|XML=<hi rend:::"bold"></hi>

# sent_id = AMALGUM_academic_storage-64
# s_type = imp
# text = Suppose , and let k be an agent distinct from i and j. Then, if and only if there exists at least one agent such that and all shortest paths from k to l in contain .
# newpar = p (1 s)
1	Suppose	suppose	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	0	root	0:root	Discourse=joint:100->84|XML=<hi rend:::"italic">
2	,	,	PUNCT	,	_	4	punct	4:punct	_
3	and	and	CCONJ	CC	_	4	cc	4:cc	Discourse=joint:101->84
4	let	let	VERB	VB	Mood=Imp|Person=2|VerbForm=Fin	1	conj	1:conj:and	_
5	k	k	NUM	CD	NumForm=Word|NumType=Card	8	nsubj	8:nsubj	Entity=(abstract-52)
6	be	be	AUX	VB	VerbForm=Inf	8	cop	8:cop	_
7	an	a	DET	DT	Definite=Ind|PronType=Art	8	det	8:det	Entity=(abstract-52
8	agent	agent	NOUN	NN	Number=Sing	4	ccomp	4:ccomp	_
9	distinct	distinct	ADJ	JJ	Degree=Pos	8	amod	8:amod	Entity=abstract-52)
10	from	from	ADP	IN	_	11	case	11:case	_
11	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	9	obl	9:obl:from	Entity=(abstract-52)
12	and	and	CCONJ	CC	_	13	cc	13:cc	_
13	j.	j.	PROPN	NNP	Number=Sing	11	conj	9:obl:from|11:conj:and	Entity=(abstract-54)
14	Then	then	ADV	RB	PronType=Dem	21	advmod	21:advmod	SpaceAfter=No
15	,	,	PUNCT	,	_	14	punct	14:punct	_
16	if	if	SCONJ	IN	_	21	mark	21:mark	_
17	and	and	CCONJ	CC	_	18	cc	18:cc	_
18	only	only	ADV	RB	_	16	fixed	16:fixed	_
19	if	if	SCONJ	IN	_	21	mark	21:mark	_
20	there	there	PRON	EX	_	21	expl	21:expl	_
21	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	advcl	8:advcl:if_only	_
22	at	at	ADP	IN	_	23	case	23:case	_
23	least	least	ADJ	JJS	Degree=Sup	24	advmod	24:advmod	Entity=(person-55
24	one	one	NUM	CD	NumForm=Word|NumType=Card	25	nummod	25:nummod	_
25	agent	agent	NOUN	NN	Number=Sing	21	nsubj	21:nsubj	_
26	such	such	SCONJ	JJ	Degree=Pos	37	mark	37:mark	Discourse=elaboration:102->101
27	that	that	SCONJ	IN	_	37	mark	37:mark	_
28	and	and	CCONJ	CC	_	31	cc	31:cc	_
29	all	all	DET	DT	_	31	det	31:det	Entity=(abstract-42
30	shortest	short	ADJ	JJS	Degree=Sup	31	amod	31:amod	_
31	paths	path	NOUN	NNS	Number=Plur	25	nmod	25:nmod	_
32	from	from	ADP	IN	_	33	case	33:case	_
33	k	k	NOUN	NN	Number=Sing	31	nmod	31:nmod:from	Entity=(abstract-52
34	to	to	ADP	IN	_	35	case	35:case	_
35	l	luileter	NOUN	NN	Number=Sing	33	nmod	33:nmod:to	Entity=person-55)abstract-42)abstract-52)(abstract-45)
36	in	in	ADP	IN	_	37	case	37:case	_
37	contain	contain	NOUN	NN	Number=Sing	21	advcl	21:advcl:such_that	Entity=(place-59)
38	.	.	PUNCT	.	_	1	punct	1:punct	XML=</hi>

# sent_id = AMALGUM_academic_storage-65
# s_type = decl
# text = We skip the proof as it is similar to the proof of Theorem 1.
# newpar = p (1 s)
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	nsubj	2:nsubj	Discourse=joint:103->84|Entity=(person-60)
2	skip	skip	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	Entity=(abstract-61
4	proof	proof	NOUN	NN	Number=Sing	2	obj	2:obj	Entity=abstract-61)
5	as	as	SCONJ	IN	_	8	mark	8:mark	Discourse=circumstance:104->103
6	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	8	nsubj	8:nsubj	Entity=(abstract-61)
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	8:cop	_
8	similar	similar	ADJ	JJ	Degree=Pos	2	advcl	2:advcl:as	_
9	to	to	ADP	IN	_	11	case	11:case	_
10	the	the	DET	DT	Definite=Def|PronType=Art	11	det	11:det	Entity=(abstract-61
11	proof	proof	NOUN	NN	Number=Sing	8	obl	8:obl:to	_
12	of	of	ADP	IN	_	13	case	13:case	_
13	Theorem	Theorem	PROPN	NNP	Number=Sing	11	nmod	11:nmod:of	Entity=(abstract-62
14	1	1	NUM	CD	NumForm=Digit|NumType=Card	13	dep	13:dep	Entity=abstract-61)abstract-62)|SpaceAfter=No
15	.	.	PUNCT	.	_	2	punct	2:punct	_

# sent_id = AMALGUM_academic_storage-66
# s_type = decl
# text = In subsequent sections, we present our results due to link addition.
# newpar = p (2 s)
1	In	in	ADP	IN	_	3	case	3:case	Discourse=joint:105->84
2	subsequent	subsequent	ADJ	JJ	Degree=Pos	3	amod	3:amod	Entity=(abstract-63
3	sections	section	NOUN	NNS	Number=Plur	6	obl	6:obl:in	Entity=abstract-63)|SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	nsubj	6:nsubj	Entity=(person-60)
6	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
7	our	our	PRON	PRP$	Number=Plur|Person=1|Poss=Yes|PronType=Prs	8	nmod:poss	8:nmod:poss	Entity=(abstract-64(person-60)
8	results	result	NOUN	NNS	Number=Plur	6	obj	6:obj	_
9	due	due	ADJ	JJ	Degree=Pos	8	acl	8:acl	Discourse=cause:106->105
10	to	to	ADP	IN	_	12	case	12:case	_
11	link	link	NOUN	NN	Number=Sing	12	compound	12:compound	Entity=(abstract-65(abstract-66)
12	addition	addition	NOUN	NN	Number=Sing	9	obl	9:obl:to	Entity=abstract-64)abstract-65)|SpaceAfter=No
13	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_storage-67
# s_type = decl
# text = We present our results on link deletion in Appendix B.
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	nsubj	2:nsubj	Discourse=preparation:107->110|Entity=(person-60)
2	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	our	our	PRON	PRP$	Number=Plur|Person=1|Poss=Yes|PronType=Prs	4	nmod:poss	4:nmod:poss	Entity=(abstract-64(person-60)
4	results	result	NOUN	NNS	Number=Plur	2	obj	2:obj	_
5	on	on	ADP	IN	_	7	case	7:case	_
6	link	link	NOUN	NN	Number=Sing	7	compound	7:compound	Entity=(event-67(abstract-66)
7	deletion	deletion	NOUN	NN	Number=Sing	4	nmod	4:nmod:on	Entity=abstract-64)event-67)
8	in	in	ADP	IN	_	9	case	9:case	_
9	Appendix	Appendix	PROPN	NNP	Number=Sing	2	obl	2:obl:in	Entity=(abstract-68
10	B.	B.	NUM	CD	NumForm=Word|NumType=Card	9	nmod:tmod	9:nmod:tmod	Entity=abstract-68)(person-69)

# sent_id = AMALGUM_academic_storage-68
# s_type = frag
# text = 3.2. Effect of Closeness on Distances of Agents Not Involved in Link Alteration
# newpar = head (1 s)
1	3.2.	3.2.	NUM	CD	NumForm=Digit|NumType=Card	2	dep	2:dep	Discourse=preparation:108->110
2	Effect	effect	NOUN	NN	Number=Sing	0	root	0:root	Entity=(abstract-70
3	of	of	ADP	IN	_	4	case	4:case	_
4	Closeness	closeness	NOUN	NN	Number=Sing	2	nmod	2:nmod:of	Entity=(abstract-71
5	on	on	ADP	IN	_	6	case	6:case	_
6	Distances	distance	NOUN	NNS	Number=Plur	4	nmod	4:nmod:on	Entity=(abstract-72
7	of	of	ADP	IN	_	8	case	8:case	_
8	Agents	agent	NOUN	NNS	Number=Plur	6	nmod	6:nmod:of	Entity=(person-73
9	Not	not	ADV	RB	Polarity=Neg	10	advmod	10:advmod	Discourse=elaboration:109->108
10	Involved	involve	VERB	VBN	Tense=Past|VerbForm=Part	8	acl	8:acl	_
11	in	in	ADP	IN	_	13	case	13:case	_
12	Link	link	NOUN	NN	Number=Sing	13	compound	13:compound	Entity=(abstract-74(person-75)
13	Alteration	alteration	NOUN	NN	Number=Sing	10	obl	10:obl:in	Entity=abstract-70)abstract-71)abstract-72)person-73)abstract-74)

# sent_id = AMALGUM_academic_storage-69
# s_type = decl
# text = In this section, we classify agents whose mutual distances from each other remain the same after link alteration.
# newpar = p (2 s)
1	In	in	ADP	IN	_	3	case	3:case	Discourse=joint:110->84
2	this	this	DET	DT	Number=Sing|PronType=Dem	3	det	3:det	Entity=(abstract-76
3	section	section	NOUN	NN	Number=Sing	6	obl	6:obl:in	Entity=abstract-76)|SpaceAfter=No
4	,	,	PUNCT	,	_	3	punct	3:punct	_
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	nsubj	6:nsubj	Entity=(person-60)
6	classify	classify	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
7	agents	agent	NOUN	NNS	Number=Plur	6	obj	6:obj	Entity=(person-73
8	whose	whose	PRON	WP$	Poss=Yes|PronType=Rel	10	nmod:poss	10:nmod:poss	Discourse=elaboration:111->110|Entity=(abstract-72
9	mutual	mutual	ADJ	JJ	Degree=Pos	10	amod	10:amod	_
10	distances	distance	NOUN	NNS	Number=Plur	14	nsubj	14:nsubj|16:nsubj:xsubj	_
11	from	from	ADP	IN	_	13	case	13:case	_
12	each	each	DET	DT	_	13	det	13:det	_
13	other	other	ADJ	JJ	Degree=Pos	10	nmod	10:nmod:from	Entity=abstract-72)
14	remain	remain	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	acl:relcl	7:acl:relcl	_
15	the	the	DET	DT	Definite=Def|PronType=Art	16	det	16:det	_
16	same	same	ADJ	JJ	Degree=Pos	14	xcomp	14:xcomp	_
17	after	after	ADP	IN	_	19	case	19:case	_
18	link	link	NOUN	NN	Number=Sing	19	compound	19:compound	Entity=(abstract-74(abstract-66)
19	alteration	alteration	NOUN	NN	Number=Sing	14	obl	14:obl:after	Entity=person-73)abstract-74)|SpaceAfter=No
20	.	.	PUNCT	.	_	6	punct	6:punct	_

# sent_id = AMALGUM_academic_storage-70
# s_type = decl
# text = We use the same to analyze the effect of closeness on distances between agents who are not involved in the link addition or deletion.
1	We	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	nsubj	2:nsubj	Discourse=joint:112->110|Entity=(person-60)
2	use	use	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	0	root	0:root	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	4:det	_
4	same	same	ADJ	JJ	Degree=Pos	2	obj	2:obj	_
5	to	to	PART	TO	_	6	mark	6:mark	Discourse=purpose:113->112
6	analyze	analyze	VERB	VB	VerbForm=Inf	2	advcl	2:advcl:to	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	8:det	Entity=(abstract-77
8	effect	effect	NOUN	NN	Number=Sing	6	obj	6:obj	_
9	of	of	ADP	IN	_	10	case	10:case	_
10	closeness	closeness	NOUN	NN	Number=Sing	8	nmod	8:nmod:of	Entity=(abstract-71
11	on	on	ADP	IN	_	12	case	12:case	_
12	distances	distance	NOUN	NNS	Number=Plur	10	nmod	10:nmod:on	Entity=(abstract-72
13	between	between	ADP	IN	_	14	case	14:case	_
14	agents	agent	NOUN	NNS	Number=Plur	12	nmod	12:nmod:between|18:nsubj:pass	Entity=(person-73
15	who	who	PRON	WP	PronType=Rel	18	nsubj:pass	14:ref	Discourse=elaboration:114->113
16	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	aux:pass	18:aux:pass	_
17	not	not	ADV	RB	Polarity=Neg	18	advmod	18:advmod	_
18	involved	involve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	acl:relcl	14:acl:relcl	_
19	in	in	ADP	IN	_	22	case	22:case	_
20	the	the	DET	DT	Definite=Def|PronType=Art	22	det	22:det	Entity=(abstract-11(abstract-65
21	link	link	NOUN	NN	Number=Sing	22	compound	22:compound	Entity=(abstract-66)
22	addition	addition	NOUN	NN	Number=Sing	18	obl	18:obl:in	Entity=abstract-65)
23	or	or	CCONJ	CC	_	24	cc	24:cc	_
24	deletion	deletion	NOUN	NN	Number=Sing	22	conj	18:obl:in|22:conj:or	Entity=abstract-77)abstract-71)abstract-72)person-73)abstract-11)(event-67)|SpaceAfter=No
25	.	.	PUNCT	.	_	2	punct	2:punct	_

